Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|█         | 8897/88651 [00:00<00:00, 88964.78it/s] 24%|██▍       | 21057/88651 [00:00<00:00, 96754.32it/s] 37%|███▋      | 33241/88651 [00:00<00:00, 103121.40it/s] 47%|████▋     | 41639/88651 [00:00<00:00, 94638.16it/s]  56%|█████▌    | 49283/88651 [00:00<00:00, 63483.49it/s] 69%|██████▉   | 61458/88651 [00:00<00:00, 74125.18it/s] 82%|████████▏ | 73044/88651 [00:00<00:00, 83105.10it/s] 93%|█████████▎| 82226/88651 [00:00<00:00, 79104.85it/s]100%|██████████| 88651/88651 [00:01<00:00, 86856.43it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 153, in evaluate
    loss.backward()
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/tensor.py", line 185, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/autograd/__init__.py", line 127, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 86.57 GiB (GPU 0; 10.76 GiB total capacity; 778.20 MiB already allocated; 3.58 GiB free; 780.00 MiB reserved in total by PyTorch)
Exception raised from malloc at /pytorch/c10/cuda/CUDACachingAllocator.cpp:272 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x42 (0x7fef19e561e2 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0x1e64b (0x7fef1a0ac64b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #2: <unknown function> + 0x1f464 (0x7fef1a0ad464 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #3: <unknown function> + 0x1faa1 (0x7fef1a0adaa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #4: at::native::empty_cuda(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0x11e (0x7fecb901e90e in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #5: <unknown function> + 0xf33949 (0x7fecb7458949 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #6: <unknown function> + 0xf4d777 (0x7fecb7472777 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #7: <unknown function> + 0x10e9c7d (0x7fecf220ec7d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #8: <unknown function> + 0x10e9f97 (0x7fecf220ef97 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #9: at::empty(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0xfa (0x7fecf2319a1a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #10: at::TensorIterator::allocate_outputs() + 0x378 (0x7fecf1fa94f8 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #11: at::TensorIterator::build(at::TensorIteratorConfig&) + 0x1e6 (0x7fecf1fab166 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #12: at::TensorIterator::TensorIterator(at::TensorIteratorConfig&) + 0xdd (0x7fecf1fab65d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #13: at::TensorIterator::binary_op(at::Tensor&, at::Tensor const&, at::Tensor const&, bool) + 0x14a (0x7fecf1fab80a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #14: at::native::mul(at::Tensor const&, at::Tensor const&) + 0x47 (0x7fecf1ce8eb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #15: <unknown function> + 0xf22b40 (0x7fecb7447b40 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #16: <unknown function> + 0xa56530 (0x7fecf1b7b530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #17: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7fecf236381c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #18: at::mul(at::Tensor const&, at::Tensor const&) + 0x4b (0x7fecf22b482b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #19: <unknown function> + 0xcc6952 (0x7fecf1deb952 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #20: at::native::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0xdba (0x7fecf1decf4a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #21: <unknown function> + 0x129b8c0 (0x7fecf23c08c0 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #22: <unknown function> + 0x12c508b (0x7fecf23ea08b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #23: at::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0x1d7 (0x7fecf2311337 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #24: <unknown function> + 0x2dfa205 (0x7fecf3f1f205 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #25: <unknown function> + 0x12c508b (0x7fecf23ea08b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #26: at::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0x1d7 (0x7fecf2311337 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #27: torch::autograd::generated::TrilinearBackward::apply(std::vector<at::Tensor, std::allocator<at::Tensor> >&&) + 0x6a8 (0x7fecf3e7ef78 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #28: <unknown function> + 0x3375bb7 (0x7fecf449abb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #29: torch::autograd::Engine::evaluate_function(std::shared_ptr<torch::autograd::GraphTask>&, torch::autograd::Node*, torch::autograd::InputBuffer&, std::shared_ptr<torch::autograd::ReadyQueue> const&) + 0x1400 (0x7fecf4496400 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #30: torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&) + 0x451 (0x7fecf4496fa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #31: torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x89 (0x7fecf448f119 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #32: torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x4a (0x7fef1ac084ba in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)
frame #33: <unknown function> + 0xbd6df (0x7fef1bd646df in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
frame #34: <unknown function> + 0x76db (0x7fef1fdbf6db in /lib/x86_64-linux-gnu/libpthread.so.0)
frame #35: clone + 0x3f (0x7fef200f871f in /lib/x86_64-linux-gnu/libc.so.6)

actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: all CUDA-capable devices are busy or unavailable
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 15%|█▌        | 6070/39434 [00:00<00:00, 60698.76it/s] 28%|██▊       | 10984/39434 [00:00<00:00, 56697.03it/s] 44%|████▍     | 17537/39434 [00:00<00:00, 55652.10it/s] 55%|█████▍    | 21492/39434 [00:00<00:00, 49593.08it/s] 70%|██████▉   | 27472/39434 [00:00<00:00, 52268.10it/s] 88%|████████▊ | 34560/39434 [00:00<00:00, 56736.29it/s]100%|██████████| 39434/39434 [00:00<00:00, 47811.69it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 153, in evaluate
    loss.backward()
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/tensor.py", line 185, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/autograd/__init__.py", line 127, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 6.10 GiB (GPU 0; 10.76 GiB total capacity; 448.88 MiB already allocated; 3.25 GiB free; 472.00 MiB reserved in total by PyTorch)
Exception raised from malloc at /pytorch/c10/cuda/CUDACachingAllocator.cpp:272 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x42 (0x7f3afffd71e2 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0x1e64b (0x7f3b2177164b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #2: <unknown function> + 0x1f464 (0x7f3b21772464 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #3: <unknown function> + 0x1faa1 (0x7f3b21772aa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #4: at::native::empty_cuda(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0x11e (0x7f38cf6f390e in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #5: <unknown function> + 0xf33949 (0x7f38cdb2d949 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #6: <unknown function> + 0xf4d777 (0x7f38cdb47777 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #7: <unknown function> + 0x10e9c7d (0x7f3b012f8c7d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #8: <unknown function> + 0x10e9f97 (0x7f3b012f8f97 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #9: at::empty(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0xfa (0x7f3b01403a1a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #10: at::TensorIterator::allocate_outputs() + 0x378 (0x7f3b010934f8 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #11: at::TensorIterator::build(at::TensorIteratorConfig&) + 0x1e6 (0x7f3b01095166 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #12: at::TensorIterator::TensorIterator(at::TensorIteratorConfig&) + 0xdd (0x7f3b0109565d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #13: at::TensorIterator::binary_op(at::Tensor&, at::Tensor const&, at::Tensor const&, bool) + 0x14a (0x7f3b0109580a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #14: at::native::mul(at::Tensor const&, at::Tensor const&) + 0x47 (0x7f3b00dd2eb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #15: <unknown function> + 0xf22b40 (0x7f38cdb1cb40 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #16: <unknown function> + 0xa56530 (0x7f3b00c65530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #17: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7f3b0144d81c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #18: at::mul(at::Tensor const&, at::Tensor const&) + 0x4b (0x7f3b0139e82b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #19: <unknown function> + 0xcc6952 (0x7f3b00ed5952 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #20: at::native::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0xdba (0x7f3b00ed6f4a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #21: <unknown function> + 0x129b8c0 (0x7f3b014aa8c0 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #22: <unknown function> + 0x12c508b (0x7f3b014d408b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #23: at::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0x1d7 (0x7f3b013fb337 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #24: <unknown function> + 0x2dfa205 (0x7f3b03009205 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #25: <unknown function> + 0x12c508b (0x7f3b014d408b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #26: at::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0x1d7 (0x7f3b013fb337 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #27: torch::autograd::generated::TrilinearBackward::apply(std::vector<at::Tensor, std::allocator<at::Tensor> >&&) + 0x6a8 (0x7f3b02f68f78 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #28: <unknown function> + 0x3375bb7 (0x7f3b03584bb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #29: torch::autograd::Engine::evaluate_function(std::shared_ptr<torch::autograd::GraphTask>&, torch::autograd::Node*, torch::autograd::InputBuffer&, std::shared_ptr<torch::autograd::ReadyQueue> const&) + 0x1400 (0x7f3b03580400 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #30: torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&) + 0x451 (0x7f3b03580fa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #31: torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x89 (0x7f3b03579119 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #32: torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x4a (0x7f3b108fd4ba in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)
frame #33: <unknown function> + 0xbd6df (0x7f3b222786df in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
frame #34: <unknown function> + 0x76db (0x7f3b262d36db in /lib/x86_64-linux-gnu/libpthread.so.0)
frame #35: clone + 0x3f (0x7f3b2660c71f in /lib/x86_64-linux-gnu/libc.so.6)

actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3850216865539551 seconds.
Run epoch 1
Epoch 1 ends in 0.6100454330444336 seconds.
39434 sentences created
mode 1: time used = 1.0139744281768799
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 31%|███       | 12230/39434 [00:00<00:00, 122293.12it/s] 43%|████▎     | 16969/39434 [00:00<00:00, 77824.26it/s]  65%|██████▍   | 25607/39434 [00:00<00:00, 80207.01it/s] 87%|████████▋ | 34432/39434 [00:00<00:00, 82459.96it/s]100%|██████████| 39434/39434 [00:00<00:00, 82156.00it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 153, in evaluate
    loss.backward()
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/tensor.py", line 185, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/autograd/__init__.py", line 127, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 6.10 GiB (GPU 0; 10.76 GiB total capacity; 448.88 MiB already allocated; 757.44 MiB free; 472.00 MiB reserved in total by PyTorch)
Exception raised from malloc at /pytorch/c10/cuda/CUDACachingAllocator.cpp:272 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x42 (0x7f7ef5c0c1e2 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0x1e64b (0x7f7ef5e6264b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #2: <unknown function> + 0x1f464 (0x7f7ef5e63464 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #3: <unknown function> + 0x1faa1 (0x7f7ef5e63aa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #4: at::native::empty_cuda(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0x11e (0x7f7cb515690e in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #5: <unknown function> + 0xf33949 (0x7f7cb3590949 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #6: <unknown function> + 0xf4d777 (0x7f7cb35aa777 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #7: <unknown function> + 0x10e9c7d (0x7f7ef715ec7d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #8: <unknown function> + 0x10e9f97 (0x7f7ef715ef97 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #9: at::empty(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0xfa (0x7f7ef7269a1a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #10: at::TensorIterator::allocate_outputs() + 0x378 (0x7f7ef6ef94f8 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #11: at::TensorIterator::build(at::TensorIteratorConfig&) + 0x1e6 (0x7f7ef6efb166 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #12: at::TensorIterator::TensorIterator(at::TensorIteratorConfig&) + 0xdd (0x7f7ef6efb65d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #13: at::TensorIterator::binary_op(at::Tensor&, at::Tensor const&, at::Tensor const&, bool) + 0x14a (0x7f7ef6efb80a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #14: at::native::mul(at::Tensor const&, at::Tensor const&) + 0x47 (0x7f7ef6c38eb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #15: <unknown function> + 0xf22b40 (0x7f7cb357fb40 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #16: <unknown function> + 0xa56530 (0x7f7ef6acb530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #17: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7f7ef72b381c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #18: at::mul(at::Tensor const&, at::Tensor const&) + 0x4b (0x7f7ef720482b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #19: <unknown function> + 0xcc6952 (0x7f7ef6d3b952 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #20: at::native::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0xdba (0x7f7ef6d3cf4a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #21: <unknown function> + 0x129b8c0 (0x7f7ef73108c0 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #22: <unknown function> + 0x12c508b (0x7f7ef733a08b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #23: at::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0x1d7 (0x7f7ef7261337 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #24: <unknown function> + 0x2dfa205 (0x7f7ef8e6f205 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #25: <unknown function> + 0x12c508b (0x7f7ef733a08b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #26: at::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0x1d7 (0x7f7ef7261337 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #27: torch::autograd::generated::TrilinearBackward::apply(std::vector<at::Tensor, std::allocator<at::Tensor> >&&) + 0x6a8 (0x7f7ef8dcef78 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #28: <unknown function> + 0x3375bb7 (0x7f7ef93eabb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #29: torch::autograd::Engine::evaluate_function(std::shared_ptr<torch::autograd::GraphTask>&, torch::autograd::Node*, torch::autograd::InputBuffer&, std::shared_ptr<torch::autograd::ReadyQueue> const&) + 0x1400 (0x7f7ef93e6400 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #30: torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&) + 0x451 (0x7f7ef93e6fa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #31: torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x89 (0x7f7ef93df119 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #32: torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x4a (0x7f7f06b7f4ba in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)
frame #33: <unknown function> + 0xbd6df (0x7f7f07cdb6df in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
frame #34: <unknown function> + 0x76db (0x7f7f0bd366db in /lib/x86_64-linux-gnu/libpthread.so.0)
frame #35: clone + 0x3f (0x7f7f0c06f71f in /lib/x86_64-linux-gnu/libc.so.6)

actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.35796236991882324 seconds.
Run epoch 1
Epoch 1 ends in 0.427706241607666 seconds.
39434 sentences created
mode 1: time used = 0.5684471130371094
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 13%|█▎        | 5156/39434 [00:00<00:00, 51559.07it/s] 26%|██▌       | 10343/39434 [00:00<00:00, 51651.12it/s] 41%|████▏     | 16309/39434 [00:00<00:00, 53817.82it/s] 51%|█████▏    | 20226/39434 [00:00<00:00, 46476.93it/s] 66%|██████▌   | 26024/39434 [00:00<00:00, 49417.83it/s] 88%|████████▊ | 34667/39434 [00:00<00:00, 56701.16it/s]100%|██████████| 39434/39434 [00:00<00:00, 57162.39it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 153, in evaluate
    loss.backward()
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/tensor.py", line 185, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/autograd/__init__.py", line 127, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 24.41 GiB (GPU 0; 10.76 GiB total capacity; 845.74 MiB already allocated; 3.90 GiB free; 864.00 MiB reserved in total by PyTorch)
Exception raised from malloc at /pytorch/c10/cuda/CUDACachingAllocator.cpp:272 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x42 (0x7fbe1bdbe1e2 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0x1e64b (0x7fbe1c01464b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #2: <unknown function> + 0x1f464 (0x7fbe1c015464 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #3: <unknown function> + 0x1faa1 (0x7fbe1c015aa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #4: at::native::empty_cuda(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0x11e (0x7fbbdb30890e in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #5: <unknown function> + 0xf33949 (0x7fbbd9742949 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #6: <unknown function> + 0xf4d777 (0x7fbbd975c777 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #7: <unknown function> + 0x10e9c7d (0x7fbe1d310c7d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #8: <unknown function> + 0x10e9f97 (0x7fbe1d310f97 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #9: at::empty(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0xfa (0x7fbe1d41ba1a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #10: at::TensorIterator::allocate_outputs() + 0x378 (0x7fbe1d0ab4f8 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #11: at::TensorIterator::build(at::TensorIteratorConfig&) + 0x1e6 (0x7fbe1d0ad166 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #12: at::TensorIterator::TensorIterator(at::TensorIteratorConfig&) + 0xdd (0x7fbe1d0ad65d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #13: at::TensorIterator::binary_op(at::Tensor&, at::Tensor const&, at::Tensor const&, bool) + 0x14a (0x7fbe1d0ad80a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #14: at::native::mul(at::Tensor const&, at::Tensor const&) + 0x47 (0x7fbe1cdeaeb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #15: <unknown function> + 0xf22b40 (0x7fbbd9731b40 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #16: <unknown function> + 0xa56530 (0x7fbe1cc7d530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #17: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7fbe1d46581c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #18: at::mul(at::Tensor const&, at::Tensor const&) + 0x4b (0x7fbe1d3b682b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #19: <unknown function> + 0xcc6952 (0x7fbe1ceed952 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #20: at::native::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0xdba (0x7fbe1ceeef4a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #21: <unknown function> + 0x129b8c0 (0x7fbe1d4c28c0 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #22: <unknown function> + 0x12c508b (0x7fbe1d4ec08b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #23: at::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0x1d7 (0x7fbe1d413337 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #24: <unknown function> + 0x2dfa205 (0x7fbe1f021205 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #25: <unknown function> + 0x12c508b (0x7fbe1d4ec08b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #26: at::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0x1d7 (0x7fbe1d413337 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #27: torch::autograd::generated::TrilinearBackward::apply(std::vector<at::Tensor, std::allocator<at::Tensor> >&&) + 0x6a8 (0x7fbe1ef80f78 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #28: <unknown function> + 0x3375bb7 (0x7fbe1f59cbb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #29: torch::autograd::Engine::evaluate_function(std::shared_ptr<torch::autograd::GraphTask>&, torch::autograd::Node*, torch::autograd::InputBuffer&, std::shared_ptr<torch::autograd::ReadyQueue> const&) + 0x1400 (0x7fbe1f598400 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #30: torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&) + 0x451 (0x7fbe1f598fa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #31: torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x89 (0x7fbe1f591119 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #32: torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x4a (0x7fbe2cd314ba in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)
frame #33: <unknown function> + 0xbd6df (0x7fbe2de8d6df in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
frame #34: <unknown function> + 0x76db (0x7fbe31ee86db in /lib/x86_64-linux-gnu/libpthread.so.0)
frame #35: clone + 0x3f (0x7fbe3222171f in /lib/x86_64-linux-gnu/libc.so.6)

actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.33658432960510254 seconds.
Run epoch 1
Epoch 1 ends in 0.871556282043457 seconds.
39434 sentences created
mode 1: time used = 0.8199007511138916
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 12%|█▏        | 4593/39434 [00:00<00:00, 45926.65it/s] 25%|██▌       | 9979/39434 [00:00<00:00, 48048.49it/s] 38%|███▊      | 15022/39434 [00:00<00:00, 48667.04it/s] 55%|█████▍    | 21603/39434 [00:00<00:00, 51765.25it/s] 73%|███████▎  | 28622/39434 [00:00<00:00, 56189.44it/s] 88%|████████▊ | 34582/39434 [00:00<00:00, 57169.75it/s]100%|██████████| 39434/39434 [00:00<00:00, 56064.73it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 196.00 MiB (GPU 0; 10.76 GiB total capacity; 68.32 MiB already allocated; 32.44 MiB free; 80.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.5037295818328857 seconds.
Run epoch 1
Epoch 1 ends in 0.4106476306915283 seconds.
39434 sentences created
mode 1: time used = 0.892768383026123
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 2.22 GiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 4.31 GiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 12%|█▏        | 4541/39434 [00:00<00:00, 45409.39it/s] 22%|██▏       | 8817/39434 [00:00<00:00, 44579.98it/s] 35%|███▍      | 13630/39434 [00:00<00:00, 45587.87it/s] 48%|████▊     | 18831/39434 [00:00<00:00, 47340.69it/s] 57%|█████▋    | 22608/39434 [00:00<00:00, 43995.24it/s] 69%|██████▊   | 27034/39434 [00:00<00:00, 44073.91it/s] 83%|████████▎ | 32749/39434 [00:00<00:00, 47321.31it/s]100%|██████████| 39434/39434 [00:00<00:00, 49876.07it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11019/552076 [00:00<00:04, 110181.44it/s]  4%|▎         | 19973/552076 [00:00<00:05, 100679.39it/s]  4%|▍         | 24802/552076 [00:00<00:07, 73825.66it/s]   6%|▌         | 33256/552076 [00:00<00:06, 76742.26it/s]  7%|▋         | 39114/552076 [00:00<00:08, 60066.66it/s]  8%|▊         | 45707/552076 [00:00<00:08, 61712.93it/s] 10%|▉         | 53219/552076 [00:00<00:07, 65203.98it/s] 11%|█         | 60986/552076 [00:00<00:07, 68502.34it/s] 12%|█▏        | 68255/552076 [00:00<00:06, 69706.19it/s] 14%|█▍        | 77922/552076 [00:01<00:06, 74143.07it/s] 16%|█▌        | 87082/552076 [00:01<00:05, 77503.49it/s] 17%|█▋        | 94875/552076 [00:01<00:06, 70868.58it/s] 20%|██        | 112674/552076 [00:01<00:05, 86482.68it/s] 23%|██▎       | 125601/552076 [00:01<00:04, 96015.36it/s] 26%|██▌       | 141634/552076 [00:01<00:03, 109149.50it/s] 29%|██▉       | 159661/552076 [00:01<00:03, 123801.32it/s] 32%|███▏      | 174602/552076 [00:01<00:02, 130511.01it/s] 34%|███▍      | 189054/552076 [00:01<00:02, 131445.54it/s] 37%|███▋      | 203181/552076 [00:02<00:02, 130655.42it/s] 39%|███▉      | 216935/552076 [00:02<00:02, 130940.15it/s] 42%|████▏     | 233660/552076 [00:02<00:02, 140062.24it/s] 45%|████▍     | 248181/552076 [00:02<00:02, 120099.30it/s] 48%|████▊     | 263244/552076 [00:02<00:02, 127874.27it/s] 50%|█████     | 277621/552076 [00:02<00:02, 132259.98it/s] 53%|█████▎    | 291403/552076 [00:02<00:02, 125007.28it/s] 55%|█████▌    | 305893/552076 [00:02<00:01, 130375.22it/s] 58%|█████▊    | 321486/552076 [00:02<00:01, 137114.74it/s] 61%|██████    | 335563/552076 [00:03<00:01, 133546.82it/s] 63%|██████▎   | 349194/552076 [00:03<00:01, 131633.04it/s] 66%|██████▌   | 363384/552076 [00:03<00:01, 134177.68it/s] 68%|██████▊   | 376954/552076 [00:03<00:01, 119649.01it/s] 72%|███████▏  | 394990/552076 [00:03<00:01, 133087.96it/s] 75%|███████▍  | 412201/552076 [00:03<00:00, 142800.30it/s] 78%|███████▊  | 430187/552076 [00:03<00:00, 152208.75it/s] 81%|████████  | 448226/552076 [00:03<00:00, 159693.06it/s] 84%|████████▍ | 464770/552076 [00:03<00:00, 148159.24it/s] 87%|████████▋ | 480154/552076 [00:04<00:00, 140571.81it/s] 90%|█████████ | 497554/552076 [00:04<00:00, 149167.53it/s] 93%|█████████▎| 513611/552076 [00:04<00:00, 152413.23it/s] 96%|█████████▌| 529205/552076 [00:04<00:00, 146481.07it/s] 99%|█████████▉| 547129/552076 [00:04<00:00, 154977.19it/s]100%|██████████| 552076/552076 [00:04<00:00, 123355.67it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 153, in evaluate
    loss.backward()
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/tensor.py", line 185, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/autograd/__init__.py", line 127, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 97.66 GiB (GPU 0; 10.76 GiB total capacity; 1.60 GiB already allocated; 323.44 MiB free; 1.61 GiB reserved in total by PyTorch)
Exception raised from malloc at /pytorch/c10/cuda/CUDACachingAllocator.cpp:272 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x42 (0x7fabb881b1e2 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0x1e64b (0x7fabb8a7164b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #2: <unknown function> + 0x1f464 (0x7fabb8a72464 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #3: <unknown function> + 0x1faa1 (0x7fabb8a72aa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libc10_cuda.so)
frame #4: at::native::empty_cuda(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0x11e (0x7fa977d6590e in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #5: <unknown function> + 0xf33949 (0x7fa97619f949 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #6: <unknown function> + 0xf4d777 (0x7fa9761b9777 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #7: <unknown function> + 0x10e9c7d (0x7fabb9d6dc7d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #8: <unknown function> + 0x10e9f97 (0x7fabb9d6df97 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #9: at::empty(c10::ArrayRef<long>, c10::TensorOptions const&, c10::optional<c10::MemoryFormat>) + 0xfa (0x7fabb9e78a1a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #10: at::TensorIterator::allocate_outputs() + 0x378 (0x7fabb9b084f8 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #11: at::TensorIterator::build(at::TensorIteratorConfig&) + 0x1e6 (0x7fabb9b0a166 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #12: at::TensorIterator::TensorIterator(at::TensorIteratorConfig&) + 0xdd (0x7fabb9b0a65d in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #13: at::TensorIterator::binary_op(at::Tensor&, at::Tensor const&, at::Tensor const&, bool) + 0x14a (0x7fabb9b0a80a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #14: at::native::mul(at::Tensor const&, at::Tensor const&) + 0x47 (0x7fabb9847eb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #15: <unknown function> + 0xf22b40 (0x7fa97618eb40 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cuda.so)
frame #16: <unknown function> + 0xa56530 (0x7fabb96da530 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #17: at::Tensor c10::Dispatcher::call<at::Tensor, at::Tensor const&, at::Tensor const&>(c10::TypedOperatorHandle<at::Tensor (at::Tensor const&, at::Tensor const&)> const&, at::Tensor const&, at::Tensor const&) const + 0xbc (0x7fabb9ec281c in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #18: at::mul(at::Tensor const&, at::Tensor const&) + 0x4b (0x7fabb9e1382b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #19: <unknown function> + 0xcc6952 (0x7fabb994a952 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #20: at::native::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0xdba (0x7fabb994bf4a in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #21: <unknown function> + 0x129b8c0 (0x7fabb9f1f8c0 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #22: <unknown function> + 0x12c508b (0x7fabb9f4908b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #23: at::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0x1d7 (0x7fabb9e70337 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #24: <unknown function> + 0x2dfa205 (0x7fabbba7e205 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #25: <unknown function> + 0x12c508b (0x7fabb9f4908b in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #26: at::_trilinear(at::Tensor const&, at::Tensor const&, at::Tensor const&, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, c10::ArrayRef<long>, long) + 0x1d7 (0x7fabb9e70337 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #27: torch::autograd::generated::TrilinearBackward::apply(std::vector<at::Tensor, std::allocator<at::Tensor> >&&) + 0x6a8 (0x7fabbb9ddf78 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #28: <unknown function> + 0x3375bb7 (0x7fabbbff9bb7 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #29: torch::autograd::Engine::evaluate_function(std::shared_ptr<torch::autograd::GraphTask>&, torch::autograd::Node*, torch::autograd::InputBuffer&, std::shared_ptr<torch::autograd::ReadyQueue> const&) + 0x1400 (0x7fabbbff5400 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #30: torch::autograd::Engine::thread_main(std::shared_ptr<torch::autograd::GraphTask> const&) + 0x451 (0x7fabbbff5fa1 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #31: torch::autograd::Engine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x89 (0x7fabbbfee119 in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_cpu.so)
frame #32: torch::autograd::python::PythonEngine::thread_init(int, std::shared_ptr<torch::autograd::ReadyQueue> const&, bool) + 0x4a (0x7fabc978e4ba in /home/duyufeng/.local/lib/python3.6/site-packages/torch/lib/libtorch_python.so)
frame #33: <unknown function> + 0xbd6df (0x7fabca8ea6df in /usr/lib/x86_64-linux-gnu/libstdc++.so.6)
frame #34: <unknown function> + 0x76db (0x7fabce9456db in /lib/x86_64-linux-gnu/libpthread.so.0)
frame #35: clone + 0x3f (0x7fabcec7e71f in /lib/x86_64-linux-gnu/libc.so.6)

actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.4946761131286621 seconds.
Run epoch 1
Epoch 1 ends in 0.5069005489349365 seconds.
39434 sentences created
mode 1: time used = 1.0024514198303223
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
epoch 5: {'train_loss': '1.34821'}; time used = 0.7118926048278809s
epoch 10: {'train_loss': '1.21332'}; time used = 0.5338032245635986s
epoch 15: {'train_loss': '1.13448'}; time used = 0.5475389957427979s
epoch 20: {'train_loss': '1.08728'}; time used = 0.4029388427734375s
epoch 25: {'train_loss': '1.06643'}; time used = 0.5480148792266846s
epoch 30: {'train_loss': '1.05329'}; time used = 0.6333811283111572s
epoch 35: {'train_loss': '1.04237'}; time used = 0.6381149291992188s
epoch 40: {'train_loss': '1.03861'}; time used = 0.4812910556793213s
epoch 45: {'train_loss': '1.03595'}; time used = 0.6518311500549316s
epoch 50: {'train_loss': '1.03119'}; time used = 0.6057407855987549s
epoch 55: {'train_loss': '1.03090'}; time used = 0.5108621120452881s
epoch 60: {'train_loss': '1.03265'}; time used = 0.6891374588012695s
epoch 65: {'train_loss': '1.03026'}; time used = 0.20993447303771973s
epoch 70: {'train_loss': '1.02983'}; time used = 0.1593036651611328s
epoch 75: {'train_loss': '1.03343'}; time used = 0.6016054153442383s
epoch 80: {'train_loss': '1.02800'}; time used = 0.31350207328796387s
epoch 85: {'train_loss': '1.02962'}; time used = 0.1726970672607422s
epoch 90: {'train_loss': '1.02424'}; time used = 0.044912099838256836s
epoch 95: {'train_loss': '1.02640'}; time used = 0.17853093147277832s
epoch 100: {'train_loss': '1.02994'}; time used = 0.04481005668640137s
epoch 105: {'train_loss': '1.02376'}; time used = 0.0343325138092041s
epoch 110: {'train_loss': '1.02870'}; time used = 0.07480430603027344s
epoch 115: {'train_loss': '1.03108'}; time used = 0.19989967346191406s
epoch 120: {'train_loss': '1.03090'}; time used = 0.0362401008605957s
epoch 125: {'train_loss': '1.03114'}; time used = 0.03720355033874512s
epoch 130: {'train_loss': '1.02918'}; time used = 0.04242086410522461s
epoch 135: {'train_loss': '1.02994'}; time used = 0.034028053283691406s
epoch 140: {'train_loss': '1.02994'}; time used = 0.03707408905029297s
epoch 145: {'train_loss': '1.02804'}; time used = 0.03306245803833008s
epoch 150: {'train_loss': '1.02765'}; time used = 0.03687286376953125s
epoch 155: {'train_loss': '1.02793'}; time used = 0.03971409797668457s
epoch 160: {'train_loss': '1.02780'}; time used = 0.03609490394592285s
epoch 165: {'train_loss': '1.02918'}; time used = 0.03633379936218262s
epoch 170: {'train_loss': '1.02587'}; time used = 0.034802913665771484s
epoch 175: {'train_loss': '1.02853'}; time used = 0.03154945373535156s
epoch 180: {'train_loss': '1.03378'}; time used = 0.03367185592651367s
epoch 185: {'train_loss': '1.02549'}; time used = 0.03540492057800293s
epoch 190: {'train_loss': '1.03075'}; time used = 0.032115936279296875s
epoch 195: {'train_loss': '1.03018'}; time used = 0.03305387496948242s
epoch 200: {'train_loss': '1.03191'}; time used = 0.045026302337646484s
epoch 205: {'train_loss': '1.03196'}; time used = 0.03408026695251465s
epoch 210: {'train_loss': '1.02850'}; time used = 0.031002521514892578s
epoch 215: {'train_loss': '1.03041'}; time used = 0.032619476318359375s
epoch 220: {'train_loss': '1.02612'}; time used = 0.03373837471008301s
epoch 225: {'train_loss': '1.02712'}; time used = 0.15115857124328613s
epoch 230: {'train_loss': '1.03091'}; time used = 0.031772613525390625s
epoch 235: {'train_loss': '1.03248'}; time used = 0.03030538558959961s
epoch 240: {'train_loss': '1.02913'}; time used = 0.030371665954589844s
epoch 245: {'train_loss': '1.03136'}; time used = 0.0333707332611084s
epoch 250: {'train_loss': '1.02667'}; time used = 0.03263998031616211s
epoch 255: {'train_loss': '1.03039'}; time used = 0.03322911262512207s
epoch 260: {'train_loss': '1.02831'}; time used = 0.030530214309692383s
epoch 265: {'train_loss': '1.02822'}; time used = 0.03226137161254883s
epoch 270: {'train_loss': '1.02804'}; time used = 0.03436613082885742s
epoch 275: {'train_loss': '1.02896'}; time used = 0.03751087188720703s
epoch 280: {'train_loss': '1.03001'}; time used = 0.0397028923034668s
epoch 285: {'train_loss': '1.02707'}; time used = 0.16271424293518066s
epoch 290: {'train_loss': '1.03067'}; time used = 0.1700294017791748s
epoch 295: {'train_loss': '1.02994'}; time used = 0.052102088928222656s
epoch 300: {'train_loss': '1.02730'}; time used = 0.05685830116271973s
epoch 305: {'train_loss': '1.02693'}; time used = 0.04643726348876953s
epoch 310: {'train_loss': '1.03079'}; time used = 0.08510875701904297s
epoch 315: {'train_loss': '1.03154'}; time used = 0.1392815113067627s
epoch 320: {'train_loss': '1.03221'}; time used = 0.2826354503631592s
epoch 325: {'train_loss': '1.02937'}; time used = 0.16155552864074707s
epoch 330: {'train_loss': '1.02990'}; time used = 0.05418038368225098s
epoch 335: {'train_loss': '1.03033'}; time used = 0.04430413246154785s
epoch 340: {'train_loss': '1.03037'}; time used = 0.04115104675292969s
epoch 345: {'train_loss': '1.02772'}; time used = 0.04176068305969238s
epoch 350: {'train_loss': '1.02974'}; time used = 0.0418093204498291s
epoch 355: {'train_loss': '1.02835'}; time used = 0.30457568168640137s
epoch 360: {'train_loss': '1.02780'}; time used = 0.10720109939575195s
epoch 365: {'train_loss': '1.02713'}; time used = 0.18538236618041992s
epoch 370: {'train_loss': '1.02630'}; time used = 0.03830575942993164s
epoch 375: {'train_loss': '1.02705'}; time used = 0.05064535140991211s
epoch 380: {'train_loss': '1.02938'}; time used = 0.04437255859375s
epoch 385: {'train_loss': '1.02606'}; time used = 0.04648137092590332s
epoch 390: {'train_loss': '1.02848'}; time used = 0.1715221405029297s
epoch 395: {'train_loss': '1.03011'}; time used = 0.0681600570678711s
epoch 400: {'train_loss': '1.02962'}; time used = 0.3192174434661865s
epoch 405: {'train_loss': '1.03079'}; time used = 0.31110215187072754s
epoch 410: {'train_loss': '1.03071'}; time used = 0.11409544944763184s
epoch 415: {'train_loss': '1.02540'}; time used = 0.15934205055236816s
epoch 420: {'train_loss': '1.03227'}; time used = 0.049004554748535156s
epoch 425: {'train_loss': '1.02779'}; time used = 0.044769287109375s
epoch 430: {'train_loss': '1.02879'}; time used = 0.19604158401489258s
epoch 435: {'train_loss': '1.02666'}; time used = 0.08861184120178223s
epoch 440: {'train_loss': '1.02974'}; time used = 0.12053227424621582s
epoch 445: {'train_loss': '1.02882'}; time used = 0.04305911064147949s
epoch 450: {'train_loss': '1.02841'}; time used = 0.044692039489746094s
epoch 455: {'train_loss': '1.02653'}; time used = 0.04171609878540039s
epoch 460: {'train_loss': '1.02619'}; time used = 0.04992318153381348s
epoch 465: {'train_loss': '1.02609'}; time used = 0.09619522094726562s
epoch 470: {'train_loss': '1.03161'}; time used = 0.12963366508483887s
epoch 475: {'train_loss': '1.02701'}; time used = 0.04798173904418945s
epoch 480: {'train_loss': '1.03204'}; time used = 0.048475027084350586s
epoch 485: {'train_loss': '1.02796'}; time used = 0.05572915077209473s
epoch 490: {'train_loss': '1.03139'}; time used = 0.09574580192565918s
epoch 495: {'train_loss': '1.03006'}; time used = 0.10374641418457031s
epoch 500: {'train_loss': '1.03200'}; time used = 0.15822315216064453s
Finished training. Time used = 35.210289001464844.
Training classifier using 20.00% nodes...
{'micro': 0.4214530239634842, 'macro': 0.3040999188870857, 'samples': 0.4214530239634842, 'weighted': 0.35995010844388947}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
epoch 5: {'train_loss': '1.34821'}; time used = 0.9593451023101807s
epoch 10: {'train_loss': '1.21332'}; time used = 0.780031681060791s
epoch 15: {'train_loss': '1.13448'}; time used = 0.7369856834411621s
epoch 20: {'train_loss': '1.08728'}; time used = 0.6083056926727295s
epoch 25: {'train_loss': '1.06643'}; time used = 0.6533057689666748s
epoch 30: {'train_loss': '1.05329'}; time used = 0.6850793361663818s
epoch 35: {'train_loss': '1.04237'}; time used = 0.8471124172210693s
epoch 40: {'train_loss': '1.03861'}; time used = 0.8861820697784424s
epoch 45: {'train_loss': '1.03595'}; time used = 0.7283809185028076s
epoch 50: {'train_loss': '1.03119'}; time used = 0.8344299793243408s
epoch 55: {'train_loss': '1.03090'}; time used = 0.5122628211975098s
epoch 60: {'train_loss': '1.03265'}; time used = 0.5455543994903564s
epoch 65: {'train_loss': '1.03026'}; time used = 0.6269574165344238s
epoch 70: {'train_loss': '1.02983'}; time used = 0.5244834423065186s
epoch 75: {'train_loss': '1.03343'}; time used = 0.5242776870727539s
epoch 80: {'train_loss': '1.02800'}; time used = 0.5703599452972412s
epoch 85: {'train_loss': '1.02962'}; time used = 0.542952299118042s
epoch 90: {'train_loss': '1.02424'}; time used = 0.49938488006591797s
epoch 95: {'train_loss': '1.02640'}; time used = 0.6369104385375977s
epoch 100: {'train_loss': '1.02994'}; time used = 0.5110301971435547s
epoch 105: {'train_loss': '1.02376'}; time used = 0.45556163787841797s
epoch 110: {'train_loss': '1.02870'}; time used = 0.43405938148498535s
epoch 115: {'train_loss': '1.03108'}; time used = 0.5138263702392578s
epoch 120: {'train_loss': '1.03090'}; time used = 0.5257625579833984s
epoch 125: {'train_loss': '1.03114'}; time used = 0.6683704853057861s
epoch 130: {'train_loss': '1.02918'}; time used = 0.9110867977142334s
epoch 135: {'train_loss': '1.02994'}; time used = 0.759150505065918s
epoch 140: {'train_loss': '1.02994'}; time used = 0.6913726329803467s
epoch 145: {'train_loss': '1.02804'}; time used = 0.9546294212341309s
epoch 150: {'train_loss': '1.02765'}; time used = 0.7744817733764648s
epoch 155: {'train_loss': '1.02793'}; time used = 0.6710941791534424s
epoch 160: {'train_loss': '1.02780'}; time used = 0.506493091583252s
epoch 165: {'train_loss': '1.02918'}; time used = 0.5245976448059082s
epoch 170: {'train_loss': '1.02587'}; time used = 0.7768282890319824s
epoch 175: {'train_loss': '1.02853'}; time used = 0.8260297775268555s
epoch 180: {'train_loss': '1.03378'}; time used = 0.6394493579864502s
epoch 185: {'train_loss': '1.02549'}; time used = 0.8524746894836426s
epoch 190: {'train_loss': '1.03075'}; time used = 0.6960666179656982s
epoch 195: {'train_loss': '1.03018'}; time used = 0.6188955307006836s
epoch 200: {'train_loss': '1.03191'}; time used = 0.6808822154998779s
epoch 205: {'train_loss': '1.03196'}; time used = 0.5156295299530029s
epoch 210: {'train_loss': '1.02850'}; time used = 0.3993265628814697s
epoch 215: {'train_loss': '1.03041'}; time used = 0.5090498924255371s
epoch 220: {'train_loss': '1.02612'}; time used = 0.45006442070007324s
epoch 225: {'train_loss': '1.02712'}; time used = 0.5189688205718994s
epoch 230: {'train_loss': '1.03091'}; time used = 0.5760307312011719s
epoch 235: {'train_loss': '1.03248'}; time used = 0.8691222667694092s
epoch 240: {'train_loss': '1.02913'}; time used = 0.839984655380249s
epoch 245: {'train_loss': '1.03136'}; time used = 0.7435479164123535s
epoch 250: {'train_loss': '1.02667'}; time used = 0.7607498168945312s
epoch 255: {'train_loss': '1.03039'}; time used = 0.7326793670654297s
epoch 260: {'train_loss': '1.02831'}; time used = 0.7854588031768799s
epoch 265: {'train_loss': '1.02822'}; time used = 0.6295037269592285s
epoch 270: {'train_loss': '1.02804'}; time used = 0.5295085906982422s
epoch 275: {'train_loss': '1.02896'}; time used = 0.4599428176879883s
epoch 280: {'train_loss': '1.03001'}; time used = 0.6522250175476074s
epoch 285: {'train_loss': '1.02707'}; time used = 0.6824615001678467s
epoch 290: {'train_loss': '1.03067'}; time used = 0.6673312187194824s
epoch 295: {'train_loss': '1.02994'}; time used = 0.5120682716369629s
epoch 300: {'train_loss': '1.02730'}; time used = 0.5901110172271729s
epoch 305: {'train_loss': '1.02693'}; time used = 0.6462328433990479s
epoch 310: {'train_loss': '1.03079'}; time used = 0.5415184497833252s
epoch 315: {'train_loss': '1.03154'}; time used = 0.5973870754241943s
epoch 320: {'train_loss': '1.03221'}; time used = 0.6105015277862549s
epoch 325: {'train_loss': '1.02937'}; time used = 0.661517858505249s
epoch 330: {'train_loss': '1.02990'}; time used = 0.4704155921936035s
epoch 335: {'train_loss': '1.03033'}; time used = 0.5852346420288086s
epoch 340: {'train_loss': '1.03037'}; time used = 0.528679609298706s
epoch 345: {'train_loss': '1.02772'}; time used = 1.0621249675750732s
epoch 350: {'train_loss': '1.02974'}; time used = 1.0081706047058105s
epoch 355: {'train_loss': '1.02835'}; time used = 1.0749516487121582s
epoch 360: {'train_loss': '1.02780'}; time used = 0.7088017463684082s
epoch 365: {'train_loss': '1.02713'}; time used = 0.7200028896331787s
epoch 370: {'train_loss': '1.02630'}; time used = 0.6775829792022705s
epoch 375: {'train_loss': '1.02705'}; time used = 0.6703605651855469s
epoch 380: {'train_loss': '1.02938'}; time used = 0.6295490264892578s
epoch 385: {'train_loss': '1.02606'}; time used = 0.19914746284484863s
epoch 390: {'train_loss': '1.02848'}; time used = 0.1958785057067871s
epoch 395: {'train_loss': '1.03011'}; time used = 0.052320003509521484s
epoch 400: {'train_loss': '1.02962'}; time used = 0.1801753044128418s
epoch 405: {'train_loss': '1.03079'}; time used = 0.12973546981811523s
epoch 410: {'train_loss': '1.03071'}; time used = 0.043357133865356445s
epoch 415: {'train_loss': '1.02540'}; time used = 0.039173126220703125s
epoch 420: {'train_loss': '1.03227'}; time used = 0.03978300094604492s
epoch 425: {'train_loss': '1.02779'}; time used = 0.2144911289215088s
epoch 430: {'train_loss': '1.02879'}; time used = 0.17367911338806152s
epoch 435: {'train_loss': '1.02666'}; time used = 0.051944732666015625s
epoch 440: {'train_loss': '1.02974'}; time used = 0.14907169342041016s
epoch 445: {'train_loss': '1.02882'}; time used = 0.07321429252624512s
epoch 450: {'train_loss': '1.02841'}; time used = 0.06417393684387207s
epoch 455: {'train_loss': '1.02653'}; time used = 0.048679351806640625s
epoch 460: {'train_loss': '1.02619'}; time used = 0.05753040313720703s
epoch 465: {'train_loss': '1.02609'}; time used = 0.19317317008972168s
epoch 470: {'train_loss': '1.03161'}; time used = 0.2365584373474121s
epoch 475: {'train_loss': '1.02701'}; time used = 0.20703983306884766s
epoch 480: {'train_loss': '1.03204'}; time used = 0.19251251220703125s
epoch 485: {'train_loss': '1.02796'}; time used = 0.17150282859802246s
epoch 490: {'train_loss': '1.03139'}; time used = 0.21421122550964355s
epoch 495: {'train_loss': '1.03006'}; time used = 0.05183553695678711s
epoch 500: {'train_loss': '1.03200'}; time used = 0.0453338623046875s
Finished training. Time used = 72.92857098579407.
Training classifier using 20.00% nodes...
{'micro': 0.4214530239634842, 'macro': 0.3040999188870857, 'samples': 0.4214530239634842, 'weighted': 0.35995010844388947}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/88651 [00:00<?, ?it/s]  6%|▌         | 5128/88651 [00:00<00:01, 47580.72it/s] 12%|█▏        | 10543/88651 [00:00<00:01, 49376.71it/s] 17%|█▋        | 15265/88651 [00:00<00:01, 48709.13it/s] 23%|██▎       | 20212/88651 [00:00<00:01, 48934.07it/s] 27%|██▋       | 24175/88651 [00:00<00:01, 43791.89it/s] 31%|███▏      | 27863/88651 [00:00<00:01, 36162.09it/s] 36%|███▌      | 31800/88651 [00:00<00:01, 34817.22it/s] 40%|████      | 35645/88651 [00:00<00:01, 35832.31it/s] 45%|████▌     | 39896/88651 [00:00<00:01, 36881.35it/s] 52%|█████▏    | 45896/88651 [00:01<00:01, 41701.73it/s] 61%|██████    | 54279/88651 [00:01<00:00, 48398.56it/s] 72%|███████▏  | 63504/88651 [00:01<00:00, 56330.78it/s] 85%|████████▌ | 75439/88651 [00:01<00:00, 66932.89it/s] 98%|█████████▊| 86456/88651 [00:01<00:00, 75864.95it/s]100%|██████████| 88651/88651 [00:01<00:00, 57946.25it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 376, in _apply
    param_applied = fn(param)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 10.76 GiB total capacity; 38.00 MiB already allocated; 19.44 MiB free; 38.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 437.44 MiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 4.35 GiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 22%|██▏       | 8619/39434 [00:00<00:00, 86189.26it/s] 43%|████▎     | 16900/39434 [00:00<00:00, 85144.39it/s] 55%|█████▌    | 21849/39434 [00:00<00:00, 66463.23it/s] 76%|███████▋  | 30125/39434 [00:00<00:00, 70635.67it/s]100%|██████████| 39434/39434 [00:00<00:00, 77178.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11917/552076 [00:00<00:04, 119168.69it/s]  4%|▍         | 23635/552076 [00:00<00:04, 118562.67it/s]  6%|▋         | 35616/552076 [00:00<00:04, 116652.87it/s]  8%|▊         | 43325/552076 [00:00<00:05, 99430.25it/s]   9%|▉         | 50854/552076 [00:00<00:05, 84680.41it/s] 11%|█         | 58011/552076 [00:00<00:07, 68181.02it/s] 12%|█▏        | 67615/552076 [00:00<00:06, 70153.90it/s] 13%|█▎        | 74364/552076 [00:00<00:07, 62284.53it/s] 16%|█▌        | 86564/552076 [00:01<00:06, 73003.70it/s] 17%|█▋        | 94568/552076 [00:01<00:06, 65456.80it/s] 18%|█▊        | 101753/552076 [00:01<00:07, 62377.02it/s] 21%|██        | 113722/552076 [00:01<00:06, 72840.37it/s] 22%|██▏       | 122014/552076 [00:01<00:06, 68255.43it/s] 23%|██▎       | 129604/552076 [00:01<00:07, 57594.13it/s] 25%|██▍       | 136183/552076 [00:01<00:07, 52902.96it/s] 26%|██▌       | 142122/552076 [00:02<00:07, 51656.73it/s] 27%|██▋       | 147749/552076 [00:02<00:08, 47788.64it/s] 28%|██▊       | 156753/552076 [00:02<00:07, 55617.95it/s] 30%|███       | 166943/552076 [00:02<00:05, 64391.26it/s] 32%|███▏      | 178296/552076 [00:02<00:05, 73999.39it/s] 34%|███▍      | 189575/552076 [00:02<00:04, 82510.72it/s] 36%|███▋      | 200983/552076 [00:02<00:03, 89979.01it/s] 38%|███▊      | 211007/552076 [00:02<00:04, 79102.72it/s] 40%|████      | 222909/552076 [00:02<00:03, 87951.00it/s] 43%|████▎     | 235502/552076 [00:03<00:03, 96699.15it/s] 45%|████▍     | 247981/552076 [00:03<00:02, 103702.22it/s] 47%|████▋     | 259161/552076 [00:03<00:02, 99792.45it/s]  49%|████▉     | 269739/552076 [00:03<00:03, 84531.30it/s] 51%|█████     | 279012/552076 [00:03<00:03, 76250.23it/s] 52%|█████▏    | 289695/552076 [00:03<00:03, 83412.64it/s] 54%|█████▍    | 298747/552076 [00:03<00:03, 74886.54it/s] 56%|█████▋    | 311021/552076 [00:03<00:02, 84805.30it/s] 58%|█████▊    | 320409/552076 [00:04<00:03, 77086.66it/s] 60%|█████▉    | 330238/552076 [00:04<00:02, 82420.52it/s] 62%|██████▏   | 341021/552076 [00:04<00:02, 88151.21it/s] 63%|██████▎   | 350550/552076 [00:04<00:02, 89521.25it/s] 65%|██████▌   | 361436/552076 [00:04<00:02, 94560.48it/s] 68%|██████▊   | 373696/552076 [00:04<00:01, 101525.49it/s] 70%|██████▉   | 386060/552076 [00:04<00:01, 107280.40it/s] 72%|███████▏  | 397861/552076 [00:04<00:01, 110286.71it/s] 74%|███████▍  | 409796/552076 [00:04<00:01, 112856.14it/s] 76%|███████▋  | 422135/552076 [00:04<00:01, 115822.44it/s] 79%|███████▉  | 438058/552076 [00:05<00:00, 126137.13it/s] 83%|████████▎ | 456250/552076 [00:05<00:00, 138914.26it/s] 86%|████████▌ | 474583/552076 [00:05<00:00, 149801.54it/s] 89%|████████▉ | 491579/552076 [00:05<00:00, 155326.87it/s] 92%|█████████▏| 507661/552076 [00:05<00:00, 156379.26it/s] 95%|█████████▌| 525094/552076 [00:05<00:00, 161361.85it/s] 98%|█████████▊| 542600/552076 [00:05<00:00, 165239.06it/s]100%|██████████| 552076/552076 [00:05<00:00, 96360.52it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12280/552076 [00:00<00:04, 122793.97it/s]  5%|▌         | 28895/552076 [00:00<00:03, 133223.10it/s]  9%|▊         | 46946/552076 [00:00<00:03, 144584.32it/s] 12%|█▏        | 64649/552076 [00:00<00:03, 152994.35it/s] 15%|█▍        | 82544/552076 [00:00<00:02, 159953.20it/s] 18%|█▊        | 100438/552076 [00:00<00:02, 165211.43it/s] 21%|██        | 115840/552076 [00:00<00:03, 128216.94it/s] 24%|██▍       | 134440/552076 [00:00<00:02, 141394.13it/s] 27%|██▋       | 150377/552076 [00:00<00:02, 146342.67it/s] 30%|██▉       | 165585/552076 [00:01<00:02, 144626.27it/s] 33%|███▎      | 184737/552076 [00:01<00:02, 156090.51it/s] 37%|███▋      | 204102/552076 [00:01<00:02, 165731.83it/s] 40%|████      | 221872/552076 [00:01<00:01, 169149.45it/s] 43%|████▎     | 239185/552076 [00:01<00:02, 154046.34it/s] 46%|████▌     | 255129/552076 [00:01<00:02, 126480.26it/s] 49%|████▊     | 268967/552076 [00:01<00:02, 96671.31it/s]  51%|█████     | 280525/552076 [00:02<00:02, 93934.70it/s] 53%|█████▎    | 291259/552076 [00:02<00:02, 94971.84it/s] 56%|█████▌    | 308742/552076 [00:02<00:02, 110051.64it/s] 58%|█████▊    | 321294/552076 [00:02<00:02, 114159.35it/s] 61%|██████    | 337954/552076 [00:02<00:01, 126063.27it/s] 64%|██████▎   | 351729/552076 [00:02<00:01, 108995.05it/s] 66%|██████▌   | 363856/552076 [00:02<00:02, 92164.34it/s]  68%|██████▊   | 377761/552076 [00:02<00:01, 102535.16it/s] 71%|███████   | 391111/552076 [00:03<00:01, 110202.80it/s] 74%|███████▍  | 410440/552076 [00:03<00:01, 126517.56it/s] 78%|███████▊  | 429570/552076 [00:03<00:00, 140822.50it/s] 81%|████████▏ | 449126/552076 [00:03<00:00, 153730.99it/s] 84%|████████▍ | 466107/552076 [00:03<00:00, 155489.58it/s] 87%|████████▋ | 482708/552076 [00:03<00:00, 141337.78it/s] 91%|█████████ | 502863/552076 [00:03<00:00, 155251.06it/s] 95%|█████████▍| 522111/552076 [00:03<00:00, 164812.37it/s] 98%|█████████▊| 541143/552076 [00:03<00:00, 171715.71it/s]100%|██████████| 552076/552076 [00:03<00:00, 140871.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14445/552076 [00:00<00:03, 144449.79it/s]  6%|▌         | 33693/552076 [00:00<00:03, 156137.17it/s]  9%|▉         | 51253/552076 [00:00<00:03, 161507.05it/s] 13%|█▎        | 69631/552076 [00:00<00:02, 167598.32it/s] 16%|█▌        | 88098/552076 [00:00<00:02, 172377.62it/s] 19%|█▉        | 107114/552076 [00:00<00:02, 177351.92it/s] 23%|██▎       | 125793/552076 [00:00<00:02, 180080.46it/s] 26%|██▋       | 145456/552076 [00:00<00:02, 184744.17it/s] 30%|██▉       | 164976/552076 [00:00<00:02, 187759.24it/s] 33%|███▎      | 183952/552076 [00:01<00:01, 188350.53it/s] 37%|███▋      | 202447/552076 [00:01<00:02, 142630.29it/s] 40%|████      | 222367/552076 [00:01<00:02, 155911.85it/s] 44%|████▍     | 241553/552076 [00:01<00:01, 165196.02it/s] 47%|████▋     | 261316/552076 [00:01<00:01, 173750.34it/s] 51%|█████     | 280737/552076 [00:01<00:01, 179420.53it/s] 54%|█████▍    | 299348/552076 [00:01<00:01, 180595.00it/s] 58%|█████▊    | 317878/552076 [00:01<00:01, 134229.09it/s] 61%|██████    | 335596/552076 [00:02<00:01, 144755.48it/s] 64%|██████▍   | 353060/552076 [00:02<00:01, 152586.94it/s] 68%|██████▊   | 372865/552076 [00:02<00:01, 163870.27it/s] 71%|███████   | 392808/552076 [00:02<00:00, 173129.42it/s] 75%|███████▍  | 411828/552076 [00:02<00:00, 177918.81it/s] 78%|███████▊  | 431532/552076 [00:02<00:00, 183252.16it/s] 82%|████████▏ | 451130/552076 [00:02<00:00, 186892.63it/s] 85%|████████▌ | 470747/552076 [00:02<00:00, 189582.17it/s] 89%|████████▉ | 490798/552076 [00:02<00:00, 192731.30it/s] 92%|█████████▏| 510514/552076 [00:02<00:00, 194037.30it/s] 96%|█████████▌| 530715/552076 [00:03<00:00, 196360.93it/s]100%|█████████▉| 550461/552076 [00:03<00:00, 177927.98it/s]100%|██████████| 552076/552076 [00:03<00:00, 173520.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9861/552076 [00:00<00:05, 98602.81it/s]  4%|▎         | 20679/552076 [00:00<00:05, 101289.21it/s]  5%|▍         | 25995/552076 [00:00<00:07, 69792.12it/s]   7%|▋         | 38252/552076 [00:00<00:06, 80144.76it/s]  9%|▉         | 49852/552076 [00:00<00:05, 88333.84it/s] 11%|█         | 58324/552076 [00:00<00:06, 78120.21it/s] 13%|█▎        | 72461/552076 [00:00<00:05, 90230.90it/s] 15%|█▍        | 82145/552076 [00:00<00:05, 90771.24it/s] 17%|█▋        | 94239/552076 [00:00<00:04, 98112.47it/s] 20%|█▉        | 107718/552076 [00:01<00:04, 106833.05it/s] 22%|██▏       | 118977/552076 [00:01<00:04, 106597.74it/s] 24%|██▎       | 130040/552076 [00:01<00:04, 98994.10it/s]  25%|██▌       | 140330/552076 [00:01<00:04, 91677.89it/s] 27%|██▋       | 151054/552076 [00:01<00:04, 95848.76it/s] 29%|██▉       | 160955/552076 [00:01<00:04, 92048.73it/s] 33%|███▎      | 180291/552076 [00:01<00:03, 109215.01it/s] 36%|███▋      | 201180/552076 [00:01<00:02, 127460.51it/s] 40%|████      | 220893/552076 [00:01<00:02, 142576.96it/s] 44%|████▎     | 240348/552076 [00:02<00:02, 154998.64it/s] 47%|████▋     | 260270/552076 [00:02<00:01, 166054.60it/s] 51%|█████     | 280979/552076 [00:02<00:01, 176547.73it/s] 55%|█████▍    | 301891/552076 [00:02<00:01, 185200.29it/s] 58%|█████▊    | 321419/552076 [00:02<00:01, 188111.46it/s] 62%|██████▏   | 343328/552076 [00:02<00:01, 196443.97it/s] 66%|██████▌   | 364041/552076 [00:02<00:00, 199530.04it/s] 70%|███████   | 386511/552076 [00:02<00:00, 206468.14it/s] 74%|███████▍  | 407511/552076 [00:02<00:00, 204402.75it/s] 78%|███████▊  | 428203/552076 [00:02<00:00, 204631.30it/s] 81%|████████▏ | 448843/552076 [00:03<00:00, 204821.81it/s] 85%|████████▌ | 470075/552076 [00:03<00:00, 207013.54it/s] 89%|████████▉ | 490869/552076 [00:03<00:00, 178510.88it/s] 92%|█████████▏| 510163/552076 [00:03<00:00, 182605.51it/s] 96%|█████████▌| 530389/552076 [00:03<00:00, 188087.28it/s]100%|█████████▉| 549627/552076 [00:03<00:00, 185911.75it/s]100%|██████████| 552076/552076 [00:03<00:00, 151712.05it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17914/552076 [00:00<00:02, 179137.18it/s]  5%|▌         | 29407/552076 [00:00<00:03, 153420.97it/s]  9%|▉         | 48495/552076 [00:00<00:03, 163017.72it/s] 12%|█▏        | 67722/552076 [00:00<00:02, 170811.87it/s] 16%|█▌        | 87794/552076 [00:00<00:02, 178803.91it/s] 19%|█▉        | 107412/552076 [00:00<00:02, 183683.54it/s] 23%|██▎       | 125961/552076 [00:00<00:02, 184220.12it/s] 26%|██▌       | 144171/552076 [00:00<00:02, 183576.46it/s] 30%|██▉       | 163890/552076 [00:00<00:02, 187456.86it/s] 33%|███▎      | 183553/552076 [00:01<00:01, 190117.45it/s] 37%|███▋      | 203278/552076 [00:01<00:01, 192201.17it/s] 40%|████      | 222227/552076 [00:01<00:01, 188402.18it/s] 44%|████▎     | 240894/552076 [00:01<00:02, 138214.74it/s] 46%|████▋     | 256518/552076 [00:01<00:02, 113095.92it/s] 49%|████▉     | 269838/552076 [00:01<00:02, 107632.61it/s] 52%|█████▏    | 287548/552076 [00:01<00:02, 121986.53it/s] 55%|█████▌    | 306379/552076 [00:01<00:01, 136398.43it/s] 59%|█████▉    | 325588/552076 [00:02<00:01, 149391.36it/s] 62%|██████▏   | 342102/552076 [00:02<00:01, 132537.50it/s] 65%|██████▌   | 361325/552076 [00:02<00:01, 146151.71it/s] 69%|██████▉   | 380799/552076 [00:02<00:01, 157975.89it/s] 73%|███████▎  | 400644/552076 [00:02<00:00, 168270.36it/s] 76%|███████▌  | 419651/552076 [00:02<00:00, 174264.48it/s] 79%|███████▉  | 437892/552076 [00:02<00:00, 158569.19it/s] 83%|████████▎ | 456757/552076 [00:02<00:00, 166534.14it/s] 86%|████████▌ | 474107/552076 [00:02<00:00, 160200.76it/s] 89%|████████▉ | 490666/552076 [00:03<00:00, 115637.57it/s] 91%|█████████▏| 504361/552076 [00:03<00:00, 118059.76it/s] 94%|█████████▍| 518977/552076 [00:03<00:00, 125285.52it/s] 97%|█████████▋| 534161/552076 [00:03<00:00, 132221.67it/s]100%|█████████▉| 549480/552076 [00:03<00:00, 137881.72it/s]100%|██████████| 552076/552076 [00:03<00:00, 151937.40it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5015/552076 [00:00<00:10, 50149.81it/s]  3%|▎         | 18713/552076 [00:00<00:08, 61926.05it/s]  6%|▌         | 32211/552076 [00:00<00:07, 73659.54it/s]  7%|▋         | 39786/552076 [00:00<00:07, 70038.97it/s] 10%|▉         | 53836/552076 [00:00<00:06, 82441.36it/s] 11%|█▏        | 63281/552076 [00:00<00:05, 85709.57it/s] 14%|█▍        | 78355/552076 [00:00<00:04, 98451.26it/s] 17%|█▋        | 94263/552076 [00:00<00:04, 111159.03it/s] 19%|█▉        | 107634/552076 [00:00<00:03, 117082.49it/s] 23%|██▎       | 126119/552076 [00:01<00:03, 131549.65it/s] 26%|██▋       | 144963/552076 [00:01<00:02, 144649.74it/s] 30%|██▉       | 164993/552076 [00:01<00:02, 157801.35it/s] 34%|███▎      | 185788/552076 [00:01<00:02, 170107.84it/s] 37%|███▋      | 205149/552076 [00:01<00:01, 176534.82it/s] 41%|████      | 225117/552076 [00:01<00:01, 182892.11it/s] 44%|████▍     | 244952/552076 [00:01<00:01, 187270.11it/s] 48%|████▊     | 264849/552076 [00:01<00:01, 190630.31it/s] 51%|█████▏    | 284276/552076 [00:01<00:01, 188088.91it/s] 55%|█████▍    | 303347/552076 [00:01<00:01, 183982.14it/s] 58%|█████▊    | 321949/552076 [00:02<00:01, 176527.39it/s] 62%|██████▏   | 341495/552076 [00:02<00:01, 181809.01it/s] 65%|██████▌   | 360243/552076 [00:02<00:01, 183471.44it/s] 69%|██████▊   | 378723/552076 [00:02<00:01, 165191.76it/s] 72%|███████▏  | 395680/552076 [00:02<00:00, 165612.61it/s] 75%|███████▍  | 413244/552076 [00:02<00:00, 168497.98it/s] 78%|███████▊  | 430566/552076 [00:02<00:00, 169886.91it/s] 82%|████████▏ | 450138/552076 [00:02<00:00, 176890.40it/s] 85%|████████▍ | 469011/552076 [00:02<00:00, 180282.38it/s] 88%|████████▊ | 487187/552076 [00:03<00:00, 169499.13it/s] 91%|█████████▏| 504373/552076 [00:03<00:00, 165806.48it/s] 95%|█████████▍| 523287/552076 [00:03<00:00, 172171.45it/s] 98%|█████████▊| 541541/552076 [00:03<00:00, 175148.31it/s]100%|██████████| 552076/552076 [00:03<00:00, 163287.07it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18885/552076 [00:00<00:02, 188843.43it/s]  7%|▋         | 39762/552076 [00:00<00:02, 194410.01it/s] 11%|█         | 60796/552076 [00:00<00:02, 198929.41it/s] 15%|█▍        | 82485/552076 [00:00<00:02, 203994.88it/s] 18%|█▊        | 98421/552076 [00:00<00:03, 149497.96it/s] 21%|██        | 114785/552076 [00:00<00:03, 145363.77it/s] 23%|██▎       | 128624/552076 [00:00<00:03, 113154.68it/s] 25%|██▌       | 140550/552076 [00:01<00:03, 103611.99it/s] 28%|██▊       | 154332/552076 [00:01<00:03, 111945.84it/s] 30%|███       | 167095/552076 [00:01<00:03, 116230.57it/s] 33%|███▎      | 183396/552076 [00:01<00:02, 127179.31it/s] 36%|███▌      | 196747/552076 [00:01<00:03, 110357.55it/s] 38%|███▊      | 208623/552076 [00:01<00:04, 82957.89it/s]  40%|████      | 223555/552076 [00:01<00:03, 95719.92it/s] 44%|████▎     | 240409/552076 [00:01<00:02, 109973.15it/s] 46%|████▌     | 253446/552076 [00:02<00:03, 96890.01it/s]  50%|████▉     | 274967/552076 [00:02<00:02, 116027.09it/s] 54%|█████▎    | 295488/552076 [00:02<00:01, 133422.35it/s] 57%|█████▋    | 312986/552076 [00:02<00:01, 143655.79it/s] 60%|█████▉    | 329619/552076 [00:02<00:01, 143561.97it/s] 63%|██████▎   | 348706/552076 [00:02<00:01, 155093.08it/s] 67%|██████▋   | 367965/552076 [00:02<00:01, 164711.76it/s] 70%|███████   | 387924/552076 [00:02<00:00, 173823.65it/s] 74%|███████▍  | 407928/552076 [00:02<00:00, 180937.44it/s] 77%|███████▋  | 427093/552076 [00:02<00:00, 183676.71it/s] 81%|████████  | 447067/552076 [00:03<00:00, 188216.87it/s] 85%|████████▍ | 468037/552076 [00:03<00:00, 194182.45it/s] 89%|████████▉ | 490515/552076 [00:03<00:00, 202449.49it/s] 93%|█████████▎| 511075/552076 [00:03<00:00, 203328.55it/s] 96%|█████████▋| 531630/552076 [00:03<00:00, 179610.95it/s]100%|█████████▉| 551032/552076 [00:03<00:00, 183702.88it/s]100%|██████████| 552076/552076 [00:03<00:00, 151655.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20976/552076 [00:00<00:02, 209750.20it/s]  7%|▋         | 39019/552076 [00:00<00:02, 199993.81it/s] 11%|█         | 58046/552076 [00:00<00:02, 196941.13it/s] 14%|█▎        | 75319/552076 [00:00<00:02, 188991.44it/s] 16%|█▌        | 89305/552076 [00:00<00:02, 165147.47it/s] 20%|█▉        | 109857/552076 [00:00<00:02, 175486.82it/s] 24%|██▎       | 130715/552076 [00:00<00:02, 184256.06it/s] 27%|██▋       | 151609/552076 [00:00<00:02, 191025.28it/s] 31%|███       | 172439/552076 [00:00<00:01, 195898.95it/s] 35%|███▍      | 192818/552076 [00:01<00:01, 198199.33it/s] 39%|███▊      | 212610/552076 [00:01<00:01, 198112.53it/s] 42%|████▏     | 232180/552076 [00:01<00:01, 174899.73it/s] 46%|████▌     | 251769/552076 [00:01<00:01, 180707.53it/s] 49%|████▉     | 272005/552076 [00:01<00:01, 186698.93it/s] 53%|█████▎    | 291994/552076 [00:01<00:01, 190468.77it/s] 57%|█████▋    | 312259/552076 [00:01<00:01, 193963.42it/s] 60%|██████    | 331805/552076 [00:01<00:01, 190350.48it/s] 64%|██████▎   | 351710/552076 [00:01<00:01, 192877.88it/s] 67%|██████▋   | 372237/552076 [00:01<00:00, 196432.88it/s] 71%|███████   | 392738/552076 [00:02<00:00, 198926.99it/s] 75%|███████▍  | 413228/552076 [00:02<00:00, 200679.95it/s] 78%|███████▊  | 433345/552076 [00:02<00:00, 199831.53it/s] 82%|████████▏ | 454945/552076 [00:02<00:00, 204419.50it/s] 87%|████████▋ | 477942/552076 [00:02<00:00, 211467.04it/s] 90%|█████████ | 499186/552076 [00:02<00:00, 154855.25it/s] 94%|█████████▎| 516916/552076 [00:02<00:00, 147052.04it/s] 97%|█████████▋| 533275/552076 [00:03<00:00, 119152.11it/s] 99%|█████████▉| 547204/552076 [00:03<00:00, 121284.49it/s]100%|██████████| 552076/552076 [00:03<00:00, 171653.05it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8238/552076 [00:00<00:06, 82376.74it/s]  3%|▎         | 18765/552076 [00:00<00:06, 88124.72it/s]  5%|▍         | 26968/552076 [00:00<00:06, 86201.04it/s]  6%|▌         | 32868/552076 [00:00<00:06, 75261.32it/s]  7%|▋         | 38728/552076 [00:00<00:07, 65398.79it/s]  9%|▉         | 50302/552076 [00:00<00:06, 75212.67it/s] 11%|█         | 60382/552076 [00:00<00:06, 81411.91it/s] 13%|█▎        | 71519/552076 [00:00<00:05, 88556.93it/s] 15%|█▍        | 80601/552076 [00:00<00:05, 87726.06it/s] 19%|█▊        | 102140/552076 [00:01<00:04, 106698.28it/s] 22%|██▏       | 123173/552076 [00:01<00:03, 125204.84it/s] 26%|██▌       | 143695/552076 [00:01<00:02, 141789.11it/s] 30%|██▉       | 163664/552076 [00:01<00:02, 155297.74it/s] 33%|███▎      | 183068/552076 [00:01<00:02, 165192.44it/s] 37%|███▋      | 203278/552076 [00:01<00:01, 174766.32it/s] 40%|████      | 222963/552076 [00:01<00:01, 180851.54it/s] 44%|████▍     | 242054/552076 [00:01<00:01, 168707.77it/s] 48%|████▊     | 262533/552076 [00:01<00:01, 178121.04it/s] 51%|█████▏    | 283398/552076 [00:01<00:01, 186296.64it/s] 55%|█████▌    | 305952/552076 [00:02<00:01, 196554.47it/s] 59%|█████▉    | 326195/552076 [00:02<00:01, 185778.19it/s] 63%|██████▎   | 345306/552076 [00:02<00:01, 177591.62it/s] 66%|██████▌   | 364097/552076 [00:02<00:01, 180564.84it/s] 70%|██████▉   | 384027/552076 [00:02<00:00, 185802.87it/s] 73%|███████▎  | 402976/552076 [00:02<00:00, 186893.51it/s] 77%|███████▋  | 422934/552076 [00:02<00:00, 190526.09it/s] 80%|████████  | 442299/552076 [00:02<00:00, 191450.79it/s] 84%|████████▎ | 461550/552076 [00:02<00:00, 191689.80it/s] 87%|████████▋ | 481822/552076 [00:02<00:00, 194868.38it/s] 91%|█████████ | 501374/552076 [00:03<00:00, 194306.83it/s] 94%|█████████▍| 520851/552076 [00:03<00:00, 188549.47it/s] 98%|█████████▊| 539935/552076 [00:03<00:00, 189228.87it/s]100%|██████████| 552076/552076 [00:03<00:00, 163849.37it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18733/552076 [00:00<00:02, 184711.20it/s]  5%|▍         | 25571/552076 [00:00<00:04, 122292.12it/s]  8%|▊         | 44098/552076 [00:00<00:03, 136178.44it/s] 12%|█▏        | 64908/552076 [00:00<00:03, 151930.70it/s] 15%|█▌        | 85083/552076 [00:00<00:02, 164085.90it/s] 19%|█▉        | 107642/552076 [00:00<00:02, 178700.34it/s] 23%|██▎       | 127775/552076 [00:00<00:02, 184934.30it/s] 26%|██▋       | 145991/552076 [00:00<00:02, 163916.63it/s] 30%|███       | 166228/552076 [00:00<00:02, 173824.02it/s] 34%|███▍      | 186651/552076 [00:01<00:02, 181949.03it/s] 37%|███▋      | 206756/552076 [00:01<00:01, 187286.48it/s] 41%|████      | 226953/552076 [00:01<00:01, 191462.15it/s] 45%|████▍     | 246937/552076 [00:01<00:01, 193898.98it/s] 48%|████▊     | 267244/552076 [00:01<00:01, 196560.94it/s] 52%|█████▏    | 289732/552076 [00:01<00:01, 204276.28it/s] 56%|█████▋    | 310716/552076 [00:01<00:01, 203202.82it/s] 60%|█████▉    | 331151/552076 [00:01<00:01, 132549.77it/s] 63%|██████▎   | 347651/552076 [00:02<00:02, 101086.45it/s] 65%|██████▌   | 361153/552076 [00:02<00:02, 89585.62it/s]  68%|██████▊   | 372728/552076 [00:02<00:01, 90465.18it/s] 69%|██████▉   | 383608/552076 [00:02<00:02, 63918.34it/s] 71%|███████   | 392363/552076 [00:02<00:02, 67009.07it/s] 73%|███████▎  | 400757/552076 [00:03<00:02, 63085.29it/s] 74%|███████▍  | 408298/552076 [00:03<00:02, 56634.68it/s] 76%|███████▌  | 419996/552076 [00:03<00:01, 67003.95it/s] 78%|███████▊  | 429331/552076 [00:03<00:01, 73201.45it/s] 79%|███████▉  | 437847/552076 [00:03<00:01, 75288.31it/s] 82%|████████▏ | 450785/552076 [00:03<00:01, 86085.01it/s] 84%|████████▎ | 462205/552076 [00:03<00:00, 92949.74it/s] 86%|████████▌ | 473597/552076 [00:03<00:00, 98381.73it/s] 88%|████████▊ | 485239/552076 [00:03<00:00, 103176.13it/s] 90%|█████████ | 497349/552076 [00:04<00:00, 107969.15it/s] 92%|█████████▏| 509847/552076 [00:04<00:00, 112564.58it/s] 95%|█████████▍| 522019/552076 [00:04<00:00, 115162.66it/s] 97%|█████████▋| 533817/552076 [00:04<00:00, 115879.74it/s] 99%|█████████▉| 545603/552076 [00:04<00:00, 115652.34it/s]100%|██████████| 552076/552076 [00:04<00:00, 123410.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12403/552076 [00:00<00:04, 124028.94it/s]  5%|▍         | 25087/552076 [00:00<00:04, 124858.50it/s]  7%|▋         | 37367/552076 [00:00<00:04, 124230.00it/s]  9%|▉         | 49468/552076 [00:00<00:04, 123243.94it/s] 11%|█         | 61535/552076 [00:00<00:04, 122457.67it/s] 13%|█▎        | 73099/552076 [00:00<00:03, 120328.21it/s] 15%|█▌        | 84574/552076 [00:00<00:03, 118597.78it/s] 17%|█▋        | 95426/552076 [00:00<00:03, 114510.26it/s] 19%|█▉        | 106202/552076 [00:00<00:04, 101422.56it/s] 21%|██        | 117253/552076 [00:01<00:04, 103985.27it/s] 23%|██▎       | 128604/552076 [00:01<00:03, 106669.11it/s] 25%|██▌       | 140067/552076 [00:01<00:03, 108936.76it/s] 27%|██▋       | 151464/552076 [00:01<00:03, 110393.34it/s] 29%|██▉       | 162483/552076 [00:01<00:03, 109500.31it/s] 31%|███▏      | 173421/552076 [00:01<00:03, 103329.09it/s] 33%|███▎      | 183817/552076 [00:01<00:03, 99252.64it/s]  35%|███▌      | 195333/552076 [00:01<00:03, 103541.76it/s] 37%|███▋      | 206464/552076 [00:01<00:03, 105754.03it/s] 39%|███▉      | 217124/552076 [00:01<00:03, 105511.35it/s] 41%|████▏     | 228333/552076 [00:02<00:03, 107401.41it/s] 43%|████▎     | 239864/552076 [00:02<00:02, 109656.23it/s] 46%|████▌     | 251404/552076 [00:02<00:02, 111316.98it/s] 48%|████▊     | 262575/552076 [00:02<00:02, 111009.14it/s] 50%|████▉     | 274171/552076 [00:02<00:02, 112447.28it/s] 52%|█████▏    | 285855/552076 [00:02<00:02, 113727.28it/s] 54%|█████▍    | 297248/552076 [00:02<00:02, 95385.08it/s]  57%|█████▋    | 313420/552076 [00:02<00:02, 108768.73it/s] 60%|██████    | 333483/552076 [00:02<00:01, 126087.55it/s] 64%|██████▍   | 353787/552076 [00:03<00:01, 142261.93it/s] 68%|██████▊   | 374040/552076 [00:03<00:01, 156206.48it/s] 71%|███████   | 391407/552076 [00:03<00:01, 98321.37it/s]  73%|███████▎  | 405146/552076 [00:03<00:01, 106685.80it/s] 76%|███████▌  | 418757/552076 [00:03<00:01, 96825.10it/s]  79%|███████▉  | 437516/552076 [00:03<00:01, 113265.98it/s] 83%|████████▎ | 457066/552076 [00:03<00:00, 129622.52it/s] 86%|████████▌ | 472710/552076 [00:04<00:00, 110340.23it/s] 88%|████████▊ | 486118/552076 [00:04<00:00, 82188.27it/s]  90%|█████████ | 497049/552076 [00:04<00:00, 88415.06it/s] 92%|█████████▏| 507923/552076 [00:04<00:00, 80471.62it/s] 96%|█████████▌| 527373/552076 [00:04<00:00, 97645.29it/s] 99%|█████████▉| 545822/552076 [00:04<00:00, 113701.47it/s]100%|██████████| 552076/552076 [00:04<00:00, 112417.10it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14095/552076 [00:00<00:03, 140943.08it/s]  6%|▌         | 33347/552076 [00:00<00:03, 153260.18it/s] 10%|▉         | 52715/552076 [00:00<00:03, 163495.84it/s] 13%|█▎        | 71786/552076 [00:00<00:02, 170807.91it/s] 16%|█▌        | 87191/552076 [00:00<00:02, 165407.33it/s] 18%|█▊        | 102054/552076 [00:00<00:02, 159987.04it/s] 22%|██▏       | 121836/552076 [00:00<00:02, 169724.81it/s] 26%|██▌       | 141841/552076 [00:00<00:02, 177808.69it/s] 29%|██▉       | 161488/552076 [00:00<00:02, 183023.62it/s] 33%|███▎      | 179767/552076 [00:01<00:02, 182951.69it/s] 36%|███▌      | 199294/552076 [00:01<00:01, 186480.52it/s] 40%|███▉      | 218488/552076 [00:01<00:01, 188085.13it/s] 43%|████▎     | 237582/552076 [00:01<00:01, 188930.10it/s] 47%|████▋     | 257157/552076 [00:01<00:01, 190924.63it/s] 50%|█████     | 277024/552076 [00:01<00:01, 193181.18it/s] 54%|█████▎    | 296323/552076 [00:01<00:01, 192578.28it/s] 57%|█████▋    | 315924/552076 [00:01<00:01, 193594.21it/s] 61%|██████    | 335276/552076 [00:01<00:01, 184325.93it/s] 64%|██████▍   | 353797/552076 [00:01<00:01, 163796.35it/s] 68%|██████▊   | 373335/552076 [00:02<00:01, 172144.56it/s] 71%|███████   | 393289/552076 [00:02<00:00, 179538.19it/s] 75%|███████▍  | 413432/552076 [00:02<00:00, 185587.46it/s] 78%|███████▊  | 432322/552076 [00:02<00:00, 167784.58it/s] 81%|████████▏ | 449658/552076 [00:02<00:00, 120660.93it/s] 84%|████████▍ | 466134/552076 [00:02<00:00, 131195.33it/s] 87%|████████▋ | 481102/552076 [00:02<00:00, 133772.41it/s] 91%|█████████ | 500565/552076 [00:02<00:00, 147618.57it/s] 94%|█████████▍| 520414/552076 [00:03<00:00, 159912.45it/s] 98%|█████████▊| 540438/552076 [00:03<00:00, 170193.23it/s]100%|██████████| 552076/552076 [00:03<00:00, 172463.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12404/552076 [00:00<00:04, 124037.46it/s]  6%|▌         | 31536/552076 [00:00<00:03, 138665.88it/s]  9%|▉         | 51478/552076 [00:00<00:03, 152612.86it/s] 13%|█▎        | 70437/552076 [00:00<00:02, 162095.53it/s] 16%|█▋        | 90013/552076 [00:00<00:02, 170910.80it/s] 20%|█▉        | 108943/552076 [00:00<00:02, 176040.39it/s] 24%|██▎       | 130774/552076 [00:00<00:02, 186896.28it/s] 27%|██▋       | 148966/552076 [00:00<00:02, 184527.13it/s] 30%|███       | 167077/552076 [00:00<00:02, 172675.66it/s] 33%|███▎      | 184260/552076 [00:01<00:02, 152848.07it/s] 36%|███▌      | 199905/552076 [00:01<00:02, 132334.15it/s] 40%|███▉      | 219053/552076 [00:01<00:02, 145846.82it/s] 42%|████▏     | 234579/552076 [00:01<00:02, 110405.49it/s] 45%|████▍     | 247634/552076 [00:01<00:02, 115763.10it/s] 47%|████▋     | 260638/552076 [00:01<00:02, 105002.92it/s] 49%|████▉     | 272330/552076 [00:01<00:02, 106798.01it/s] 51%|█████▏    | 283851/552076 [00:02<00:02, 94619.95it/s]  55%|█████▍    | 302988/552076 [00:02<00:02, 111536.09it/s] 58%|█████▊    | 320682/552076 [00:02<00:01, 125444.99it/s] 61%|██████    | 335059/552076 [00:02<00:02, 90801.09it/s]  63%|██████▎   | 350304/552076 [00:02<00:01, 103336.35it/s] 66%|██████▌   | 363082/552076 [00:02<00:01, 100539.23it/s] 68%|██████▊   | 374864/552076 [00:02<00:01, 103783.69it/s] 72%|███████▏  | 395270/552076 [00:02<00:01, 121728.21it/s] 75%|███████▍  | 412770/552076 [00:03<00:01, 133718.41it/s] 78%|███████▊  | 427955/552076 [00:03<00:01, 122610.64it/s] 81%|████████  | 445503/552076 [00:03<00:00, 134792.73it/s] 84%|████████▍ | 465346/552076 [00:03<00:00, 149140.91it/s] 88%|████████▊ | 484758/552076 [00:03<00:00, 160281.32it/s] 91%|█████████ | 503692/552076 [00:03<00:00, 168015.73it/s] 94%|█████████▍| 521463/552076 [00:03<00:00, 155041.09it/s] 98%|█████████▊| 542987/552076 [00:03<00:00, 169239.67it/s]100%|██████████| 552076/552076 [00:03<00:00, 142372.25it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22089/552076 [00:00<00:02, 220881.26it/s]  8%|▊         | 42421/552076 [00:00<00:02, 215300.67it/s] 12%|█▏        | 64294/552076 [00:00<00:02, 216316.35it/s] 16%|█▌        | 85798/552076 [00:00<00:02, 215930.68it/s] 19%|█▉        | 106123/552076 [00:00<00:02, 211962.03it/s] 23%|██▎       | 125718/552076 [00:00<00:02, 206888.88it/s] 27%|██▋       | 146583/552076 [00:00<00:01, 207411.34it/s] 30%|███       | 167194/552076 [00:00<00:01, 207018.39it/s] 34%|███▍      | 188395/552076 [00:00<00:01, 208488.43it/s] 38%|███▊      | 208599/552076 [00:01<00:01, 206508.74it/s] 41%|████▏     | 228644/552076 [00:01<00:01, 196773.30it/s] 45%|████▍     | 247994/552076 [00:01<00:01, 179922.91it/s] 49%|████▊     | 267936/552076 [00:01<00:01, 185357.96it/s] 52%|█████▏    | 287994/552076 [00:01<00:01, 189674.84it/s] 56%|█████▌    | 307370/552076 [00:01<00:01, 190879.68it/s] 59%|█████▉    | 326657/552076 [00:01<00:01, 191472.10it/s] 63%|██████▎   | 346007/552076 [00:01<00:01, 192074.82it/s] 66%|██████▋   | 365881/552076 [00:01<00:00, 194025.11it/s] 70%|██████▉   | 385309/552076 [00:01<00:00, 183473.40it/s] 73%|███████▎  | 403793/552076 [00:02<00:00, 172822.74it/s] 77%|███████▋  | 423449/552076 [00:02<00:00, 179317.36it/s] 80%|████████  | 443528/552076 [00:02<00:00, 185259.29it/s] 84%|████████▍ | 463712/552076 [00:02<00:00, 189939.52it/s] 88%|████████▊ | 483422/552076 [00:02<00:00, 192029.54it/s] 91%|█████████ | 502977/552076 [00:02<00:00, 193070.72it/s] 95%|█████████▍| 522374/552076 [00:02<00:00, 192403.22it/s] 98%|█████████▊| 541678/552076 [00:02<00:00, 190718.04it/s]100%|██████████| 552076/552076 [00:02<00:00, 194520.24it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5312/552076 [00:00<00:10, 53118.78it/s]  4%|▍         | 24829/552076 [00:00<00:07, 67956.39it/s]  6%|▌         | 31799/552076 [00:00<00:08, 63228.01it/s]  8%|▊         | 45021/552076 [00:00<00:06, 74048.90it/s] 10%|▉         | 53771/552076 [00:00<00:06, 77626.41it/s] 11%|█▏        | 63071/552076 [00:00<00:06, 80245.44it/s] 13%|█▎        | 71567/552076 [00:00<00:05, 80222.12it/s] 14%|█▍        | 79920/552076 [00:00<00:06, 70907.49it/s] 16%|█▌        | 88298/552076 [00:00<00:06, 74333.19it/s] 19%|█▉        | 106977/552076 [00:01<00:04, 90717.64it/s] 21%|██▏       | 118025/552076 [00:01<00:05, 84133.78it/s] 23%|██▎       | 129406/552076 [00:01<00:04, 91273.54it/s] 25%|██▌       | 139745/552076 [00:01<00:04, 90316.89it/s] 27%|██▋       | 149648/552076 [00:01<00:04, 92764.69it/s] 29%|██▉       | 162045/552076 [00:01<00:03, 100340.88it/s] 33%|███▎      | 183654/552076 [00:01<00:03, 119551.85it/s] 37%|███▋      | 204445/552076 [00:01<00:02, 137020.48it/s] 40%|███▉      | 220434/552076 [00:01<00:02, 138931.50it/s] 43%|████▎     | 238539/552076 [00:02<00:02, 149353.58it/s] 47%|████▋     | 257751/552076 [00:02<00:01, 160041.11it/s] 50%|█████     | 277353/552076 [00:02<00:01, 169366.37it/s] 54%|█████▎    | 296547/552076 [00:02<00:01, 175558.42it/s] 57%|█████▋    | 314830/552076 [00:02<00:01, 177320.78it/s] 61%|██████    | 334672/552076 [00:02<00:01, 183161.98it/s] 64%|██████▍   | 353906/552076 [00:02<00:01, 185821.10it/s] 68%|██████▊   | 373927/552076 [00:02<00:00, 189913.81it/s] 72%|███████▏  | 395421/552076 [00:02<00:00, 196786.11it/s] 76%|███████▌  | 418032/552076 [00:02<00:00, 204752.11it/s] 79%|███████▉  | 438747/552076 [00:03<00:00, 203183.56it/s] 83%|████████▎ | 459236/552076 [00:03<00:00, 198446.08it/s] 87%|████████▋ | 479225/552076 [00:03<00:00, 193048.39it/s] 90%|█████████ | 498663/552076 [00:03<00:00, 192041.84it/s] 94%|█████████▍| 518164/552076 [00:03<00:00, 192921.44it/s] 97%|█████████▋| 537524/552076 [00:03<00:00, 161771.42it/s]100%|██████████| 552076/552076 [00:03<00:00, 147065.94it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14167/552076 [00:00<00:03, 141658.65it/s]  4%|▍         | 21233/552076 [00:00<00:04, 108845.58it/s]  5%|▌         | 29402/552076 [00:00<00:05, 98973.95it/s]   9%|▉         | 48958/552076 [00:00<00:04, 116188.56it/s] 13%|█▎        | 69033/552076 [00:00<00:03, 132993.60it/s] 16%|█▌        | 89137/552076 [00:00<00:03, 148022.53it/s] 19%|█▉        | 104322/552076 [00:00<00:03, 148022.61it/s] 22%|██▏       | 120650/552076 [00:00<00:02, 152291.12it/s] 25%|██▌       | 140226/552076 [00:00<00:02, 163159.29it/s] 29%|██▉       | 159887/552076 [00:01<00:02, 171933.28it/s] 33%|███▎      | 180460/552076 [00:01<00:02, 180845.75it/s] 37%|███▋      | 202344/552076 [00:01<00:01, 190780.45it/s] 40%|████      | 222332/552076 [00:01<00:01, 193421.50it/s] 44%|████▍     | 241978/552076 [00:01<00:01, 173099.81it/s] 47%|████▋     | 259901/552076 [00:01<00:02, 141496.46it/s] 50%|████▉     | 275424/552076 [00:01<00:01, 140913.07it/s] 53%|█████▎    | 290477/552076 [00:01<00:02, 120300.31it/s] 56%|█████▌    | 306618/552076 [00:02<00:01, 130250.64it/s] 58%|█████▊    | 320720/552076 [00:02<00:01, 131871.89it/s] 61%|██████    | 335358/552076 [00:02<00:01, 135911.34it/s] 63%|██████▎   | 349511/552076 [00:02<00:01, 125560.42it/s] 66%|██████▌   | 362617/552076 [00:02<00:02, 88517.05it/s]  68%|██████▊   | 373364/552076 [00:02<00:01, 92610.76it/s] 70%|██████▉   | 384002/552076 [00:02<00:01, 84689.63it/s] 71%|███████▏  | 394136/552076 [00:02<00:01, 88205.53it/s] 74%|███████▍  | 408382/552076 [00:03<00:01, 99582.33it/s] 78%|███████▊  | 429025/552076 [00:03<00:01, 117887.26it/s] 81%|████████▏ | 449633/552076 [00:03<00:00, 135251.42it/s] 84%|████████▍ | 465546/552076 [00:03<00:00, 128695.56it/s] 88%|████████▊ | 484058/552076 [00:03<00:00, 141646.29it/s] 91%|█████████▏| 504066/552076 [00:03<00:00, 155247.89it/s] 96%|█████████▌| 527637/552076 [00:03<00:00, 172959.04it/s]100%|█████████▉| 550276/552076 [00:03<00:00, 186137.96it/s]100%|██████████| 552076/552076 [00:03<00:00, 145519.48it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22222/552076 [00:00<00:02, 222217.56it/s]  8%|▊         | 45553/552076 [00:00<00:02, 225432.23it/s] 12%|█▏        | 67852/552076 [00:00<00:02, 224692.73it/s] 17%|█▋        | 91272/552076 [00:00<00:02, 227460.56it/s] 21%|██        | 113232/552076 [00:00<00:01, 225043.17it/s] 24%|██▍       | 134070/552076 [00:00<00:01, 219768.53it/s] 28%|██▊       | 155080/552076 [00:00<00:01, 216772.52it/s] 32%|███▏      | 175628/552076 [00:00<00:01, 213255.66it/s] 35%|███▌      | 195711/552076 [00:00<00:01, 208715.40it/s] 39%|███▉      | 215734/552076 [00:01<00:01, 196077.00it/s] 43%|████▎     | 234905/552076 [00:01<00:01, 190283.69it/s] 46%|████▌     | 254057/552076 [00:01<00:01, 190651.60it/s] 49%|████▉     | 272935/552076 [00:01<00:01, 189682.20it/s] 53%|█████▎    | 291773/552076 [00:01<00:01, 169476.84it/s] 56%|█████▌    | 310241/552076 [00:01<00:01, 173766.13it/s] 60%|█████▉    | 330159/552076 [00:01<00:01, 180680.64it/s] 63%|██████▎   | 350007/552076 [00:01<00:01, 185674.29it/s] 67%|██████▋   | 369045/552076 [00:01<00:00, 187059.34it/s] 70%|███████   | 388801/552076 [00:01<00:00, 190088.65it/s] 74%|███████▍  | 407924/552076 [00:02<00:00, 169779.27it/s] 78%|███████▊  | 427980/552076 [00:02<00:00, 177971.69it/s] 81%|████████  | 447768/552076 [00:02<00:00, 183510.40it/s] 85%|████████▍ | 467727/552076 [00:02<00:00, 188053.15it/s] 88%|████████▊ | 487589/552076 [00:02<00:00, 191102.23it/s] 92%|█████████▏| 507663/552076 [00:02<00:00, 193893.02it/s] 96%|█████████▌| 527784/552076 [00:02<00:00, 196031.13it/s] 99%|█████████▉| 548271/552076 [00:02<00:00, 198600.33it/s]100%|██████████| 552076/552076 [00:02<00:00, 195475.25it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21224/552076 [00:00<00:02, 212234.64it/s]  8%|▊         | 41480/552076 [00:00<00:02, 209234.48it/s] 11%|█         | 61979/552076 [00:00<00:02, 207942.25it/s] 14%|█▎        | 75503/552076 [00:00<00:03, 154322.42it/s] 18%|█▊        | 96806/552076 [00:00<00:02, 168230.20it/s] 21%|██        | 115931/552076 [00:00<00:02, 174532.41it/s] 24%|██▍       | 133968/552076 [00:00<00:02, 176242.32it/s] 28%|██▊       | 151992/552076 [00:00<00:02, 177420.68it/s] 31%|███       | 169157/552076 [00:00<00:02, 161780.38it/s] 34%|███▎      | 185198/552076 [00:01<00:02, 148002.06it/s] 36%|███▋      | 200131/552076 [00:01<00:02, 146063.07it/s] 40%|███▉      | 219909/552076 [00:01<00:02, 158496.10it/s] 43%|████▎     | 239932/552076 [00:01<00:01, 169066.84it/s] 47%|████▋     | 257298/552076 [00:01<00:01, 169540.53it/s] 50%|████▉     | 274574/552076 [00:01<00:01, 161357.22it/s] 53%|█████▎    | 291018/552076 [00:01<00:02, 126049.22it/s] 55%|█████▌    | 305032/552076 [00:01<00:02, 113740.38it/s] 58%|█████▊    | 317621/552076 [00:02<00:02, 94541.08it/s]  59%|█████▉    | 328468/552076 [00:02<00:02, 90311.20it/s] 62%|██████▏   | 341507/552076 [00:02<00:02, 99483.77it/s] 64%|██████▍   | 354200/552076 [00:02<00:01, 106383.00it/s] 66%|██████▋   | 366113/552076 [00:02<00:01, 109908.89it/s] 68%|██████▊   | 377715/552076 [00:02<00:01, 111526.76it/s] 71%|███████   | 389301/552076 [00:02<00:01, 103894.52it/s] 72%|███████▏  | 400099/552076 [00:02<00:01, 93746.50it/s]  75%|███████▍  | 411363/552076 [00:03<00:01, 95976.91it/s] 76%|███████▋  | 421306/552076 [00:03<00:01, 82931.08it/s] 79%|███████▉  | 435448/552076 [00:03<00:01, 94677.94it/s] 82%|████████▏ | 454457/552076 [00:03<00:00, 111461.00it/s] 86%|████████▌ | 473077/552076 [00:03<00:00, 126718.86it/s] 88%|████████▊ | 487769/552076 [00:03<00:00, 122950.05it/s] 92%|█████████▏| 505240/552076 [00:03<00:00, 134942.27it/s] 95%|█████████▌| 526145/552076 [00:03<00:00, 151001.09it/s] 99%|█████████▉| 546419/552076 [00:03<00:00, 163518.07it/s]100%|██████████| 552076/552076 [00:03<00:00, 138320.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19457/552076 [00:00<00:02, 194559.98it/s]  6%|▌         | 32230/552076 [00:00<00:03, 168158.16it/s]  8%|▊         | 43533/552076 [00:00<00:03, 146689.99it/s] 11%|█         | 61290/552076 [00:00<00:03, 154763.26it/s] 15%|█▍        | 80595/552076 [00:00<00:02, 164552.47it/s] 18%|█▊        | 100372/552076 [00:00<00:02, 173281.90it/s] 22%|██▏       | 118989/552076 [00:00<00:02, 176954.03it/s] 25%|██▌       | 139277/552076 [00:00<00:02, 184007.43it/s] 29%|██▊       | 158106/552076 [00:00<00:02, 185268.92it/s] 32%|███▏      | 177763/552076 [00:01<00:01, 188519.69it/s] 36%|███▌      | 196272/552076 [00:01<00:01, 182428.29it/s] 39%|███▉      | 214318/552076 [00:01<00:01, 177762.19it/s] 42%|████▏     | 232264/552076 [00:01<00:01, 178264.27it/s] 45%|████▌     | 250013/552076 [00:01<00:01, 163582.75it/s] 49%|████▊     | 269012/552076 [00:01<00:01, 170700.20it/s] 52%|█████▏    | 287571/552076 [00:01<00:01, 174908.72it/s] 56%|█████▌    | 306826/552076 [00:01<00:01, 179849.86it/s] 59%|█████▉    | 326922/552076 [00:01<00:01, 185701.74it/s] 63%|██████▎   | 346498/552076 [00:01<00:01, 188607.23it/s] 66%|██████▌   | 365480/552076 [00:02<00:01, 172261.27it/s] 69%|██████▉   | 383066/552076 [00:02<00:01, 166912.20it/s] 73%|███████▎  | 403234/552076 [00:02<00:00, 176015.17it/s] 77%|███████▋  | 422869/552076 [00:02<00:00, 181658.03it/s] 80%|████████  | 442500/552076 [00:02<00:00, 185815.99it/s] 84%|████████▎ | 461340/552076 [00:02<00:00, 186582.72it/s] 87%|████████▋ | 480547/552076 [00:02<00:00, 188194.43it/s] 91%|█████████ | 499657/552076 [00:02<00:00, 189054.56it/s] 94%|█████████▍| 518642/552076 [00:02<00:00, 189132.04it/s] 97%|█████████▋| 537669/552076 [00:02<00:00, 189468.54it/s]100%|██████████| 552076/552076 [00:03<00:00, 179956.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11318/552076 [00:00<00:04, 113174.71it/s]  4%|▍         | 22298/552076 [00:00<00:04, 112139.19it/s]  6%|▌         | 30570/552076 [00:00<00:05, 101328.01it/s]  7%|▋         | 39367/552076 [00:00<00:05, 96912.62it/s]   9%|▉         | 51327/552076 [00:00<00:04, 102759.99it/s] 12%|█▏        | 63603/552076 [00:00<00:04, 108039.58it/s] 14%|█▎        | 75205/552076 [00:00<00:04, 110315.28it/s] 15%|█▌        | 85476/552076 [00:00<00:04, 97758.00it/s]  17%|█▋        | 94983/552076 [00:01<00:06, 66023.69it/s] 19%|█▉        | 106178/552076 [00:01<00:05, 75288.70it/s] 21%|██        | 114984/552076 [00:01<00:06, 64005.63it/s] 22%|██▏       | 122571/552076 [00:01<00:06, 65596.80it/s] 24%|██▍       | 132869/552076 [00:01<00:05, 73613.35it/s] 26%|██▌       | 141139/552076 [00:01<00:05, 73336.56it/s] 27%|██▋       | 149480/552076 [00:01<00:05, 76091.79it/s] 29%|██▊       | 157561/552076 [00:01<00:05, 70070.20it/s] 30%|███       | 166888/552076 [00:02<00:05, 75719.71it/s] 32%|███▏      | 175908/552076 [00:02<00:04, 79550.30it/s] 33%|███▎      | 184214/552076 [00:02<00:04, 79798.11it/s] 35%|███▌      | 195631/552076 [00:02<00:04, 87111.60it/s] 38%|███▊      | 210479/552076 [00:02<00:03, 99440.96it/s] 41%|████▏     | 228601/552076 [00:02<00:02, 115011.09it/s] 44%|████▍     | 241606/552076 [00:02<00:02, 117204.84it/s] 47%|████▋     | 260753/552076 [00:02<00:02, 132637.66it/s] 51%|█████     | 280081/552076 [00:02<00:01, 146419.05it/s] 54%|█████▍    | 299879/552076 [00:02<00:01, 158827.52it/s] 58%|█████▊    | 319123/552076 [00:03<00:01, 167609.61it/s] 61%|██████    | 336935/552076 [00:03<00:01, 157642.84it/s] 64%|██████▍   | 353556/552076 [00:03<00:01, 156376.25it/s] 68%|██████▊   | 374871/552076 [00:03<00:01, 169956.22it/s] 71%|███████▏  | 394397/552076 [00:03<00:00, 176828.53it/s] 75%|███████▌  | 415283/552076 [00:03<00:00, 185356.30it/s] 79%|███████▉  | 435434/552076 [00:03<00:00, 189921.26it/s] 83%|████████▎ | 456231/552076 [00:03<00:00, 194995.20it/s] 87%|████████▋ | 477633/552076 [00:03<00:00, 200337.55it/s] 90%|█████████ | 497924/552076 [00:03<00:00, 198672.76it/s] 94%|█████████▍| 517975/552076 [00:04<00:00, 198575.67it/s] 97%|█████████▋| 537961/552076 [00:04<00:00, 192407.13it/s]100%|██████████| 552076/552076 [00:04<00:00, 127285.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 13997/552076 [00:00<00:03, 139963.79it/s]  6%|▌         | 33137/552076 [00:00<00:03, 152236.23it/s] 10%|▉         | 52731/552076 [00:00<00:03, 163152.74it/s] 13%|█▎        | 71570/552076 [00:00<00:02, 169982.06it/s] 16%|█▌        | 85623/552076 [00:00<00:02, 159926.68it/s] 18%|█▊        | 101731/552076 [00:00<00:02, 160270.53it/s] 22%|██▏       | 121311/552076 [00:00<00:02, 169495.37it/s] 26%|██▌       | 141508/552076 [00:00<00:02, 178085.14it/s] 29%|██▉       | 161910/552076 [00:00<00:02, 185145.62it/s] 33%|███▎      | 181861/552076 [00:01<00:01, 189232.75it/s] 37%|███▋      | 201666/552076 [00:01<00:01, 191793.50it/s] 40%|████      | 222706/552076 [00:01<00:01, 197018.17it/s] 44%|████▍     | 242375/552076 [00:01<00:01, 175299.33it/s] 47%|████▋     | 260327/552076 [00:01<00:02, 133485.60it/s] 50%|████▉     | 275466/552076 [00:01<00:02, 128315.18it/s] 52%|█████▏    | 289594/552076 [00:01<00:02, 123850.08it/s] 55%|█████▍    | 302920/552076 [00:01<00:02, 109775.52it/s] 58%|█████▊    | 321400/552076 [00:02<00:01, 124999.08it/s] 61%|██████    | 335296/552076 [00:02<00:01, 125213.28it/s] 63%|██████▎   | 348795/552076 [00:02<00:01, 106972.09it/s] 67%|██████▋   | 367889/552076 [00:02<00:01, 123229.06it/s] 69%|██████▉   | 381908/552076 [00:02<00:01, 107078.00it/s] 71%|███████▏  | 394182/552076 [00:02<00:01, 93379.03it/s]  75%|███████▍  | 413035/552076 [00:02<00:01, 110039.57it/s] 78%|███████▊  | 432671/552076 [00:02<00:00, 126756.26it/s] 81%|████████  | 447788/552076 [00:03<00:00, 121128.20it/s] 84%|████████▎ | 461663/552076 [00:03<00:00, 105970.02it/s] 86%|████████▌ | 473836/552076 [00:03<00:00, 99573.71it/s]  89%|████████▉ | 491770/552076 [00:03<00:00, 114905.19it/s] 92%|█████████▏| 510471/552076 [00:03<00:00, 129933.61it/s] 96%|█████████▋| 531469/552076 [00:03<00:00, 146710.36it/s]100%|██████████| 552076/552076 [00:03<00:00, 144559.57it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16991/552076 [00:00<00:03, 169903.28it/s]  7%|▋         | 36472/552076 [00:00<00:02, 176678.69it/s] 10%|█         | 56002/552076 [00:00<00:02, 181879.24it/s] 14%|█▎        | 75691/552076 [00:00<00:02, 186135.56it/s] 17%|█▋        | 93692/552076 [00:00<00:02, 184253.13it/s] 20%|██        | 112750/552076 [00:00<00:02, 186104.74it/s] 23%|██▎       | 129411/552076 [00:00<00:02, 175078.48it/s] 26%|██▋       | 145689/552076 [00:00<00:02, 140967.74it/s] 30%|██▉       | 163033/552076 [00:00<00:02, 149354.83it/s] 33%|███▎      | 182415/552076 [00:01<00:02, 160393.22it/s] 37%|███▋      | 201793/552076 [00:01<00:02, 169134.21it/s] 40%|████      | 221502/552076 [00:01<00:01, 176651.15it/s] 44%|████▎     | 240159/552076 [00:01<00:01, 179511.23it/s] 47%|████▋     | 258391/552076 [00:01<00:01, 162556.66it/s] 50%|████▉     | 275177/552076 [00:01<00:01, 164111.72it/s] 53%|█████▎    | 291944/552076 [00:01<00:01, 164634.24it/s] 56%|█████▋    | 311107/552076 [00:01<00:01, 171897.59it/s] 60%|█████▉    | 329332/552076 [00:01<00:01, 174876.41it/s] 63%|██████▎   | 348812/552076 [00:02<00:01, 180410.39it/s] 67%|██████▋   | 368982/552076 [00:02<00:00, 186308.27it/s] 70%|███████   | 388935/552076 [00:02<00:00, 190084.40it/s] 74%|███████▍  | 408085/552076 [00:02<00:00, 188334.78it/s] 77%|███████▋  | 427544/552076 [00:02<00:00, 190167.83it/s] 81%|████████  | 447120/552076 [00:02<00:00, 191811.03it/s] 85%|████████▍ | 466842/552076 [00:02<00:00, 193400.33it/s] 88%|████████▊ | 486554/552076 [00:02<00:00, 194500.22it/s] 92%|█████████▏| 506036/552076 [00:02<00:00, 192992.55it/s] 95%|█████████▌| 525360/552076 [00:02<00:00, 182561.52it/s] 98%|█████████▊| 543751/552076 [00:03<00:00, 153856.05it/s]100%|██████████| 552076/552076 [00:03<00:00, 175474.77it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17319/552076 [00:00<00:03, 173183.97it/s]  5%|▍         | 26466/552076 [00:00<00:03, 136574.95it/s]  6%|▋         | 35848/552076 [00:00<00:04, 120146.45it/s]  9%|▉         | 51137/552076 [00:00<00:03, 128394.89it/s] 12%|█▏        | 65282/552076 [00:00<00:03, 132049.98it/s] 14%|█▍        | 76304/552076 [00:00<00:04, 106314.15it/s] 16%|█▌        | 86212/552076 [00:00<00:04, 99130.63it/s]  18%|█▊        | 96937/552076 [00:00<00:04, 101351.77it/s] 19%|█▉        | 106799/552076 [00:00<00:04, 97953.42it/s] 21%|██        | 116428/552076 [00:01<00:05, 85020.65it/s] 23%|██▎       | 128848/552076 [00:01<00:04, 93906.67it/s] 25%|██▌       | 138657/552076 [00:01<00:04, 84009.04it/s] 28%|██▊       | 154707/552076 [00:01<00:04, 98023.47it/s] 31%|███       | 169485/552076 [00:01<00:03, 109035.90it/s] 33%|███▎      | 181645/552076 [00:01<00:03, 92755.83it/s]  35%|███▌      | 194123/552076 [00:01<00:03, 99555.25it/s] 37%|███▋      | 205129/552076 [00:02<00:03, 87831.82it/s] 40%|████      | 223012/552076 [00:02<00:03, 103654.55it/s] 43%|████▎     | 235217/552076 [00:02<00:03, 99018.57it/s]  45%|████▌     | 248902/552076 [00:02<00:02, 107971.16it/s] 48%|████▊     | 263470/552076 [00:02<00:02, 117060.35it/s] 51%|█████     | 282926/552076 [00:02<00:02, 132947.40it/s] 55%|█████▍    | 301472/552076 [00:02<00:01, 145287.92it/s] 58%|█████▊    | 321860/552076 [00:02<00:01, 158995.60it/s] 62%|██████▏   | 342626/552076 [00:02<00:01, 171018.65it/s] 65%|██████▌   | 360927/552076 [00:02<00:01, 160906.59it/s] 69%|██████▉   | 379861/552076 [00:03<00:01, 168497.57it/s] 72%|███████▏  | 399540/552076 [00:03<00:00, 176091.30it/s] 76%|███████▌  | 420053/552076 [00:03<00:00, 183898.93it/s] 80%|███████▉  | 440003/552076 [00:03<00:00, 188315.92it/s] 83%|████████▎ | 459524/552076 [00:03<00:00, 190329.60it/s] 87%|████████▋ | 478840/552076 [00:03<00:00, 183401.16it/s] 90%|█████████ | 497433/552076 [00:03<00:00, 181278.04it/s] 93%|█████████▎| 515878/552076 [00:03<00:00, 182215.46it/s] 97%|█████████▋| 535377/552076 [00:03<00:00, 185866.45it/s]100%|██████████| 552076/552076 [00:04<00:00, 137683.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19569/552076 [00:00<00:02, 195688.32it/s]  7%|▋         | 39019/552076 [00:00<00:02, 195327.69it/s] 11%|█         | 58000/552076 [00:00<00:02, 193637.35it/s] 14%|█▍        | 77593/552076 [00:00<00:02, 194316.79it/s] 18%|█▊        | 96825/552076 [00:00<00:02, 193710.54it/s] 20%|██        | 112910/552076 [00:00<00:02, 172997.49it/s] 24%|██▎       | 130934/552076 [00:00<00:02, 175108.07it/s] 27%|██▋       | 151329/552076 [00:00<00:02, 182866.10it/s] 31%|███       | 171647/552076 [00:00<00:02, 188518.25it/s] 35%|███▍      | 191578/552076 [00:01<00:01, 191628.85it/s] 38%|███▊      | 211464/552076 [00:01<00:01, 193741.88it/s] 42%|████▏     | 231356/552076 [00:01<00:01, 195264.65it/s] 46%|████▌     | 251623/552076 [00:01<00:01, 197427.76it/s] 49%|████▉     | 271292/552076 [00:01<00:01, 197204.35it/s] 53%|█████▎    | 290933/552076 [00:01<00:01, 192888.26it/s] 56%|█████▌    | 310187/552076 [00:01<00:01, 191030.50it/s] 60%|█████▉    | 329645/552076 [00:01<00:01, 192080.92it/s] 63%|██████▎   | 348841/552076 [00:01<00:01, 174970.28it/s] 66%|██████▋   | 366624/552076 [00:01<00:01, 161969.38it/s] 70%|██████▉   | 385495/552076 [00:02<00:00, 169160.12it/s] 74%|███████▎  | 405825/552076 [00:02<00:00, 178132.75it/s] 77%|███████▋  | 425937/552076 [00:02<00:00, 184454.49it/s] 81%|████████  | 445076/552076 [00:02<00:00, 186478.46it/s] 84%|████████▍ | 463954/552076 [00:02<00:00, 186877.21it/s] 87%|████████▋ | 482803/552076 [00:02<00:00, 151108.17it/s] 91%|█████████ | 502805/552076 [00:02<00:00, 163070.98it/s] 95%|█████████▍| 523639/552076 [00:02<00:00, 174440.83it/s] 98%|█████████▊| 542826/552076 [00:02<00:00, 179325.55it/s]100%|██████████| 552076/552076 [00:03<00:00, 177156.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10094/552076 [00:00<00:05, 100933.12it/s]  5%|▍         | 25206/552076 [00:00<00:04, 112100.70it/s]  8%|▊         | 43981/552076 [00:00<00:03, 127508.98it/s] 10%|▉         | 54270/552076 [00:00<00:05, 94858.53it/s]  13%|█▎        | 72019/552076 [00:00<00:04, 110256.77it/s] 15%|█▌        | 83632/552076 [00:00<00:04, 95931.78it/s]  17%|█▋        | 94929/552076 [00:00<00:04, 100474.73it/s] 19%|█▉        | 105554/552076 [00:00<00:05, 85765.43it/s] 22%|██▏       | 119713/552076 [00:01<00:04, 97269.69it/s] 24%|██▎       | 130510/552076 [00:01<00:04, 90065.91it/s] 26%|██▌       | 141664/552076 [00:01<00:04, 95585.98it/s] 28%|██▊       | 151913/552076 [00:01<00:04, 88050.60it/s] 31%|███       | 169749/552076 [00:01<00:03, 103820.46it/s] 34%|███▎      | 185375/552076 [00:01<00:03, 115441.90it/s] 36%|███▌      | 198417/552076 [00:01<00:03, 116758.79it/s] 39%|███▊      | 212702/552076 [00:01<00:02, 123526.65it/s] 42%|████▏     | 231898/552076 [00:01<00:02, 138318.91it/s] 46%|████▌     | 251658/552076 [00:02<00:01, 151997.69it/s] 49%|████▉     | 271919/552076 [00:02<00:01, 164310.72it/s] 53%|█████▎    | 291540/552076 [00:02<00:01, 172735.52it/s] 56%|█████▌    | 310520/552076 [00:02<00:01, 177523.43it/s] 60%|██████    | 331830/552076 [00:02<00:01, 186880.95it/s] 64%|██████▍   | 355214/552076 [00:02<00:00, 198859.48it/s] 68%|██████▊   | 375733/552076 [00:02<00:00, 200626.20it/s] 72%|███████▏  | 396774/552076 [00:02<00:00, 203462.11it/s] 76%|███████▌  | 417443/552076 [00:02<00:00, 203662.23it/s] 80%|███████▉  | 439331/552076 [00:02<00:00, 207999.85it/s] 83%|████████▎ | 460312/552076 [00:03<00:00, 205553.15it/s] 87%|████████▋ | 481389/552076 [00:03<00:00, 207090.51it/s] 91%|█████████ | 502194/552076 [00:03<00:00, 200345.16it/s] 95%|█████████▍| 522344/552076 [00:03<00:00, 191617.49it/s] 98%|█████████▊| 541667/552076 [00:03<00:00, 177194.50it/s]100%|██████████| 552076/552076 [00:03<00:00, 153436.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18891/552076 [00:00<00:02, 188907.93it/s]  7%|▋         | 37812/552076 [00:00<00:02, 188997.56it/s] 10%|█         | 57378/552076 [00:00<00:02, 190946.34it/s] 14%|█▎        | 74988/552076 [00:00<00:02, 186235.15it/s] 16%|█▌        | 89105/552076 [00:00<00:02, 166942.62it/s] 20%|█▉        | 107984/552076 [00:00<00:02, 172944.58it/s] 23%|██▎       | 126715/552076 [00:00<00:02, 177014.93it/s] 26%|██▋       | 146084/552076 [00:00<00:02, 181707.06it/s] 30%|██▉       | 165389/552076 [00:00<00:02, 184965.37it/s] 33%|███▎      | 184479/552076 [00:01<00:01, 186703.83it/s] 37%|███▋      | 203600/552076 [00:01<00:01, 188030.36it/s] 41%|████      | 223657/552076 [00:01<00:01, 191624.00it/s] 44%|████▍     | 242634/552076 [00:01<00:01, 190761.29it/s] 47%|████▋     | 261581/552076 [00:01<00:01, 189878.54it/s] 51%|█████     | 281741/552076 [00:01<00:01, 193246.73it/s] 55%|█████▍    | 301018/552076 [00:01<00:01, 191086.39it/s] 58%|█████▊    | 320099/552076 [00:01<00:01, 171551.15it/s] 62%|██████▏   | 340779/552076 [00:01<00:01, 180795.81it/s] 65%|██████▌   | 360865/552076 [00:01<00:01, 186380.11it/s] 69%|██████▉   | 380441/552076 [00:02<00:00, 189097.98it/s] 72%|███████▏  | 399579/552076 [00:02<00:00, 187823.29it/s] 76%|███████▌  | 418523/552076 [00:02<00:00, 182787.36it/s] 79%|███████▉  | 436945/552076 [00:02<00:00, 166964.42it/s] 82%|████████▏ | 454008/552076 [00:02<00:00, 150056.70it/s] 85%|████████▌ | 469593/552076 [00:02<00:00, 150323.22it/s] 88%|████████▊ | 485031/552076 [00:02<00:00, 142681.76it/s] 91%|█████████ | 499665/552076 [00:02<00:00, 130048.56it/s] 93%|█████████▎| 513142/552076 [00:03<00:00, 88636.29it/s]  95%|█████████▌| 524926/552076 [00:03<00:00, 95753.82it/s] 97%|█████████▋| 536133/552076 [00:03<00:00, 77585.58it/s] 99%|█████████▉| 546604/552076 [00:03<00:00, 84122.37it/s]100%|██████████| 552076/552076 [00:03<00:00, 153420.28it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5080/552076 [00:00<00:11, 49524.02it/s]  1%|▏         | 8228/552076 [00:00<00:12, 42256.30it/s]  2%|▏         | 12845/552076 [00:00<00:13, 41446.74it/s]  3%|▎         | 17217/552076 [00:00<00:12, 42101.98it/s]  5%|▌         | 27928/552076 [00:00<00:10, 51474.02it/s]  9%|▊         | 47686/552076 [00:00<00:07, 66148.65it/s] 12%|█▏        | 67429/552076 [00:00<00:05, 82632.30it/s] 16%|█▌        | 86238/552076 [00:00<00:04, 99341.29it/s] 18%|█▊        | 100782/552076 [00:00<00:04, 104311.02it/s] 21%|██        | 114681/552076 [00:01<00:03, 112749.36it/s] 24%|██▍       | 135033/552076 [00:01<00:03, 130163.90it/s] 28%|██▊       | 154464/552076 [00:01<00:02, 144471.81it/s] 31%|███       | 171617/552076 [00:01<00:02, 151646.71it/s] 35%|███▍      | 191274/552076 [00:01<00:02, 162807.22it/s] 38%|███▊      | 209031/552076 [00:01<00:02, 164888.32it/s] 41%|████▏     | 228231/552076 [00:01<00:01, 172181.58it/s] 45%|████▍     | 246496/552076 [00:01<00:01, 175192.63it/s] 48%|████▊     | 264597/552076 [00:01<00:01, 175566.71it/s] 51%|█████     | 282561/552076 [00:01<00:01, 172931.23it/s] 54%|█████▍    | 300148/552076 [00:02<00:01, 162838.18it/s] 58%|█████▊    | 319415/552076 [00:02<00:01, 170769.99it/s] 61%|██████    | 337496/552076 [00:02<00:01, 173662.63it/s] 65%|██████▍   | 357260/552076 [00:02<00:01, 180221.83it/s] 68%|██████▊   | 377076/552076 [00:02<00:00, 185251.44it/s] 72%|███████▏  | 396023/552076 [00:02<00:00, 186496.15it/s] 75%|███████▌  | 414814/552076 [00:02<00:00, 159305.94it/s] 78%|███████▊  | 433073/552076 [00:02<00:00, 165642.33it/s] 82%|████████▏ | 451232/552076 [00:02<00:00, 170122.89it/s] 85%|████████▌ | 470961/552076 [00:03<00:00, 177451.91it/s] 89%|████████▉ | 490980/552076 [00:03<00:00, 183695.37it/s] 92%|█████████▏| 509690/552076 [00:03<00:00, 174625.15it/s] 96%|█████████▌| 527484/552076 [00:03<00:00, 155686.04it/s] 98%|█████████▊| 543668/552076 [00:03<00:00, 144474.23it/s]100%|██████████| 552076/552076 [00:03<00:00, 153348.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9099/552076 [00:00<00:05, 90984.45it/s]  3%|▎         | 18312/552076 [00:00<00:05, 90644.86it/s]  5%|▌         | 29778/552076 [00:00<00:05, 96720.87it/s]  7%|▋         | 40044/552076 [00:00<00:05, 98426.78it/s]  9%|▊         | 47789/552076 [00:00<00:06, 81083.92it/s] 10%|▉         | 54934/552076 [00:00<00:07, 68313.82it/s] 12%|█▏        | 66553/552076 [00:00<00:06, 77948.28it/s] 14%|█▍        | 78406/552076 [00:00<00:05, 86869.45it/s] 16%|█▌        | 87587/552076 [00:00<00:05, 84945.14it/s] 17%|█▋        | 96437/552076 [00:01<00:06, 70705.95it/s] 19%|█▉        | 104157/552076 [00:01<00:06, 69554.33it/s] 20%|██        | 111571/552076 [00:01<00:07, 59104.10it/s] 21%|██▏       | 118420/552076 [00:01<00:07, 61638.03it/s] 23%|██▎       | 127011/552076 [00:01<00:06, 65724.86it/s] 24%|██▍       | 133969/552076 [00:01<00:06, 61989.17it/s] 26%|██▌       | 142092/552076 [00:01<00:06, 66729.69it/s] 27%|██▋       | 149088/552076 [00:02<00:06, 63270.39it/s] 29%|██▉       | 161063/552076 [00:02<00:05, 73697.66it/s] 31%|███       | 171777/552076 [00:02<00:04, 81311.00it/s] 33%|███▎      | 180735/552076 [00:02<00:05, 66241.99it/s] 34%|███▍      | 188393/552076 [00:02<00:05, 64603.63it/s] 35%|███▌      | 195586/552076 [00:02<00:05, 63105.85it/s] 37%|███▋      | 202417/552076 [00:02<00:05, 61711.83it/s] 38%|███▊      | 208960/552076 [00:02<00:07, 46170.27it/s] 39%|███▉      | 215200/552076 [00:03<00:06, 49191.77it/s] 40%|████      | 222053/552076 [00:03<00:06, 53740.15it/s] 42%|████▏     | 229248/552076 [00:03<00:05, 58155.70it/s] 44%|████▍     | 241566/552076 [00:03<00:04, 69097.78it/s] 45%|████▌     | 250367/552076 [00:03<00:04, 73837.01it/s] 47%|████▋     | 258689/552076 [00:03<00:03, 76263.79it/s] 49%|████▉     | 270770/552076 [00:03<00:03, 85748.69it/s] 51%|█████     | 282882/552076 [00:03<00:02, 93981.95it/s] 53%|█████▎    | 295016/552076 [00:03<00:02, 100798.51it/s] 55%|█████▌    | 306391/552076 [00:04<00:02, 104362.81it/s] 58%|█████▊    | 317770/552076 [00:04<00:02, 107020.50it/s] 60%|█████▉    | 329338/552076 [00:04<00:02, 109478.75it/s] 62%|██████▏   | 341726/552076 [00:04<00:01, 113433.17it/s] 64%|██████▍   | 353310/552076 [00:04<00:01, 113152.06it/s] 66%|██████▌   | 364794/552076 [00:04<00:01, 103626.88it/s] 68%|██████▊   | 376908/552076 [00:04<00:01, 108324.98it/s] 71%|███████   | 389431/552076 [00:04<00:01, 112895.82it/s] 73%|███████▎  | 400944/552076 [00:04<00:01, 113524.91it/s] 75%|███████▍  | 412600/552076 [00:04<00:01, 111985.79it/s] 77%|███████▋  | 423914/552076 [00:05<00:01, 94166.35it/s]  79%|███████▊  | 433894/552076 [00:05<00:01, 79519.41it/s] 80%|████████  | 442630/552076 [00:05<00:01, 80597.28it/s] 82%|████████▏ | 453435/552076 [00:05<00:01, 87246.14it/s] 84%|████████▍ | 464868/552076 [00:05<00:00, 93920.12it/s] 86%|████████▌ | 474787/552076 [00:05<00:00, 90491.82it/s] 88%|████████▊ | 484232/552076 [00:05<00:00, 84471.95it/s] 90%|████████▉ | 495693/552076 [00:05<00:00, 91706.31it/s] 92%|█████████▏| 505295/552076 [00:06<00:00, 91984.46it/s] 93%|█████████▎| 514796/552076 [00:06<00:00, 81206.48it/s] 95%|█████████▍| 523360/552076 [00:06<00:00, 78003.18it/s] 97%|█████████▋| 534947/552076 [00:06<00:00, 86481.91it/s] 99%|█████████▉| 545386/552076 [00:06<00:00, 91172.79it/s]100%|██████████| 552076/552076 [00:06<00:00, 83982.16it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6744/552076 [00:00<00:08, 67438.30it/s]  2%|▏         | 12424/552076 [00:00<00:08, 61432.09it/s]  3%|▎         | 18049/552076 [00:00<00:09, 57576.72it/s]  5%|▌         | 27997/552076 [00:00<00:07, 65903.81it/s]  7%|▋         | 39619/552076 [00:00<00:06, 75741.16it/s]  9%|▉         | 49241/552076 [00:00<00:06, 80906.47it/s] 11%|█         | 61178/552076 [00:00<00:05, 89563.28it/s] 13%|█▎        | 70368/552076 [00:00<00:06, 76626.72it/s] 14%|█▍        | 78521/552076 [00:01<00:06, 72282.73it/s] 16%|█▋        | 90731/552076 [00:01<00:05, 82363.50it/s] 19%|█▊        | 102982/552076 [00:01<00:04, 91343.30it/s] 21%|██        | 115316/552076 [00:01<00:04, 99050.29it/s] 23%|██▎       | 125998/552076 [00:01<00:04, 96091.67it/s] 25%|██▌       | 138333/552076 [00:01<00:04, 102912.88it/s] 27%|██▋       | 150742/552076 [00:01<00:03, 108465.18it/s] 30%|██▉       | 163210/552076 [00:01<00:03, 112866.94it/s] 32%|███▏      | 175668/552076 [00:01<00:03, 116140.66it/s] 34%|███▍      | 188177/552076 [00:01<00:03, 118686.64it/s] 36%|███▋      | 200677/552076 [00:02<00:02, 120510.61it/s] 39%|███▊      | 212948/552076 [00:02<00:02, 118405.30it/s] 41%|████      | 225494/552076 [00:02<00:02, 120434.11it/s] 43%|████▎     | 238002/552076 [00:02<00:02, 121790.50it/s] 45%|████▌     | 250545/552076 [00:02<00:02, 122858.81it/s] 48%|████▊     | 262880/552076 [00:02<00:02, 122090.04it/s] 50%|████▉     | 275365/552076 [00:02<00:02, 122902.74it/s] 52%|█████▏    | 287681/552076 [00:02<00:02, 121516.33it/s] 54%|█████▍    | 300165/552076 [00:02<00:02, 122494.30it/s] 57%|█████▋    | 312432/552076 [00:03<00:02, 99847.54it/s]  59%|█████▉    | 324455/552076 [00:03<00:02, 105196.27it/s] 61%|██████    | 336929/552076 [00:03<00:01, 110383.42it/s] 63%|██████▎   | 349471/552076 [00:03<00:01, 114500.60it/s] 65%|██████▌   | 361284/552076 [00:03<00:01, 110259.25it/s] 67%|██████▋   | 372598/552076 [00:03<00:01, 96301.57it/s]  69%|██████▉   | 382748/552076 [00:03<00:01, 96777.23it/s] 71%|███████   | 392790/552076 [00:03<00:01, 93121.27it/s] 73%|███████▎  | 402387/552076 [00:03<00:01, 83804.55it/s] 74%|███████▍  | 411143/552076 [00:04<00:02, 62853.21it/s] 76%|███████▌  | 418464/552076 [00:04<00:02, 63868.21it/s] 77%|███████▋  | 425580/552076 [00:04<00:02, 59459.57it/s] 79%|███████▉  | 437855/552076 [00:04<00:01, 70338.86it/s] 81%|████████  | 446100/552076 [00:04<00:01, 70484.53it/s] 82%|████████▏ | 453996/552076 [00:04<00:01, 50894.76it/s] 84%|████████▍ | 466325/552076 [00:04<00:01, 61776.59it/s] 87%|████████▋ | 478696/552076 [00:05<00:01, 72693.91it/s] 89%|████████▉ | 490745/552076 [00:05<00:00, 82513.05it/s] 91%|█████████ | 500984/552076 [00:05<00:00, 85930.00it/s] 93%|█████████▎| 511005/552076 [00:05<00:00, 64508.19it/s] 94%|█████████▍| 519243/552076 [00:05<00:00, 61078.36it/s] 96%|█████████▌| 530571/552076 [00:05<00:00, 70875.78it/s] 98%|█████████▊| 539147/552076 [00:05<00:00, 61553.06it/s] 99%|█████████▉| 546563/552076 [00:06<00:00, 54996.62it/s]100%|██████████| 552076/552076 [00:06<00:00, 88718.28it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12037/552076 [00:00<00:04, 120365.81it/s]  3%|▎         | 16122/552076 [00:00<00:07, 72583.42it/s]   4%|▍         | 24680/552076 [00:00<00:07, 74923.44it/s]  6%|▌         | 32828/552076 [00:00<00:06, 76776.33it/s]  8%|▊         | 45061/552076 [00:00<00:06, 83597.99it/s] 10%|▉         | 53911/552076 [00:00<00:05, 85008.71it/s] 12%|█▏        | 66083/552076 [00:00<00:05, 93464.54it/s] 14%|█▍        | 77554/552076 [00:00<00:04, 98961.25it/s] 16%|█▌        | 88488/552076 [00:00<00:04, 101860.19it/s] 18%|█▊        | 98635/552076 [00:01<00:04, 91784.92it/s]  20%|█▉        | 110304/552076 [00:01<00:04, 98062.85it/s] 22%|██▏       | 122098/552076 [00:01<00:04, 103282.86it/s] 24%|██▍       | 133907/552076 [00:01<00:03, 107318.84it/s] 26%|██▋       | 145654/552076 [00:01<00:03, 110174.88it/s] 28%|██▊       | 156835/552076 [00:01<00:03, 106807.51it/s] 30%|███       | 167653/552076 [00:01<00:03, 102651.91it/s] 32%|███▏      | 178049/552076 [00:01<00:04, 93381.97it/s]  34%|███▍      | 189834/552076 [00:01<00:03, 99584.43it/s] 36%|███▌      | 200083/552076 [00:02<00:03, 96908.97it/s] 38%|███▊      | 209994/552076 [00:02<00:03, 88892.41it/s] 40%|████      | 221547/552076 [00:02<00:03, 95497.18it/s] 42%|████▏     | 231434/552076 [00:02<00:03, 93881.05it/s] 44%|████▍     | 242864/552076 [00:02<00:03, 99196.87it/s] 46%|████▌     | 254271/552076 [00:02<00:02, 103232.81it/s] 48%|████▊     | 265928/552076 [00:02<00:02, 106900.40it/s] 50%|█████     | 276804/552076 [00:02<00:02, 100960.99it/s] 52%|█████▏    | 287099/552076 [00:02<00:02, 94547.63it/s]  54%|█████▍    | 298987/552076 [00:03<00:02, 100731.42it/s] 56%|█████▋    | 311203/552076 [00:03<00:02, 106325.88it/s] 59%|█████▊    | 323290/552076 [00:03<00:02, 110307.36it/s] 61%|██████    | 335343/552076 [00:03<00:01, 113185.61it/s] 63%|██████▎   | 347352/552076 [00:03<00:01, 115169.60it/s] 65%|██████▌   | 359364/552076 [00:03<00:01, 116610.40it/s] 67%|██████▋   | 371123/552076 [00:03<00:01, 116579.96it/s] 69%|██████▉   | 382850/552076 [00:03<00:01, 100961.22it/s] 71%|███████▏  | 393366/552076 [00:03<00:01, 87779.24it/s]  73%|███████▎  | 402746/552076 [00:04<00:01, 85967.93it/s] 75%|███████▍  | 414019/552076 [00:04<00:01, 92559.36it/s] 77%|███████▋  | 423720/552076 [00:04<00:01, 87119.36it/s] 78%|███████▊  | 432809/552076 [00:04<00:01, 87625.06it/s] 80%|████████  | 442355/552076 [00:04<00:01, 89834.75it/s] 82%|████████▏ | 451538/552076 [00:04<00:01, 87808.50it/s] 83%|████████▎ | 460469/552076 [00:04<00:01, 87897.79it/s] 85%|████████▌ | 469544/552076 [00:04<00:00, 88733.29it/s] 87%|████████▋ | 478493/552076 [00:04<00:00, 86067.28it/s] 88%|████████▊ | 487170/552076 [00:05<00:00, 85107.47it/s] 90%|█████████ | 499544/552076 [00:05<00:00, 93901.69it/s] 93%|█████████▎| 511938/552076 [00:05<00:00, 101264.45it/s] 95%|█████████▍| 522514/552076 [00:05<00:00, 102571.92it/s] 97%|█████████▋| 533699/552076 [00:05<00:00, 105189.56it/s] 99%|█████████▉| 546165/552076 [00:05<00:00, 110359.72it/s]100%|██████████| 552076/552076 [00:05<00:00, 99331.24it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11867/552076 [00:00<00:04, 118663.04it/s]  4%|▍         | 20713/552076 [00:00<00:04, 107637.61it/s]  5%|▌         | 30175/552076 [00:00<00:05, 103369.64it/s]  8%|▊         | 42492/552076 [00:00<00:04, 108606.44it/s] 10%|▉         | 54305/552076 [00:00<00:04, 111296.73it/s] 12%|█▏        | 66648/552076 [00:00<00:04, 114676.45it/s] 14%|█▍        | 76851/552076 [00:00<00:04, 100473.19it/s] 16%|█▌        | 86332/552076 [00:00<00:04, 97410.94it/s]  18%|█▊        | 97876/552076 [00:00<00:04, 102199.12it/s] 20%|█▉        | 109111/552076 [00:01<00:04, 105045.05it/s] 22%|██▏       | 120810/552076 [00:01<00:03, 108362.56it/s] 24%|██▍       | 132384/552076 [00:01<00:03, 110473.10it/s] 26%|██▌       | 144068/552076 [00:01<00:03, 112308.05it/s] 28%|██▊       | 155538/552076 [00:01<00:03, 113012.58it/s] 30%|███       | 166831/552076 [00:01<00:03, 109305.78it/s] 32%|███▏      | 178403/552076 [00:01<00:03, 111153.77it/s] 34%|███▍      | 189541/552076 [00:01<00:03, 103086.59it/s] 36%|███▌      | 199982/552076 [00:01<00:03, 96981.56it/s]  38%|███▊      | 210844/552076 [00:01<00:03, 100201.22it/s] 40%|████      | 221920/552076 [00:02<00:03, 103151.00it/s] 42%|████▏     | 233110/552076 [00:02<00:03, 105627.06it/s] 44%|████▍     | 243773/552076 [00:02<00:03, 95083.43it/s]  46%|████▌     | 253551/552076 [00:02<00:03, 85818.69it/s] 48%|████▊     | 262494/552076 [00:02<00:03, 78814.30it/s] 49%|████▉     | 271235/552076 [00:02<00:03, 81209.97it/s] 51%|█████     | 282878/552076 [00:02<00:03, 89315.05it/s] 54%|█████▎    | 296539/552076 [00:02<00:02, 99666.30it/s] 56%|█████▌    | 308291/552076 [00:03<00:02, 104205.04it/s] 58%|█████▊    | 320532/552076 [00:03<00:02, 109070.53it/s] 60%|██████    | 331875/552076 [00:03<00:02, 102602.46it/s] 62%|██████▏   | 343327/552076 [00:03<00:01, 105286.02it/s] 64%|██████▍   | 354142/552076 [00:03<00:01, 100899.12it/s] 66%|██████▌   | 364471/552076 [00:03<00:01, 98255.18it/s]  68%|██████▊   | 375368/552076 [00:03<00:01, 101240.06it/s] 70%|██████▉   | 385643/552076 [00:03<00:01, 97088.19it/s]  72%|███████▏  | 395494/552076 [00:03<00:01, 82813.19it/s] 73%|███████▎  | 404240/552076 [00:04<00:01, 77700.18it/s] 75%|███████▍  | 412400/552076 [00:04<00:01, 73490.52it/s] 76%|███████▌  | 420069/552076 [00:04<00:02, 59099.40it/s] 77%|███████▋  | 426654/552076 [00:04<00:02, 49537.77it/s] 78%|███████▊  | 432884/552076 [00:04<00:02, 52780.18it/s] 79%|███████▉  | 438735/552076 [00:04<00:02, 40897.76it/s] 80%|████████  | 443635/552076 [00:04<00:02, 42485.84it/s] 81%|████████  | 448467/552076 [00:05<00:02, 42002.64it/s] 82%|████████▏ | 453100/552076 [00:05<00:02, 43213.07it/s] 83%|████████▎ | 457717/552076 [00:05<00:02, 43221.16it/s] 84%|████████▍ | 464474/552076 [00:05<00:01, 48458.66it/s] 85%|████████▌ | 469671/552076 [00:05<00:01, 45771.16it/s] 86%|████████▌ | 474525/552076 [00:05<00:02, 33685.45it/s] 87%|████████▋ | 478548/552076 [00:05<00:02, 31016.81it/s] 87%|████████▋ | 482756/552076 [00:06<00:02, 33672.26it/s] 88%|████████▊ | 486540/552076 [00:06<00:02, 30508.91it/s] 89%|████████▉ | 492131/552076 [00:06<00:01, 35323.09it/s] 90%|████████▉ | 496188/552076 [00:06<00:01, 33453.53it/s] 91%|█████████ | 499921/552076 [00:06<00:01, 30376.25it/s] 92%|█████████▏| 505742/552076 [00:06<00:01, 35462.73it/s] 92%|█████████▏| 509843/552076 [00:06<00:01, 34126.80it/s] 93%|█████████▎| 513655/552076 [00:06<00:01, 34670.12it/s] 94%|█████████▍| 518930/552076 [00:07<00:00, 38642.76it/s] 95%|█████████▌| 526746/552076 [00:07<00:00, 45551.83it/s] 97%|█████████▋| 533357/552076 [00:07<00:00, 50236.92it/s] 98%|█████████▊| 539043/552076 [00:07<00:00, 50837.32it/s] 99%|█████████▉| 545774/552076 [00:07<00:00, 54865.13it/s]100%|██████████| 552076/552076 [00:07<00:00, 73524.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3847/552076 [00:00<00:14, 38468.75it/s]  2%|▏         | 8404/552076 [00:00<00:14, 38291.91it/s]  2%|▏         | 11016/552076 [00:00<00:16, 33594.25it/s]  3%|▎         | 16047/552076 [00:00<00:14, 37313.15it/s]  4%|▍         | 20802/552076 [00:00<00:13, 39888.88it/s]  5%|▍         | 26807/552076 [00:00<00:11, 44356.13it/s]  6%|▌         | 31083/552076 [00:00<00:11, 43856.47it/s]  7%|▋         | 36215/552076 [00:00<00:11, 45856.82it/s]  7%|▋         | 40747/552076 [00:00<00:11, 43007.69it/s]  9%|▊         | 47020/552076 [00:01<00:10, 47485.97it/s]  9%|▉         | 51912/552076 [00:01<00:11, 43936.68it/s] 11%|█         | 58450/552076 [00:01<00:10, 48730.28it/s] 12%|█▏        | 64238/552076 [00:01<00:09, 51154.82it/s] 13%|█▎        | 69575/552076 [00:01<00:09, 48522.28it/s] 14%|█▎        | 75060/552076 [00:01<00:09, 50260.86it/s] 15%|█▍        | 81550/552076 [00:01<00:08, 53907.37it/s] 16%|█▌        | 88541/552076 [00:01<00:08, 57881.84it/s] 17%|█▋        | 94582/552076 [00:01<00:07, 58617.15it/s] 18%|█▊        | 100590/552076 [00:02<00:08, 50364.88it/s] 19%|█▉        | 106689/552076 [00:02<00:08, 53140.23it/s] 20%|██        | 112259/552076 [00:02<00:09, 45057.39it/s] 21%|██▏       | 118632/552076 [00:02<00:08, 49398.62it/s] 23%|██▎       | 125052/552076 [00:02<00:08, 53068.08it/s] 24%|██▍       | 131632/552076 [00:02<00:07, 56338.13it/s] 25%|██▌       | 139050/552076 [00:02<00:06, 60717.77it/s] 26%|██▋       | 145432/552076 [00:02<00:06, 61496.39it/s] 27%|██▋       | 151802/552076 [00:02<00:06, 61920.45it/s] 29%|██▊       | 158400/552076 [00:03<00:06, 63082.70it/s] 30%|██▉       | 164822/552076 [00:03<00:06, 63231.84it/s] 31%|███       | 171225/552076 [00:03<00:06, 62142.95it/s] 32%|███▏      | 177812/552076 [00:03<00:05, 63215.25it/s] 33%|███▎      | 184546/552076 [00:03<00:05, 64397.76it/s] 35%|███▍      | 191379/552076 [00:03<00:05, 65528.60it/s] 36%|███▌      | 198192/552076 [00:03<00:05, 66287.43it/s] 37%|███▋      | 204998/552076 [00:03<00:05, 66807.62it/s] 38%|███▊      | 211697/552076 [00:03<00:05, 66549.07it/s] 40%|███▉      | 218365/552076 [00:03<00:05, 66515.43it/s] 41%|████      | 225142/552076 [00:04<00:04, 66885.83it/s] 42%|████▏     | 231931/552076 [00:04<00:04, 67181.26it/s] 43%|████▎     | 238655/552076 [00:04<00:04, 67190.87it/s] 44%|████▍     | 245378/552076 [00:04<00:04, 67019.92it/s] 46%|████▌     | 252083/552076 [00:04<00:04, 63361.87it/s] 47%|████▋     | 258463/552076 [00:04<00:04, 60842.48it/s] 48%|████▊     | 265029/552076 [00:04<00:04, 62209.45it/s] 49%|████▉     | 271603/552076 [00:04<00:04, 63226.47it/s] 50%|█████     | 278014/552076 [00:04<00:04, 63487.76it/s] 52%|█████▏    | 284803/552076 [00:04<00:04, 64745.20it/s] 53%|█████▎    | 291522/552076 [00:05<00:03, 65457.40it/s] 54%|█████▍    | 298086/552076 [00:05<00:04, 63293.48it/s] 55%|█████▌    | 304750/552076 [00:05<00:03, 64259.41it/s] 56%|█████▋    | 311200/552076 [00:05<00:03, 63600.61it/s] 58%|█████▊    | 317578/552076 [00:05<00:04, 57709.10it/s] 59%|█████▊    | 323467/552076 [00:05<00:04, 50402.14it/s] 60%|█████▉    | 329160/552076 [00:05<00:04, 52196.11it/s] 61%|██████    | 334570/552076 [00:05<00:04, 48251.25it/s] 62%|██████▏   | 340222/552076 [00:06<00:04, 50465.19it/s] 63%|██████▎   | 346459/552076 [00:06<00:03, 53528.34it/s] 64%|██████▍   | 353073/552076 [00:06<00:03, 56775.95it/s] 65%|██████▌   | 359589/552076 [00:06<00:03, 59054.93it/s] 66%|██████▋   | 365857/552076 [00:06<00:03, 60095.85it/s] 67%|██████▋   | 372411/552076 [00:06<00:02, 61629.15it/s] 69%|██████▊   | 378985/552076 [00:06<00:02, 62805.65it/s] 70%|██████▉   | 385452/552076 [00:06<00:02, 63351.99it/s] 71%|███████   | 392246/552076 [00:06<00:02, 64660.19it/s] 72%|███████▏  | 398980/552076 [00:06<00:02, 65439.44it/s] 74%|███████▎  | 405798/552076 [00:07<00:02, 66236.05it/s] 75%|███████▍  | 412609/552076 [00:07<00:02, 66785.93it/s] 76%|███████▌  | 419305/552076 [00:07<00:01, 66530.99it/s] 77%|███████▋  | 425971/552076 [00:07<00:02, 53883.47it/s] 78%|███████▊  | 432747/552076 [00:07<00:02, 57409.05it/s] 80%|███████▉  | 439557/552076 [00:07<00:01, 60244.22it/s] 81%|████████  | 446369/552076 [00:07<00:01, 62408.68it/s] 82%|████████▏ | 453136/552076 [00:07<00:01, 63898.27it/s] 83%|████████▎ | 459684/552076 [00:07<00:01, 64213.17it/s] 84%|████████▍ | 466217/552076 [00:07<00:01, 64080.78it/s] 86%|████████▌ | 472703/552076 [00:08<00:01, 56288.04it/s] 88%|████████▊ | 483697/552076 [00:08<00:01, 65941.62it/s] 90%|████████▉ | 495523/552076 [00:08<00:00, 76032.62it/s] 92%|█████████▏| 506632/552076 [00:08<00:00, 83983.47it/s] 94%|█████████▍| 518361/552076 [00:08<00:00, 91804.06it/s] 96%|█████████▌| 530070/552076 [00:08<00:00, 98163.53it/s] 98%|█████████▊| 540672/552076 [00:08<00:00, 86780.26it/s]100%|█████████▉| 550143/552076 [00:08<00:00, 81076.12it/s]100%|██████████| 552076/552076 [00:08<00:00, 61463.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6896/552076 [00:00<00:07, 68959.41it/s]  3%|▎         | 14240/552076 [00:00<00:07, 70243.78it/s]  4%|▍         | 23049/552076 [00:00<00:07, 74788.88it/s]  5%|▌         | 28248/552076 [00:00<00:09, 55573.54it/s]  6%|▌         | 32930/552076 [00:00<00:11, 45513.00it/s]  8%|▊         | 42291/552076 [00:00<00:09, 53806.58it/s] 10%|▉         | 54011/552076 [00:00<00:07, 64228.46it/s] 12%|█▏        | 64729/552076 [00:00<00:06, 72718.51it/s] 13%|█▎        | 74125/552076 [00:00<00:06, 78008.53it/s] 15%|█▌        | 82856/552076 [00:01<00:07, 64910.29it/s] 16%|█▋        | 90367/552076 [00:01<00:08, 55574.08it/s] 18%|█▊        | 96873/552076 [00:01<00:07, 57154.54it/s] 19%|█▉        | 106002/552076 [00:01<00:06, 64375.35it/s] 21%|██        | 113214/552076 [00:01<00:06, 64080.41it/s] 22%|██▏       | 120165/552076 [00:01<00:07, 54148.26it/s] 23%|██▎       | 127653/552076 [00:01<00:07, 59052.96it/s] 24%|██▍       | 134141/552076 [00:02<00:09, 43988.67it/s] 26%|██▌       | 143163/552076 [00:02<00:07, 51979.12it/s] 27%|██▋       | 150897/552076 [00:02<00:06, 57650.05it/s] 29%|██▉       | 162291/552076 [00:02<00:05, 67680.39it/s] 31%|███       | 170501/552076 [00:02<00:05, 65566.27it/s] 33%|███▎      | 182551/552076 [00:02<00:04, 75954.07it/s] 35%|███▌      | 194318/552076 [00:02<00:04, 84992.64it/s] 37%|███▋      | 206674/552076 [00:02<00:03, 93771.88it/s] 40%|███▉      | 218575/552076 [00:03<00:03, 100142.60it/s] 42%|████▏     | 230693/552076 [00:03<00:03, 105644.35it/s] 44%|████▍     | 242931/552076 [00:03<00:02, 110163.19it/s] 46%|████▌     | 254699/552076 [00:03<00:02, 112314.78it/s] 48%|████▊     | 266676/552076 [00:03<00:02, 114451.44it/s] 51%|█████     | 279194/552076 [00:03<00:02, 117471.14it/s] 53%|█████▎    | 291168/552076 [00:03<00:02, 112156.15it/s] 55%|█████▌    | 303974/552076 [00:03<00:02, 116494.54it/s] 57%|█████▋    | 315813/552076 [00:03<00:02, 113856.17it/s] 59%|█████▉    | 328266/552076 [00:03<00:01, 116858.88it/s] 62%|██████▏   | 340074/552076 [00:04<00:01, 114550.15it/s] 64%|██████▍   | 352073/552076 [00:04<00:01, 116129.15it/s] 66%|██████▌   | 364532/552076 [00:04<00:01, 118543.14it/s] 68%|██████▊   | 377022/552076 [00:04<00:01, 120380.65it/s] 71%|███████   | 389441/552076 [00:04<00:01, 121496.86it/s] 73%|███████▎  | 401629/552076 [00:04<00:01, 120895.79it/s] 75%|███████▌  | 414138/552076 [00:04<00:01, 122121.70it/s] 77%|███████▋  | 426373/552076 [00:04<00:01, 120611.09it/s] 79%|███████▉  | 438454/552076 [00:04<00:00, 120614.71it/s] 82%|████████▏ | 450823/552076 [00:04<00:00, 121519.88it/s] 84%|████████▍ | 463240/552076 [00:05<00:00, 122300.58it/s] 86%|████████▌ | 475726/552076 [00:05<00:00, 123055.88it/s] 88%|████████▊ | 488221/552076 [00:05<00:00, 123617.92it/s] 91%|█████████ | 500729/552076 [00:05<00:00, 124050.78it/s] 93%|█████████▎| 513139/552076 [00:05<00:00, 96190.00it/s]  95%|█████████▌| 525540/552076 [00:05<00:00, 103129.36it/s] 97%|█████████▋| 537901/552076 [00:05<00:00, 108523.01it/s]100%|█████████▉| 550311/552076 [00:05<00:00, 112768.89it/s]100%|██████████| 552076/552076 [00:05<00:00, 93772.53it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10827/552076 [00:00<00:04, 108262.36it/s]  3%|▎         | 18521/552076 [00:00<00:05, 96478.05it/s]   5%|▍         | 24944/552076 [00:00<00:06, 81376.33it/s]  7%|▋         | 36040/552076 [00:00<00:05, 88301.71it/s]  8%|▊         | 42843/552076 [00:00<00:07, 72025.20it/s] 10%|▉         | 53924/552076 [00:00<00:06, 80397.20it/s] 11%|█▏        | 63423/552076 [00:00<00:05, 84280.89it/s] 14%|█▎        | 75810/552076 [00:00<00:05, 93218.23it/s] 15%|█▌        | 85294/552076 [00:00<00:05, 90584.64it/s] 18%|█▊        | 97793/552076 [00:01<00:04, 98737.42it/s] 20%|█▉        | 107975/552076 [00:01<00:04, 94569.92it/s] 22%|██▏       | 120289/552076 [00:01<00:04, 101644.28it/s] 24%|██▍       | 132184/552076 [00:01<00:03, 106282.21it/s] 26%|██▌       | 143378/552076 [00:01<00:03, 107268.71it/s] 28%|██▊       | 154306/552076 [00:01<00:03, 104364.43it/s] 30%|███       | 166545/552076 [00:01<00:03, 109187.11it/s] 32%|███▏      | 178460/552076 [00:01<00:03, 111994.45it/s] 34%|███▍      | 189796/552076 [00:01<00:03, 107554.59it/s] 37%|███▋      | 202158/552076 [00:02<00:03, 106065.76it/s] 39%|███▊      | 212863/552076 [00:02<00:03, 101000.30it/s] 41%|████      | 225406/552076 [00:02<00:03, 107267.44it/s] 43%|████▎     | 237278/552076 [00:02<00:02, 110462.99it/s] 45%|████▌     | 249711/552076 [00:02<00:02, 114285.51it/s] 47%|████▋     | 262101/552076 [00:02<00:02, 117007.11it/s] 50%|████▉     | 274426/552076 [00:02<00:02, 118812.00it/s] 52%|█████▏    | 286908/552076 [00:02<00:02, 120550.40it/s] 54%|█████▍    | 299349/552076 [00:02<00:02, 121681.32it/s] 56%|█████▋    | 311837/552076 [00:02<00:01, 122622.58it/s] 59%|█████▊    | 324328/552076 [00:03<00:01, 123298.69it/s] 61%|██████    | 336685/552076 [00:03<00:01, 116348.58it/s] 63%|██████▎   | 349015/552076 [00:03<00:01, 118349.51it/s] 65%|██████▌   | 361417/552076 [00:03<00:01, 119993.83it/s] 68%|██████▊   | 373477/552076 [00:03<00:01, 113313.79it/s] 70%|██████▉   | 385879/552076 [00:03<00:01, 116325.73it/s] 72%|███████▏  | 398319/552076 [00:03<00:01, 118634.27it/s] 74%|███████▍  | 410769/552076 [00:03<00:01, 120332.82it/s] 77%|███████▋  | 423212/552076 [00:03<00:01, 121530.85it/s] 79%|███████▉  | 435413/552076 [00:04<00:01, 110865.20it/s] 81%|████████  | 447712/552076 [00:04<00:00, 114241.58it/s] 83%|████████▎ | 459313/552076 [00:04<00:01, 91233.48it/s]  85%|████████▌ | 469296/552076 [00:04<00:00, 92849.44it/s] 87%|████████▋ | 479190/552076 [00:04<00:00, 81169.06it/s] 88%|████████▊ | 487998/552076 [00:04<00:00, 75437.43it/s] 90%|████████▉ | 496107/552076 [00:04<00:00, 70457.75it/s] 91%|█████████ | 503615/552076 [00:04<00:00, 68308.98it/s] 93%|█████████▎| 510784/552076 [00:05<00:00, 69112.47it/s] 95%|█████████▍| 522406/552076 [00:05<00:00, 78678.87it/s] 97%|█████████▋| 534685/552076 [00:05<00:00, 88180.87it/s] 99%|█████████▉| 546094/552076 [00:05<00:00, 94626.74it/s]100%|██████████| 552076/552076 [00:05<00:00, 102046.85it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9604/552076 [00:00<00:05, 96038.26it/s]  4%|▍         | 22564/552076 [00:00<00:05, 102354.80it/s]  6%|▋         | 34861/552076 [00:00<00:04, 107773.63it/s]  9%|▊         | 47088/552076 [00:00<00:04, 111746.58it/s] 10%|█         | 56610/552076 [00:00<00:04, 103345.76it/s] 12%|█▏        | 65559/552076 [00:00<00:05, 82357.77it/s]  13%|█▎        | 73500/552076 [00:00<00:06, 77074.94it/s] 15%|█▍        | 81070/552076 [00:00<00:06, 68987.66it/s] 17%|█▋        | 91496/552076 [00:01<00:06, 73855.98it/s] 18%|█▊        | 99022/552076 [00:01<00:07, 64161.96it/s] 20%|█▉        | 108560/552076 [00:01<00:06, 71145.57it/s] 21%|██        | 116140/552076 [00:01<00:07, 57258.44it/s] 23%|██▎       | 128378/552076 [00:01<00:06, 68134.60it/s] 25%|██▌       | 138152/552076 [00:01<00:05, 71711.17it/s] 27%|██▋       | 146352/552076 [00:01<00:05, 70538.64it/s] 29%|██▊       | 158707/552076 [00:01<00:04, 80959.00it/s] 31%|███       | 168418/552076 [00:02<00:04, 84795.87it/s] 32%|███▏      | 177684/552076 [00:02<00:04, 77291.98it/s] 34%|███▎      | 186093/552076 [00:02<00:06, 55155.09it/s] 35%|███▍      | 192971/552076 [00:02<00:06, 56160.94it/s] 36%|███▌      | 199545/552076 [00:02<00:07, 44558.67it/s] 37%|███▋      | 205049/552076 [00:02<00:07, 44881.87it/s] 39%|███▊      | 212913/552076 [00:02<00:06, 51515.97it/s] 41%|████      | 225255/552076 [00:03<00:05, 62426.29it/s] 43%|████▎     | 236791/552076 [00:03<00:04, 72390.68it/s] 45%|████▍     | 245791/552076 [00:03<00:04, 66962.28it/s] 47%|████▋     | 258061/552076 [00:03<00:03, 77527.18it/s] 49%|████▉     | 270428/552076 [00:03<00:03, 87298.76it/s] 51%|█████     | 282862/552076 [00:03<00:02, 95866.18it/s] 53%|█████▎    | 295211/552076 [00:03<00:02, 102761.26it/s] 56%|█████▌    | 307607/552076 [00:03<00:02, 108316.74it/s] 58%|█████▊    | 319944/552076 [00:03<00:02, 112431.20it/s] 60%|██████    | 332386/552076 [00:04<00:01, 115776.82it/s] 62%|██████▏   | 344712/552076 [00:04<00:01, 117922.29it/s] 65%|██████▍   | 356829/552076 [00:04<00:02, 95833.25it/s]  67%|██████▋   | 367312/552076 [00:04<00:02, 91109.42it/s] 68%|██████▊   | 377102/552076 [00:04<00:02, 84453.42it/s] 70%|██████▉   | 386119/552076 [00:04<00:02, 59579.51it/s] 71%|███████▏  | 393491/552076 [00:04<00:02, 58360.04it/s] 73%|███████▎  | 404167/552076 [00:05<00:02, 67545.56it/s] 75%|███████▌  | 416313/552076 [00:05<00:01, 77921.18it/s] 77%|███████▋  | 427559/552076 [00:05<00:01, 85829.13it/s] 79%|███████▉  | 438715/552076 [00:05<00:01, 92209.31it/s] 81%|████████▏ | 449659/552076 [00:05<00:01, 96780.17it/s] 83%|████████▎ | 460280/552076 [00:05<00:00, 99426.85it/s] 86%|████████▌ | 472214/552076 [00:05<00:00, 104665.63it/s] 88%|████████▊ | 484197/552076 [00:05<00:00, 108793.59it/s] 90%|████████▉ | 496637/552076 [00:05<00:00, 113048.09it/s] 92%|█████████▏| 508755/552076 [00:05<00:00, 115370.59it/s] 94%|█████████▍| 520979/552076 [00:06<00:00, 117347.29it/s] 97%|█████████▋| 533076/552076 [00:06<00:00, 118409.41it/s] 99%|█████████▊| 545034/552076 [00:06<00:00, 118314.54it/s]100%|██████████| 552076/552076 [00:06<00:00, 87065.14it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11778/552076 [00:00<00:04, 117777.02it/s]  4%|▍         | 23553/552076 [00:00<00:04, 117766.08it/s]  6%|▋         | 35460/552076 [00:00<00:04, 118154.12it/s]  8%|▊         | 46793/552076 [00:00<00:04, 112857.34it/s] 10%|█         | 55302/552076 [00:00<00:05, 87134.00it/s]  12%|█▏        | 63703/552076 [00:00<00:05, 84061.08it/s] 13%|█▎        | 72905/552076 [00:00<00:05, 86299.04it/s] 15%|█▍        | 81809/552076 [00:00<00:05, 87101.27it/s] 16%|█▋        | 90183/552076 [00:00<00:05, 83310.11it/s] 18%|█▊        | 101283/552076 [00:01<00:05, 90048.30it/s] 20%|██        | 112399/552076 [00:01<00:04, 95486.84it/s] 22%|██▏       | 123553/552076 [00:01<00:04, 99794.01it/s] 24%|██▍       | 133654/552076 [00:01<00:05, 83618.36it/s] 26%|██▌       | 144831/552076 [00:01<00:04, 90451.83it/s] 28%|██▊       | 154408/552076 [00:01<00:04, 90428.13it/s] 30%|██▉       | 165443/552076 [00:01<00:04, 95604.24it/s] 32%|███▏      | 176609/552076 [00:01<00:03, 99914.12it/s] 34%|███▍      | 187364/552076 [00:01<00:03, 102086.78it/s] 36%|███▌      | 198544/552076 [00:02<00:03, 104818.47it/s] 38%|███▊      | 209826/552076 [00:02<00:03, 107095.95it/s] 40%|████      | 221089/552076 [00:02<00:03, 108697.64it/s] 42%|████▏     | 232309/552076 [00:02<00:02, 109722.90it/s] 44%|████▍     | 243352/552076 [00:02<00:03, 92110.30it/s]  46%|████▌     | 255124/552076 [00:02<00:03, 98539.50it/s] 48%|████▊     | 266930/552076 [00:02<00:02, 103680.23it/s] 50%|█████     | 278270/552076 [00:02<00:02, 106414.55it/s] 53%|█████▎    | 289927/552076 [00:02<00:02, 109268.89it/s] 55%|█████▍    | 301235/552076 [00:03<00:02, 110383.85it/s] 57%|█████▋    | 312532/552076 [00:03<00:02, 111146.04it/s] 59%|█████▉    | 324855/552076 [00:03<00:01, 114513.12it/s] 61%|██████    | 337326/552076 [00:03<00:01, 117389.57it/s] 63%|██████▎   | 349419/552076 [00:03<00:01, 118427.78it/s] 66%|██████▌   | 361866/552076 [00:03<00:01, 120176.15it/s] 68%|██████▊   | 373938/552076 [00:03<00:01, 120152.75it/s] 70%|███████   | 387091/552076 [00:03<00:01, 123353.37it/s] 72%|███████▏  | 399474/552076 [00:03<00:01, 119196.33it/s] 75%|███████▍  | 411513/552076 [00:03<00:01, 119550.87it/s] 77%|███████▋  | 424029/552076 [00:04<00:01, 121179.63it/s] 79%|███████▉  | 436184/552076 [00:04<00:01, 112953.19it/s] 81%|████████  | 447708/552076 [00:04<00:00, 113627.68it/s] 83%|████████▎ | 460174/552076 [00:04<00:00, 116726.39it/s] 86%|████████▌ | 472044/552076 [00:04<00:00, 117311.00it/s] 88%|████████▊ | 484556/552076 [00:04<00:00, 119547.06it/s] 90%|█████████ | 497083/552076 [00:04<00:00, 121206.80it/s] 92%|█████████▏| 509470/552076 [00:04<00:00, 121993.26it/s] 95%|█████████▍| 521939/552076 [00:04<00:00, 122787.74it/s] 97%|█████████▋| 534362/552076 [00:04<00:00, 123216.05it/s] 99%|█████████▉| 546879/552076 [00:05<00:00, 123794.00it/s]100%|██████████| 552076/552076 [00:05<00:00, 108027.32it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3783/552076 [00:00<00:15, 36475.65it/s]  2%|▏         | 11312/552076 [00:00<00:12, 42999.22it/s]  4%|▎         | 20240/552076 [00:00<00:10, 50917.49it/s]  5%|▌         | 30109/552076 [00:00<00:08, 59567.05it/s]  8%|▊         | 41705/552076 [00:00<00:07, 69741.59it/s] 10%|▉         | 53617/552076 [00:00<00:06, 79645.45it/s] 12%|█▏        | 65743/552076 [00:00<00:05, 88785.03it/s] 14%|█▍        | 77578/552076 [00:00<00:04, 95976.18it/s] 16%|█▌        | 88131/552076 [00:00<00:04, 96309.73it/s] 18%|█▊        | 98431/552076 [00:01<00:05, 90443.49it/s] 20%|█▉        | 108017/552076 [00:01<00:05, 83097.05it/s] 21%|██        | 116823/552076 [00:01<00:05, 83076.63it/s] 23%|██▎       | 125478/552076 [00:01<00:05, 81759.90it/s] 25%|██▌       | 138153/552076 [00:01<00:04, 91503.64it/s] 27%|██▋       | 150511/552076 [00:01<00:04, 99228.53it/s] 29%|██▉       | 161008/552076 [00:01<00:04, 81766.51it/s] 31%|███       | 170095/552076 [00:01<00:05, 70650.78it/s] 32%|███▏      | 178065/552076 [00:02<00:06, 53843.52it/s] 33%|███▎      | 184683/552076 [00:02<00:08, 45797.25it/s] 34%|███▍      | 190334/552076 [00:02<00:07, 47839.40it/s] 36%|███▌      | 198628/552076 [00:02<00:06, 54378.08it/s] 37%|███▋      | 205509/552076 [00:02<00:05, 58029.31it/s] 39%|███▉      | 215601/552076 [00:02<00:05, 66508.83it/s] 40%|████      | 223154/552076 [00:02<00:05, 54864.15it/s] 42%|████▏     | 229610/552076 [00:03<00:05, 55377.61it/s] 43%|████▎     | 235828/552076 [00:03<00:05, 56100.55it/s] 44%|████▍     | 241916/552076 [00:03<00:06, 47700.43it/s] 46%|████▌     | 251328/552076 [00:03<00:05, 55982.88it/s] 47%|████▋     | 257877/552076 [00:03<00:05, 50215.57it/s] 48%|████▊     | 266482/552076 [00:03<00:05, 56270.11it/s] 49%|████▉     | 272890/552076 [00:03<00:05, 54322.93it/s] 51%|█████     | 282657/552076 [00:03<00:04, 62665.52it/s] 52%|█████▏    | 289783/552076 [00:04<00:04, 54251.35it/s] 54%|█████▎    | 296033/552076 [00:04<00:04, 56487.44it/s] 56%|█████▌    | 308434/552076 [00:04<00:03, 67515.77it/s] 58%|█████▊    | 320780/552076 [00:04<00:02, 78137.14it/s] 60%|██████    | 332359/552076 [00:04<00:02, 86583.54it/s] 62%|██████▏   | 344510/552076 [00:04<00:02, 94754.22it/s] 65%|██████▍   | 356820/552076 [00:04<00:01, 101783.83it/s] 67%|██████▋   | 369034/552076 [00:04<00:01, 107140.50it/s] 69%|██████▉   | 381305/552076 [00:04<00:01, 111379.03it/s] 71%|███████▏  | 393676/552076 [00:05<00:01, 114809.69it/s] 74%|███████▎  | 405802/552076 [00:05<00:01, 116669.83it/s] 76%|███████▌  | 418019/552076 [00:05<00:01, 118266.38it/s] 78%|███████▊  | 430067/552076 [00:05<00:01, 118071.89it/s] 80%|████████  | 442687/552076 [00:05<00:00, 120396.70it/s] 82%|████████▏ | 454847/552076 [00:05<00:00, 114667.32it/s] 85%|████████▍ | 466690/552076 [00:05<00:00, 115770.65it/s] 87%|████████▋ | 478369/552076 [00:05<00:00, 112840.33it/s] 89%|████████▉ | 490308/552076 [00:05<00:00, 114727.21it/s] 91%|█████████ | 501850/552076 [00:05<00:00, 109231.56it/s] 93%|█████████▎| 512877/552076 [00:06<00:00, 106869.19it/s] 96%|█████████▌| 530568/552076 [00:06<00:00, 121273.10it/s] 98%|█████████▊| 543415/552076 [00:06<00:00, 114849.17it/s]100%|██████████| 552076/552076 [00:06<00:00, 86734.61it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19453/552076 [00:00<00:02, 194525.55it/s]  7%|▋         | 39659/552076 [00:00<00:02, 196724.08it/s] 11%|█         | 59913/552076 [00:00<00:02, 198432.28it/s] 15%|█▍        | 80359/552076 [00:00<00:02, 200202.16it/s] 17%|█▋        | 95718/552076 [00:00<00:02, 172599.77it/s] 20%|█▉        | 110387/552076 [00:00<00:03, 139187.40it/s] 24%|██▎       | 129800/552076 [00:00<00:02, 152100.83it/s] 27%|██▋       | 149340/552076 [00:00<00:02, 162931.17it/s] 31%|███       | 169094/552076 [00:00<00:02, 171968.93it/s] 34%|███▍      | 188996/552076 [00:01<00:02, 179277.50it/s] 38%|███▊      | 207141/552076 [00:01<00:02, 165426.10it/s] 41%|████      | 224877/552076 [00:01<00:01, 168832.49it/s] 44%|████▍     | 244092/552076 [00:01<00:01, 175208.84it/s] 48%|████▊     | 263238/552076 [00:01<00:01, 179786.39it/s] 51%|█████     | 282571/552076 [00:01<00:01, 183645.87it/s] 55%|█████▍    | 301101/552076 [00:01<00:01, 168463.14it/s] 58%|█████▊    | 318960/552076 [00:01<00:01, 171376.22it/s] 61%|██████▏   | 338352/552076 [00:01<00:01, 177567.75it/s] 65%|██████▍   | 357667/552076 [00:02<00:01, 181969.98it/s] 68%|██████▊   | 377055/552076 [00:02<00:00, 185386.25it/s] 72%|███████▏  | 396808/552076 [00:02<00:00, 188869.19it/s] 75%|███████▌  | 415819/552076 [00:02<00:00, 185678.32it/s] 79%|███████▊  | 434486/552076 [00:02<00:00, 169248.31it/s] 82%|████████▏ | 453750/552076 [00:02<00:00, 175646.15it/s] 86%|████████▌ | 473182/552076 [00:02<00:00, 180859.11it/s] 89%|████████▉ | 491522/552076 [00:02<00:00, 174295.77it/s] 92%|█████████▏| 509181/552076 [00:02<00:00, 159614.99it/s] 96%|█████████▌| 528621/552076 [00:03<00:00, 168667.20it/s] 99%|█████████▉| 548515/552076 [00:03<00:00, 176734.07it/s]100%|██████████| 552076/552076 [00:03<00:00, 176012.75it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18497/552076 [00:00<00:02, 184969.29it/s]  6%|▌         | 30953/552076 [00:00<00:03, 161474.97it/s]  8%|▊         | 43521/552076 [00:00<00:03, 148758.36it/s] 10%|▉         | 53744/552076 [00:00<00:03, 130885.62it/s] 13%|█▎        | 70603/552076 [00:00<00:03, 140298.06it/s] 16%|█▌        | 89515/552076 [00:00<00:03, 152075.39it/s] 20%|█▉        | 108723/552076 [00:00<00:02, 162208.87it/s] 23%|██▎       | 127925/552076 [00:00<00:02, 170132.75it/s] 26%|██▌       | 144501/552076 [00:00<00:02, 167285.95it/s] 29%|██▉       | 160934/552076 [00:01<00:02, 164328.06it/s] 33%|███▎      | 182744/552076 [00:01<00:02, 177452.25it/s] 36%|███▋      | 200654/552076 [00:01<00:02, 146394.32it/s] 39%|███▉      | 216309/552076 [00:01<00:02, 116208.96it/s] 42%|████▏     | 230766/552076 [00:01<00:02, 123475.41it/s] 45%|████▍     | 247754/552076 [00:01<00:02, 134496.49it/s] 48%|████▊     | 262410/552076 [00:01<00:02, 97186.72it/s]  50%|████▉     | 274439/552076 [00:02<00:03, 84327.57it/s] 52%|█████▏    | 286738/552076 [00:02<00:02, 91678.50it/s] 54%|█████▍    | 297438/552076 [00:02<00:02, 85277.47it/s] 56%|█████▌    | 310259/552076 [00:02<00:02, 94800.24it/s] 59%|█████▉    | 326523/552076 [00:02<00:02, 108359.80it/s] 61%|██████▏   | 338849/552076 [00:02<00:01, 112437.25it/s] 64%|██████▎   | 351171/552076 [00:02<00:02, 97342.92it/s]  66%|██████▌   | 362387/552076 [00:02<00:01, 101359.32it/s] 69%|██████▊   | 378240/552076 [00:03<00:01, 113654.53it/s] 72%|███████▏  | 397825/552076 [00:03<00:01, 130024.89it/s] 76%|███████▌  | 417672/552076 [00:03<00:00, 145028.11it/s] 79%|███████▊  | 433828/552076 [00:03<00:00, 148903.85it/s] 81%|████████▏ | 449902/552076 [00:03<00:00, 150926.73it/s] 85%|████████▌ | 470062/552076 [00:03<00:00, 163234.88it/s] 89%|████████▊ | 489147/552076 [00:03<00:00, 170641.07it/s] 92%|█████████▏| 506911/552076 [00:03<00:00, 165171.16it/s] 95%|█████████▍| 524285/552076 [00:03<00:00, 167651.31it/s] 98%|█████████▊| 542795/552076 [00:03<00:00, 172529.46it/s]100%|██████████| 552076/552076 [00:04<00:00, 137084.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20335/552076 [00:00<00:02, 203349.71it/s]  8%|▊         | 43137/552076 [00:00<00:02, 210169.03it/s] 12%|█▏        | 66345/552076 [00:00<00:02, 216292.27it/s] 16%|█▌        | 87474/552076 [00:00<00:02, 214764.93it/s] 19%|█▉        | 107317/552076 [00:00<00:02, 209588.61it/s] 24%|██▎       | 130474/552076 [00:00<00:01, 215718.27it/s] 28%|██▊       | 152425/552076 [00:00<00:01, 216840.80it/s] 31%|███       | 172503/552076 [00:00<00:01, 191780.66it/s] 35%|███▍      | 191089/552076 [00:00<00:01, 185033.89it/s] 38%|███▊      | 209252/552076 [00:01<00:01, 183995.05it/s] 41%|████      | 227399/552076 [00:01<00:01, 167833.85it/s] 45%|████▍     | 245781/552076 [00:01<00:01, 172328.23it/s] 48%|████▊     | 265729/552076 [00:01<00:01, 179662.82it/s] 52%|█████▏    | 286684/552076 [00:01<00:01, 187691.68it/s] 56%|█████▌    | 307495/552076 [00:01<00:01, 193381.33it/s] 59%|█████▉    | 327016/552076 [00:01<00:01, 178948.01it/s] 63%|██████▎   | 345253/552076 [00:01<00:01, 173293.98it/s] 66%|██████▌   | 365284/552076 [00:01<00:01, 180599.88it/s] 69%|██████▉   | 383634/552076 [00:02<00:00, 181459.27it/s] 73%|███████▎  | 401973/552076 [00:02<00:00, 178949.27it/s] 76%|███████▌  | 420011/552076 [00:02<00:00, 176533.76it/s] 80%|███████▉  | 439600/552076 [00:02<00:00, 181925.07it/s] 83%|████████▎ | 457910/552076 [00:02<00:00, 181063.23it/s] 86%|████████▋ | 476253/552076 [00:02<00:00, 181764.55it/s] 90%|████████▉ | 495657/552076 [00:02<00:00, 185278.98it/s] 93%|█████████▎| 514938/552076 [00:02<00:00, 187473.22it/s] 97%|█████████▋| 534228/552076 [00:02<00:00, 189066.86it/s]100%|██████████| 552076/552076 [00:02<00:00, 184422.03it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19643/552076 [00:00<00:02, 196421.29it/s]  7%|▋         | 36374/552076 [00:00<00:02, 186675.39it/s] 10%|▉         | 54836/552076 [00:00<00:02, 186051.49it/s] 13%|█▎        | 74382/552076 [00:00<00:02, 188776.03it/s] 16%|█▋        | 90251/552076 [00:00<00:02, 178612.87it/s] 19%|█▉        | 104967/552076 [00:00<00:02, 151899.70it/s] 23%|██▎       | 124813/552076 [00:00<00:02, 163400.14it/s] 26%|██▋       | 145594/552076 [00:00<00:02, 174592.64it/s] 29%|██▉       | 162699/552076 [00:00<00:02, 166074.95it/s] 32%|███▏      | 179146/552076 [00:01<00:02, 133453.34it/s] 35%|███▌      | 193404/552076 [00:01<00:03, 108325.02it/s] 37%|███▋      | 206763/552076 [00:01<00:03, 114840.13it/s] 40%|████      | 221710/552076 [00:01<00:02, 123415.99it/s] 43%|████▎     | 234996/552076 [00:01<00:03, 86873.86it/s]  45%|████▍     | 245838/552076 [00:01<00:03, 80300.96it/s] 47%|████▋     | 258332/552076 [00:02<00:03, 89940.11it/s] 49%|████▊     | 268826/552076 [00:02<00:03, 84124.06it/s] 51%|█████     | 281547/552076 [00:02<00:02, 93638.39it/s] 53%|█████▎    | 293958/552076 [00:02<00:02, 101081.93it/s] 56%|█████▌    | 306460/552076 [00:02<00:02, 107241.72it/s] 58%|█████▊    | 317959/552076 [00:02<00:02, 96340.96it/s]  60%|█████▉    | 329008/552076 [00:02<00:02, 99618.20it/s] 61%|██████▏   | 339524/552076 [00:02<00:02, 94062.00it/s] 63%|██████▎   | 349382/552076 [00:02<00:02, 88821.39it/s] 67%|██████▋   | 370474/552076 [00:03<00:01, 107488.04it/s] 71%|███████   | 391840/552076 [00:03<00:01, 126318.43it/s] 74%|███████▍  | 407216/552076 [00:03<00:01, 117760.99it/s] 77%|███████▋  | 426671/552076 [00:03<00:00, 133576.90it/s] 81%|████████  | 445916/552076 [00:03<00:00, 147073.68it/s] 84%|████████▍ | 465795/552076 [00:03<00:00, 159523.21it/s] 88%|████████▊ | 486310/552076 [00:03<00:00, 170926.08it/s] 92%|█████████▏| 506600/552076 [00:03<00:00, 179406.56it/s] 96%|█████████▌| 527571/552076 [00:03<00:00, 187536.16it/s] 99%|█████████▉| 548474/552076 [00:04<00:00, 193503.16it/s]100%|██████████| 552076/552076 [00:04<00:00, 136481.19it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19810/552076 [00:00<00:02, 198095.47it/s]  7%|▋         | 40353/552076 [00:00<00:02, 200237.92it/s] 11%|█▏        | 62568/552076 [00:00<00:02, 206342.65it/s] 15%|█▍        | 81978/552076 [00:00<00:02, 202508.50it/s] 19%|█▉        | 103621/552076 [00:00<00:02, 206490.58it/s] 23%|██▎       | 124602/552076 [00:00<00:02, 207473.47it/s] 27%|██▋       | 146403/552076 [00:00<00:01, 210523.50it/s] 30%|███       | 165863/552076 [00:00<00:01, 202568.84it/s] 34%|███▎      | 185070/552076 [00:00<00:02, 178437.90it/s] 37%|███▋      | 205275/552076 [00:01<00:01, 184918.88it/s] 41%|████      | 225349/552076 [00:01<00:01, 189394.13it/s] 44%|████▍     | 244691/552076 [00:01<00:01, 190581.55it/s] 48%|████▊     | 263985/552076 [00:01<00:01, 191281.17it/s] 51%|█████▏    | 283269/552076 [00:01<00:01, 191742.26it/s] 55%|█████▍    | 302433/552076 [00:01<00:01, 171035.77it/s] 58%|█████▊    | 320725/552076 [00:01<00:01, 174434.41it/s] 61%|██████▏   | 339076/552076 [00:01<00:01, 177060.85it/s] 65%|██████▍   | 357710/552076 [00:01<00:01, 179745.14it/s] 68%|██████▊   | 376611/552076 [00:01<00:00, 182426.72it/s] 72%|███████▏  | 395962/552076 [00:02<00:00, 185615.87it/s] 75%|███████▌  | 416121/552076 [00:02<00:00, 190133.43it/s] 79%|███████▉  | 436388/552076 [00:02<00:00, 193727.33it/s] 83%|████████▎ | 455846/552076 [00:02<00:00, 189549.29it/s] 86%|████████▌ | 475511/552076 [00:02<00:00, 191623.66it/s] 90%|████████▉ | 495545/552076 [00:02<00:00, 194154.83it/s] 93%|█████████▎| 515697/552076 [00:02<00:00, 196304.82it/s] 97%|█████████▋| 536198/552076 [00:02<00:00, 198836.42it/s]100%|██████████| 552076/552076 [00:02<00:00, 192221.64it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20374/552076 [00:00<00:02, 203734.37it/s]  6%|▌         | 32519/552076 [00:00<00:03, 169316.40it/s]  7%|▋         | 41288/552076 [00:00<00:03, 132354.90it/s] 10%|█         | 56675/552076 [00:00<00:03, 138149.87it/s] 14%|█▍        | 78359/552076 [00:00<00:03, 155026.63it/s] 18%|█▊        | 100742/552076 [00:00<00:02, 170773.97it/s] 22%|██▏       | 122209/552076 [00:00<00:02, 181933.81it/s] 25%|██▌       | 140423/552076 [00:00<00:02, 181995.28it/s] 29%|██▉       | 158917/552076 [00:00<00:02, 182868.47it/s] 32%|███▏      | 177049/552076 [00:01<00:02, 147269.11it/s] 35%|███▍      | 192780/552076 [00:01<00:02, 139536.20it/s] 38%|███▊      | 210657/552076 [00:01<00:02, 149370.20it/s] 41%|████      | 226646/552076 [00:01<00:02, 152377.70it/s] 44%|████▍     | 242420/552076 [00:01<00:02, 148574.75it/s] 47%|████▋     | 257674/552076 [00:01<00:02, 139296.62it/s] 49%|████▉     | 271999/552076 [00:01<00:02, 110478.25it/s] 53%|█████▎    | 291591/552076 [00:01<00:02, 127107.42it/s] 57%|█████▋    | 312262/552076 [00:02<00:01, 143709.32it/s] 60%|█████▉    | 328587/552076 [00:02<00:01, 144214.81it/s] 62%|██████▏   | 344377/552076 [00:02<00:02, 88932.93it/s]  65%|██████▍   | 356838/552076 [00:02<00:02, 73884.81it/s] 67%|██████▋   | 367150/552076 [00:02<00:02, 76126.83it/s] 68%|██████▊   | 376826/552076 [00:02<00:02, 75233.92it/s] 70%|███████   | 387830/552076 [00:03<00:01, 83120.44it/s] 72%|███████▏  | 397411/552076 [00:03<00:02, 54033.67it/s] 74%|███████▍  | 408107/552076 [00:03<00:02, 63453.03it/s] 76%|███████▌  | 419261/552076 [00:03<00:01, 72877.92it/s] 78%|███████▊  | 428577/552076 [00:03<00:01, 76279.42it/s] 79%|███████▉  | 437666/552076 [00:03<00:01, 79374.37it/s] 81%|████████▏ | 448657/552076 [00:03<00:01, 86590.38it/s] 83%|████████▎ | 459916/552076 [00:04<00:00, 93035.12it/s] 85%|████████▌ | 471570/552076 [00:04<00:00, 99025.45it/s] 88%|████████▊ | 484125/552076 [00:04<00:00, 105726.03it/s] 90%|████████▉ | 495284/552076 [00:04<00:00, 106553.73it/s] 92%|█████████▏| 506352/552076 [00:04<00:00, 105401.60it/s] 94%|█████████▍| 518083/552076 [00:04<00:00, 108710.37it/s] 96%|█████████▌| 529684/552076 [00:04<00:00, 110799.41it/s] 98%|█████████▊| 541150/552076 [00:04<00:00, 111928.55it/s]100%|██████████| 552076/552076 [00:04<00:00, 114509.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12267/552076 [00:00<00:04, 122663.98it/s]  4%|▍         | 23371/552076 [00:00<00:04, 118925.60it/s]  6%|▌         | 32684/552076 [00:00<00:04, 109800.42it/s]  8%|▊         | 44558/552076 [00:00<00:04, 112336.28it/s] 10%|█         | 56439/552076 [00:00<00:04, 114200.61it/s] 12%|█▏        | 68495/552076 [00:00<00:04, 114863.34it/s] 15%|█▍        | 80124/552076 [00:00<00:04, 115287.60it/s] 16%|█▋        | 90690/552076 [00:00<00:04, 101969.99it/s] 18%|█▊        | 100792/552076 [00:00<00:04, 101681.18it/s] 20%|██        | 110926/552076 [00:01<00:04, 101578.47it/s] 22%|██▏       | 121401/552076 [00:01<00:04, 102507.52it/s] 24%|██▍       | 132611/552076 [00:01<00:03, 105206.61it/s] 26%|██▌       | 143933/552076 [00:01<00:03, 107488.60it/s] 28%|██▊       | 154642/552076 [00:01<00:04, 93466.51it/s]  30%|██▉       | 165570/552076 [00:01<00:03, 97707.17it/s] 32%|███▏      | 176558/552076 [00:01<00:03, 101063.86it/s] 34%|███▍      | 187869/552076 [00:01<00:03, 104396.74it/s] 36%|███▌      | 199413/552076 [00:01<00:03, 107479.69it/s] 38%|███▊      | 210849/552076 [00:01<00:03, 109452.74it/s] 40%|████      | 221906/552076 [00:02<00:03, 109613.92it/s] 42%|████▏     | 233358/552076 [00:02<00:02, 111039.14it/s] 44%|████▍     | 245036/552076 [00:02<00:02, 112700.19it/s] 47%|████▋     | 256917/552076 [00:02<00:02, 114463.86it/s] 49%|████▊     | 268476/552076 [00:02<00:02, 114798.69it/s] 51%|█████     | 280228/552076 [00:02<00:02, 115594.23it/s] 53%|█████▎    | 291868/552076 [00:02<00:02, 115833.50it/s] 55%|█████▍    | 303467/552076 [00:02<00:02, 114861.20it/s] 57%|█████▋    | 314966/552076 [00:02<00:02, 113798.70it/s] 59%|█████▉    | 326597/552076 [00:02<00:01, 114539.69it/s] 61%|██████    | 338060/552076 [00:03<00:01, 114253.09it/s] 63%|██████▎   | 349492/552076 [00:03<00:01, 111459.59it/s] 65%|██████▌   | 360658/552076 [00:03<00:01, 99174.60it/s]  67%|██████▋   | 371701/552076 [00:03<00:01, 102301.11it/s] 69%|██████▉   | 382884/552076 [00:03<00:01, 104984.76it/s] 72%|███████▏  | 395320/552076 [00:03<00:01, 110131.17it/s] 74%|███████▍  | 408607/552076 [00:03<00:01, 116089.61it/s] 76%|███████▌  | 420430/552076 [00:03<00:01, 96806.69it/s]  78%|███████▊  | 430799/552076 [00:04<00:01, 70271.91it/s] 81%|████████  | 447292/552076 [00:04<00:01, 84887.60it/s] 85%|████████▍ | 468616/552076 [00:04<00:00, 103593.74it/s] 87%|████████▋ | 482664/552076 [00:04<00:00, 112144.63it/s] 90%|████████▉ | 496664/552076 [00:04<00:00, 84881.43it/s]  92%|█████████▏| 508089/552076 [00:04<00:00, 88173.67it/s] 94%|█████████▍| 518995/552076 [00:04<00:00, 81188.19it/s] 97%|█████████▋| 537969/552076 [00:05<00:00, 98009.23it/s]100%|██████████| 552076/552076 [00:05<00:00, 106918.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12173/552076 [00:00<00:04, 121723.73it/s]  3%|▎         | 16452/552076 [00:00<00:07, 67392.85it/s]   4%|▎         | 20458/552076 [00:00<00:10, 51401.47it/s]  5%|▌         | 29126/552076 [00:00<00:08, 58550.10it/s]  8%|▊         | 41784/552076 [00:00<00:07, 69804.54it/s] 11%|█         | 59739/552076 [00:00<00:05, 85478.51it/s] 14%|█▍        | 79511/552076 [00:00<00:04, 103023.56it/s] 18%|█▊        | 99886/552076 [00:00<00:03, 120962.31it/s] 22%|██▏       | 119099/552076 [00:00<00:03, 136083.19it/s] 25%|██▌       | 139212/552076 [00:01<00:02, 150704.28it/s] 28%|██▊       | 156834/552076 [00:01<00:02, 133385.09it/s] 32%|███▏      | 176759/552076 [00:01<00:02, 148068.70it/s] 36%|███▌      | 196136/552076 [00:01<00:02, 159341.44it/s] 39%|███▉      | 215380/552076 [00:01<00:02, 168009.69it/s] 43%|████▎     | 235637/552076 [00:01<00:01, 177072.03it/s] 46%|████▋     | 256163/552076 [00:01<00:01, 184679.56it/s] 50%|█████     | 276807/552076 [00:01<00:01, 190710.08it/s] 54%|█████▍    | 297014/552076 [00:01<00:01, 193979.83it/s] 58%|█████▊    | 317466/552076 [00:02<00:01, 197023.90it/s] 61%|██████    | 337490/552076 [00:02<00:01, 197973.83it/s] 65%|██████▍   | 358086/552076 [00:02<00:00, 200301.29it/s] 69%|██████▊   | 378282/552076 [00:02<00:01, 156607.14it/s] 72%|███████▏  | 397617/552076 [00:02<00:00, 166075.00it/s] 76%|███████▌  | 418835/552076 [00:02<00:00, 177653.98it/s] 80%|███████▉  | 440831/552076 [00:02<00:00, 188530.36it/s] 84%|████████▎ | 461633/552076 [00:02<00:00, 193980.17it/s] 87%|████████▋ | 481743/552076 [00:02<00:00, 172507.46it/s] 91%|█████████ | 501461/552076 [00:03<00:00, 179234.16it/s] 94%|█████████▍| 520109/552076 [00:03<00:00, 179325.70it/s] 98%|█████████▊| 538549/552076 [00:03<00:00, 178181.36it/s]100%|██████████| 552076/552076 [00:03<00:00, 165022.06it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17737/552076 [00:00<00:03, 177360.02it/s]  6%|▋         | 35494/552076 [00:00<00:02, 177421.36it/s] 10%|▉         | 54315/552076 [00:00<00:02, 180524.62it/s] 13%|█▎        | 72971/552076 [00:00<00:02, 182293.76it/s] 17%|█▋        | 92322/552076 [00:00<00:02, 185519.36it/s] 20%|██        | 112048/552076 [00:00<00:02, 188891.28it/s] 24%|██▍       | 131990/552076 [00:00<00:02, 191929.22it/s] 28%|██▊       | 151962/552076 [00:00<00:02, 194200.31it/s] 31%|███       | 170390/552076 [00:00<00:02, 181390.64it/s] 34%|███▍      | 188006/552076 [00:01<00:02, 163565.19it/s] 37%|███▋      | 204329/552076 [00:01<00:02, 160706.92it/s] 40%|███▉      | 220387/552076 [00:01<00:02, 158682.23it/s] 43%|████▎     | 237217/552076 [00:01<00:01, 161447.73it/s] 47%|████▋     | 257489/552076 [00:01<00:01, 171948.95it/s] 50%|█████     | 277338/552076 [00:01<00:01, 179134.66it/s] 54%|█████▍    | 296818/552076 [00:01<00:01, 183560.74it/s] 57%|█████▋    | 315351/552076 [00:01<00:01, 162374.84it/s] 60%|██████    | 332162/552076 [00:01<00:01, 137794.00it/s] 63%|██████▎   | 350254/552076 [00:02<00:01, 148405.64it/s] 67%|██████▋   | 368463/552076 [00:02<00:01, 157123.61it/s] 70%|███████   | 386805/552076 [00:02<00:01, 164185.18it/s] 74%|███████▎  | 406527/552076 [00:02<00:00, 172870.33it/s] 77%|███████▋  | 425858/552076 [00:02<00:00, 178533.08it/s] 81%|████████  | 445470/552076 [00:02<00:00, 183467.27it/s] 84%|████████▍ | 464627/552076 [00:02<00:00, 185821.25it/s] 88%|████████▊ | 483462/552076 [00:02<00:00, 148836.81it/s] 91%|█████████ | 499696/552076 [00:03<00:00, 133951.73it/s] 94%|█████████▎| 517056/552076 [00:03<00:00, 143802.73it/s] 96%|█████████▋| 532499/552076 [00:03<00:00, 111053.94it/s] 99%|█████████▉| 545485/552076 [00:03<00:00, 87180.57it/s] 100%|██████████| 552076/552076 [00:03<00:00, 153559.96it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8774/552076 [00:00<00:09, 59496.75it/s]  4%|▍         | 23114/552076 [00:00<00:07, 72163.47it/s]  6%|▋         | 35440/552076 [00:00<00:06, 82411.99it/s]  9%|▉         | 48346/552076 [00:00<00:05, 92433.43it/s] 10%|█         | 57527/552076 [00:00<00:06, 81422.21it/s] 12%|█▏        | 68784/552076 [00:00<00:05, 87067.88it/s] 14%|█▍        | 77737/552076 [00:00<00:05, 82640.45it/s] 17%|█▋        | 93042/552076 [00:00<00:04, 95871.35it/s] 20%|█▉        | 110024/552076 [00:01<00:04, 110277.38it/s] 23%|██▎       | 129601/552076 [00:01<00:03, 126902.45it/s] 26%|██▌       | 144200/552076 [00:01<00:03, 127785.41it/s] 30%|██▉       | 165304/552076 [00:01<00:02, 144938.51it/s] 33%|███▎      | 183929/552076 [00:01<00:02, 155268.52it/s] 37%|███▋      | 203113/552076 [00:01<00:02, 164686.51it/s] 41%|████      | 224160/552076 [00:01<00:01, 176183.19it/s] 44%|████▍     | 243717/552076 [00:01<00:01, 181581.88it/s] 48%|████▊     | 263879/552076 [00:01<00:01, 187162.05it/s] 52%|█████▏    | 284837/552076 [00:01<00:01, 193366.58it/s] 55%|█████▌    | 304983/552076 [00:02<00:01, 195724.73it/s] 59%|█████▉    | 326826/552076 [00:02<00:01, 202023.58it/s] 63%|██████▎   | 348233/552076 [00:02<00:00, 205490.78it/s] 67%|██████▋   | 370615/552076 [00:02<00:00, 210664.89it/s] 71%|███████▏  | 394162/552076 [00:02<00:00, 217537.53it/s] 75%|███████▌  | 416114/552076 [00:02<00:00, 218127.79it/s] 79%|███████▉  | 438095/552076 [00:02<00:00, 218627.94it/s] 83%|████████▎ | 460048/552076 [00:02<00:00, 217512.08it/s] 88%|████████▊ | 483872/552076 [00:02<00:00, 223340.30it/s] 92%|█████████▏| 506567/552076 [00:02<00:00, 224409.89it/s] 96%|█████████▌| 529068/552076 [00:03<00:00, 205033.61it/s]100%|█████████▉| 549939/552076 [00:03<00:00, 191374.51it/s]100%|██████████| 552076/552076 [00:03<00:00, 172169.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22685/552076 [00:00<00:02, 226849.13it/s]  8%|▊         | 44263/552076 [00:00<00:02, 223409.70it/s] 12%|█▏        | 66627/552076 [00:00<00:02, 223477.85it/s] 16%|█▌        | 88556/552076 [00:00<00:02, 222204.54it/s] 19%|█▉        | 107585/552076 [00:00<00:02, 211556.01it/s] 23%|██▎       | 125041/552076 [00:00<00:02, 180681.69it/s] 26%|██▌       | 144563/552076 [00:00<00:02, 184809.30it/s] 30%|██▉       | 163174/552076 [00:00<00:02, 185196.20it/s] 33%|███▎      | 182235/552076 [00:00<00:01, 186786.38it/s] 36%|███▋      | 201257/552076 [00:01<00:01, 187800.65it/s] 40%|████      | 220911/552076 [00:01<00:01, 190339.53it/s] 43%|████▎     | 240015/552076 [00:01<00:01, 190547.01it/s] 47%|████▋     | 259124/552076 [00:01<00:01, 190707.73it/s] 50%|█████     | 278344/552076 [00:01<00:01, 191150.99it/s] 54%|█████▍    | 298058/552076 [00:01<00:01, 192906.76it/s] 58%|█████▊    | 317857/552076 [00:01<00:01, 194400.62it/s] 61%|██████    | 337255/552076 [00:01<00:01, 179038.64it/s] 65%|██████▍   | 357024/552076 [00:01<00:01, 184252.57it/s] 68%|██████▊   | 377529/552076 [00:01<00:00, 190034.72it/s] 72%|███████▏  | 398251/552076 [00:02<00:00, 194881.72it/s] 76%|███████▌  | 418786/552076 [00:02<00:00, 197906.27it/s] 79%|███████▉  | 438696/552076 [00:02<00:00, 196708.33it/s] 83%|████████▎ | 458452/552076 [00:02<00:00, 177726.52it/s] 87%|████████▋ | 479083/552076 [00:02<00:00, 185433.80it/s] 91%|█████████ | 500196/552076 [00:02<00:00, 192459.18it/s] 94%|█████████▍| 520788/552076 [00:02<00:00, 196308.73it/s] 98%|█████████▊| 542490/552076 [00:02<00:00, 202093.10it/s]100%|██████████| 552076/552076 [00:02<00:00, 194182.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10368/552076 [00:00<00:05, 103679.85it/s]  4%|▍         | 24228/552076 [00:00<00:04, 112156.67it/s]  6%|▌         | 34323/552076 [00:00<00:04, 105379.14it/s]  8%|▊         | 41529/552076 [00:00<00:05, 88831.87it/s]  11%|█         | 58748/552076 [00:00<00:04, 103924.69it/s] 14%|█▍        | 76780/552076 [00:00<00:03, 119054.92it/s] 16%|█▌        | 89233/552076 [00:00<00:04, 92674.76it/s]  18%|█▊        | 99783/552076 [00:00<00:05, 88198.05it/s] 21%|██        | 115596/552076 [00:01<00:04, 101689.48it/s] 23%|██▎       | 127174/552076 [00:01<00:04, 92884.22it/s]  25%|██▌       | 139726/552076 [00:01<00:04, 100740.37it/s] 27%|██▋       | 150788/552076 [00:01<00:03, 101806.77it/s] 30%|███       | 166867/552076 [00:01<00:03, 114394.12it/s] 32%|███▏      | 179303/552076 [00:01<00:03, 95317.31it/s]  34%|███▍      | 190067/552076 [00:01<00:04, 83972.06it/s] 37%|███▋      | 202639/552076 [00:01<00:03, 93263.01it/s] 39%|███▉      | 215853/552076 [00:02<00:03, 102290.65it/s] 43%|████▎     | 236677/552076 [00:02<00:02, 120715.14it/s] 47%|████▋     | 257209/552076 [00:02<00:02, 137741.93it/s] 50%|████▉     | 275233/552076 [00:02<00:01, 148224.56it/s] 53%|█████▎    | 291876/552076 [00:02<00:01, 146387.17it/s] 56%|█████▋    | 311608/552076 [00:02<00:01, 158674.10it/s] 60%|██████    | 331697/552076 [00:02<00:01, 169350.25it/s] 64%|██████▍   | 352109/552076 [00:02<00:01, 178470.03it/s] 67%|██████▋   | 372063/552076 [00:02<00:00, 184308.08it/s] 71%|███████▏  | 393881/552076 [00:02<00:00, 193311.23it/s] 76%|███████▌  | 418145/552076 [00:03<00:00, 205866.62it/s] 80%|████████  | 442147/552076 [00:03<00:00, 215044.56it/s] 84%|████████▍ | 465599/552076 [00:03<00:00, 220536.86it/s] 89%|████████▊ | 489472/552076 [00:03<00:00, 225696.28it/s] 93%|█████████▎| 512970/552076 [00:03<00:00, 228402.72it/s] 97%|█████████▋| 536780/552076 [00:03<00:00, 231225.75it/s]100%|██████████| 552076/552076 [00:03<00:00, 151706.75it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20388/552076 [00:00<00:02, 203869.99it/s]  7%|▋         | 41380/552076 [00:00<00:02, 205647.82it/s] 11%|█▏        | 62689/552076 [00:00<00:02, 207824.65it/s] 16%|█▌        | 85833/552076 [00:00<00:02, 214385.46it/s] 19%|█▉        | 107314/552076 [00:00<00:02, 214509.49it/s] 23%|██▎       | 125380/552076 [00:00<00:02, 163433.42it/s] 26%|██▋       | 145722/552076 [00:00<00:02, 173673.23it/s] 30%|███       | 166663/552076 [00:00<00:02, 183044.37it/s] 34%|███▍      | 186794/552076 [00:00<00:01, 188163.57it/s] 37%|███▋      | 206901/552076 [00:01<00:01, 191857.24it/s] 41%|████      | 226125/552076 [00:01<00:01, 175426.27it/s] 44%|████▍     | 244121/552076 [00:01<00:01, 176760.03it/s] 48%|████▊     | 263490/552076 [00:01<00:01, 181517.14it/s] 51%|█████     | 282905/552076 [00:01<00:01, 185130.11it/s] 55%|█████▍    | 302827/552076 [00:01<00:01, 189141.40it/s] 58%|█████▊    | 322579/552076 [00:01<00:01, 191578.50it/s] 62%|██████▏   | 342418/552076 [00:01<00:01, 193571.57it/s] 66%|██████▌   | 362353/552076 [00:01<00:00, 195266.94it/s] 69%|██████▉   | 382517/552076 [00:02<00:00, 197133.59it/s] 73%|███████▎  | 402698/552076 [00:02<00:00, 198511.28it/s] 77%|███████▋  | 422581/552076 [00:02<00:00, 197735.90it/s] 80%|████████  | 442378/552076 [00:02<00:00, 195011.66it/s] 84%|████████▎ | 461904/552076 [00:02<00:00, 162505.06it/s] 87%|████████▋ | 481226/552076 [00:02<00:00, 170641.61it/s] 91%|█████████ | 501237/552076 [00:02<00:00, 178527.15it/s] 94%|█████████▍| 520276/552076 [00:02<00:00, 181927.26it/s] 98%|█████████▊| 539595/552076 [00:02<00:00, 185164.65it/s]100%|██████████| 552076/552076 [00:02<00:00, 187866.33it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7790/552076 [00:00<00:06, 77895.43it/s]  4%|▎         | 20628/552076 [00:00<00:06, 88313.56it/s]  7%|▋         | 40944/552076 [00:00<00:04, 106348.74it/s] 11%|█         | 60638/552076 [00:00<00:03, 123374.08it/s] 14%|█▍        | 76287/552076 [00:00<00:03, 131736.83it/s] 16%|█▋        | 89986/552076 [00:00<00:03, 115905.00it/s] 19%|█▉        | 105955/552076 [00:00<00:03, 126293.24it/s] 22%|██▏       | 122398/552076 [00:00<00:03, 135736.54it/s] 25%|██▍       | 136804/552076 [00:00<00:03, 133429.51it/s] 27%|██▋       | 150676/552076 [00:01<00:03, 109427.43it/s] 30%|██▉       | 164538/552076 [00:01<00:03, 116806.07it/s] 32%|███▏      | 177902/552076 [00:01<00:03, 121391.13it/s] 35%|███▍      | 190713/552076 [00:01<00:03, 112946.53it/s] 38%|███▊      | 209612/552076 [00:01<00:02, 128451.23it/s] 41%|████      | 223600/552076 [00:01<00:03, 104126.00it/s] 43%|████▎     | 235558/552076 [00:01<00:03, 90880.81it/s]  45%|████▍     | 246031/552076 [00:02<00:03, 85505.71it/s] 47%|████▋     | 262012/552076 [00:02<00:02, 97291.66it/s] 49%|████▉     | 273025/552076 [00:02<00:03, 87619.58it/s] 53%|█████▎    | 290709/552076 [00:02<00:02, 103246.34it/s] 55%|█████▍    | 302999/552076 [00:02<00:02, 104581.38it/s] 57%|█████▋    | 314771/552076 [00:02<00:02, 85984.96it/s]  60%|██████    | 332254/552076 [00:02<00:02, 101451.38it/s] 64%|██████▎   | 351783/552076 [00:02<00:01, 118538.05it/s] 66%|██████▋   | 366244/552076 [00:03<00:01, 118886.80it/s] 70%|██████▉   | 384562/552076 [00:03<00:01, 132877.16it/s] 73%|███████▎  | 404143/552076 [00:03<00:01, 147054.74it/s] 77%|███████▋  | 422978/552076 [00:03<00:00, 157406.01it/s] 80%|████████  | 443286/552076 [00:03<00:00, 168793.46it/s] 84%|████████▍ | 463395/552076 [00:03<00:00, 177336.70it/s] 88%|████████▊ | 484807/552076 [00:03<00:00, 186970.79it/s] 92%|█████████▏| 505887/552076 [00:03<00:00, 193531.78it/s] 95%|█████████▌| 526484/552076 [00:03<00:00, 197102.39it/s] 99%|█████████▉| 547609/552076 [00:03<00:00, 201141.62it/s]100%|██████████| 552076/552076 [00:03<00:00, 138161.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21181/552076 [00:00<00:02, 211801.62it/s]  7%|▋         | 40699/552076 [00:00<00:02, 206523.00it/s] 11%|█▏        | 62343/552076 [00:00<00:02, 209400.54it/s] 15%|█▌        | 83255/552076 [00:00<00:02, 209315.31it/s] 18%|█▊        | 99123/552076 [00:00<00:02, 175074.44it/s] 22%|██▏       | 120003/552076 [00:00<00:02, 183989.25it/s] 26%|██▌       | 142239/552076 [00:00<00:02, 194031.96it/s] 29%|██▉       | 160600/552076 [00:00<00:02, 142921.54it/s] 33%|███▎      | 181296/552076 [00:01<00:02, 157544.62it/s] 37%|███▋      | 202214/552076 [00:01<00:02, 170144.14it/s] 40%|███▉      | 220435/552076 [00:01<00:02, 160821.63it/s] 43%|████▎     | 238263/552076 [00:01<00:01, 165687.09it/s] 47%|████▋     | 258282/552076 [00:01<00:01, 174720.70it/s] 50%|█████     | 277000/552076 [00:01<00:01, 178278.28it/s] 54%|█████▍    | 296919/552076 [00:01<00:01, 184075.70it/s] 57%|█████▋    | 316215/552076 [00:01<00:01, 186653.29it/s] 61%|██████    | 335597/552076 [00:01<00:01, 188746.69it/s] 64%|██████▍   | 355062/552076 [00:01<00:01, 190479.39it/s] 68%|██████▊   | 374918/552076 [00:02<00:00, 192833.45it/s] 71%|███████▏  | 394305/552076 [00:02<00:00, 191806.88it/s] 75%|███████▌  | 414097/552076 [00:02<00:00, 193600.30it/s] 79%|███████▊  | 433513/552076 [00:02<00:00, 193305.00it/s] 82%|████████▏ | 452883/552076 [00:02<00:00, 170981.80it/s] 85%|████████▌ | 471582/552076 [00:02<00:00, 175487.51it/s] 89%|████████▊ | 489512/552076 [00:02<00:00, 175985.92it/s] 92%|█████████▏| 507378/552076 [00:02<00:00, 168886.85it/s] 95%|█████████▌| 525148/552076 [00:02<00:00, 171435.89it/s] 99%|█████████▉| 545511/552076 [00:03<00:00, 179971.84it/s]100%|██████████| 552076/552076 [00:03<00:00, 180548.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10381/552076 [00:00<00:05, 103806.39it/s]  4%|▍         | 24834/552076 [00:00<00:04, 113391.22it/s]  7%|▋         | 39984/552076 [00:00<00:04, 122645.38it/s] 11%|█         | 58285/552076 [00:00<00:03, 136113.02it/s] 14%|█▍        | 76983/552076 [00:00<00:03, 148207.98it/s] 17%|█▋        | 95450/552076 [00:00<00:02, 157539.02it/s] 21%|██        | 116623/552076 [00:00<00:02, 170640.56it/s] 25%|██▍       | 137175/552076 [00:00<00:02, 179792.29it/s] 28%|██▊       | 155274/552076 [00:00<00:02, 158472.43it/s] 31%|███       | 171667/552076 [00:01<00:03, 123244.03it/s] 34%|███▎      | 185577/552076 [00:01<00:02, 122814.81it/s] 36%|███▌      | 198969/552076 [00:01<00:03, 106899.77it/s] 39%|███▊      | 213032/552076 [00:01<00:02, 115187.05it/s] 41%|████      | 225537/552076 [00:01<00:02, 113238.65it/s] 43%|████▎     | 237559/552076 [00:01<00:03, 89824.74it/s]  45%|████▍     | 247792/552076 [00:01<00:03, 80558.05it/s] 48%|████▊     | 263552/552076 [00:02<00:03, 94402.32it/s] 50%|████▉     | 274658/552076 [00:02<00:03, 89924.71it/s] 53%|█████▎    | 290597/552076 [00:02<00:02, 103449.87it/s] 55%|█████▍    | 302521/552076 [00:02<00:02, 100698.03it/s] 57%|█████▋    | 313712/552076 [00:02<00:02, 85741.89it/s]  59%|█████▊    | 323456/552076 [00:02<00:03, 75895.68it/s] 61%|██████    | 335900/552076 [00:02<00:02, 85954.95it/s] 64%|██████▎   | 351417/552076 [00:02<00:02, 99234.01it/s] 67%|██████▋   | 371139/552076 [00:03<00:01, 116615.39it/s] 71%|███████   | 390670/552076 [00:03<00:01, 132649.44it/s] 74%|███████▍  | 410089/552076 [00:03<00:00, 146585.14it/s] 78%|███████▊  | 429673/552076 [00:03<00:00, 158546.13it/s] 81%|████████▏ | 449534/552076 [00:03<00:00, 168757.11it/s] 85%|████████▌ | 470163/552076 [00:03<00:00, 178499.40it/s] 89%|████████▊ | 489153/552076 [00:03<00:00, 159753.80it/s] 92%|█████████▏| 506839/552076 [00:03<00:00, 164526.77it/s] 95%|█████████▌| 526502/552076 [00:03<00:00, 172998.77it/s] 99%|█████████▉| 546304/552076 [00:04<00:00, 179813.80it/s]100%|██████████| 552076/552076 [00:04<00:00, 135472.36it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18740/552076 [00:00<00:02, 187398.84it/s]  6%|▌         | 32804/552076 [00:00<00:03, 170401.49it/s]  9%|▉         | 49445/552076 [00:00<00:02, 169183.03it/s] 12%|█▏        | 66252/552076 [00:00<00:02, 168843.01it/s] 15%|█▌        | 84149/552076 [00:00<00:02, 171756.74it/s] 19%|█▊        | 102519/552076 [00:00<00:02, 175172.14it/s] 22%|██▏       | 121980/552076 [00:00<00:02, 180581.93it/s] 26%|██▌       | 140894/552076 [00:00<00:02, 183064.43it/s] 29%|██▉       | 159891/552076 [00:00<00:02, 185081.82it/s] 32%|███▏      | 178666/552076 [00:01<00:02, 185873.41it/s] 36%|███▌      | 196948/552076 [00:01<00:01, 184946.25it/s] 39%|███▉      | 215948/552076 [00:01<00:01, 186432.53it/s] 42%|████▏     | 234359/552076 [00:01<00:01, 185546.55it/s] 46%|████▌     | 252752/552076 [00:01<00:01, 156969.94it/s] 49%|████▉     | 272197/552076 [00:01<00:01, 166603.39it/s] 53%|█████▎    | 291968/552076 [00:01<00:01, 174855.63it/s] 56%|█████▋    | 311814/552076 [00:01<00:01, 181323.48it/s] 60%|█████▉    | 331186/552076 [00:01<00:01, 184870.11it/s] 63%|██████▎   | 349995/552076 [00:01<00:01, 185321.89it/s] 67%|██████▋   | 368753/552076 [00:02<00:00, 183337.12it/s] 70%|███████   | 387250/552076 [00:02<00:01, 152108.55it/s] 74%|███████▎  | 406546/552076 [00:02<00:00, 162422.88it/s] 77%|███████▋  | 425944/552076 [00:02<00:00, 170754.49it/s] 81%|████████  | 444873/552076 [00:02<00:00, 175919.81it/s] 84%|████████▍ | 463571/552076 [00:02<00:00, 179095.84it/s] 87%|████████▋ | 482826/552076 [00:02<00:00, 182928.75it/s] 91%|█████████ | 501422/552076 [00:02<00:00, 176887.66it/s] 94%|█████████▍| 519662/552076 [00:02<00:00, 178503.98it/s] 97%|█████████▋| 538093/552076 [00:03<00:00, 180205.30it/s]100%|██████████| 552076/552076 [00:03<00:00, 176672.88it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12336/552076 [00:00<00:04, 123353.65it/s]  4%|▎         | 20164/552076 [00:00<00:05, 105180.13it/s]  5%|▌         | 28734/552076 [00:00<00:05, 98463.35it/s]   7%|▋         | 37350/552076 [00:00<00:05, 94416.59it/s]  9%|▊         | 48213/552076 [00:00<00:05, 98273.57it/s] 11%|█         | 60734/552076 [00:00<00:04, 105052.58it/s] 13%|█▎        | 70305/552076 [00:00<00:04, 102062.53it/s] 14%|█▍        | 79737/552076 [00:00<00:04, 94683.81it/s]  17%|█▋        | 91167/552076 [00:00<00:04, 99822.53it/s] 19%|█▊        | 103149/552076 [00:01<00:04, 105083.65it/s] 21%|██        | 116291/552076 [00:01<00:03, 111803.32it/s] 23%|██▎       | 127528/552076 [00:01<00:03, 106475.36it/s] 25%|██▌       | 138269/552076 [00:01<00:04, 91398.38it/s]  27%|██▋       | 147849/552076 [00:01<00:04, 86776.12it/s] 28%|██▊       | 157332/552076 [00:01<00:04, 88443.66it/s] 31%|███       | 171908/552076 [00:01<00:03, 100272.25it/s] 34%|███▍      | 187588/552076 [00:01<00:03, 107839.26it/s] 36%|███▌      | 199036/552076 [00:02<00:04, 81499.22it/s]  38%|███▊      | 208607/552076 [00:02<00:04, 74654.37it/s] 40%|███▉      | 219321/552076 [00:02<00:04, 82124.53it/s] 41%|████▏     | 228536/552076 [00:02<00:04, 80874.53it/s] 43%|████▎     | 237330/552076 [00:02<00:04, 78275.20it/s] 45%|████▌     | 249690/552076 [00:02<00:03, 87949.62it/s] 48%|████▊     | 262669/552076 [00:02<00:02, 97365.32it/s] 49%|████▉     | 273245/552076 [00:03<00:04, 69273.43it/s] 52%|█████▏    | 284989/552076 [00:03<00:03, 78991.99it/s] 54%|█████▍    | 300802/552076 [00:03<00:02, 92946.02it/s] 58%|█████▊    | 319511/552076 [00:03<00:02, 109471.65it/s] 61%|██████▏   | 338833/552076 [00:03<00:01, 125833.69it/s] 64%|██████▍   | 355615/552076 [00:03<00:01, 136043.66it/s] 67%|██████▋   | 371384/552076 [00:03<00:01, 139417.46it/s] 70%|███████   | 388578/552076 [00:03<00:01, 146907.93it/s] 75%|███████▍  | 411811/552076 [00:03<00:00, 165120.69it/s] 79%|███████▉  | 435813/552076 [00:03<00:00, 182174.62it/s] 83%|████████▎ | 459757/552076 [00:04<00:00, 196255.39it/s] 87%|████████▋ | 482989/552076 [00:04<00:00, 205839.35it/s] 92%|█████████▏| 506440/552076 [00:04<00:00, 213676.21it/s] 96%|█████████▌| 530108/552076 [00:04<00:00, 220091.87it/s]100%|██████████| 552076/552076 [00:04<00:00, 125330.93it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 23499/552076 [00:00<00:02, 234980.14it/s]  8%|▊         | 46603/552076 [00:00<00:02, 233781.42it/s] 13%|█▎        | 69480/552076 [00:00<00:02, 232253.47it/s] 17%|█▋        | 92801/552076 [00:00<00:01, 232538.84it/s] 21%|██        | 115158/552076 [00:00<00:01, 229772.92it/s] 25%|██▌       | 138609/552076 [00:00<00:01, 231172.26it/s] 29%|██▉       | 158971/552076 [00:00<00:01, 216198.55it/s] 32%|███▏      | 178859/552076 [00:00<00:01, 194011.56it/s] 36%|███▌      | 197476/552076 [00:00<00:01, 188226.79it/s] 39%|███▉      | 217311/552076 [00:01<00:01, 191152.96it/s] 43%|████▎     | 238425/552076 [00:01<00:01, 196738.88it/s] 47%|████▋     | 258846/552076 [00:01<00:01, 198921.68it/s] 51%|█████     | 278842/552076 [00:01<00:01, 199229.26it/s] 54%|█████▍    | 298671/552076 [00:01<00:01, 189771.83it/s] 58%|█████▊    | 317677/552076 [00:01<00:01, 176887.08it/s] 61%|██████    | 337696/552076 [00:01<00:01, 183286.43it/s] 65%|██████▍   | 357713/552076 [00:01<00:01, 188042.59it/s] 68%|██████▊   | 377922/552076 [00:01<00:00, 192045.49it/s] 72%|███████▏  | 397367/552076 [00:01<00:00, 192759.40it/s] 76%|███████▌  | 417129/552076 [00:02<00:00, 194189.20it/s] 79%|███████▉  | 437239/552076 [00:02<00:00, 196209.37it/s] 83%|████████▎ | 456915/552076 [00:02<00:00, 194543.49it/s] 86%|████████▋ | 476676/552076 [00:02<00:00, 195452.77it/s] 90%|████████▉ | 496252/552076 [00:02<00:00, 195521.70it/s] 94%|█████████▎| 516382/552076 [00:02<00:00, 197218.18it/s] 97%|█████████▋| 536123/552076 [00:02<00:00, 157123.05it/s]100%|██████████| 552076/552076 [00:02<00:00, 194091.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21264/552076 [00:00<00:02, 212635.64it/s]  8%|▊         | 41545/552076 [00:00<00:02, 209588.86it/s] 11%|█         | 61272/552076 [00:00<00:02, 205732.38it/s] 15%|█▌        | 82890/552076 [00:00<00:02, 208757.55it/s] 18%|█▊        | 98688/552076 [00:00<00:03, 144704.70it/s] 20%|██        | 112276/552076 [00:00<00:03, 120818.75it/s] 23%|██▎       | 124405/552076 [00:00<00:04, 105115.30it/s] 25%|██▍       | 135315/552076 [00:01<00:04, 96378.91it/s]  27%|██▋       | 147295/552076 [00:01<00:03, 102381.85it/s] 29%|██▉       | 160450/552076 [00:01<00:03, 109676.16it/s] 31%|███▏      | 173433/552076 [00:01<00:03, 115030.05it/s] 34%|███▎      | 185301/552076 [00:01<00:04, 90139.20it/s]  35%|███▌      | 195406/552076 [00:01<00:04, 88108.30it/s] 38%|███▊      | 207175/552076 [00:01<00:03, 95293.99it/s] 39%|███▉      | 217415/552076 [00:01<00:03, 83771.80it/s] 43%|████▎     | 234692/552076 [00:02<00:03, 99083.54it/s] 45%|████▍     | 246265/552076 [00:02<00:03, 98709.58it/s] 48%|████▊     | 263799/552076 [00:02<00:02, 113604.11it/s] 50%|█████     | 276785/552076 [00:02<00:03, 89795.49it/s]  52%|█████▏    | 287684/552076 [00:02<00:02, 89263.42it/s] 54%|█████▍    | 297955/552076 [00:02<00:02, 90212.42it/s] 56%|█████▌    | 307920/552076 [00:02<00:03, 81110.83it/s] 57%|█████▋    | 316865/552076 [00:02<00:02, 79451.80it/s] 59%|█████▉    | 327707/552076 [00:03<00:02, 86374.09it/s] 62%|██████▏   | 339726/552076 [00:03<00:02, 94335.86it/s] 63%|██████▎   | 349792/552076 [00:03<00:02, 87822.82it/s] 66%|██████▋   | 366465/552076 [00:03<00:01, 102354.12it/s] 69%|██████▊   | 378574/552076 [00:03<00:01, 107336.43it/s] 71%|███████   | 392845/552076 [00:03<00:01, 115959.12it/s] 75%|███████▍  | 412514/552076 [00:03<00:01, 132241.92it/s] 78%|███████▊  | 432065/552076 [00:03<00:00, 146459.00it/s] 82%|████████▏ | 451838/552076 [00:03<00:00, 158812.18it/s] 85%|████████▌ | 471407/552076 [00:03<00:00, 168327.25it/s] 89%|████████▊ | 489508/552076 [00:04<00:00, 171939.75it/s] 92%|█████████▏| 509298/552076 [00:04<00:00, 178981.46it/s] 96%|█████████▌| 528625/552076 [00:04<00:00, 183040.22it/s]100%|█████████▉| 550514/552076 [00:04<00:00, 192496.66it/s]100%|██████████| 552076/552076 [00:04<00:00, 125950.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22504/552076 [00:00<00:02, 225033.24it/s]  8%|▊         | 43839/552076 [00:00<00:02, 221394.34it/s] 12%|█▏        | 66804/552076 [00:00<00:02, 223807.94it/s] 16%|█▋        | 89754/552076 [00:00<00:02, 225485.28it/s] 20%|██        | 111787/552076 [00:00<00:01, 223911.33it/s] 24%|██▍       | 134876/552076 [00:00<00:01, 225957.60it/s] 28%|██▊       | 156249/552076 [00:00<00:01, 222142.82it/s] 32%|███▏      | 178548/552076 [00:00<00:01, 222394.14it/s] 36%|███▋      | 200540/552076 [00:00<00:01, 221643.90it/s] 40%|████      | 221809/552076 [00:01<00:01, 216089.76it/s] 44%|████▍     | 242822/552076 [00:01<00:01, 199959.43it/s] 48%|████▊     | 262640/552076 [00:01<00:01, 182516.39it/s] 51%|█████     | 281062/552076 [00:01<00:01, 181459.18it/s] 55%|█████▍    | 301465/552076 [00:01<00:01, 187687.51it/s] 59%|█████▊    | 323151/552076 [00:01<00:01, 195579.53it/s] 62%|██████▏   | 343932/552076 [00:01<00:01, 199092.80it/s] 66%|██████▌   | 363985/552076 [00:01<00:00, 193734.49it/s] 69%|██████▉   | 383491/552076 [00:01<00:00, 178009.44it/s] 73%|███████▎  | 403758/552076 [00:02<00:00, 184751.96it/s] 77%|███████▋  | 423671/552076 [00:02<00:00, 188842.07it/s] 80%|████████  | 443697/552076 [00:02<00:00, 192125.78it/s] 84%|████████▍ | 463769/552076 [00:02<00:00, 194625.55it/s] 88%|████████▊ | 484665/552076 [00:02<00:00, 198714.96it/s] 91%|█████████▏| 504651/552076 [00:02<00:00, 198710.33it/s] 95%|█████████▌| 524603/552076 [00:02<00:00, 198385.78it/s] 99%|█████████▉| 545548/552076 [00:02<00:00, 201579.55it/s]100%|██████████| 552076/552076 [00:02<00:00, 201784.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14530/552076 [00:00<00:03, 145293.56it/s]  6%|▌         | 30897/552076 [00:00<00:03, 150357.85it/s]  9%|▉         | 51135/552076 [00:00<00:03, 162920.46it/s] 13%|█▎        | 73663/552076 [00:00<00:02, 177673.91it/s] 17%|█▋        | 95149/552076 [00:00<00:02, 187402.37it/s] 21%|██        | 114942/552076 [00:00<00:02, 190439.25it/s] 25%|██▍       | 136585/552076 [00:00<00:02, 197555.42it/s] 28%|██▊       | 155507/552076 [00:00<00:02, 171792.25it/s] 31%|███▏      | 172704/552076 [00:00<00:02, 171388.55it/s] 35%|███▍      | 190696/552076 [00:01<00:02, 173859.81it/s] 38%|███▊      | 208100/552076 [00:01<00:02, 127686.90it/s] 40%|████      | 222648/552076 [00:01<00:02, 112771.73it/s] 43%|████▎     | 239591/552076 [00:01<00:02, 125346.60it/s] 47%|████▋     | 258699/552076 [00:01<00:02, 139770.06it/s] 51%|█████     | 279612/552076 [00:01<00:01, 155211.93it/s] 54%|█████▍    | 298667/552076 [00:01<00:01, 164351.40it/s] 57%|█████▋    | 316410/552076 [00:02<00:01, 134551.34it/s] 60%|██████    | 331667/552076 [00:02<00:01, 124738.33it/s] 63%|██████▎   | 345545/552076 [00:02<00:01, 128111.28it/s] 65%|██████▌   | 359362/552076 [00:02<00:01, 130854.79it/s] 68%|██████▊   | 377128/552076 [00:02<00:01, 142084.08it/s] 71%|███████   | 392121/552076 [00:02<00:01, 117412.46it/s] 73%|███████▎  | 405123/552076 [00:02<00:01, 97816.89it/s]  76%|███████▌  | 417231/552076 [00:02<00:01, 103798.05it/s] 78%|███████▊  | 429340/552076 [00:03<00:01, 108442.44it/s] 80%|███████▉  | 441010/552076 [00:03<00:01, 84956.81it/s]  82%|████████▏ | 453667/552076 [00:03<00:01, 94251.74it/s] 84%|████████▍ | 464765/552076 [00:03<00:00, 97768.26it/s] 86%|████████▌ | 475468/552076 [00:03<00:00, 88499.41it/s] 89%|████████▉ | 491256/552076 [00:03<00:00, 101938.26it/s] 91%|█████████ | 503534/552076 [00:03<00:00, 107405.77it/s] 94%|█████████▎| 517283/552076 [00:03<00:00, 114950.75it/s] 97%|█████████▋| 535513/552076 [00:03<00:00, 129278.58it/s]100%|█████████▉| 549620/552076 [00:04<00:00, 130123.61it/s]100%|██████████| 552076/552076 [00:04<00:00, 134523.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22297/552076 [00:00<00:02, 222969.15it/s]  8%|▊         | 43664/552076 [00:00<00:02, 220095.41it/s] 12%|█▏        | 64993/552076 [00:00<00:02, 218007.73it/s] 15%|█▌        | 84966/552076 [00:00<00:02, 212182.29it/s] 19%|█▉        | 105223/552076 [00:00<00:02, 209204.07it/s] 23%|██▎       | 124745/552076 [00:00<00:02, 204802.36it/s] 27%|██▋       | 146791/552076 [00:00<00:01, 209258.11it/s] 30%|███       | 167204/552076 [00:00<00:01, 207691.22it/s] 34%|███▍      | 189624/552076 [00:00<00:01, 212381.43it/s] 38%|███▊      | 212303/552076 [00:01<00:01, 216506.02it/s] 42%|████▏     | 234485/552076 [00:01<00:01, 218072.73it/s] 46%|████▋     | 255896/552076 [00:01<00:01, 215176.33it/s] 50%|█████     | 277145/552076 [00:01<00:01, 152592.46it/s] 53%|█████▎    | 294746/552076 [00:01<00:01, 149348.07it/s] 57%|█████▋    | 316586/552076 [00:01<00:01, 164997.57it/s] 61%|██████▏   | 339064/552076 [00:01<00:01, 179302.77it/s] 65%|██████▌   | 359692/552076 [00:01<00:01, 186624.72it/s] 69%|██████▉   | 380738/552076 [00:01<00:00, 193187.39it/s] 73%|███████▎  | 400919/552076 [00:02<00:00, 191993.63it/s] 76%|███████▌  | 420724/552076 [00:02<00:00, 176680.49it/s] 80%|███████▉  | 441132/552076 [00:02<00:00, 184095.10it/s] 83%|████████▎ | 460087/552076 [00:02<00:00, 174575.50it/s] 87%|████████▋ | 479611/552076 [00:02<00:00, 180299.81it/s] 90%|█████████ | 499481/552076 [00:02<00:00, 185449.64it/s] 94%|█████████▍| 519477/552076 [00:02<00:00, 189574.45it/s] 98%|█████████▊| 538673/552076 [00:02<00:00, 189004.69it/s]100%|██████████| 552076/552076 [00:02<00:00, 190718.13it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13762/552076 [00:00<00:03, 137612.91it/s]  5%|▌         | 28694/552076 [00:00<00:03, 140925.40it/s]  7%|▋         | 40423/552076 [00:00<00:03, 132890.68it/s] 10%|█         | 56828/552076 [00:00<00:03, 140920.47it/s] 14%|█▍        | 77404/552076 [00:00<00:03, 155632.32it/s] 18%|█▊        | 98888/552076 [00:00<00:02, 169659.06it/s] 21%|██▏       | 118460/552076 [00:00<00:02, 176716.74it/s] 25%|██▌       | 138589/552076 [00:00<00:02, 183432.81it/s] 29%|██▊       | 158139/552076 [00:00<00:02, 186891.10it/s] 32%|███▏      | 176649/552076 [00:01<00:02, 173486.51it/s] 35%|███▌      | 194065/552076 [00:01<00:02, 173433.58it/s] 39%|███▉      | 214834/552076 [00:01<00:01, 182461.19it/s] 43%|████▎     | 235228/552076 [00:01<00:01, 188412.97it/s] 46%|████▌     | 254770/552076 [00:01<00:01, 190460.60it/s] 50%|████▉     | 274851/552076 [00:01<00:01, 193450.77it/s] 53%|█████▎    | 294967/552076 [00:01<00:01, 195698.38it/s] 57%|█████▋    | 315843/552076 [00:01<00:01, 199440.11it/s] 61%|██████    | 336967/552076 [00:01<00:01, 202838.52it/s] 65%|██████▍   | 358697/552076 [00:01<00:00, 206969.52it/s] 69%|██████▊   | 379458/552076 [00:02<00:01, 148036.72it/s] 72%|███████▏  | 396659/552076 [00:02<00:01, 112328.41it/s] 74%|███████▍  | 410856/552076 [00:02<00:01, 117330.63it/s] 77%|███████▋  | 426914/552076 [00:02<00:00, 127642.39it/s] 80%|███████▉  | 441438/552076 [00:02<00:01, 100804.38it/s] 82%|████████▏ | 453633/552076 [00:02<00:00, 104957.68it/s] 84%|████████▍ | 465654/552076 [00:03<00:00, 87466.96it/s]  86%|████████▌ | 475958/552076 [00:03<00:00, 77412.42it/s] 88%|████████▊ | 485002/552076 [00:03<00:00, 75813.95it/s] 90%|████████▉ | 495987/552076 [00:03<00:00, 82158.54it/s] 91%|█████████▏| 505001/552076 [00:03<00:00, 82574.54it/s] 93%|█████████▎| 513818/552076 [00:03<00:00, 77994.18it/s] 96%|█████████▌| 528512/552076 [00:03<00:00, 90771.00it/s] 99%|█████████▉| 548050/552076 [00:03<00:00, 108140.28it/s]100%|██████████| 552076/552076 [00:03<00:00, 138908.41it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14628/552076 [00:00<00:03, 146273.16it/s]  6%|▋         | 35010/552076 [00:00<00:03, 159807.48it/s] 10%|▉         | 54494/552076 [00:00<00:02, 168916.99it/s] 14%|█▎        | 75038/552076 [00:00<00:02, 178433.14it/s] 17%|█▋        | 95862/552076 [00:00<00:02, 186437.06it/s] 21%|██        | 116982/552076 [00:00<00:02, 193233.41it/s] 25%|██▌       | 139743/552076 [00:00<00:02, 202403.09it/s] 29%|██▉       | 161712/552076 [00:00<00:01, 207296.23it/s] 34%|███▎      | 185073/552076 [00:00<00:01, 214545.37it/s] 38%|███▊      | 208506/552076 [00:01<00:01, 220119.14it/s] 42%|████▏     | 232485/552076 [00:01<00:01, 225672.28it/s] 46%|████▋     | 256029/552076 [00:01<00:01, 228515.22it/s] 51%|█████     | 279795/552076 [00:01<00:01, 231182.19it/s] 55%|█████▍    | 302876/552076 [00:01<00:01, 229634.48it/s] 59%|█████▉    | 326257/552076 [00:01<00:00, 230869.50it/s] 63%|██████▎   | 349834/552076 [00:01<00:00, 232316.72it/s] 68%|██████▊   | 373231/552076 [00:01<00:00, 232808.16it/s] 72%|███████▏  | 396507/552076 [00:01<00:00, 227719.88it/s] 76%|███████▌  | 419300/552076 [00:01<00:00, 221771.20it/s] 80%|███████▉  | 441526/552076 [00:02<00:00, 190645.70it/s] 84%|████████▎ | 461393/552076 [00:02<00:00, 189735.83it/s] 87%|████████▋ | 482419/552076 [00:02<00:00, 195458.68it/s] 91%|█████████ | 502402/552076 [00:02<00:00, 192799.13it/s] 95%|█████████▍| 521996/552076 [00:02<00:00, 192457.43it/s] 98%|█████████▊| 541462/552076 [00:02<00:00, 169762.68it/s]100%|██████████| 552076/552076 [00:02<00:00, 205366.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 19023/552076 [00:00<00:02, 190223.83it/s]  7%|▋         | 38081/552076 [00:00<00:02, 190327.88it/s] 10%|█         | 57357/552076 [00:00<00:02, 191050.42it/s] 14%|█▍        | 76685/552076 [00:00<00:02, 191712.71it/s] 17%|█▋        | 96025/552076 [00:00<00:02, 192215.17it/s] 21%|██        | 115359/552076 [00:00<00:02, 192549.10it/s] 25%|██▍       | 135616/552076 [00:00<00:02, 195448.54it/s] 28%|██▊       | 155291/552076 [00:00<00:02, 195836.39it/s] 32%|███▏      | 174740/552076 [00:00<00:01, 195429.59it/s] 35%|███▌      | 194542/552076 [00:01<00:01, 196199.21it/s] 39%|███▊      | 213630/552076 [00:01<00:02, 168080.04it/s] 42%|████▏     | 233057/552076 [00:01<00:01, 175162.11it/s] 46%|████▌     | 253265/552076 [00:01<00:01, 182451.56it/s] 49%|████▉     | 271806/552076 [00:01<00:01, 179965.77it/s] 53%|█████▎    | 290017/552076 [00:01<00:01, 172778.17it/s] 56%|█████▌    | 309625/552076 [00:01<00:01, 179163.28it/s] 59%|█████▉    | 327750/552076 [00:01<00:01, 179393.55it/s] 63%|██████▎   | 345836/552076 [00:01<00:01, 166640.37it/s] 66%|██████▌   | 364320/552076 [00:02<00:01, 171711.51it/s] 70%|██████▉   | 384128/552076 [00:02<00:00, 178853.84it/s] 73%|███████▎  | 403639/552076 [00:02<00:00, 183438.52it/s] 77%|███████▋  | 422354/552076 [00:02<00:00, 184534.39it/s] 80%|███████▉  | 440949/552076 [00:02<00:00, 183306.38it/s] 83%|████████▎ | 459381/552076 [00:02<00:00, 182067.33it/s] 87%|████████▋ | 477661/552076 [00:02<00:00, 182267.33it/s] 90%|████████▉ | 496126/552076 [00:02<00:00, 182973.10it/s] 94%|█████████▎| 516407/552076 [00:02<00:00, 188502.82it/s] 98%|█████████▊| 538583/552076 [00:02<00:00, 197380.91it/s]100%|██████████| 552076/552076 [00:02<00:00, 184738.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11972/552076 [00:00<00:04, 119710.98it/s]  4%|▍         | 24190/552076 [00:00<00:04, 120440.33it/s]  7%|▋         | 37562/552076 [00:00<00:04, 124137.91it/s]  8%|▊         | 45899/552076 [00:00<00:05, 85678.37it/s]  11%|█▏        | 62310/552076 [00:00<00:04, 100018.35it/s] 14%|█▍        | 76200/552076 [00:00<00:04, 109187.51it/s] 16%|█▌        | 87404/552076 [00:00<00:05, 91702.53it/s]  18%|█▊        | 97250/552076 [00:00<00:05, 82289.82it/s] 20%|█▉        | 110337/552076 [00:01<00:04, 92601.96it/s] 22%|██▏       | 123271/552076 [00:01<00:04, 101177.47it/s] 24%|██▍       | 134245/552076 [00:01<00:04, 91233.13it/s]  26%|██▌       | 144153/552076 [00:01<00:04, 84476.37it/s] 29%|██▉       | 158823/552076 [00:01<00:04, 93367.62it/s] 31%|███       | 168904/552076 [00:01<00:04, 86918.16it/s] 32%|███▏      | 178206/552076 [00:01<00:04, 79303.55it/s] 36%|███▌      | 197339/552076 [00:01<00:03, 96201.55it/s] 39%|███▉      | 216819/552076 [00:02<00:02, 113424.08it/s] 43%|████▎     | 236040/552076 [00:02<00:02, 129326.79it/s] 46%|████▋     | 256011/552076 [00:02<00:02, 144616.59it/s] 50%|████▉     | 275675/552076 [00:02<00:01, 157082.18it/s] 54%|█████▎    | 296000/552076 [00:02<00:01, 168567.47it/s] 58%|█████▊    | 317583/552076 [00:02<00:01, 180419.18it/s] 62%|██████▏   | 339610/552076 [00:02<00:01, 190772.36it/s] 65%|██████▌   | 359819/552076 [00:02<00:01, 155783.13it/s] 69%|██████▉   | 382342/552076 [00:02<00:00, 171661.75it/s] 73%|███████▎  | 404363/552076 [00:03<00:00, 183818.88it/s] 77%|███████▋  | 426369/552076 [00:03<00:00, 193372.50it/s] 81%|████████▏ | 449753/552076 [00:03<00:00, 203960.59it/s] 85%|████████▌ | 471766/552076 [00:03<00:00, 208555.30it/s] 89%|████████▉ | 493332/552076 [00:03<00:00, 208537.39it/s] 93%|█████████▎| 514964/552076 [00:03<00:00, 210811.91it/s] 97%|█████████▋| 536399/552076 [00:03<00:00, 201746.00it/s]100%|██████████| 552076/552076 [00:03<00:00, 147379.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8714/552076 [00:00<00:06, 87139.88it/s]  4%|▍         | 22456/552076 [00:00<00:05, 97884.20it/s]  8%|▊         | 42662/552076 [00:00<00:04, 115793.89it/s] 11%|█         | 61075/552076 [00:00<00:03, 130300.35it/s] 15%|█▍        | 81247/552076 [00:00<00:03, 145784.72it/s] 18%|█▊        | 101264/552076 [00:00<00:02, 158719.98it/s] 21%|██▏       | 117720/552076 [00:00<00:03, 135750.76it/s] 25%|██▌       | 138097/552076 [00:00<00:02, 150856.44it/s] 29%|██▊       | 158475/552076 [00:00<00:02, 163602.88it/s] 32%|███▏      | 178646/552076 [00:01<00:02, 173431.43it/s] 36%|███▌      | 198286/552076 [00:01<00:01, 179735.92it/s] 39%|███▉      | 217840/552076 [00:01<00:01, 184201.18it/s] 43%|████▎     | 236808/552076 [00:01<00:01, 181119.19it/s] 46%|████▌     | 255315/552076 [00:01<00:01, 182202.84it/s] 50%|████▉     | 274671/552076 [00:01<00:01, 185467.34it/s] 53%|█████▎    | 293427/552076 [00:01<00:01, 184341.23it/s] 57%|█████▋    | 312009/552076 [00:01<00:01, 165840.68it/s] 60%|█████▉    | 331139/552076 [00:01<00:01, 172735.27it/s] 63%|██████▎   | 350215/552076 [00:02<00:01, 177773.82it/s] 67%|██████▋   | 369388/552076 [00:02<00:01, 181742.13it/s] 71%|███████   | 390256/552076 [00:02<00:00, 189062.90it/s] 74%|███████▍  | 411013/552076 [00:02<00:00, 194258.52it/s] 78%|███████▊  | 431770/552076 [00:02<00:00, 198067.20it/s] 82%|████████▏ | 451740/552076 [00:02<00:00, 175107.08it/s] 85%|████████▌ | 471393/552076 [00:02<00:00, 181024.40it/s] 89%|████████▉ | 489968/552076 [00:02<00:00, 180565.94it/s] 92%|█████████▏| 508356/552076 [00:02<00:00, 178328.63it/s] 95%|█████████▌| 526427/552076 [00:02<00:00, 173568.56it/s] 99%|█████████▉| 545969/552076 [00:03<00:00, 179592.41it/s]100%|██████████| 552076/552076 [00:03<00:00, 177598.60it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19783/552076 [00:00<00:02, 197828.77it/s]  7%|▋         | 40693/552076 [00:00<00:02, 201080.10it/s] 11%|█         | 59858/552076 [00:00<00:02, 198151.73it/s] 13%|█▎        | 72907/552076 [00:00<00:03, 134219.02it/s] 15%|█▌        | 84339/552076 [00:00<00:03, 124553.59it/s] 18%|█▊        | 96757/552076 [00:00<00:03, 124440.60it/s] 20%|█▉        | 108323/552076 [00:00<00:03, 121064.74it/s] 23%|██▎       | 126591/552076 [00:00<00:03, 134693.20it/s] 25%|██▌       | 140422/552076 [00:00<00:03, 135757.59it/s] 28%|██▊       | 154049/552076 [00:01<00:04, 83342.53it/s]  30%|██▉       | 164903/552076 [00:01<00:05, 71713.27it/s] 32%|███▏      | 174124/552076 [00:01<00:05, 71334.47it/s] 35%|███▍      | 191769/552076 [00:01<00:04, 86856.97it/s] 38%|███▊      | 211366/552076 [00:01<00:03, 104274.03it/s] 41%|████      | 225149/552076 [00:01<00:03, 100413.66it/s] 44%|████▎     | 240537/552076 [00:02<00:02, 112096.14it/s] 46%|████▌     | 253848/552076 [00:02<00:03, 86748.03it/s]  49%|████▊     | 268197/552076 [00:02<00:02, 98424.10it/s] 51%|█████     | 280217/552076 [00:02<00:02, 98777.14it/s] 54%|█████▍    | 300801/552076 [00:02<00:02, 117039.05it/s] 58%|█████▊    | 321072/552076 [00:02<00:01, 134032.07it/s] 62%|██████▏   | 342290/552076 [00:02<00:01, 150680.62it/s] 66%|██████▌   | 362957/552076 [00:02<00:01, 164008.69it/s] 69%|██████▉   | 383641/552076 [00:03<00:00, 174869.99it/s] 73%|███████▎  | 404675/552076 [00:03<00:00, 184186.75it/s] 77%|███████▋  | 425676/552076 [00:03<00:00, 191240.43it/s] 81%|████████  | 446463/552076 [00:03<00:00, 195940.86it/s] 85%|████████▍ | 467516/552076 [00:03<00:00, 200099.21it/s] 89%|████████▉ | 490309/552076 [00:03<00:00, 207706.39it/s] 93%|█████████▎| 511518/552076 [00:03<00:00, 183110.90it/s] 97%|█████████▋| 533473/552076 [00:03<00:00, 192704.38it/s]100%|██████████| 552076/552076 [00:03<00:00, 143205.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22193/552076 [00:00<00:02, 219565.63it/s]  7%|▋         | 39691/552076 [00:00<00:02, 203973.53it/s] 10%|▉         | 54179/552076 [00:00<00:02, 181733.62it/s] 14%|█▎        | 74939/552076 [00:00<00:02, 188788.29it/s] 18%|█▊        | 96640/552076 [00:00<00:02, 196450.91it/s] 21%|██▏       | 117654/552076 [00:00<00:02, 200363.96it/s] 25%|██▌       | 139739/552076 [00:00<00:02, 206097.70it/s] 29%|██▉       | 162313/552076 [00:00<00:01, 211621.34it/s] 33%|███▎      | 184051/552076 [00:00<00:01, 213314.01it/s] 37%|███▋      | 204667/552076 [00:01<00:01, 211114.57it/s] 41%|████      | 227211/552076 [00:01<00:01, 215215.91it/s] 45%|████▌     | 248996/552076 [00:01<00:01, 215999.03it/s] 49%|████▉     | 270364/552076 [00:01<00:01, 211965.10it/s] 53%|█████▎    | 291415/552076 [00:01<00:01, 194809.57it/s] 56%|█████▋    | 311067/552076 [00:01<00:01, 171113.20it/s] 60%|█████▉    | 330928/552076 [00:01<00:01, 178527.18it/s] 64%|██████▍   | 352302/552076 [00:01<00:01, 187807.60it/s] 68%|██████▊   | 372830/552076 [00:01<00:00, 192728.36it/s] 71%|███████   | 392650/552076 [00:01<00:00, 194335.06it/s] 75%|███████▍  | 412355/552076 [00:02<00:00, 170527.46it/s] 78%|███████▊  | 430127/552076 [00:02<00:00, 171562.46it/s] 81%|████████▏ | 448881/552076 [00:02<00:00, 176059.58it/s] 85%|████████▍ | 468421/552076 [00:02<00:00, 181446.13it/s] 88%|████████▊ | 487387/552076 [00:02<00:00, 183832.49it/s] 92%|█████████▏| 506944/552076 [00:02<00:00, 187201.35it/s] 95%|█████████▌| 526453/552076 [00:02<00:00, 189499.40it/s] 99%|█████████▉| 546112/552076 [00:02<00:00, 191569.94it/s]100%|██████████| 552076/552076 [00:02<00:00, 192783.80it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 19221/552076 [00:00<00:02, 192209.73it/s]  7%|▋         | 39106/552076 [00:00<00:02, 194153.06it/s] 11%|█         | 59451/552076 [00:00<00:02, 196849.84it/s] 14%|█▍        | 76758/552076 [00:00<00:02, 189052.53it/s] 17%|█▋        | 91123/552076 [00:00<00:02, 162077.02it/s] 20%|█▉        | 108938/552076 [00:00<00:02, 166583.84it/s] 22%|██▏       | 123875/552076 [00:00<00:02, 155856.74it/s] 25%|██▌       | 138396/552076 [00:00<00:02, 145803.23it/s] 28%|██▊       | 152363/552076 [00:00<00:03, 125423.71it/s] 30%|██▉       | 164977/552076 [00:01<00:03, 98888.74it/s]  32%|███▏      | 175793/552076 [00:01<00:04, 79240.82it/s] 35%|███▌      | 194784/552076 [00:01<00:03, 93680.82it/s] 37%|███▋      | 206111/552076 [00:01<00:04, 82869.60it/s] 40%|███▉      | 218294/552076 [00:01<00:03, 91663.34it/s] 42%|████▏     | 230753/552076 [00:01<00:03, 99554.74it/s] 44%|████▍     | 241894/552076 [00:01<00:03, 101167.92it/s] 46%|████▌     | 252847/552076 [00:02<00:03, 90468.48it/s]  48%|████▊     | 264680/552076 [00:02<00:02, 96201.24it/s] 50%|████▉     | 274958/552076 [00:02<00:03, 87163.71it/s] 52%|█████▏    | 286065/552076 [00:02<00:02, 93178.58it/s] 54%|█████▎    | 295935/552076 [00:02<00:03, 85134.19it/s] 56%|█████▌    | 308079/552076 [00:02<00:02, 93521.53it/s] 58%|█████▊    | 322135/552076 [00:02<00:02, 103241.59it/s] 60%|██████    | 333201/552076 [00:02<00:02, 97097.49it/s]  64%|██████▎   | 351731/552076 [00:03<00:01, 113272.07it/s] 67%|██████▋   | 371641/552076 [00:03<00:01, 130096.39it/s] 71%|███████   | 391172/552076 [00:03<00:01, 144578.10it/s] 75%|███████▍  | 412253/552076 [00:03<00:00, 159622.04it/s] 78%|███████▊  | 430707/552076 [00:03<00:00, 166358.82it/s] 81%|████████▏ | 448656/552076 [00:03<00:00, 154775.92it/s] 85%|████████▍ | 468527/552076 [00:03<00:00, 165769.82it/s] 89%|████████▊ | 489132/552076 [00:03<00:00, 176096.44it/s] 92%|█████████▏| 509639/552076 [00:03<00:00, 183890.27it/s] 96%|█████████▌| 529647/552076 [00:03<00:00, 188465.04it/s]100%|█████████▉| 549472/552076 [00:04<00:00, 191296.97it/s]100%|██████████| 552076/552076 [00:04<00:00, 134775.36it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20114/552076 [00:00<00:02, 201130.60it/s]  7%|▋         | 37173/552076 [00:00<00:02, 190878.34it/s] 10%|█         | 56783/552076 [00:00<00:02, 192415.05it/s] 14%|█▍        | 76108/552076 [00:00<00:02, 192663.19it/s] 17%|█▋        | 95383/552076 [00:00<00:02, 192686.38it/s] 20%|██        | 111311/552076 [00:00<00:02, 174653.01it/s] 23%|██▎       | 126761/552076 [00:00<00:02, 163386.52it/s] 27%|██▋       | 146853/552076 [00:00<00:02, 173085.17it/s] 30%|██▉       | 163433/552076 [00:00<00:02, 163101.98it/s] 32%|███▏      | 179352/552076 [00:01<00:02, 136790.78it/s] 36%|███▌      | 199523/552076 [00:01<00:02, 151409.21it/s] 39%|███▉      | 215935/552076 [00:01<00:02, 155008.33it/s] 42%|████▏     | 232016/552076 [00:01<00:02, 153535.24it/s] 46%|████▌     | 252912/552076 [00:01<00:01, 166807.10it/s] 49%|████▉     | 272800/552076 [00:01<00:01, 175285.61it/s] 53%|█████▎    | 293318/552076 [00:01<00:01, 183297.38it/s] 57%|█████▋    | 313723/552076 [00:01<00:01, 189063.91it/s] 60%|██████    | 333292/552076 [00:01<00:01, 191002.72it/s] 64%|██████▍   | 354089/552076 [00:02<00:01, 195792.59it/s] 68%|██████▊   | 374415/552076 [00:02<00:00, 197974.07it/s] 72%|███████▏  | 395229/552076 [00:02<00:00, 200916.00it/s] 75%|███████▌  | 415444/552076 [00:02<00:00, 162524.23it/s] 79%|███████▉  | 435301/552076 [00:02<00:00, 171882.75it/s] 82%|████████▏ | 455353/552076 [00:02<00:00, 179576.09it/s] 86%|████████▌ | 475018/552076 [00:02<00:00, 184376.58it/s] 90%|████████▉ | 495155/552076 [00:02<00:00, 189164.03it/s] 93%|█████████▎| 514524/552076 [00:02<00:00, 189613.41it/s] 97%|█████████▋| 533802/552076 [00:03<00:00, 174024.14it/s]100%|██████████| 552076/552076 [00:03<00:00, 178261.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20886/552076 [00:00<00:02, 208850.74it/s]  7%|▋         | 41113/552076 [00:00<00:02, 206831.29it/s] 11%|█         | 61427/552076 [00:00<00:02, 205707.13it/s] 15%|█▍        | 81196/552076 [00:00<00:02, 203234.44it/s] 18%|█▊        | 101626/552076 [00:00<00:02, 203550.24it/s] 22%|██▏       | 121873/552076 [00:00<00:02, 203222.10it/s] 26%|██▌       | 142800/552076 [00:00<00:01, 204997.64it/s] 30%|███       | 166249/552076 [00:00<00:01, 213034.51it/s] 34%|███▍      | 189349/552076 [00:00<00:01, 218120.85it/s] 38%|███▊      | 210409/552076 [00:01<00:02, 141936.81it/s] 41%|████      | 227497/552076 [00:01<00:02, 111369.13it/s] 44%|████▍     | 244863/552076 [00:01<00:02, 124797.67it/s] 48%|████▊     | 262703/552076 [00:01<00:02, 137159.01it/s] 50%|█████     | 278653/552076 [00:01<00:02, 98018.03it/s]  53%|█████▎    | 291583/552076 [00:02<00:02, 98009.56it/s] 55%|█████▍    | 303574/552076 [00:02<00:02, 84695.79it/s] 57%|█████▋    | 313897/552076 [00:02<00:03, 75481.54it/s] 60%|█████▉    | 330241/552076 [00:02<00:02, 90014.04it/s] 62%|██████▏   | 344149/552076 [00:02<00:02, 100667.77it/s] 65%|██████▍   | 357021/552076 [00:02<00:01, 101363.28it/s] 67%|██████▋   | 368533/552076 [00:02<00:01, 100110.47it/s] 69%|██████▉   | 382552/552076 [00:02<00:01, 109501.47it/s] 72%|███████▏  | 399640/552076 [00:03<00:01, 122725.55it/s] 76%|███████▌  | 420258/552076 [00:03<00:00, 139687.59it/s] 80%|████████  | 442078/552076 [00:03<00:00, 156589.07it/s] 84%|████████▎ | 462088/552076 [00:03<00:00, 167515.26it/s] 88%|████████▊ | 483907/552076 [00:03<00:00, 180059.17it/s] 92%|█████████▏| 507543/552076 [00:03<00:00, 193914.86it/s] 96%|█████████▌| 530972/552076 [00:03<00:00, 204484.73it/s]100%|██████████| 552076/552076 [00:03<00:00, 147960.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18309/552076 [00:00<00:02, 183087.12it/s]  7%|▋         | 36703/552076 [00:00<00:02, 183340.11it/s] 10%|▉         | 54258/552076 [00:00<00:02, 180931.09it/s] 12%|█▏        | 68267/552076 [00:00<00:02, 166374.16it/s] 15%|█▌        | 83289/552076 [00:00<00:02, 161174.31it/s] 18%|█▊        | 101378/552076 [00:00<00:02, 166621.23it/s] 22%|██▏       | 119609/552076 [00:00<00:02, 171034.58it/s] 25%|██▍       | 137131/552076 [00:00<00:02, 172268.86it/s] 28%|██▊       | 155286/552076 [00:00<00:02, 174951.94it/s] 32%|███▏      | 174044/552076 [00:01<00:02, 178555.28it/s] 35%|███▍      | 191464/552076 [00:01<00:02, 174052.84it/s] 38%|███▊      | 209209/552076 [00:01<00:01, 175054.60it/s] 41%|████      | 226520/552076 [00:01<00:01, 172889.63it/s] 44%|████▍     | 243679/552076 [00:01<00:01, 167354.05it/s] 47%|████▋     | 260362/552076 [00:01<00:01, 157764.93it/s] 51%|█████     | 279266/552076 [00:01<00:01, 166003.95it/s] 54%|█████▍    | 298332/552076 [00:01<00:01, 172702.52it/s] 58%|█████▊    | 317737/552076 [00:01<00:01, 178596.10it/s] 61%|██████    | 335779/552076 [00:01<00:01, 177979.62it/s] 64%|██████▍   | 353705/552076 [00:02<00:01, 162013.83it/s] 67%|██████▋   | 371272/552076 [00:02<00:01, 165879.67it/s] 71%|███████   | 389759/552076 [00:02<00:00, 171152.43it/s] 74%|███████▍  | 407816/552076 [00:02<00:00, 173872.25it/s] 77%|███████▋  | 425770/552076 [00:02<00:00, 175534.07it/s] 80%|████████  | 443683/552076 [00:02<00:00, 176588.93it/s] 84%|████████▎ | 461884/552076 [00:02<00:00, 178180.47it/s] 87%|████████▋ | 480125/552076 [00:02<00:00, 179427.25it/s] 90%|█████████ | 498306/552076 [00:02<00:00, 180132.99it/s] 94%|█████████▎| 516355/552076 [00:02<00:00, 180049.02it/s] 97%|█████████▋| 535191/552076 [00:03<00:00, 182461.92it/s]100%|██████████| 552076/552076 [00:03<00:00, 173869.26it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14490/552076 [00:00<00:03, 144894.96it/s]  6%|▌         | 32051/552076 [00:00<00:03, 152918.20it/s]  9%|▉         | 49689/552076 [00:00<00:03, 159272.93it/s] 12%|█▏        | 67222/552076 [00:00<00:02, 163770.59it/s] 15%|█▍        | 82318/552076 [00:00<00:02, 159703.02it/s] 17%|█▋        | 95972/552076 [00:00<00:03, 122286.36it/s] 20%|█▉        | 107902/552076 [00:00<00:04, 100710.56it/s] 22%|██▏       | 119537/552076 [00:00<00:04, 104941.59it/s] 24%|██▍       | 133750/552076 [00:01<00:03, 113880.25it/s] 27%|██▋       | 149029/552076 [00:01<00:03, 123298.73it/s] 29%|██▉       | 162120/552076 [00:01<00:03, 125486.62it/s] 32%|███▏      | 175061/552076 [00:01<00:03, 122063.57it/s] 34%|███▍      | 187563/552076 [00:01<00:03, 119626.96it/s] 36%|███▌      | 199744/552076 [00:01<00:03, 116426.45it/s] 38%|███▊      | 211558/552076 [00:01<00:02, 114677.73it/s] 40%|████      | 223152/552076 [00:01<00:02, 113973.81it/s] 43%|████▎     | 234639/552076 [00:01<00:02, 114117.84it/s] 45%|████▌     | 249239/552076 [00:01<00:02, 122117.02it/s] 49%|████▉     | 269542/552076 [00:02<00:02, 138699.05it/s] 52%|█████▏    | 284321/552076 [00:02<00:02, 120203.91it/s] 54%|█████▍    | 297417/552076 [00:02<00:02, 118998.07it/s] 56%|█████▌    | 310073/552076 [00:02<00:02, 99358.39it/s]  59%|█████▊    | 323082/552076 [00:02<00:02, 106936.04it/s] 62%|██████▏   | 341840/552076 [00:02<00:01, 122770.24it/s] 64%|██████▍   | 355595/552076 [00:02<00:01, 100995.66it/s] 67%|██████▋   | 367367/552076 [00:03<00:01, 92843.46it/s]  69%|██████▉   | 379872/552076 [00:03<00:01, 100617.45it/s] 71%|███████   | 391032/552076 [00:03<00:01, 96461.77it/s]  73%|███████▎  | 402901/552076 [00:03<00:01, 102202.95it/s] 76%|███████▋  | 421944/552076 [00:03<00:01, 118701.22it/s] 80%|███████▉  | 440403/552076 [00:03<00:00, 132936.43it/s] 82%|████████▏ | 455270/552076 [00:03<00:00, 106763.46it/s] 85%|████████▍ | 467872/552076 [00:03<00:00, 108765.17it/s] 87%|████████▋ | 480350/552076 [00:04<00:00, 113119.34it/s] 90%|█████████ | 497000/552076 [00:04<00:00, 125156.81it/s] 94%|█████████▎| 517307/552076 [00:04<00:00, 141436.18it/s] 97%|█████████▋| 537628/552076 [00:04<00:00, 155628.36it/s]100%|██████████| 552076/552076 [00:04<00:00, 125699.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19741/552076 [00:00<00:02, 197403.13it/s]  7%|▋         | 39857/552076 [00:00<00:02, 198514.59it/s] 11%|█         | 60762/552076 [00:00<00:02, 201561.22it/s] 14%|█▎        | 75172/552076 [00:00<00:02, 180018.67it/s] 16%|█▌        | 88873/552076 [00:00<00:03, 143544.38it/s] 20%|██        | 110594/552076 [00:00<00:02, 159803.18it/s] 24%|██▍       | 132671/552076 [00:00<00:02, 174238.17it/s] 28%|██▊       | 154391/552076 [00:00<00:02, 185229.09it/s] 32%|███▏      | 175338/552076 [00:00<00:01, 191890.49it/s] 36%|███▌      | 197476/552076 [00:01<00:01, 199877.87it/s] 39%|███▉      | 217649/552076 [00:01<00:01, 191447.72it/s] 43%|████▎     | 236999/552076 [00:01<00:01, 182057.05it/s] 47%|████▋     | 259115/552076 [00:01<00:01, 192252.74it/s] 51%|█████     | 282183/552076 [00:01<00:01, 202365.22it/s] 55%|█████▍    | 302786/552076 [00:01<00:01, 188285.81it/s] 58%|█████▊    | 322068/552076 [00:01<00:01, 187346.04it/s] 62%|██████▏   | 341121/552076 [00:01<00:01, 174951.99it/s] 65%|██████▌   | 359689/552076 [00:01<00:01, 178036.15it/s] 69%|██████▉   | 382738/552076 [00:02<00:00, 191079.81it/s] 74%|███████▎  | 405857/552076 [00:02<00:00, 201569.30it/s] 78%|███████▊  | 428989/552076 [00:02<00:00, 209658.65it/s] 82%|████████▏ | 451669/552076 [00:02<00:00, 214521.00it/s] 86%|████████▌ | 474011/552076 [00:02<00:00, 217112.86it/s] 90%|████████▉ | 495956/552076 [00:02<00:00, 217117.99it/s] 94%|█████████▍| 517832/552076 [00:02<00:00, 212852.77it/s] 98%|█████████▊| 539251/552076 [00:02<00:00, 206144.03it/s]100%|██████████| 552076/552076 [00:02<00:00, 195987.41it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7891/552076 [00:00<00:06, 78905.37it/s]  4%|▍         | 23923/552076 [00:00<00:05, 93086.51it/s]  8%|▊         | 43014/552076 [00:00<00:04, 109994.56it/s] 11%|█▏        | 63269/552076 [00:00<00:03, 127467.40it/s] 15%|█▌        | 84362/552076 [00:00<00:03, 144635.84it/s] 19%|█▉        | 105499/552076 [00:00<00:02, 159766.71it/s] 23%|██▎       | 124880/552076 [00:00<00:02, 168651.29it/s] 26%|██▌       | 142780/552076 [00:00<00:02, 154278.94it/s] 29%|██▉       | 162834/552076 [00:00<00:02, 165747.77it/s] 33%|███▎      | 182064/552076 [00:01<00:02, 172909.41it/s] 37%|███▋      | 201601/552076 [00:01<00:01, 179085.89it/s] 40%|████      | 221592/552076 [00:01<00:01, 184861.85it/s] 44%|████▍     | 242035/552076 [00:01<00:01, 190325.59it/s] 48%|████▊     | 262413/552076 [00:01<00:01, 194168.87it/s] 51%|█████     | 282339/552076 [00:01<00:01, 195665.58it/s] 55%|█████▍    | 302760/552076 [00:01<00:01, 198150.59it/s] 58%|█████▊    | 322714/552076 [00:01<00:01, 197738.71it/s] 62%|██████▏   | 343202/552076 [00:01<00:01, 199827.77it/s] 66%|██████▌   | 365358/552076 [00:01<00:00, 205885.04it/s] 70%|███████   | 387458/552076 [00:02<00:00, 210197.23it/s] 74%|███████▍  | 408568/552076 [00:02<00:01, 133157.96it/s] 77%|███████▋  | 425499/552076 [00:02<00:01, 122426.43it/s] 80%|████████  | 442858/552076 [00:02<00:00, 134300.55it/s] 83%|████████▎ | 458526/552076 [00:02<00:00, 115022.83it/s] 86%|████████▌ | 472079/552076 [00:02<00:00, 94078.84it/s]  88%|████████▊ | 483547/552076 [00:03<00:00, 73354.28it/s] 89%|████████▉ | 493028/552076 [00:03<00:00, 77248.13it/s] 92%|█████████▏| 505889/552076 [00:03<00:00, 87761.85it/s] 94%|█████████▎| 516949/552076 [00:03<00:00, 93556.72it/s] 96%|█████████▌| 528615/552076 [00:03<00:00, 99466.15it/s] 98%|█████████▊| 539512/552076 [00:03<00:00, 94532.45it/s]100%|█████████▉| 549682/552076 [00:03<00:00, 77962.63it/s]100%|██████████| 552076/552076 [00:04<00:00, 137738.17it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11560/552076 [00:00<00:04, 115592.67it/s]  5%|▍         | 26841/552076 [00:00<00:04, 124703.31it/s]  8%|▊         | 45954/552076 [00:00<00:03, 139218.80it/s] 12%|█▏        | 64421/552076 [00:00<00:03, 150315.91it/s] 15%|█▍        | 82529/552076 [00:00<00:02, 158386.27it/s] 18%|█▊        | 101379/552076 [00:00<00:02, 166358.57it/s] 21%|██        | 117202/552076 [00:00<00:02, 156125.69it/s] 25%|██▍       | 137390/552076 [00:00<00:02, 167513.91it/s] 29%|██▉       | 160689/552076 [00:00<00:02, 182935.07it/s] 33%|███▎      | 184148/552076 [00:01<00:01, 195872.12it/s] 38%|███▊      | 207586/552076 [00:01<00:01, 206023.16it/s] 41%|████▏     | 228688/552076 [00:01<00:01, 181023.31it/s] 46%|████▌     | 252133/552076 [00:01<00:01, 194304.25it/s] 50%|████▉     | 273798/552076 [00:01<00:01, 200508.17it/s] 54%|█████▎    | 295977/552076 [00:01<00:01, 206450.40it/s] 58%|█████▊    | 318043/552076 [00:01<00:01, 210504.18it/s] 61%|██████▏   | 339479/552076 [00:01<00:01, 208935.25it/s] 66%|██████▌   | 361817/552076 [00:01<00:00, 213067.25it/s] 69%|██████▉   | 383367/552076 [00:01<00:00, 213788.62it/s] 73%|███████▎  | 404894/552076 [00:02<00:00, 212849.51it/s] 77%|███████▋  | 427094/552076 [00:02<00:00, 215513.17it/s] 81%|████████▏ | 449663/552076 [00:02<00:00, 218465.72it/s] 85%|████████▌ | 471967/552076 [00:02<00:00, 219817.47it/s] 89%|████████▉ | 493998/552076 [00:02<00:00, 213363.45it/s] 93%|█████████▎| 515410/552076 [00:02<00:00, 206840.74it/s] 97%|█████████▋| 536191/552076 [00:02<00:00, 203299.82it/s]100%|██████████| 552076/552076 [00:02<00:00, 196773.81it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11138/552076 [00:00<00:04, 111372.67it/s]  4%|▍         | 22324/552076 [00:00<00:04, 111517.10it/s]  6%|▌         | 33573/552076 [00:00<00:04, 111804.13it/s]  8%|▊         | 45307/552076 [00:00<00:04, 113408.59it/s] 10%|█         | 56455/552076 [00:00<00:04, 112820.70it/s] 12%|█▏        | 65870/552076 [00:00<00:04, 100476.37it/s] 14%|█▎        | 75013/552076 [00:00<00:04, 97576.59it/s]  16%|█▌        | 85901/552076 [00:00<00:04, 100712.36it/s] 18%|█▊        | 97118/552076 [00:00<00:04, 103894.76it/s] 20%|█▉        | 108004/552076 [00:01<00:04, 105335.49it/s] 22%|██▏       | 119590/552076 [00:01<00:03, 108285.54it/s] 24%|██▎       | 130291/552076 [00:01<00:03, 107170.48it/s] 26%|██▌       | 141030/552076 [00:01<00:03, 107233.82it/s] 28%|██▊       | 152614/552076 [00:01<00:03, 109677.63it/s] 30%|██▉       | 164259/552076 [00:01<00:03, 111624.12it/s] 32%|███▏      | 175690/552076 [00:01<00:03, 112414.20it/s] 34%|███▍      | 186925/552076 [00:01<00:03, 102618.49it/s] 36%|███▌      | 197348/552076 [00:01<00:03, 89476.61it/s]  37%|███▋      | 206711/552076 [00:02<00:04, 69503.60it/s] 39%|███▉      | 214636/552076 [00:02<00:05, 67155.07it/s] 41%|████      | 225514/552076 [00:02<00:04, 75862.69it/s] 43%|████▎     | 236545/552076 [00:02<00:03, 83704.08it/s] 45%|████▍     | 247802/552076 [00:02<00:03, 90679.40it/s] 47%|████▋     | 257638/552076 [00:02<00:03, 90468.36it/s] 48%|████▊     | 267223/552076 [00:02<00:03, 89964.92it/s] 50%|█████     | 278396/552076 [00:02<00:02, 95548.02it/s] 52%|█████▏    | 289520/552076 [00:02<00:02, 99769.54it/s] 55%|█████▍    | 301390/552076 [00:03<00:02, 104782.18it/s] 57%|█████▋    | 312669/552076 [00:03<00:02, 107060.60it/s] 59%|█████▊    | 323581/552076 [00:03<00:02, 90564.92it/s]  60%|██████    | 333218/552076 [00:03<00:03, 69664.37it/s] 62%|██████▏   | 342727/552076 [00:03<00:02, 75737.18it/s] 64%|██████▎   | 351253/552076 [00:03<00:02, 72207.90it/s] 65%|██████▌   | 359175/552076 [00:03<00:02, 67731.43it/s] 66%|██████▋   | 366496/552076 [00:03<00:02, 68437.67it/s] 68%|██████▊   | 373725/552076 [00:04<00:02, 59822.44it/s] 69%|██████▉   | 381616/552076 [00:04<00:02, 64502.85it/s] 71%|███████   | 389829/552076 [00:04<00:02, 68941.36it/s] 72%|███████▏  | 397109/552076 [00:04<00:02, 66432.51it/s] 75%|███████▌  | 415841/552076 [00:04<00:01, 82381.98it/s] 77%|███████▋  | 426895/552076 [00:04<00:01, 88558.21it/s] 79%|███████▉  | 437446/552076 [00:04<00:01, 86565.31it/s] 81%|████████▏ | 448905/552076 [00:04<00:01, 93011.18it/s] 83%|████████▎ | 459180/552076 [00:05<00:01, 78099.06it/s] 85%|████████▍ | 468078/552076 [00:05<00:01, 78918.14it/s] 88%|████████▊ | 486583/552076 [00:05<00:00, 95318.03it/s] 92%|█████████▏| 507987/552076 [00:05<00:00, 114344.41it/s] 95%|█████████▍| 523193/552076 [00:05<00:00, 123535.49it/s] 97%|█████████▋| 537938/552076 [00:05<00:00, 112393.75it/s]100%|██████████| 552076/552076 [00:05<00:00, 96386.85it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7752/552076 [00:00<00:07, 77519.15it/s]  5%|▍         | 26600/552076 [00:00<00:05, 94146.60it/s]  9%|▊         | 47421/552076 [00:00<00:04, 112662.37it/s] 13%|█▎        | 69220/552076 [00:00<00:03, 131760.71it/s] 17%|█▋        | 91195/552076 [00:00<00:03, 149747.68it/s] 21%|██        | 113937/552076 [00:00<00:02, 166842.06it/s] 25%|██▍       | 136888/552076 [00:00<00:02, 181727.41it/s] 29%|██▉       | 159667/552076 [00:00<00:02, 193462.44it/s] 33%|███▎      | 182956/552076 [00:00<00:01, 203813.25it/s] 37%|███▋      | 204457/552076 [00:01<00:01, 206905.43it/s] 41%|████      | 226668/552076 [00:01<00:01, 211241.69it/s] 45%|████▌     | 249198/552076 [00:01<00:01, 215269.01it/s] 49%|████▉     | 271651/552076 [00:01<00:01, 217965.69it/s] 53%|█████▎    | 293753/552076 [00:01<00:01, 217430.86it/s] 57%|█████▋    | 315710/552076 [00:01<00:01, 197666.01it/s] 61%|██████    | 335973/552076 [00:01<00:01, 161430.64it/s] 64%|██████▍   | 354626/552076 [00:01<00:01, 168219.79it/s] 68%|██████▊   | 374839/552076 [00:01<00:01, 177134.57it/s] 71%|███████▏  | 394500/552076 [00:02<00:00, 182559.11it/s] 75%|███████▌  | 414452/552076 [00:02<00:00, 187335.97it/s] 79%|███████▊  | 433677/552076 [00:02<00:00, 179450.72it/s] 82%|████████▏ | 452037/552076 [00:02<00:00, 170952.22it/s] 85%|████████▌ | 471360/552076 [00:02<00:00, 177076.79it/s] 89%|████████▉ | 490244/552076 [00:02<00:00, 180447.02it/s] 92%|█████████▏| 508807/552076 [00:02<00:00, 181970.68it/s] 96%|█████████▌| 528655/552076 [00:02<00:00, 186618.86it/s] 99%|█████████▉| 548397/552076 [00:02<00:00, 189730.61it/s]100%|██████████| 552076/552076 [00:02<00:00, 192159.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18124/552076 [00:00<00:02, 181234.12it/s]  7%|▋         | 39600/552076 [00:00<00:02, 190136.93it/s] 11%|█         | 60828/552076 [00:00<00:02, 196278.02it/s] 15%|█▍        | 82270/552076 [00:00<00:02, 201387.90it/s] 18%|█▊        | 101084/552076 [00:00<00:02, 197218.49it/s] 22%|██▏       | 120075/552076 [00:00<00:02, 194967.32it/s] 25%|██▌       | 139463/552076 [00:00<00:02, 194637.81it/s] 29%|██▉       | 159035/552076 [00:00<00:02, 194960.01it/s] 32%|███▏      | 178039/552076 [00:00<00:01, 193454.28it/s] 36%|███▌      | 196684/552076 [00:01<00:02, 172820.60it/s] 39%|███▉      | 215674/552076 [00:01<00:01, 177612.35it/s] 42%|████▏     | 234335/552076 [00:01<00:01, 180217.26it/s] 46%|████▌     | 253004/552076 [00:01<00:01, 182108.71it/s] 49%|████▉     | 271286/552076 [00:01<00:01, 182319.36it/s] 52%|█████▏    | 289730/552076 [00:01<00:01, 182947.74it/s] 56%|█████▌    | 308026/552076 [00:01<00:01, 181836.52it/s] 59%|█████▉    | 326212/552076 [00:01<00:01, 165728.70it/s] 63%|██████▎   | 346074/552076 [00:01<00:01, 174391.75it/s] 66%|██████▋   | 366892/552076 [00:01<00:01, 183316.90it/s] 70%|██████▉   | 385565/552076 [00:02<00:00, 178997.55it/s] 73%|███████▎  | 403727/552076 [00:02<00:00, 164555.08it/s] 76%|███████▌  | 420595/552076 [00:02<00:00, 135108.38it/s] 80%|███████▉  | 440890/552076 [00:02<00:00, 150167.32it/s] 84%|████████▎ | 461117/552076 [00:02<00:00, 162742.47it/s] 87%|████████▋ | 478634/552076 [00:02<00:00, 124728.80it/s] 89%|████████▉ | 493318/552076 [00:03<00:00, 86488.45it/s]  92%|█████████▏| 508061/552076 [00:03<00:00, 98730.86it/s] 94%|█████████▍| 520738/552076 [00:03<00:00, 105513.77it/s] 97%|█████████▋| 537227/552076 [00:03<00:00, 118291.12it/s]100%|█████████▉| 551024/552076 [00:03<00:00, 123099.31it/s]100%|██████████| 552076/552076 [00:03<00:00, 157577.32it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  0%|          | 2126/552076 [00:00<00:25, 21258.96it/s]  3%|▎         | 15670/552076 [00:00<00:18, 28455.69it/s]  4%|▍         | 20718/552076 [00:00<00:16, 32636.93it/s]  6%|▌         | 33546/552076 [00:00<00:12, 42040.20it/s]  9%|▊         | 47178/552076 [00:00<00:09, 53046.34it/s] 11%|█▏        | 62777/552076 [00:00<00:07, 66140.73it/s] 14%|█▎        | 74966/552076 [00:00<00:06, 76659.26it/s] 16%|█▌        | 86834/552076 [00:00<00:05, 85769.67it/s] 19%|█▉        | 104102/552076 [00:00<00:04, 101022.60it/s] 22%|██▏       | 123060/552076 [00:01<00:03, 117486.13it/s] 26%|██▌       | 142543/552076 [00:01<00:03, 133369.09it/s] 29%|██▉       | 161250/552076 [00:01<00:02, 145935.44it/s] 33%|███▎      | 179967/552076 [00:01<00:02, 156261.20it/s] 36%|███▌      | 197505/552076 [00:01<00:02, 159884.09it/s] 39%|███▉      | 214853/552076 [00:01<00:02, 151274.27it/s] 42%|████▏     | 231028/552076 [00:01<00:02, 141497.45it/s] 45%|████▍     | 246039/552076 [00:01<00:02, 126448.21it/s] 47%|████▋     | 259586/552076 [00:01<00:02, 117908.29it/s] 49%|████▉     | 272125/552076 [00:02<00:02, 116162.19it/s] 52%|█████▏    | 284508/552076 [00:02<00:02, 118359.35it/s] 54%|█████▎    | 296725/552076 [00:02<00:02, 94800.93it/s]  56%|█████▌    | 308255/552076 [00:02<00:02, 100140.71it/s] 58%|█████▊    | 319460/552076 [00:02<00:02, 103435.88it/s] 60%|█████▉    | 330385/552076 [00:02<00:02, 103771.97it/s] 62%|██████▏   | 342282/552076 [00:02<00:01, 107906.25it/s] 64%|██████▍   | 353400/552076 [00:02<00:01, 99757.05it/s]  67%|██████▋   | 368211/552076 [00:02<00:01, 110587.94it/s] 70%|███████   | 388830/552076 [00:03<00:01, 128455.47it/s] 74%|███████▍  | 409287/552076 [00:03<00:00, 144594.54it/s] 77%|███████▋  | 427075/552076 [00:03<00:00, 153193.87it/s] 80%|████████  | 444242/552076 [00:03<00:00, 158304.29it/s] 84%|████████▍ | 462616/552076 [00:03<00:00, 165161.55it/s] 87%|████████▋ | 482624/552076 [00:03<00:00, 174284.61it/s] 91%|█████████ | 503606/552076 [00:03<00:00, 183613.54it/s] 95%|█████████▌| 524911/552076 [00:03<00:00, 191553.00it/s] 99%|█████████▉| 546892/552076 [00:03<00:00, 199234.67it/s]100%|██████████| 552076/552076 [00:03<00:00, 141341.80it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21681/552076 [00:00<00:02, 216809.69it/s]  7%|▋         | 38331/552076 [00:00<00:02, 198786.45it/s] 10%|▉         | 53682/552076 [00:00<00:02, 182623.80it/s] 13%|█▎        | 74453/552076 [00:00<00:02, 189487.93it/s] 17%|█▋        | 94949/552076 [00:00<00:02, 193877.60it/s] 21%|██        | 114634/552076 [00:00<00:02, 194758.25it/s] 25%|██▍       | 136443/552076 [00:00<00:02, 201213.75it/s] 28%|██▊       | 154980/552076 [00:00<00:02, 188082.31it/s] 31%|███▏      | 172853/552076 [00:00<00:02, 178070.55it/s] 35%|███▍      | 192418/552076 [00:01<00:01, 183001.82it/s] 39%|███▊      | 212797/552076 [00:01<00:01, 188776.33it/s] 42%|████▏     | 231478/552076 [00:01<00:01, 175991.16it/s] 45%|████▌     | 249557/552076 [00:01<00:01, 177401.03it/s] 48%|████▊     | 267326/552076 [00:01<00:01, 164712.82it/s] 51%|█████▏    | 283999/552076 [00:01<00:01, 162134.43it/s] 54%|█████▍    | 300363/552076 [00:01<00:01, 138226.84it/s] 57%|█████▋    | 315975/552076 [00:01<00:01, 143148.18it/s] 61%|██████    | 337588/552076 [00:01<00:01, 159282.69it/s] 64%|██████▍   | 354475/552076 [00:02<00:01, 158150.23it/s] 67%|██████▋   | 370963/552076 [00:02<00:01, 128668.30it/s] 70%|██████▉   | 385195/552076 [00:02<00:01, 113332.39it/s] 72%|███████▏  | 397818/552076 [00:02<00:01, 105231.22it/s] 74%|███████▍  | 410814/552076 [00:02<00:01, 111600.83it/s] 77%|███████▋  | 422792/552076 [00:02<00:01, 94106.91it/s]  80%|████████  | 442151/552076 [00:02<00:00, 111258.27it/s] 82%|████████▏ | 455275/552076 [00:03<00:00, 107594.19it/s] 85%|████████▍ | 467459/552076 [00:03<00:01, 83920.36it/s]  87%|████████▋ | 482428/552076 [00:03<00:00, 96660.91it/s] 89%|████████▉ | 494054/552076 [00:03<00:00, 82512.73it/s] 91%|█████████▏| 504037/552076 [00:03<00:00, 81547.43it/s] 93%|█████████▎| 513407/552076 [00:03<00:00, 83646.80it/s] 96%|█████████▋| 532278/552076 [00:03<00:00, 100418.38it/s]100%|█████████▉| 551587/552076 [00:03<00:00, 117308.39it/s]100%|██████████| 552076/552076 [00:03<00:00, 138649.84it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12803/552076 [00:00<00:04, 128029.51it/s]  6%|▌         | 31156/552076 [00:00<00:03, 140802.30it/s]  9%|▉         | 50714/552076 [00:00<00:03, 153717.50it/s] 13%|█▎        | 70743/552076 [00:00<00:02, 165244.21it/s] 16%|█▋        | 90301/552076 [00:00<00:02, 173306.90it/s] 20%|█▉        | 109455/552076 [00:00<00:02, 178401.08it/s] 24%|██▍       | 131635/552076 [00:00<00:02, 189524.14it/s] 27%|██▋       | 151368/552076 [00:00<00:02, 191798.33it/s] 31%|███       | 170167/552076 [00:00<00:02, 175521.68it/s] 35%|███▍      | 190698/552076 [00:01<00:01, 183507.31it/s] 39%|███▊      | 213109/552076 [00:01<00:01, 194053.99it/s] 43%|████▎     | 235963/552076 [00:01<00:01, 203254.19it/s] 46%|████▋     | 256565/552076 [00:01<00:01, 203650.51it/s] 50%|█████     | 277488/552076 [00:01<00:01, 204401.25it/s] 54%|█████▍    | 298551/552076 [00:01<00:01, 206227.73it/s] 58%|█████▊    | 319273/552076 [00:01<00:01, 205979.86it/s] 62%|██████▏   | 339941/552076 [00:01<00:01, 202091.47it/s] 65%|██████▌   | 360216/552076 [00:01<00:00, 202206.53it/s] 69%|██████▉   | 380483/552076 [00:01<00:00, 178198.79it/s] 72%|███████▏  | 398856/552076 [00:02<00:00, 176049.95it/s] 76%|███████▌  | 417538/552076 [00:02<00:00, 179145.76it/s] 79%|███████▉  | 436014/552076 [00:02<00:00, 180793.17it/s] 82%|████████▏ | 454299/552076 [00:02<00:00, 181317.00it/s] 86%|████████▌ | 472575/552076 [00:02<00:00, 178801.30it/s] 89%|████████▉ | 490564/552076 [00:02<00:00, 178208.66it/s] 92%|█████████▏| 508462/552076 [00:02<00:00, 160747.46it/s] 96%|█████████▌| 528512/552076 [00:02<00:00, 170912.41it/s] 99%|█████████▉| 547273/552076 [00:02<00:00, 175600.97it/s]100%|██████████| 552076/552076 [00:02<00:00, 186497.05it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8416/552076 [00:00<00:06, 84159.88it/s]  4%|▍         | 22409/552076 [00:00<00:05, 95588.11it/s]  7%|▋         | 36512/552076 [00:00<00:04, 105816.56it/s] 10%|▉         | 52917/552076 [00:00<00:04, 118428.01it/s] 13%|█▎        | 71907/552076 [00:00<00:03, 133500.09it/s] 16%|█▋        | 90922/552076 [00:00<00:03, 146602.53it/s] 20%|█▉        | 110003/552076 [00:00<00:02, 157551.71it/s] 23%|██▎       | 129396/552076 [00:00<00:02, 166944.90it/s] 27%|██▋       | 149238/552076 [00:00<00:02, 175286.03it/s] 30%|███       | 167209/552076 [00:01<00:02, 164570.29it/s] 33%|███▎      | 184109/552076 [00:01<00:02, 164559.99it/s] 37%|███▋      | 204452/552076 [00:01<00:01, 174566.20it/s] 41%|████      | 224374/552076 [00:01<00:01, 181295.10it/s] 44%|████▍     | 244091/552076 [00:01<00:01, 185780.19it/s] 48%|████▊     | 263402/552076 [00:01<00:01, 187919.17it/s] 51%|█████     | 282578/552076 [00:01<00:01, 189052.42it/s] 55%|█████▍    | 301618/552076 [00:01<00:01, 170063.70it/s] 58%|█████▊    | 321812/552076 [00:01<00:01, 178515.65it/s] 62%|██████▏   | 341394/552076 [00:01<00:01, 183374.80it/s] 65%|██████▌   | 360065/552076 [00:02<00:01, 170991.14it/s] 68%|██████▊   | 377566/552076 [00:02<00:01, 171242.37it/s] 72%|███████▏  | 399203/552076 [00:02<00:00, 182669.81it/s] 76%|███████▌  | 417878/552076 [00:02<00:00, 168397.82it/s] 79%|███████▉  | 438729/552076 [00:02<00:00, 178709.59it/s] 83%|████████▎ | 457126/552076 [00:02<00:00, 129218.94it/s] 86%|████████▌ | 472359/552076 [00:02<00:00, 128484.62it/s] 88%|████████▊ | 486826/552076 [00:02<00:00, 132618.34it/s] 91%|█████████ | 501255/552076 [00:03<00:00, 131943.96it/s] 93%|█████████▎| 515267/552076 [00:03<00:00, 115645.27it/s] 96%|█████████▌| 529864/552076 [00:03<00:00, 123330.55it/s] 99%|█████████▉| 549280/552076 [00:03<00:00, 138485.95it/s]100%|██████████| 552076/552076 [00:03<00:00, 159320.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11772/552076 [00:00<00:04, 117711.97it/s]  3%|▎         | 18101/552076 [00:00<00:05, 92349.42it/s]   4%|▍         | 23839/552076 [00:00<00:06, 78074.88it/s]  6%|▌         | 34360/552076 [00:00<00:06, 84621.03it/s]  7%|▋         | 40836/552076 [00:00<00:08, 60735.95it/s] 10%|█         | 55220/552076 [00:00<00:06, 73470.19it/s] 14%|█▎        | 75458/552076 [00:00<00:05, 90825.70it/s] 17%|█▋        | 95260/552076 [00:00<00:04, 108434.97it/s] 20%|█▉        | 109497/552076 [00:01<00:04, 103292.75it/s] 22%|██▏       | 122253/552076 [00:01<00:04, 106635.40it/s] 24%|██▍       | 134643/552076 [00:01<00:03, 110520.73it/s] 27%|██▋       | 146940/552076 [00:01<00:03, 113214.35it/s] 29%|██▉       | 159897/552076 [00:01<00:03, 117667.78it/s] 31%|███       | 172330/552076 [00:01<00:03, 109541.63it/s] 34%|███▎      | 185153/552076 [00:01<00:03, 114549.46it/s] 36%|███▌      | 197074/552076 [00:01<00:03, 111520.31it/s] 38%|███▊      | 209680/552076 [00:01<00:02, 115515.79it/s] 40%|████      | 221509/552076 [00:02<00:03, 108917.88it/s] 43%|████▎     | 235188/552076 [00:02<00:02, 116008.85it/s] 45%|████▍     | 247106/552076 [00:02<00:02, 111688.32it/s] 47%|████▋     | 259285/552076 [00:02<00:02, 114538.33it/s] 49%|████▉     | 272523/552076 [00:02<00:02, 119362.23it/s] 52%|█████▏    | 284651/552076 [00:02<00:02, 118366.95it/s] 54%|█████▎    | 296624/552076 [00:02<00:02, 114272.89it/s] 56%|█████▌    | 308560/552076 [00:02<00:02, 115751.97it/s] 58%|█████▊    | 320228/552076 [00:02<00:02, 100957.54it/s] 60%|██████    | 332050/552076 [00:03<00:02, 105582.11it/s] 62%|██████▏   | 343271/552076 [00:03<00:01, 107485.71it/s] 64%|██████▍   | 355248/552076 [00:03<00:01, 110897.01it/s] 66%|██████▋   | 366537/552076 [00:03<00:01, 108366.99it/s] 68%|██████▊   | 377526/552076 [00:03<00:01, 108733.06it/s] 70%|███████   | 388507/552076 [00:03<00:01, 94671.23it/s]  72%|███████▏  | 400043/552076 [00:03<00:01, 100053.04it/s] 74%|███████▍  | 410415/552076 [00:03<00:01, 101123.03it/s] 76%|███████▋  | 421459/552076 [00:03<00:01, 103748.11it/s] 78%|███████▊  | 432913/552076 [00:03<00:01, 106765.32it/s] 80%|████████  | 444311/552076 [00:04<00:00, 108831.40it/s] 83%|████████▎ | 455936/552076 [00:04<00:00, 110954.14it/s] 85%|████████▍ | 467127/552076 [00:04<00:00, 107701.42it/s] 87%|████████▋ | 477985/552076 [00:04<00:00, 105913.99it/s] 89%|████████▊ | 489469/552076 [00:04<00:00, 108439.87it/s] 91%|█████████ | 500967/552076 [00:04<00:00, 110320.11it/s] 93%|█████████▎| 512701/552076 [00:04<00:00, 112334.08it/s] 95%|█████████▍| 523980/552076 [00:04<00:00, 92646.66it/s]  97%|█████████▋| 535870/552076 [00:04<00:00, 99218.24it/s] 99%|█████████▉| 547448/552076 [00:05<00:00, 103664.52it/s]100%|██████████| 552076/552076 [00:05<00:00, 108385.49it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11023/552076 [00:00<00:04, 110223.54it/s]  3%|▎         | 18206/552076 [00:00<00:05, 94988.47it/s]   4%|▍         | 24395/552076 [00:00<00:06, 81849.89it/s]  5%|▌         | 29696/552076 [00:00<00:07, 70363.59it/s]  7%|▋         | 35978/552076 [00:00<00:07, 67916.71it/s]  8%|▊         | 42928/552076 [00:00<00:07, 68382.79it/s] 10%|▉         | 53496/552076 [00:00<00:06, 76479.94it/s] 11%|█▏        | 63138/552076 [00:00<00:05, 81537.79it/s] 13%|█▎        | 71138/552076 [00:00<00:06, 70114.91it/s] 15%|█▍        | 80878/552076 [00:01<00:06, 76547.79it/s] 16%|█▌        | 88830/552076 [00:01<00:06, 66673.60it/s] 18%|█▊        | 100917/552076 [00:01<00:05, 77035.10it/s] 21%|██        | 115350/552076 [00:01<00:04, 89562.25it/s] 23%|██▎       | 125699/552076 [00:01<00:04, 85431.93it/s] 25%|██▍       | 136393/552076 [00:01<00:04, 90916.53it/s] 26%|██▋       | 146292/552076 [00:01<00:04, 90702.63it/s] 28%|██▊       | 155928/552076 [00:01<00:04, 82331.21it/s] 32%|███▏      | 174526/552076 [00:01<00:03, 98859.09it/s] 34%|███▎      | 186249/552076 [00:02<00:04, 82427.64it/s] 37%|███▋      | 201866/552076 [00:02<00:03, 96030.31it/s] 39%|███▊      | 213543/552076 [00:02<00:03, 84750.58it/s] 41%|████      | 225960/552076 [00:02<00:03, 93670.49it/s] 43%|████▎     | 236804/552076 [00:02<00:03, 88834.65it/s] 45%|████▌     | 249017/552076 [00:02<00:03, 96746.98it/s] 48%|████▊     | 265931/552076 [00:02<00:02, 110998.94it/s] 52%|█████▏    | 287050/552076 [00:03<00:02, 129417.66it/s] 56%|█████▌    | 306411/552076 [00:03<00:01, 143711.01it/s] 58%|█████▊    | 322791/552076 [00:03<00:01, 141897.64it/s] 62%|██████▏   | 340950/552076 [00:03<00:01, 151853.92it/s] 66%|██████▌   | 362158/552076 [00:03<00:01, 165994.02it/s] 70%|██████▉   | 383918/552076 [00:03<00:00, 178708.51it/s] 73%|███████▎  | 405729/552076 [00:03<00:00, 188947.90it/s] 77%|███████▋  | 425574/552076 [00:03<00:00, 191130.23it/s] 81%|████████  | 445358/552076 [00:03<00:00, 173561.79it/s] 84%|████████▍ | 466290/552076 [00:03<00:00, 182936.06it/s] 89%|████████▊ | 489731/552076 [00:04<00:00, 195836.65it/s] 93%|█████████▎| 513600/552076 [00:04<00:00, 206982.61it/s] 97%|█████████▋| 537058/552076 [00:04<00:00, 212948.60it/s]100%|██████████| 552076/552076 [00:04<00:00, 127447.31it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20824/552076 [00:00<00:02, 208233.25it/s]  7%|▋         | 41341/552076 [00:00<00:02, 207301.78it/s] 11%|█▏        | 62474/552076 [00:00<00:02, 208493.94it/s] 15%|█▌        | 84577/552076 [00:00<00:02, 212100.01it/s] 19%|█▉        | 106895/552076 [00:00<00:02, 215304.87it/s] 23%|██▎       | 128026/552076 [00:00<00:01, 214087.91it/s] 27%|██▋       | 148258/552076 [00:00<00:01, 210414.60it/s] 30%|███       | 167612/552076 [00:00<00:02, 181234.91it/s] 34%|███▎      | 185268/552076 [00:00<00:02, 167522.13it/s] 37%|███▋      | 204986/552076 [00:01<00:01, 175436.26it/s] 41%|████      | 224610/552076 [00:01<00:01, 181198.83it/s] 44%|████▍     | 244110/552076 [00:01<00:01, 185129.16it/s] 48%|████▊     | 263257/552076 [00:01<00:01, 186983.92it/s] 51%|█████▏    | 283465/552076 [00:01<00:01, 191269.38it/s] 55%|█████▍    | 302649/552076 [00:01<00:01, 164632.47it/s] 58%|█████▊    | 322709/552076 [00:01<00:01, 173990.64it/s] 63%|██████▎   | 345422/552076 [00:01<00:01, 187123.37it/s] 67%|██████▋   | 368141/552076 [00:01<00:00, 197575.79it/s] 71%|███████   | 389820/552076 [00:02<00:00, 202971.90it/s] 74%|███████▍  | 410617/552076 [00:02<00:00, 202592.00it/s] 78%|███████▊  | 431226/552076 [00:02<00:00, 197351.47it/s] 82%|████████▏ | 451236/552076 [00:02<00:00, 196852.92it/s] 85%|████████▌ | 471921/552076 [00:02<00:00, 199748.59it/s] 89%|████████▉ | 492722/552076 [00:02<00:00, 202156.21it/s] 93%|█████████▎| 513711/552076 [00:02<00:00, 204415.18it/s] 97%|█████████▋| 534235/552076 [00:02<00:00, 203504.72it/s]100%|██████████| 552076/552076 [00:02<00:00, 195454.84it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20271/552076 [00:00<00:02, 202702.46it/s]  7%|▋         | 37657/552076 [00:00<00:02, 193089.85it/s] 10%|▉         | 52726/552076 [00:00<00:02, 178058.14it/s] 13%|█▎        | 74530/552076 [00:00<00:02, 188423.05it/s] 17%|█▋        | 95835/552076 [00:00<00:02, 195191.40it/s] 21%|██        | 116494/552076 [00:00<00:02, 198475.51it/s] 25%|██▍       | 137949/552076 [00:00<00:02, 203037.95it/s] 28%|██▊       | 156777/552076 [00:00<00:02, 193357.09it/s] 32%|███▏      | 175177/552076 [00:00<00:02, 161775.33it/s] 35%|███▍      | 191571/552076 [00:01<00:02, 153768.69it/s] 38%|███▊      | 207182/552076 [00:01<00:02, 123804.08it/s] 40%|███▉      | 220663/552076 [00:01<00:02, 111324.84it/s] 42%|████▏     | 232804/552076 [00:01<00:02, 106791.04it/s] 45%|████▍     | 245690/552076 [00:01<00:02, 112574.06it/s] 47%|████▋     | 257553/552076 [00:01<00:02, 110964.09it/s] 49%|████▊     | 269079/552076 [00:01<00:03, 81093.17it/s]  51%|█████     | 279475/552076 [00:02<00:03, 85072.36it/s] 52%|█████▏    | 289051/552076 [00:02<00:03, 77960.75it/s] 54%|█████▍    | 297711/552076 [00:02<00:03, 78523.23it/s] 57%|█████▋    | 312269/552076 [00:02<00:02, 91112.38it/s] 59%|█████▊    | 323314/552076 [00:02<00:02, 96161.74it/s] 61%|██████    | 336133/552076 [00:02<00:02, 103952.76it/s] 63%|██████▎   | 347339/552076 [00:02<00:02, 82875.27it/s]  65%|██████▌   | 361078/552076 [00:02<00:02, 94073.04it/s] 69%|██████▊   | 379416/552076 [00:03<00:01, 110168.66it/s] 73%|███████▎  | 401117/552076 [00:03<00:01, 129259.91it/s] 76%|███████▋  | 421987/552076 [00:03<00:00, 145922.67it/s] 80%|███████▉  | 439203/552076 [00:03<00:00, 135166.61it/s] 84%|████████▎ | 461974/552076 [00:03<00:00, 153934.49it/s] 88%|████████▊ | 485508/552076 [00:03<00:00, 171757.01it/s] 92%|█████████▏| 508235/552076 [00:03<00:00, 185337.08it/s] 96%|█████████▌| 529469/552076 [00:03<00:00, 192686.41it/s]100%|██████████| 552076/552076 [00:03<00:00, 141820.74it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22510/552076 [00:00<00:02, 225094.31it/s]  8%|▊         | 44643/552076 [00:00<00:02, 223949.76it/s] 12%|█▏        | 67182/552076 [00:00<00:02, 224378.68it/s] 16%|█▌        | 88893/552076 [00:00<00:02, 222144.30it/s] 20%|██        | 111421/552076 [00:00<00:01, 223074.92it/s] 24%|██▍       | 132402/552076 [00:00<00:01, 218921.85it/s] 28%|██▊       | 152383/552076 [00:00<00:01, 212813.56it/s] 31%|███▏      | 172827/552076 [00:00<00:01, 210229.48it/s] 35%|███▍      | 192596/552076 [00:00<00:01, 205420.14it/s] 38%|███▊      | 212285/552076 [00:01<00:01, 199655.85it/s] 42%|████▏     | 231689/552076 [00:01<00:01, 183541.12it/s] 45%|████▌     | 249906/552076 [00:01<00:01, 174786.07it/s] 49%|████▉     | 269938/552076 [00:01<00:01, 181733.98it/s] 52%|█████▏    | 289221/552076 [00:01<00:01, 184924.49it/s] 56%|█████▌    | 307869/552076 [00:01<00:01, 185385.96it/s] 59%|█████▉    | 327283/552076 [00:01<00:01, 187927.55it/s] 63%|██████▎   | 346593/552076 [00:01<00:01, 189448.01it/s] 66%|██████▌   | 365567/552076 [00:01<00:01, 167936.18it/s] 70%|██████▉   | 384080/552076 [00:01<00:00, 172747.58it/s] 73%|███████▎  | 403076/552076 [00:02<00:00, 177574.56it/s] 76%|███████▋  | 422209/552076 [00:02<00:00, 181488.62it/s] 80%|████████  | 442053/552076 [00:02<00:00, 186260.50it/s] 83%|████████▎ | 460958/552076 [00:02<00:00, 187086.33it/s] 87%|████████▋ | 481198/552076 [00:02<00:00, 191431.00it/s] 91%|█████████ | 501636/552076 [00:02<00:00, 195139.73it/s] 95%|█████████▍| 521743/552076 [00:02<00:00, 196881.53it/s] 98%|█████████▊| 541505/552076 [00:02<00:00, 196229.03it/s]100%|██████████| 552076/552076 [00:02<00:00, 193878.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19962/552076 [00:00<00:02, 199619.71it/s]  6%|▌         | 34000/552076 [00:00<00:02, 177187.87it/s]  9%|▉         | 50268/552076 [00:00<00:02, 172568.97it/s] 13%|█▎        | 69684/552076 [00:00<00:02, 178523.43it/s] 16%|█▌        | 89593/552076 [00:00<00:02, 184231.19it/s] 20%|██        | 110795/552076 [00:00<00:02, 191769.98it/s] 24%|██▎       | 129848/552076 [00:00<00:02, 191393.19it/s] 27%|██▋       | 148144/552076 [00:00<00:02, 188779.57it/s] 30%|███       | 166006/552076 [00:00<00:02, 179094.81it/s] 33%|███▎      | 183308/552076 [00:01<00:02, 160444.97it/s] 36%|███▌      | 199292/552076 [00:01<00:02, 124713.46it/s] 39%|███▉      | 217140/552076 [00:01<00:02, 137103.54it/s] 43%|████▎     | 238733/552076 [00:01<00:02, 153965.03it/s] 47%|████▋     | 260123/552076 [00:01<00:01, 168094.06it/s] 51%|█████     | 281251/552076 [00:01<00:01, 179074.30it/s] 55%|█████▍    | 302724/552076 [00:01<00:01, 188460.66it/s] 59%|█████▊    | 323135/552076 [00:01<00:01, 192895.00it/s] 62%|██████▏   | 344876/552076 [00:01<00:01, 199647.81it/s] 66%|██████▌   | 365399/552076 [00:02<00:01, 127809.92it/s] 70%|██████▉   | 385544/552076 [00:02<00:01, 143551.63it/s] 73%|███████▎  | 403103/552076 [00:02<00:01, 147636.02it/s] 76%|███████▌  | 420138/552076 [00:02<00:00, 144752.75it/s] 79%|███████▉  | 436216/552076 [00:02<00:00, 117172.61it/s] 81%|████████▏ | 449904/552076 [00:02<00:00, 114419.73it/s] 84%|████████▍ | 462740/552076 [00:03<00:00, 98229.13it/s]  87%|████████▋ | 482320/552076 [00:03<00:00, 115494.45it/s] 90%|█████████ | 498252/552076 [00:03<00:00, 125879.16it/s] 93%|█████████▎| 512631/552076 [00:03<00:00, 113622.82it/s] 95%|█████████▌| 525474/552076 [00:03<00:00, 87750.07it/s]  99%|█████████▉| 545676/552076 [00:03<00:00, 105682.90it/s]100%|██████████| 552076/552076 [00:03<00:00, 146088.10it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20627/552076 [00:00<00:02, 206269.21it/s]  6%|▋         | 35362/552076 [00:00<00:02, 184171.36it/s]  8%|▊         | 45896/552076 [00:00<00:03, 150398.60it/s] 11%|█         | 58432/552076 [00:00<00:03, 141893.00it/s] 13%|█▎        | 71318/552076 [00:00<00:03, 137714.37it/s] 16%|█▋        | 90923/552076 [00:00<00:03, 151212.45it/s] 20%|██        | 110809/552076 [00:00<00:02, 162921.51it/s] 23%|██▎       | 129673/552076 [00:00<00:02, 169867.28it/s] 27%|██▋       | 148053/552076 [00:00<00:02, 173818.78it/s] 30%|███       | 167239/552076 [00:01<00:02, 178864.35it/s] 34%|███▍      | 186682/552076 [00:01<00:01, 183264.85it/s] 38%|███▊      | 207606/552076 [00:01<00:01, 190353.23it/s] 42%|████▏     | 229818/552076 [00:01<00:01, 198885.58it/s] 45%|████▌     | 250444/552076 [00:01<00:01, 201041.58it/s] 49%|████▉     | 270624/552076 [00:01<00:01, 198286.05it/s] 53%|█████▎    | 290514/552076 [00:01<00:01, 197797.92it/s] 56%|█████▋    | 311028/552076 [00:01<00:01, 199944.12it/s] 60%|██████    | 331289/552076 [00:01<00:01, 200736.26it/s] 64%|██████▎   | 351389/552076 [00:01<00:01, 176823.88it/s] 67%|██████▋   | 371616/552076 [00:02<00:00, 183757.48it/s] 71%|███████   | 392644/552076 [00:02<00:00, 190981.67it/s] 75%|███████▍  | 413072/552076 [00:02<00:00, 194783.28it/s] 79%|███████▊  | 434015/552076 [00:02<00:00, 198957.49it/s] 82%|████████▏ | 454595/552076 [00:02<00:00, 200961.62it/s] 86%|████████▌ | 474853/552076 [00:02<00:00, 180996.62it/s] 89%|████████▉ | 493442/552076 [00:02<00:00, 178207.16it/s] 93%|█████████▎| 513793/552076 [00:02<00:00, 185109.40it/s] 97%|█████████▋| 533538/552076 [00:02<00:00, 188645.28it/s]100%|██████████| 552076/552076 [00:02<00:00, 184572.63it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19437/552076 [00:00<00:02, 194369.72it/s]  7%|▋         | 38642/552076 [00:00<00:02, 193666.88it/s] 11%|█         | 58061/552076 [00:00<00:02, 193821.50it/s] 14%|█▍        | 76912/552076 [00:00<00:02, 192196.52it/s] 18%|█▊        | 97138/552076 [00:00<00:02, 195107.80it/s] 21%|██▏       | 118230/552076 [00:00<00:02, 199595.91it/s] 25%|██▌       | 139012/552076 [00:00<00:02, 201993.32it/s] 29%|██▉       | 160344/552076 [00:00<00:01, 205259.51it/s] 33%|███▎      | 179785/552076 [00:00<00:01, 191879.04it/s] 36%|███▌      | 198390/552076 [00:01<00:01, 178569.18it/s] 40%|███▉      | 218279/552076 [00:01<00:01, 184214.10it/s] 43%|████▎     | 239065/552076 [00:01<00:01, 190720.45it/s] 47%|████▋     | 259573/552076 [00:01<00:01, 194812.30it/s] 51%|█████     | 280005/552076 [00:01<00:01, 197568.52it/s] 54%|█████▍    | 299777/552076 [00:01<00:01, 185551.47it/s] 58%|█████▊    | 318493/552076 [00:01<00:01, 176789.89it/s] 61%|██████▏   | 338641/552076 [00:01<00:01, 183536.38it/s] 65%|██████▌   | 360098/552076 [00:01<00:01, 191860.58it/s] 69%|██████▊   | 379527/552076 [00:01<00:00, 185524.29it/s] 73%|███████▎  | 400544/552076 [00:02<00:00, 192288.37it/s] 76%|███████▌  | 419987/552076 [00:02<00:00, 132359.72it/s] 80%|███████▉  | 439081/552076 [00:02<00:00, 145776.80it/s] 84%|████████▎ | 461620/552076 [00:02<00:00, 163054.77it/s] 88%|████████▊ | 483109/552076 [00:02<00:00, 175771.40it/s] 91%|█████████ | 502552/552076 [00:03<00:00, 104866.48it/s] 94%|█████████▍| 517783/552076 [00:03<00:00, 91454.81it/s]  97%|█████████▋| 534423/552076 [00:03<00:00, 105741.24it/s]100%|██████████| 552076/552076 [00:03<00:00, 161913.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11063/552076 [00:00<00:05, 92945.56it/s]  3%|▎         | 16635/552076 [00:00<00:07, 72551.93it/s]  4%|▍         | 22149/552076 [00:00<00:08, 62509.77it/s]  5%|▍         | 26038/552076 [00:00<00:09, 52875.11it/s]  7%|▋         | 36541/552076 [00:00<00:08, 62130.15it/s] 10%|▉         | 55111/552076 [00:00<00:06, 77626.16it/s] 13%|█▎        | 72251/552076 [00:00<00:05, 92868.13it/s] 16%|█▋        | 90662/552076 [00:00<00:04, 109086.14it/s] 19%|█▉        | 104513/552076 [00:00<00:03, 115094.22it/s] 21%|██▏       | 118223/552076 [00:01<00:03, 120916.26it/s] 25%|██▍       | 137971/552076 [00:01<00:03, 136830.40it/s] 29%|██▊       | 158155/552076 [00:01<00:02, 151464.43it/s] 33%|███▎      | 180041/552076 [00:01<00:02, 166880.06it/s] 36%|███▌      | 199766/552076 [00:01<00:02, 174959.47it/s] 40%|████      | 221795/552076 [00:01<00:01, 186468.89it/s] 44%|████▍     | 244050/552076 [00:01<00:01, 196001.42it/s] 48%|████▊     | 265693/552076 [00:01<00:01, 201710.63it/s] 52%|█████▏    | 286544/552076 [00:01<00:01, 202064.33it/s] 56%|█████▌    | 307227/552076 [00:01<00:01, 199043.04it/s] 59%|█████▉    | 327475/552076 [00:02<00:01, 196328.99it/s] 63%|██████▎   | 347357/552076 [00:02<00:01, 176092.16it/s] 66%|██████▋   | 366843/552076 [00:02<00:01, 180343.05it/s] 70%|██████▉   | 385306/552076 [00:02<00:00, 181604.18it/s] 73%|███████▎  | 403764/552076 [00:02<00:00, 167401.90it/s] 77%|███████▋  | 422669/552076 [00:02<00:00, 173355.58it/s] 80%|████████  | 441836/552076 [00:02<00:00, 178468.76it/s] 83%|████████▎ | 460922/552076 [00:02<00:00, 182011.90it/s] 87%|████████▋ | 480195/552076 [00:02<00:00, 185097.67it/s] 90%|█████████ | 498893/552076 [00:03<00:00, 185655.40it/s] 94%|█████████▍| 517574/552076 [00:03<00:00, 164894.84it/s] 97%|█████████▋| 536086/552076 [00:03<00:00, 170480.88it/s]100%|██████████| 552076/552076 [00:03<00:00, 163651.36it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12266/552076 [00:00<00:04, 122650.47it/s]  4%|▍         | 24195/552076 [00:00<00:04, 121620.88it/s]  6%|▋         | 35566/552076 [00:00<00:04, 119132.92it/s]  8%|▊         | 46398/552076 [00:00<00:04, 115667.05it/s] 10%|█         | 57372/552076 [00:00<00:04, 113822.31it/s] 12%|█▏        | 68184/552076 [00:00<00:04, 112049.31it/s] 14%|█▍        | 79642/552076 [00:00<00:04, 112796.66it/s] 17%|█▋        | 91517/552076 [00:00<00:04, 114517.56it/s] 19%|█▊        | 103223/552076 [00:00<00:03, 115268.57it/s] 21%|██        | 114391/552076 [00:01<00:03, 114165.04it/s] 23%|██▎       | 125822/552076 [00:01<00:03, 114208.12it/s] 25%|██▍       | 137482/552076 [00:01<00:03, 114914.62it/s] 27%|██▋       | 149303/552076 [00:01<00:03, 115882.02it/s] 29%|██▉       | 161044/552076 [00:01<00:03, 116335.51it/s] 31%|███▏      | 172625/552076 [00:01<00:03, 116175.39it/s] 33%|███▎      | 184189/552076 [00:01<00:03, 95499.90it/s]  35%|███▌      | 194308/552076 [00:01<00:04, 86445.71it/s] 37%|███▋      | 204798/552076 [00:01<00:03, 91261.58it/s] 39%|███▉      | 214925/552076 [00:02<00:03, 94048.57it/s] 41%|████      | 225470/552076 [00:02<00:03, 97199.29it/s] 43%|████▎     | 236547/552076 [00:02<00:03, 100905.57it/s] 45%|████▍     | 247836/552076 [00:02<00:02, 104223.38it/s] 47%|████▋     | 258957/552076 [00:02<00:02, 106224.07it/s] 49%|████▉     | 270292/552076 [00:02<00:02, 108265.25it/s] 51%|█████     | 281226/552076 [00:02<00:02, 98596.46it/s]  53%|█████▎    | 292130/552076 [00:02<00:02, 100480.88it/s] 55%|█████▍    | 302356/552076 [00:03<00:03, 67319.04it/s]  56%|█████▋    | 311574/552076 [00:03<00:03, 73243.22it/s] 58%|█████▊    | 320149/552076 [00:03<00:03, 75443.13it/s] 60%|█████▉    | 328585/552076 [00:03<00:03, 63737.56it/s] 61%|██████    | 335895/552076 [00:03<00:03, 58980.41it/s] 62%|██████▏   | 343212/552076 [00:03<00:03, 62622.78it/s] 63%|██████▎   | 350044/552076 [00:03<00:03, 52516.88it/s] 64%|██████▍   | 355971/552076 [00:04<00:04, 44112.95it/s] 66%|██████▋   | 366454/552076 [00:04<00:03, 53389.74it/s] 68%|██████▊   | 373178/552076 [00:04<00:04, 44146.07it/s] 69%|██████▉   | 380915/552076 [00:04<00:03, 49563.62it/s] 70%|███████   | 389112/552076 [00:04<00:02, 56232.20it/s] 73%|███████▎  | 402409/552076 [00:04<00:02, 68005.98it/s] 76%|███████▌  | 420266/552076 [00:04<00:01, 83519.55it/s] 80%|███████▉  | 439838/552076 [00:04<00:01, 100866.25it/s] 83%|████████▎ | 455787/552076 [00:04<00:00, 113366.08it/s] 85%|████████▌ | 470296/552076 [00:05<00:00, 121324.31it/s] 89%|████████▊ | 489007/552076 [00:05<00:00, 135629.49it/s] 92%|█████████▏| 507139/552076 [00:05<00:00, 146720.44it/s] 95%|█████████▌| 525071/552076 [00:05<00:00, 155182.75it/s] 99%|█████████▊| 544854/552076 [00:05<00:00, 165912.30it/s]100%|██████████| 552076/552076 [00:05<00:00, 100864.10it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12787/552076 [00:00<00:04, 127861.59it/s]  4%|▍         | 24706/552076 [00:00<00:04, 125127.39it/s]  7%|▋         | 37911/552076 [00:00<00:04, 127126.60it/s]  9%|▉         | 51117/552076 [00:00<00:03, 128565.82it/s] 12%|█▏        | 64279/552076 [00:00<00:03, 129465.57it/s] 14%|█▍        | 76743/552076 [00:00<00:03, 127977.27it/s] 16%|█▌        | 88470/552076 [00:00<00:03, 124564.45it/s] 18%|█▊        | 101498/552076 [00:00<00:03, 126222.73it/s] 21%|██        | 113736/552076 [00:00<00:03, 125042.65it/s] 23%|██▎       | 125745/552076 [00:01<00:03, 120593.67it/s] 25%|██▍       | 137492/552076 [00:01<00:03, 116050.38it/s] 27%|██▋       | 148915/552076 [00:01<00:03, 113853.12it/s] 29%|██▉       | 160183/552076 [00:01<00:04, 96023.96it/s]  31%|███       | 171448/552076 [00:01<00:03, 100471.98it/s] 33%|███▎      | 182255/552076 [00:01<00:03, 102635.70it/s] 35%|███▌      | 193727/552076 [00:01<00:03, 105983.93it/s] 37%|███▋      | 204800/552076 [00:01<00:03, 107362.57it/s] 39%|███▉      | 215679/552076 [00:01<00:03, 99144.12it/s]  41%|████      | 225818/552076 [00:02<00:03, 95788.22it/s] 43%|████▎     | 236599/552076 [00:02<00:03, 99102.29it/s] 45%|████▍     | 247697/552076 [00:02<00:02, 102388.47it/s] 47%|████▋     | 258365/552076 [00:02<00:02, 103638.18it/s] 49%|████▉     | 269413/552076 [00:02<00:02, 105599.80it/s] 51%|█████     | 280076/552076 [00:02<00:02, 105905.82it/s] 53%|█████▎    | 291093/552076 [00:02<00:02, 107148.02it/s] 55%|█████▍    | 302084/552076 [00:02<00:02, 107960.97it/s] 57%|█████▋    | 313138/552076 [00:02<00:02, 108720.99it/s] 59%|█████▊    | 324143/552076 [00:02<00:02, 109114.49it/s] 61%|██████    | 335071/552076 [00:03<00:02, 102849.84it/s] 63%|██████▎   | 345442/552076 [00:03<00:02, 99867.70it/s]  65%|██████▍   | 356542/552076 [00:03<00:01, 102963.36it/s] 67%|██████▋   | 367769/552076 [00:03<00:01, 105588.74it/s] 69%|██████▊   | 378400/552076 [00:03<00:01, 93479.51it/s]  70%|███████   | 388939/552076 [00:03<00:01, 96757.87it/s] 72%|███████▏  | 400008/552076 [00:03<00:01, 100552.81it/s] 75%|███████▍  | 411411/552076 [00:03<00:01, 104249.13it/s] 77%|███████▋  | 422559/552076 [00:03<00:01, 106317.53it/s] 78%|███████▊  | 433342/552076 [00:04<00:01, 106765.85it/s] 81%|████████  | 444516/552076 [00:04<00:00, 108209.12it/s] 82%|████████▏ | 455409/552076 [00:04<00:01, 93834.63it/s]  85%|████████▍ | 467258/552076 [00:04<00:00, 100080.91it/s] 87%|████████▋ | 479348/552076 [00:04<00:00, 105532.52it/s] 89%|████████▉ | 490253/552076 [00:04<00:00, 94861.65it/s]  91%|█████████ | 500189/552076 [00:04<00:00, 72668.89it/s] 94%|█████████▍| 517679/552076 [00:04<00:00, 88120.90it/s] 96%|█████████▋| 531673/552076 [00:05<00:00, 96379.46it/s] 98%|█████████▊| 543146/552076 [00:05<00:00, 90166.88it/s]100%|██████████| 552076/552076 [00:05<00:00, 105375.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13623/552076 [00:00<00:03, 136222.66it/s]  5%|▌         | 29011/552076 [00:00<00:03, 141076.00it/s]  7%|▋         | 36488/552076 [00:00<00:05, 92232.53it/s]   8%|▊         | 43253/552076 [00:00<00:06, 82998.09it/s] 10%|▉         | 54545/552076 [00:00<00:05, 90164.45it/s] 11%|█▏        | 62660/552076 [00:00<00:05, 82459.76it/s] 13%|█▎        | 70403/552076 [00:00<00:06, 78639.42it/s] 14%|█▍        | 77953/552076 [00:00<00:06, 75344.35it/s] 16%|█▌        | 89539/552076 [00:00<00:05, 81618.22it/s] 18%|█▊        | 97719/552076 [00:01<00:05, 78887.56it/s] 21%|██        | 115517/552076 [00:01<00:04, 94705.88it/s] 24%|██▍       | 135236/552076 [00:01<00:03, 112199.26it/s] 27%|██▋       | 148771/552076 [00:01<00:03, 115702.55it/s] 29%|██▉       | 161989/552076 [00:01<00:03, 120037.97it/s] 33%|███▎      | 182027/552076 [00:01<00:02, 136450.39it/s] 37%|███▋      | 202269/552076 [00:01<00:02, 151237.00it/s] 40%|████      | 222977/552076 [00:01<00:02, 164548.04it/s] 44%|████▍     | 243324/552076 [00:01<00:01, 174564.55it/s] 48%|████▊     | 264051/552076 [00:02<00:01, 183238.18it/s] 52%|█████▏    | 285290/552076 [00:02<00:01, 191105.95it/s] 56%|█████▌    | 306785/552076 [00:02<00:01, 197684.52it/s] 60%|█████▉    | 330461/552076 [00:02<00:01, 207982.09it/s] 64%|██████▍   | 354500/552076 [00:02<00:00, 216746.81it/s] 68%|██████▊   | 378084/552076 [00:02<00:00, 222141.69it/s] 73%|███████▎  | 401636/552076 [00:02<00:00, 225992.74it/s] 77%|███████▋  | 424512/552076 [00:02<00:00, 224056.07it/s] 81%|████████  | 447115/552076 [00:02<00:00, 220623.59it/s] 85%|████████▌ | 469328/552076 [00:02<00:00, 220801.82it/s] 89%|████████▉ | 491514/552076 [00:03<00:00, 217171.60it/s] 93%|█████████▎| 513319/552076 [00:03<00:00, 203225.09it/s] 97%|█████████▋| 533885/552076 [00:03<00:00, 174152.05it/s]100%|██████████| 552076/552076 [00:03<00:00, 161842.24it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21285/552076 [00:00<00:02, 212843.61it/s]  7%|▋         | 40928/552076 [00:00<00:02, 207637.20it/s] 11%|█         | 59040/552076 [00:00<00:02, 198897.68it/s] 13%|█▎        | 71728/552076 [00:00<00:03, 149507.91it/s] 17%|█▋        | 91430/552076 [00:00<00:02, 161167.61it/s] 20%|██        | 112085/552076 [00:00<00:02, 172538.79it/s] 24%|██▍       | 132333/552076 [00:00<00:02, 180548.04it/s] 28%|██▊       | 153165/552076 [00:00<00:02, 188067.72it/s] 31%|███▏      | 173887/552076 [00:00<00:01, 193430.35it/s] 35%|███▌      | 195495/552076 [00:01<00:01, 199709.88it/s] 39%|███▉      | 217348/552076 [00:01<00:01, 205004.92it/s] 43%|████▎     | 237792/552076 [00:01<00:01, 204385.66it/s] 47%|████▋     | 258192/552076 [00:01<00:01, 201131.43it/s] 50%|█████     | 278290/552076 [00:01<00:01, 192539.22it/s] 54%|█████▍    | 297611/552076 [00:01<00:01, 167065.42it/s] 57%|█████▋    | 315764/552076 [00:01<00:01, 171156.53it/s] 61%|██████    | 334639/552076 [00:01<00:01, 176078.81it/s] 64%|██████▍   | 353975/552076 [00:01<00:01, 180929.21it/s] 68%|██████▊   | 373201/552076 [00:02<00:00, 184183.22it/s] 71%|███████   | 392674/552076 [00:02<00:00, 187224.85it/s] 75%|███████▍  | 411562/552076 [00:02<00:00, 160866.96it/s] 78%|███████▊  | 428417/552076 [00:02<00:00, 162448.61it/s] 81%|████████  | 445203/552076 [00:02<00:00, 133576.85it/s] 83%|████████▎ | 459786/552076 [00:02<00:00, 113439.20it/s] 86%|████████▌ | 472512/552076 [00:02<00:00, 100403.42it/s] 88%|████████▊ | 487922/552076 [00:02<00:00, 112123.65it/s] 92%|█████████▏| 506912/552076 [00:03<00:00, 127828.85it/s] 95%|█████████▌| 526825/552076 [00:03<00:00, 143211.31it/s] 99%|█████████▉| 546985/552076 [00:03<00:00, 156838.04it/s]100%|██████████| 552076/552076 [00:03<00:00, 167297.91it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19759/552076 [00:00<00:02, 197589.25it/s]  7%|▋         | 41022/552076 [00:00<00:02, 201872.57it/s] 10%|▉         | 54688/552076 [00:00<00:02, 176588.22it/s] 12%|█▏        | 67813/552076 [00:00<00:03, 160004.24it/s] 14%|█▍        | 79779/552076 [00:00<00:03, 136750.10it/s] 17%|█▋        | 91219/552076 [00:00<00:03, 125472.45it/s] 19%|█▊        | 102384/552076 [00:00<00:03, 117907.23it/s] 21%|██        | 116933/552076 [00:00<00:03, 125015.95it/s] 23%|██▎       | 128939/552076 [00:01<00:04, 96301.57it/s]  25%|██▌       | 139224/552076 [00:01<00:04, 83338.69it/s] 27%|██▋       | 149136/552076 [00:01<00:04, 87195.69it/s] 29%|██▊       | 158441/552076 [00:01<00:04, 80821.94it/s] 30%|███       | 167026/552076 [00:01<00:04, 79159.25it/s] 32%|███▏      | 177685/552076 [00:01<00:04, 85780.84it/s] 35%|███▌      | 195384/552076 [00:01<00:03, 101466.92it/s] 37%|███▋      | 206987/552076 [00:01<00:03, 86924.44it/s]  41%|████      | 226103/552076 [00:02<00:03, 103924.79it/s] 43%|████▎     | 238891/552076 [00:02<00:03, 94928.77it/s]  47%|████▋     | 258277/552076 [00:02<00:02, 112089.04it/s] 51%|█████     | 279118/552076 [00:02<00:02, 130131.55it/s] 54%|█████▍    | 298722/552076 [00:02<00:01, 144727.74it/s] 58%|█████▊    | 318700/552076 [00:02<00:01, 157770.02it/s] 61%|██████▏   | 338628/552076 [00:02<00:01, 168284.12it/s] 65%|██████▍   | 357127/552076 [00:02<00:01, 161021.12it/s] 68%|██████▊   | 375162/552076 [00:02<00:01, 166368.48it/s] 72%|███████▏  | 395389/552076 [00:03<00:00, 175724.67it/s] 75%|███████▌  | 416006/552076 [00:03<00:00, 183868.89it/s] 79%|███████▉  | 436804/552076 [00:03<00:00, 190491.88it/s] 83%|████████▎ | 456365/552076 [00:03<00:00, 189154.40it/s] 86%|████████▌ | 475641/552076 [00:03<00:00, 171169.51it/s] 90%|████████▉ | 494801/552076 [00:03<00:00, 176825.39it/s] 93%|█████████▎| 512936/552076 [00:03<00:00, 148111.04it/s] 96%|█████████▌| 528853/552076 [00:03<00:00, 143335.20it/s] 99%|█████████▉| 546565/552076 [00:03<00:00, 152033.74it/s]100%|██████████| 552076/552076 [00:03<00:00, 139352.63it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18278/552076 [00:00<00:02, 182773.64it/s]  7%|▋         | 37726/552076 [00:00<00:02, 186134.52it/s] 10%|█         | 56281/552076 [00:00<00:02, 185956.43it/s] 14%|█▎        | 75588/552076 [00:00<00:02, 188033.85it/s] 17%|█▋        | 95011/552076 [00:00<00:02, 189849.64it/s] 21%|██        | 113701/552076 [00:00<00:02, 188952.48it/s] 24%|██▍       | 132276/552076 [00:00<00:02, 187978.76it/s] 28%|██▊       | 151955/552076 [00:00<00:02, 190535.96it/s] 31%|███       | 171153/552076 [00:00<00:01, 190966.40it/s] 34%|███▍      | 189523/552076 [00:01<00:02, 170489.54it/s] 38%|███▊      | 207682/552076 [00:01<00:01, 173674.09it/s] 41%|████      | 227659/552076 [00:01<00:01, 180756.67it/s] 45%|████▍     | 247063/552076 [00:01<00:01, 184546.38it/s] 48%|████▊     | 266777/552076 [00:01<00:01, 188150.09it/s] 52%|█████▏    | 286714/552076 [00:01<00:01, 191380.45it/s] 55%|█████▌    | 306351/552076 [00:01<00:01, 192846.21it/s] 59%|█████▉    | 325672/552076 [00:01<00:01, 168604.58it/s] 63%|██████▎   | 345442/552076 [00:01<00:01, 176391.04it/s] 66%|██████▋   | 365828/552076 [00:01<00:01, 183820.58it/s] 70%|██████▉   | 385046/552076 [00:02<00:00, 186248.38it/s] 73%|███████▎  | 404020/552076 [00:02<00:00, 187280.89it/s] 77%|███████▋  | 423270/552076 [00:02<00:00, 188816.19it/s] 80%|████████  | 442971/552076 [00:02<00:00, 191199.79it/s] 84%|████████▍ | 463412/552076 [00:02<00:00, 194979.02it/s] 88%|████████▊ | 483246/552076 [00:02<00:00, 195974.79it/s] 91%|█████████ | 503626/552076 [00:02<00:00, 198257.47it/s] 95%|█████████▍| 523813/552076 [00:02<00:00, 199327.22it/s] 98%|█████████▊| 543787/552076 [00:02<00:00, 198978.68it/s]100%|██████████| 552076/552076 [00:02<00:00, 188822.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 19242/552076 [00:00<00:02, 192418.81it/s]  7%|▋         | 38696/552076 [00:00<00:02, 193049.25it/s] 10%|█         | 57443/552076 [00:00<00:02, 191339.99it/s] 13%|█▎        | 70923/552076 [00:00<00:02, 169953.01it/s] 16%|█▌        | 87911/552076 [00:00<00:02, 169931.02it/s] 20%|█▉        | 109769/552076 [00:00<00:02, 182088.93it/s] 23%|██▎       | 126176/552076 [00:00<00:03, 139231.14it/s] 27%|██▋       | 146404/552076 [00:00<00:02, 153592.01it/s] 29%|██▉       | 162399/552076 [00:01<00:03, 118499.03it/s] 32%|███▏      | 175915/552076 [00:01<00:03, 107288.02it/s] 34%|███▍      | 188013/552076 [00:01<00:03, 103563.52it/s] 36%|███▌      | 199356/552076 [00:01<00:04, 82118.11it/s]  39%|███▉      | 217077/552076 [00:01<00:03, 97872.89it/s] 42%|████▏     | 229114/552076 [00:01<00:03, 84891.06it/s] 43%|████▎     | 239485/552076 [00:01<00:03, 84084.07it/s] 45%|████▌     | 249212/552076 [00:02<00:03, 80066.50it/s] 49%|████▊     | 268499/552076 [00:02<00:02, 97104.40it/s] 51%|█████     | 280565/552076 [00:02<00:03, 86102.08it/s] 53%|█████▎    | 291054/552076 [00:02<00:03, 82139.68it/s] 56%|█████▌    | 310273/552076 [00:02<00:02, 99176.28it/s] 60%|█████▉    | 329643/552076 [00:02<00:01, 116185.02it/s] 63%|██████▎   | 345790/552076 [00:02<00:01, 126856.17it/s] 65%|██████▌   | 360809/552076 [00:03<00:01, 111715.83it/s] 68%|██████▊   | 373944/552076 [00:03<00:01, 114573.35it/s] 70%|███████   | 387322/552076 [00:03<00:01, 119729.32it/s] 73%|███████▎  | 400330/552076 [00:03<00:01, 111290.10it/s] 75%|███████▍  | 412303/552076 [00:03<00:01, 109195.51it/s] 77%|███████▋  | 425895/552076 [00:03<00:01, 116039.41it/s] 80%|███████▉  | 439270/552076 [00:03<00:00, 120837.34it/s] 82%|████████▏ | 451781/552076 [00:03<00:00, 121180.82it/s] 84%|████████▍ | 464199/552076 [00:03<00:00, 120107.19it/s] 86%|████████▋ | 477448/552076 [00:03<00:00, 123569.54it/s] 89%|████████▉ | 490664/552076 [00:04<00:00, 125300.43it/s] 91%|█████████ | 503725/552076 [00:04<00:00, 126845.42it/s] 94%|█████████▎| 516504/552076 [00:04<00:00, 126718.55it/s] 96%|█████████▌| 529242/552076 [00:04<00:00, 123312.05it/s] 98%|█████████▊| 541640/552076 [00:04<00:00, 105830.55it/s]100%|██████████| 552076/552076 [00:04<00:00, 119055.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12303/552076 [00:00<00:04, 123026.30it/s]  4%|▍         | 24551/552076 [00:00<00:04, 122859.82it/s]  6%|▌         | 31293/552076 [00:00<00:05, 98544.40it/s]   8%|▊         | 42167/552076 [00:00<00:05, 101393.91it/s] 10%|▉         | 53373/552076 [00:00<00:04, 104373.96it/s] 12%|█▏        | 64470/552076 [00:00<00:04, 106268.24it/s] 14%|█▍        | 75918/552076 [00:00<00:04, 108602.65it/s] 16%|█▌        | 87295/552076 [00:00<00:04, 110100.41it/s] 18%|█▊        | 98815/552076 [00:00<00:04, 111579.33it/s] 20%|█▉        | 110381/552076 [00:01<00:03, 112772.61it/s] 22%|██▏       | 121734/552076 [00:01<00:03, 112995.98it/s] 24%|██▍       | 132850/552076 [00:01<00:03, 111661.81it/s] 26%|██▌       | 143891/552076 [00:01<00:03, 108988.27it/s] 28%|██▊       | 154717/552076 [00:01<00:04, 97406.57it/s]  30%|███       | 165934/552076 [00:01<00:03, 101409.35it/s] 32%|███▏      | 176600/552076 [00:01<00:03, 102929.27it/s] 34%|███▍      | 187786/552076 [00:01<00:03, 105452.90it/s] 36%|███▌      | 198724/552076 [00:01<00:03, 106601.06it/s] 38%|███▊      | 210309/552076 [00:01<00:03, 109215.65it/s] 40%|████      | 221299/552076 [00:02<00:03, 97838.41it/s]  42%|████▏     | 231560/552076 [00:02<00:03, 99222.59it/s] 44%|████▍     | 242563/552076 [00:02<00:03, 102235.01it/s] 46%|████▌     | 253906/552076 [00:02<00:02, 105354.08it/s] 48%|████▊     | 264577/552076 [00:02<00:02, 104916.92it/s] 50%|████▉     | 275311/552076 [00:02<00:02, 105632.09it/s] 52%|█████▏    | 285942/552076 [00:02<00:02, 90044.14it/s]  54%|█████▎    | 295393/552076 [00:02<00:03, 76672.18it/s] 55%|█████▌    | 303717/552076 [00:03<00:03, 73430.04it/s] 57%|█████▋    | 314038/552076 [00:03<00:02, 80386.99it/s] 59%|█████▉    | 324849/552076 [00:03<00:02, 87085.42it/s] 61%|██████    | 336244/552076 [00:03<00:02, 93711.51it/s] 63%|██████▎   | 347336/552076 [00:03<00:02, 98282.82it/s] 65%|██████▌   | 359320/552076 [00:03<00:01, 103887.22it/s] 67%|██████▋   | 370091/552076 [00:03<00:01, 98634.89it/s]  69%|██████▉   | 380960/552076 [00:03<00:01, 101449.45it/s] 72%|███████▏  | 398499/552076 [00:03<00:01, 116133.90it/s] 74%|███████▍  | 411034/552076 [00:04<00:01, 88431.76it/s]  78%|███████▊  | 431488/552076 [00:04<00:01, 106581.95it/s] 81%|████████  | 448259/552076 [00:04<00:00, 114437.78it/s] 84%|████████▎ | 461835/552076 [00:04<00:00, 100584.04it/s] 86%|████████▋ | 476841/552076 [00:04<00:00, 111624.28it/s] 89%|████████▊ | 489642/552076 [00:04<00:00, 104471.77it/s] 91%|█████████ | 501330/552076 [00:04<00:00, 85428.36it/s]  94%|█████████▍| 521299/552076 [00:05<00:00, 103131.26it/s] 98%|█████████▊| 540192/552076 [00:05<00:00, 119396.84it/s]100%|██████████| 552076/552076 [00:05<00:00, 103464.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20845/552076 [00:00<00:02, 208444.24it/s]  7%|▋         | 40456/552076 [00:00<00:02, 204583.22it/s] 11%|█         | 60326/552076 [00:00<00:02, 202780.13it/s] 15%|█▍        | 80932/552076 [00:00<00:02, 203749.96it/s] 18%|█▊        | 99142/552076 [00:00<00:02, 196731.29it/s] 22%|██▏       | 119422/552076 [00:00<00:02, 198512.78it/s] 25%|██▍       | 136867/552076 [00:00<00:02, 180819.25it/s] 28%|██▊       | 155783/552076 [00:00<00:02, 183242.24it/s] 32%|███▏      | 179047/552076 [00:00<00:01, 195708.15it/s] 37%|███▋      | 202313/552076 [00:01<00:01, 205498.86it/s] 41%|████      | 224429/552076 [00:01<00:01, 209958.03it/s] 44%|████▍     | 245326/552076 [00:01<00:01, 182318.92it/s] 48%|████▊     | 265480/552076 [00:01<00:01, 187688.50it/s] 52%|█████▏    | 286717/552076 [00:01<00:01, 194467.59it/s] 56%|█████▌    | 308437/552076 [00:01<00:01, 200770.21it/s] 60%|█████▉    | 329060/552076 [00:01<00:01, 202376.04it/s] 63%|██████▎   | 349521/552076 [00:01<00:01, 201496.57it/s] 67%|██████▋   | 369957/552076 [00:01<00:00, 202344.33it/s] 71%|███████   | 390302/552076 [00:01<00:00, 199837.84it/s] 74%|███████▍  | 410393/552076 [00:02<00:00, 200157.48it/s] 78%|███████▊  | 430468/552076 [00:02<00:00, 169500.75it/s] 82%|████████▏ | 450080/552076 [00:02<00:00, 176694.72it/s] 85%|████████▍ | 468926/552076 [00:02<00:00, 180065.07it/s] 88%|████████▊ | 488452/552076 [00:02<00:00, 184366.74it/s] 92%|█████████▏| 508084/552076 [00:02<00:00, 187795.03it/s] 96%|█████████▌| 528279/552076 [00:02<00:00, 191828.23it/s] 99%|█████████▉| 547674/552076 [00:02<00:00, 157252.21it/s]100%|██████████| 552076/552076 [00:02<00:00, 188290.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19408/552076 [00:00<00:02, 194079.26it/s]  7%|▋         | 39008/552076 [00:00<00:02, 194650.05it/s] 11%|█         | 58724/552076 [00:00<00:02, 195395.11it/s] 14%|█▍        | 78076/552076 [00:00<00:02, 194826.30it/s] 18%|█▊        | 98278/552076 [00:00<00:02, 196928.58it/s] 22%|██▏       | 119937/552076 [00:00<00:02, 202440.54it/s] 25%|██▌       | 139761/552076 [00:00<00:02, 201158.94it/s] 29%|██▉       | 159138/552076 [00:00<00:01, 198882.65it/s] 32%|███▏      | 178539/552076 [00:00<00:01, 197392.96it/s] 36%|███▌      | 197518/552076 [00:01<00:02, 172882.25it/s] 39%|███▉      | 216372/552076 [00:01<00:01, 177299.34it/s] 43%|████▎     | 235341/552076 [00:01<00:01, 180842.23it/s] 46%|████▌     | 254520/552076 [00:01<00:01, 183992.21it/s] 50%|████▉     | 274452/552076 [00:01<00:01, 188334.68it/s] 53%|█████▎    | 293961/552076 [00:01<00:01, 190309.57it/s] 57%|█████▋    | 313037/552076 [00:01<00:01, 177006.06it/s] 60%|██████    | 331406/552076 [00:01<00:01, 178957.41it/s] 64%|██████▍   | 354644/552076 [00:01<00:01, 192213.27it/s] 68%|██████▊   | 377054/552076 [00:01<00:00, 200783.68it/s] 72%|███████▏  | 397797/552076 [00:02<00:00, 202729.78it/s] 76%|███████▌  | 418849/552076 [00:02<00:00, 205003.40it/s] 80%|███████▉  | 439541/552076 [00:02<00:00, 205032.13it/s] 83%|████████▎ | 460178/552076 [00:02<00:00, 201764.59it/s] 87%|████████▋ | 481592/552076 [00:02<00:00, 205322.60it/s] 91%|█████████ | 503424/552076 [00:02<00:00, 209054.71it/s] 95%|█████████▌| 524867/552076 [00:02<00:00, 210633.96it/s] 99%|█████████▉| 545989/552076 [00:02<00:00, 155920.64it/s]100%|██████████| 552076/552076 [00:02<00:00, 187747.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4834/552076 [00:00<00:11, 48338.09it/s]  4%|▍         | 21370/552076 [00:00<00:08, 61366.34it/s]  6%|▌         | 33712/552076 [00:00<00:07, 72265.91it/s]  8%|▊         | 42017/552076 [00:00<00:06, 75194.05it/s]  9%|▉         | 50219/552076 [00:00<00:06, 74277.04it/s] 11%|█         | 57994/552076 [00:00<00:07, 66971.35it/s] 12%|█▏        | 68349/552076 [00:00<00:06, 74908.77it/s] 15%|█▍        | 80930/552076 [00:00<00:05, 83634.96it/s] 16%|█▋        | 90018/552076 [00:01<00:05, 77655.48it/s] 18%|█▊        | 98376/552076 [00:01<00:05, 77247.46it/s] 21%|██▏       | 117936/552076 [00:01<00:04, 94378.82it/s] 23%|██▎       | 129502/552076 [00:01<00:05, 83359.47it/s] 25%|██▌       | 139564/552076 [00:01<00:06, 68042.13it/s] 29%|██▉       | 159544/552076 [00:01<00:04, 84822.98it/s] 32%|███▏      | 177791/552076 [00:01<00:03, 101044.79it/s] 35%|███▍      | 191612/552076 [00:01<00:03, 108935.40it/s] 38%|███▊      | 211816/552076 [00:02<00:02, 126410.65it/s] 42%|████▏     | 231864/552076 [00:02<00:02, 142166.82it/s] 46%|████▌     | 252043/552076 [00:02<00:01, 155994.16it/s] 49%|████▉     | 272401/552076 [00:02<00:01, 167756.00it/s] 53%|█████▎    | 293021/552076 [00:02<00:01, 177694.13it/s] 57%|█████▋    | 312264/552076 [00:02<00:01, 176001.01it/s] 60%|██████    | 332024/552076 [00:02<00:01, 181967.44it/s] 64%|██████▍   | 352236/552076 [00:02<00:01, 187577.91it/s] 68%|██████▊   | 373269/552076 [00:02<00:00, 193867.88it/s] 72%|███████▏  | 395586/552076 [00:02<00:00, 201816.19it/s] 76%|███████▌  | 417596/552076 [00:03<00:00, 206973.02it/s] 79%|███████▉  | 438613/552076 [00:03<00:00, 207124.03it/s] 83%|████████▎ | 460477/552076 [00:03<00:00, 210448.88it/s] 87%|████████▋ | 481692/552076 [00:03<00:00, 210700.90it/s] 91%|█████████ | 502881/552076 [00:03<00:00, 209618.43it/s] 95%|█████████▍| 523928/552076 [00:03<00:00, 206948.81it/s] 99%|█████████▊| 544690/552076 [00:03<00:00, 187248.65it/s]100%|██████████| 552076/552076 [00:03<00:00, 146878.36it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14625/552076 [00:00<00:03, 146242.47it/s]  6%|▌         | 31445/552076 [00:00<00:03, 152202.59it/s]  9%|▉         | 49293/552076 [00:00<00:03, 159233.83it/s] 12%|█▏        | 68290/552076 [00:00<00:02, 167354.92it/s] 16%|█▌        | 87308/552076 [00:00<00:02, 173605.27it/s] 19%|█▊        | 102411/552076 [00:00<00:02, 159300.70it/s] 22%|██▏       | 119340/552076 [00:00<00:02, 162169.74it/s] 25%|██▍       | 137729/552076 [00:00<00:02, 168124.90it/s] 28%|██▊       | 156650/552076 [00:00<00:02, 173938.60it/s] 32%|███▏      | 176068/552076 [00:01<00:02, 179552.84it/s] 35%|███▌      | 195449/552076 [00:01<00:01, 183603.70it/s] 39%|███▉      | 214893/552076 [00:01<00:01, 186723.36it/s] 42%|████▏     | 234259/552076 [00:01<00:01, 188750.74it/s] 46%|████▌     | 253898/552076 [00:01<00:01, 190978.63it/s] 49%|████▉     | 273169/552076 [00:01<00:01, 191492.10it/s] 53%|█████▎    | 293106/552076 [00:01<00:01, 193788.16it/s] 57%|█████▋    | 313124/552076 [00:01<00:01, 195659.75it/s] 60%|██████    | 332690/552076 [00:01<00:01, 193268.81it/s] 64%|██████▍   | 352440/552076 [00:01<00:01, 194518.10it/s] 67%|██████▋   | 371899/552076 [00:02<00:01, 172535.74it/s] 71%|███████   | 390414/552076 [00:02<00:00, 176135.46it/s] 74%|███████▍  | 408371/552076 [00:02<00:00, 166523.50it/s] 77%|███████▋  | 425372/552076 [00:02<00:00, 159320.99it/s] 80%|███████▉  | 441615/552076 [00:02<00:00, 147552.40it/s] 83%|████████▎ | 458605/552076 [00:02<00:00, 153613.98it/s] 86%|████████▌ | 474304/552076 [00:02<00:00, 144885.46it/s] 89%|████████▊ | 489131/552076 [00:02<00:00, 137488.15it/s] 91%|█████████ | 503196/552076 [00:03<00:00, 103002.38it/s] 94%|█████████▍| 521598/552076 [00:03<00:00, 118675.33it/s] 97%|█████████▋| 535375/552076 [00:03<00:00, 102837.21it/s] 99%|█████████▉| 548786/552076 [00:03<00:00, 110572.09it/s]100%|██████████| 552076/552076 [00:03<00:00, 158671.02it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20949/552076 [00:00<00:02, 209489.70it/s]  6%|▌         | 30786/552076 [00:00<00:03, 156461.12it/s]  7%|▋         | 38137/552076 [00:00<00:04, 105216.16it/s]  8%|▊         | 46520/552076 [00:00<00:05, 97733.29it/s]  10%|▉         | 53889/552076 [00:00<00:05, 87304.56it/s] 13%|█▎        | 74299/552076 [00:00<00:04, 105397.77it/s] 16%|█▋        | 91044/552076 [00:00<00:03, 118579.43it/s] 19%|█▉        | 103909/552076 [00:00<00:03, 119532.19it/s] 21%|██        | 116569/552076 [00:00<00:03, 117963.05it/s] 23%|██▎       | 129144/552076 [00:01<00:03, 120194.67it/s] 26%|██▌       | 143686/552076 [00:01<00:03, 126791.46it/s] 30%|██▉       | 163618/552076 [00:01<00:02, 142327.55it/s] 33%|███▎      | 183561/552076 [00:01<00:02, 155701.64it/s] 37%|███▋      | 202969/552076 [00:01<00:02, 165519.15it/s] 40%|███▉      | 220378/552076 [00:01<00:02, 155250.75it/s] 44%|████▎     | 240485/552076 [00:01<00:01, 166641.64it/s] 47%|████▋     | 261192/552076 [00:01<00:01, 177008.08it/s] 51%|█████▏    | 283685/552076 [00:01<00:01, 189091.50it/s] 55%|█████▍    | 303312/552076 [00:01<00:01, 183149.68it/s] 58%|█████▊    | 322170/552076 [00:02<00:01, 173023.28it/s] 62%|██████▏   | 342251/552076 [00:02<00:01, 180515.78it/s] 66%|██████▌   | 361847/552076 [00:02<00:01, 184884.80it/s] 69%|██████▉   | 381337/552076 [00:02<00:00, 187777.70it/s] 73%|███████▎  | 400356/552076 [00:02<00:00, 187047.59it/s] 76%|███████▌  | 419230/552076 [00:02<00:00, 186911.58it/s] 80%|███████▉  | 439409/552076 [00:02<00:00, 191138.54it/s] 83%|████████▎ | 458630/552076 [00:02<00:00, 170671.79it/s] 87%|████████▋ | 479089/552076 [00:02<00:00, 179604.06it/s] 91%|█████████ | 501688/552076 [00:03<00:00, 191388.00it/s] 95%|█████████▌| 524931/552076 [00:03<00:00, 202092.12it/s] 99%|█████████▉| 547630/552076 [00:03<00:00, 208966.60it/s]100%|██████████| 552076/552076 [00:03<00:00, 168520.07it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10831/552076 [00:00<00:05, 105890.99it/s]  5%|▍         | 24995/552076 [00:00<00:04, 114565.24it/s]  8%|▊         | 46217/552076 [00:00<00:03, 132913.59it/s] 12%|█▏        | 65787/552076 [00:00<00:03, 147067.66it/s] 16%|█▌        | 86047/552076 [00:00<00:02, 160243.71it/s] 19%|█▉        | 106118/552076 [00:00<00:02, 170559.71it/s] 23%|██▎       | 125021/552076 [00:00<00:02, 175708.65it/s] 26%|██▌       | 144229/552076 [00:00<00:02, 180319.27it/s] 29%|██▉       | 162238/552076 [00:00<00:02, 147852.44it/s] 33%|███▎      | 181431/552076 [00:01<00:02, 158791.30it/s] 36%|███▋      | 200734/552076 [00:01<00:02, 167713.84it/s] 40%|████      | 220834/552076 [00:01<00:01, 176480.30it/s] 43%|████▎     | 239134/552076 [00:01<00:01, 160333.34it/s] 46%|████▋     | 255908/552076 [00:01<00:02, 130654.06it/s] 50%|████▉     | 273612/552076 [00:01<00:01, 141797.97it/s] 52%|█████▏    | 289059/552076 [00:01<00:02, 92538.25it/s]  55%|█████▍    | 303440/552076 [00:02<00:02, 103621.27it/s] 58%|█████▊    | 317663/552076 [00:02<00:02, 112807.71it/s] 60%|█████▉    | 331000/552076 [00:02<00:02, 105143.13it/s] 63%|██████▎   | 349664/552076 [00:02<00:01, 120991.57it/s] 66%|██████▌   | 363704/552076 [00:02<00:01, 99321.44it/s]  68%|██████▊   | 376548/552076 [00:02<00:01, 106567.73it/s] 70%|███████   | 388975/552076 [00:02<00:01, 111325.17it/s] 73%|███████▎  | 401673/552076 [00:02<00:01, 115600.48it/s] 76%|███████▌  | 419205/552076 [00:03<00:01, 128757.97it/s] 80%|███████▉  | 439973/552076 [00:03<00:00, 145325.69it/s] 83%|████████▎ | 459614/552076 [00:03<00:00, 157623.27it/s] 86%|████████▋ | 477375/552076 [00:03<00:00, 163127.94it/s] 90%|█████████ | 497103/552076 [00:03<00:00, 172062.41it/s] 94%|█████████▎| 516819/552076 [00:03<00:00, 178893.02it/s] 97%|█████████▋| 535987/552076 [00:03<00:00, 182544.26it/s]100%|██████████| 552076/552076 [00:03<00:00, 148142.51it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19654/552076 [00:00<00:02, 196536.44it/s]  7%|▋         | 37637/552076 [00:00<00:02, 191206.16it/s] 10%|█         | 57070/552076 [00:00<00:02, 192132.64it/s] 14%|█▍        | 77806/552076 [00:00<00:02, 196459.19it/s] 17%|█▋        | 96528/552076 [00:00<00:02, 193592.28it/s] 21%|██        | 116311/552076 [00:00<00:02, 194841.31it/s] 24%|██▍       | 134998/552076 [00:00<00:02, 192378.76it/s] 28%|██▊       | 155861/552076 [00:00<00:02, 196980.52it/s] 32%|███▏      | 174999/552076 [00:00<00:01, 195264.31it/s] 35%|███▌      | 193768/552076 [00:01<00:01, 189625.46it/s] 38%|███▊      | 212236/552076 [00:01<00:02, 162091.78it/s] 41%|████▏     | 228796/552076 [00:01<00:02, 157123.33it/s] 45%|████▍     | 247417/552076 [00:01<00:01, 164847.19it/s] 49%|████▉     | 269871/552076 [00:01<00:01, 179132.54it/s] 52%|█████▏    | 289824/552076 [00:01<00:01, 184799.60it/s] 56%|█████▌    | 310169/552076 [00:01<00:01, 190024.44it/s] 60%|█████▉    | 329519/552076 [00:01<00:01, 168948.26it/s] 63%|██████▎   | 347907/552076 [00:01<00:01, 173165.09it/s] 66%|██████▋   | 366119/552076 [00:02<00:01, 175755.09it/s] 70%|██████▉   | 385636/552076 [00:02<00:00, 181158.91it/s] 73%|███████▎  | 404045/552076 [00:02<00:00, 150121.76it/s] 76%|███████▌  | 420149/552076 [00:02<00:01, 109046.75it/s] 80%|███████▉  | 439710/552076 [00:02<00:00, 125739.52it/s] 82%|████████▏ | 454867/552076 [00:02<00:00, 105147.95it/s] 86%|████████▋ | 476451/552076 [00:02<00:00, 124265.75it/s] 90%|█████████ | 497642/552076 [00:03<00:00, 141867.58it/s] 94%|█████████▎| 517336/552076 [00:03<00:00, 154857.95it/s] 97%|█████████▋| 537346/552076 [00:03<00:00, 166125.69it/s]100%|██████████| 552076/552076 [00:03<00:00, 164090.00it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4488/552076 [00:00<00:12, 44878.22it/s]  2%|▏         | 12576/552076 [00:00<00:10, 51347.36it/s]  3%|▎         | 18075/552076 [00:00<00:10, 51109.28it/s]  5%|▍         | 25079/552076 [00:00<00:09, 55618.09it/s]  7%|▋         | 37475/552076 [00:00<00:07, 66639.36it/s]  9%|▉         | 51035/552076 [00:00<00:06, 78636.30it/s] 11%|█         | 61991/552076 [00:00<00:05, 85836.73it/s] 13%|█▎        | 71569/552076 [00:00<00:05, 87481.71it/s] 15%|█▍        | 81021/552076 [00:00<00:05, 79690.93it/s] 16%|█▋        | 90357/552076 [00:01<00:05, 83350.65it/s] 18%|█▊        | 99175/552076 [00:01<00:05, 78503.59it/s] 19%|█▉        | 107422/552076 [00:01<00:07, 63110.23it/s] 22%|██▏       | 120378/552076 [00:01<00:05, 73354.79it/s] 24%|██▎       | 130024/552076 [00:01<00:05, 79033.70it/s] 26%|██▌       | 143353/552076 [00:01<00:04, 90027.33it/s] 29%|██▉       | 159606/552076 [00:01<00:03, 103935.75it/s] 32%|███▏      | 178397/552076 [00:01<00:03, 119352.03it/s] 36%|███▌      | 196335/552076 [00:01<00:02, 132669.91it/s] 39%|███▉      | 215654/552076 [00:02<00:02, 146430.81it/s] 42%|████▏     | 234361/552076 [00:02<00:02, 156638.81it/s] 46%|████▌     | 254186/552076 [00:02<00:01, 167163.13it/s] 50%|████▉     | 274736/552076 [00:02<00:01, 177071.11it/s] 53%|█████▎    | 295357/552076 [00:02<00:01, 184907.73it/s] 57%|█████▋    | 315834/552076 [00:02<00:01, 190447.98it/s] 61%|██████    | 337746/552076 [00:02<00:01, 198227.91it/s] 65%|██████▌   | 360528/552076 [00:02<00:00, 206263.26it/s] 69%|██████▉   | 383122/552076 [00:02<00:00, 211794.69it/s] 73%|███████▎  | 404639/552076 [00:02<00:00, 212436.88it/s] 77%|███████▋  | 426120/552076 [00:03<00:00, 210567.73it/s] 81%|████████  | 447347/552076 [00:03<00:00, 201285.43it/s] 85%|████████▍ | 467681/552076 [00:03<00:00, 181580.94it/s] 89%|████████▊ | 489329/552076 [00:03<00:00, 190187.84it/s] 92%|█████████▏| 510364/552076 [00:03<00:00, 195817.39it/s] 96%|█████████▌| 530313/552076 [00:03<00:00, 195485.79it/s]100%|█████████▉| 551022/552076 [00:03<00:00, 198826.45it/s]100%|██████████| 552076/552076 [00:03<00:00, 146816.93it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21311/552076 [00:00<00:02, 213096.99it/s]  6%|▌         | 33629/552076 [00:00<00:02, 174812.08it/s] 10%|▉         | 53075/552076 [00:00<00:02, 180276.10it/s] 13%|█▎        | 73758/552076 [00:00<00:02, 187496.88it/s] 17%|█▋        | 93643/552076 [00:00<00:02, 190763.19it/s] 20%|██        | 112657/552076 [00:00<00:02, 190572.58it/s] 24%|██▍       | 131758/552076 [00:00<00:02, 190702.97it/s] 27%|██▋       | 151697/552076 [00:00<00:02, 193225.65it/s] 31%|███       | 171537/552076 [00:00<00:01, 194749.31it/s] 35%|███▍      | 190941/552076 [00:01<00:01, 194532.82it/s] 38%|███▊      | 210667/552076 [00:01<00:01, 195341.56it/s] 42%|████▏     | 229841/552076 [00:01<00:01, 193753.25it/s] 45%|████▌     | 248967/552076 [00:01<00:01, 183609.01it/s] 48%|████▊     | 267264/552076 [00:01<00:01, 173293.94it/s] 52%|█████▏    | 286624/552076 [00:01<00:01, 178921.52it/s] 56%|█████▌    | 306495/552076 [00:01<00:01, 184430.07it/s] 59%|█████▉    | 326494/552076 [00:01<00:01, 188836.14it/s] 63%|██████▎   | 346034/552076 [00:01<00:01, 190756.18it/s] 66%|██████▌   | 365188/552076 [00:01<00:01, 185437.20it/s] 70%|██████▉   | 383819/552076 [00:02<00:00, 168756.61it/s] 73%|███████▎  | 403486/552076 [00:02<00:00, 176261.59it/s] 77%|███████▋  | 423683/552076 [00:02<00:00, 183257.30it/s] 80%|████████  | 443692/552076 [00:02<00:00, 187997.92it/s] 84%|████████▍ | 462735/552076 [00:02<00:00, 168680.01it/s] 87%|████████▋ | 480147/552076 [00:02<00:00, 134056.35it/s] 90%|████████▉ | 495055/552076 [00:02<00:00, 107758.86it/s] 92%|█████████▏| 508861/552076 [00:03<00:00, 114506.00it/s] 95%|█████████▍| 521741/552076 [00:03<00:00, 93757.40it/s]  98%|█████████▊| 538398/552076 [00:03<00:00, 107907.93it/s]100%|██████████| 552076/552076 [00:03<00:00, 162675.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4442/552076 [00:00<00:12, 44417.29it/s]  2%|▏         | 10346/552076 [00:00<00:11, 46358.52it/s]  4%|▍         | 20749/552076 [00:00<00:09, 55606.50it/s]  5%|▌         | 27673/552076 [00:00<00:09, 57622.69it/s]  7%|▋         | 36420/552076 [00:00<00:08, 64193.84it/s]  8%|▊         | 46699/552076 [00:00<00:07, 71830.10it/s] 11%|█         | 59751/552076 [00:00<00:05, 83030.71it/s] 14%|█▍        | 78705/552076 [00:00<00:04, 99865.42it/s] 17%|█▋        | 92951/552076 [00:00<00:04, 109705.05it/s] 20%|█▉        | 109199/552076 [00:01<00:03, 121548.95it/s] 23%|██▎       | 129313/552076 [00:01<00:03, 137921.51it/s] 27%|██▋       | 150436/552076 [00:01<00:02, 153949.76it/s] 31%|███▏      | 173170/552076 [00:01<00:02, 170457.22it/s] 35%|███▌      | 194375/552076 [00:01<00:01, 181114.53it/s] 39%|███▉      | 216406/552076 [00:01<00:01, 191324.83it/s] 43%|████▎     | 238787/552076 [00:01<00:01, 200032.12it/s] 47%|████▋     | 261165/552076 [00:01<00:01, 206607.58it/s] 51%|█████     | 282546/552076 [00:01<00:01, 208064.90it/s] 55%|█████▌    | 305000/552076 [00:01<00:01, 212746.19it/s] 59%|█████▉    | 328475/552076 [00:02<00:01, 218898.53it/s] 64%|██████▎   | 350676/552076 [00:02<00:00, 219715.62it/s] 68%|██████▊   | 372866/552076 [00:02<00:00, 205233.90it/s] 71%|███████▏  | 393736/552076 [00:02<00:00, 198733.09it/s] 75%|███████▍  | 413897/552076 [00:02<00:00, 195794.28it/s] 79%|███████▊  | 433687/552076 [00:02<00:00, 193390.65it/s] 82%|████████▏ | 453181/552076 [00:02<00:00, 152918.19it/s] 85%|████████▌ | 471695/552076 [00:02<00:00, 161342.14it/s] 89%|████████▉ | 491557/552076 [00:02<00:00, 170967.46it/s] 93%|█████████▎| 511384/552076 [00:03<00:00, 178333.00it/s] 97%|█████████▋| 533103/552076 [00:03<00:00, 188445.24it/s]100%|██████████| 552076/552076 [00:03<00:00, 169149.82it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14450/552076 [00:00<00:03, 144497.73it/s]  6%|▌         | 33726/552076 [00:00<00:03, 156231.52it/s] 10%|▉         | 52467/552076 [00:00<00:03, 164436.35it/s] 13%|█▎        | 71904/552076 [00:00<00:02, 172400.53it/s] 17%|█▋        | 91487/552076 [00:00<00:02, 178816.74it/s] 20%|█▉        | 109236/552076 [00:00<00:02, 178410.54it/s] 23%|██▎       | 125575/552076 [00:00<00:03, 128188.82it/s] 25%|██▌       | 139334/552076 [00:00<00:03, 115510.44it/s] 27%|██▋       | 151781/552076 [00:01<00:04, 98324.19it/s]  31%|███       | 171786/552076 [00:01<00:03, 116022.72it/s] 34%|███▎      | 185419/552076 [00:01<00:03, 94628.76it/s]  37%|███▋      | 205319/552076 [00:01<00:03, 112297.31it/s] 41%|████      | 226547/552076 [00:01<00:02, 130775.55it/s] 44%|████▍     | 242743/552076 [00:01<00:02, 115578.49it/s] 47%|████▋     | 256808/552076 [00:01<00:02, 108059.88it/s] 49%|████▉     | 269468/552076 [00:02<00:02, 100297.56it/s] 51%|█████▏    | 284278/552076 [00:02<00:02, 111049.36it/s] 55%|█████▍    | 303125/552076 [00:02<00:01, 126657.12it/s] 59%|█████▊    | 323735/552076 [00:02<00:01, 143218.50it/s] 62%|██████▏   | 341394/552076 [00:02<00:01, 147625.87it/s] 65%|██████▍   | 357535/552076 [00:02<00:01, 117429.46it/s] 67%|██████▋   | 371218/552076 [00:02<00:01, 120590.99it/s] 70%|██████▉   | 384657/552076 [00:02<00:01, 120278.74it/s] 72%|███████▏  | 397651/552076 [00:03<00:01, 87504.84it/s]  74%|███████▍  | 408352/552076 [00:03<00:01, 87834.65it/s] 76%|███████▌  | 418501/552076 [00:03<00:01, 84513.30it/s] 79%|███████▉  | 435971/552076 [00:03<00:01, 99999.78it/s] 82%|████████▏ | 453339/552076 [00:03<00:00, 114582.17it/s] 85%|████████▍ | 466841/552076 [00:03<00:00, 118213.03it/s] 87%|████████▋ | 480122/552076 [00:03<00:00, 98119.43it/s]  89%|████████▉ | 491527/552076 [00:04<00:00, 96949.52it/s] 91%|█████████ | 502422/552076 [00:04<00:00, 100262.16it/s] 94%|█████████▍| 520038/552076 [00:04<00:00, 115144.91it/s] 97%|█████████▋| 532950/552076 [00:04<00:00, 119009.01it/s]100%|█████████▉| 551910/552076 [00:04<00:00, 133972.43it/s]100%|██████████| 552076/552076 [00:04<00:00, 123951.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18190/552076 [00:00<00:02, 181896.27it/s]  7%|▋         | 37188/552076 [00:00<00:02, 184247.00it/s] 10%|█         | 57105/552076 [00:00<00:02, 188481.57it/s] 13%|█▎        | 70888/552076 [00:00<00:02, 169764.91it/s] 16%|█▌        | 85883/552076 [00:00<00:02, 163289.94it/s] 19%|█▉        | 104673/552076 [00:00<00:02, 169724.21it/s] 23%|██▎       | 125290/552076 [00:00<00:02, 179227.91it/s] 26%|██▋       | 146035/552076 [00:00<00:02, 186851.23it/s] 30%|██▉       | 165517/552076 [00:00<00:02, 189171.43it/s] 34%|███▎      | 185015/552076 [00:01<00:01, 190875.92it/s] 37%|███▋      | 204159/552076 [00:01<00:01, 191041.85it/s] 40%|████      | 223186/552076 [00:01<00:01, 190808.87it/s] 44%|████▍     | 242360/552076 [00:01<00:01, 191086.50it/s] 47%|████▋     | 261702/552076 [00:01<00:01, 191780.26it/s] 51%|█████     | 281668/552076 [00:01<00:01, 194075.72it/s] 55%|█████▍    | 301025/552076 [00:01<00:01, 158818.12it/s] 58%|█████▊    | 317921/552076 [00:01<00:01, 120159.21it/s] 61%|██████    | 337083/552076 [00:01<00:01, 135295.39it/s] 65%|██████▍   | 356668/552076 [00:02<00:01, 149127.38it/s] 68%|██████▊   | 373490/552076 [00:02<00:01, 147466.05it/s] 71%|███████   | 390850/552076 [00:02<00:01, 154439.83it/s] 74%|███████▍  | 409557/552076 [00:02<00:00, 162965.45it/s] 78%|███████▊  | 428986/552076 [00:02<00:00, 171247.85it/s] 81%|████████▏ | 449692/552076 [00:02<00:00, 180618.17it/s] 85%|████████▌ | 470369/552076 [00:02<00:00, 187739.70it/s] 89%|████████▉ | 491502/552076 [00:02<00:00, 194242.51it/s] 93%|█████████▎| 511342/552076 [00:02<00:00, 171716.62it/s] 96%|█████████▋| 531379/552076 [00:03<00:00, 179411.11it/s]100%|█████████▉| 551378/552076 [00:03<00:00, 185123.89it/s]100%|██████████| 552076/552076 [00:03<00:00, 174574.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21426/552076 [00:00<00:02, 214251.52it/s]  8%|▊         | 43113/552076 [00:00<00:02, 215026.95it/s] 10%|▉         | 54119/552076 [00:00<00:03, 133223.79it/s] 12%|█▏        | 65879/552076 [00:00<00:03, 124516.19it/s] 14%|█▍        | 75995/552076 [00:00<00:05, 93534.80it/s]  15%|█▌        | 84852/552076 [00:00<00:06, 74847.77it/s] 17%|█▋        | 92583/552076 [00:00<00:06, 67293.55it/s] 20%|██        | 111079/552076 [00:01<00:05, 83165.41it/s] 22%|██▏       | 124180/552076 [00:01<00:04, 91427.98it/s] 24%|██▍       | 135087/552076 [00:01<00:04, 84748.15it/s] 26%|██▋       | 145536/552076 [00:01<00:04, 89837.89it/s] 28%|██▊       | 155536/552076 [00:01<00:05, 77362.27it/s] 31%|███       | 170050/552076 [00:01<00:04, 89965.12it/s] 33%|███▎      | 180531/552076 [00:01<00:04, 92152.64it/s] 36%|███▌      | 197544/552076 [00:01<00:03, 106843.37it/s] 39%|███▉      | 217290/552076 [00:01<00:02, 123900.91it/s] 42%|████▏     | 231818/552076 [00:02<00:02, 124948.62it/s] 45%|████▍     | 245812/552076 [00:02<00:02, 128045.72it/s] 48%|████▊     | 267695/552076 [00:02<00:01, 146246.18it/s] 52%|█████▏    | 288454/552076 [00:02<00:01, 160471.60it/s] 56%|█████▋    | 311304/552076 [00:02<00:01, 176208.88it/s] 60%|██████    | 333419/552076 [00:02<00:01, 187647.62it/s] 65%|██████▍   | 356406/552076 [00:02<00:00, 198590.04it/s] 69%|██████▊   | 378933/552076 [00:02<00:00, 205903.64it/s] 73%|███████▎  | 400351/552076 [00:02<00:00, 204791.54it/s] 76%|███████▋  | 421411/552076 [00:03<00:00, 204017.28it/s] 80%|████████  | 442220/552076 [00:03<00:00, 201543.42it/s] 84%|████████▍ | 463130/552076 [00:03<00:00, 203752.33it/s] 88%|████████▊ | 483716/552076 [00:03<00:00, 203356.88it/s] 92%|█████████▏| 505429/552076 [00:03<00:00, 207301.14it/s] 96%|█████████▌| 528062/552076 [00:03<00:00, 212664.33it/s]100%|█████████▉| 549449/552076 [00:03<00:00, 211173.87it/s]100%|██████████| 552076/552076 [00:03<00:00, 151669.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21839/552076 [00:00<00:02, 218389.17it/s]  8%|▊         | 44205/552076 [00:00<00:02, 219941.27it/s] 12%|█▏        | 67510/552076 [00:00<00:02, 223716.14it/s] 15%|█▍        | 82409/552076 [00:00<00:02, 188795.25it/s] 18%|█▊        | 101420/552076 [00:00<00:02, 189185.39it/s] 22%|██▏       | 122491/552076 [00:00<00:02, 195163.89it/s] 26%|██▋       | 145049/552076 [00:00<00:02, 203389.13it/s] 31%|███       | 168392/552076 [00:00<00:01, 211556.01it/s] 35%|███▍      | 192164/552076 [00:00<00:01, 218777.72it/s] 39%|███▊      | 213502/552076 [00:01<00:01, 188207.68it/s] 43%|████▎     | 236930/552076 [00:01<00:01, 200004.90it/s] 47%|████▋     | 260361/552076 [00:01<00:01, 209193.15it/s] 51%|█████▏    | 283572/552076 [00:01<00:01, 215577.32it/s] 55%|█████▌    | 306222/552076 [00:01<00:01, 218740.74it/s] 60%|█████▉    | 328740/552076 [00:01<00:01, 220632.65it/s] 64%|██████▍   | 352351/552076 [00:01<00:00, 225056.89it/s] 68%|██████▊   | 375008/552076 [00:01<00:00, 199704.87it/s] 72%|███████▏  | 395612/552076 [00:01<00:00, 166774.83it/s] 75%|███████▌  | 415019/552076 [00:02<00:00, 174119.50it/s] 79%|███████▊  | 433466/552076 [00:02<00:00, 176687.04it/s] 82%|████████▏ | 451869/552076 [00:02<00:00, 139528.72it/s] 85%|████████▍ | 467774/552076 [00:02<00:00, 143304.26it/s] 88%|████████▊ | 483346/552076 [00:02<00:00, 94963.07it/s]  90%|████████▉ | 495841/552076 [00:02<00:00, 101854.46it/s] 92%|█████████▏| 508881/552076 [00:02<00:00, 109012.74it/s] 94%|█████████▍| 521491/552076 [00:03<00:00, 110756.17it/s] 97%|█████████▋| 533769/552076 [00:03<00:00, 104899.44it/s] 99%|█████████▊| 545165/552076 [00:03<00:00, 83929.91it/s] 100%|██████████| 552076/552076 [00:03<00:00, 155831.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6643/552076 [00:00<00:08, 66429.75it/s]  3%|▎         | 17852/552076 [00:00<00:07, 75677.38it/s]  6%|▌         | 33024/552076 [00:00<00:05, 89069.36it/s]  9%|▉         | 51755/552076 [00:00<00:04, 105699.96it/s] 13%|█▎        | 70895/552076 [00:00<00:03, 122100.43it/s] 16%|█▌        | 87171/552076 [00:00<00:03, 131991.96it/s] 18%|█▊        | 101530/552076 [00:00<00:03, 135165.97it/s] 22%|██▏       | 121416/552076 [00:00<00:02, 149533.06it/s] 26%|██▌       | 142894/552076 [00:00<00:02, 164526.20it/s] 30%|██▉       | 164419/552076 [00:01<00:02, 177040.09it/s] 33%|███▎      | 184726/552076 [00:01<00:01, 184118.74it/s] 37%|███▋      | 203987/552076 [00:01<00:02, 156397.87it/s] 41%|████      | 224152/552076 [00:01<00:01, 167685.07it/s] 44%|████▍     | 243697/552076 [00:01<00:01, 175147.31it/s] 48%|████▊     | 264139/552076 [00:01<00:01, 183008.90it/s] 52%|█████▏    | 285828/552076 [00:01<00:01, 192005.95it/s] 56%|█████▌    | 306478/552076 [00:01<00:01, 196134.12it/s] 59%|█████▉    | 326546/552076 [00:01<00:01, 196283.92it/s] 63%|██████▎   | 346493/552076 [00:01<00:01, 194693.48it/s] 66%|██████▋   | 366188/552076 [00:02<00:00, 188221.68it/s] 70%|██████▉   | 385215/552076 [00:02<00:00, 188757.35it/s] 73%|███████▎  | 404472/552076 [00:02<00:00, 189882.84it/s] 77%|███████▋  | 424335/552076 [00:02<00:00, 192424.00it/s] 81%|████████  | 444827/552076 [00:02<00:00, 196009.45it/s] 84%|████████▍ | 464710/552076 [00:02<00:00, 196846.95it/s] 88%|████████▊ | 484446/552076 [00:02<00:00, 189763.06it/s] 91%|█████████ | 503514/552076 [00:02<00:00, 178036.08it/s] 95%|█████████▍| 522976/552076 [00:02<00:00, 182705.66it/s] 98%|█████████▊| 541627/552076 [00:03<00:00, 183827.76it/s]100%|██████████| 552076/552076 [00:03<00:00, 179399.55it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13269/552076 [00:00<00:04, 132685.38it/s]  5%|▌         | 30027/552076 [00:00<00:03, 141525.59it/s]  9%|▊         | 47921/552076 [00:00<00:03, 150997.00it/s] 12%|█▏        | 66147/552076 [00:00<00:03, 159187.72it/s] 14%|█▍        | 79202/552076 [00:00<00:03, 148972.49it/s] 18%|█▊        | 98290/552076 [00:00<00:02, 159475.06it/s] 21%|██▏       | 117900/552076 [00:00<00:02, 168938.25it/s] 25%|██▍       | 136448/552076 [00:00<00:02, 173580.76it/s] 28%|██▊       | 155407/552076 [00:00<00:02, 178089.92it/s] 32%|███▏      | 173986/552076 [00:01<00:02, 180328.25it/s] 35%|███▍      | 191849/552076 [00:01<00:02, 179662.16it/s] 38%|███▊      | 209697/552076 [00:01<00:02, 154683.48it/s] 41%|████      | 225695/552076 [00:01<00:02, 143787.00it/s] 44%|████▎     | 240598/552076 [00:01<00:02, 137886.24it/s] 46%|████▌     | 254806/552076 [00:01<00:02, 109495.20it/s] 48%|████▊     | 266970/552076 [00:01<00:02, 106124.07it/s] 50%|█████     | 278455/552076 [00:01<00:02, 106910.40it/s] 54%|█████▍    | 297399/552076 [00:02<00:02, 122983.69it/s] 57%|█████▋    | 313659/552076 [00:02<00:01, 126615.29it/s] 59%|█████▉    | 327256/552076 [00:02<00:02, 99519.07it/s]  61%|██████▏   | 338765/552076 [00:02<00:02, 78623.75it/s] 63%|██████▎   | 348405/552076 [00:02<00:02, 80503.55it/s] 65%|██████▌   | 358893/552076 [00:02<00:02, 86536.88it/s] 67%|██████▋   | 371934/552076 [00:02<00:01, 96250.17it/s] 70%|███████   | 388968/552076 [00:02<00:01, 110694.11it/s] 73%|███████▎  | 404256/552076 [00:03<00:01, 120683.27it/s] 76%|███████▌  | 419304/552076 [00:03<00:01, 128303.41it/s] 79%|███████▊  | 434284/552076 [00:03<00:00, 134073.75it/s] 82%|████████▏ | 454240/552076 [00:03<00:00, 148713.36it/s] 86%|████████▌ | 474205/552076 [00:03<00:00, 161037.39it/s] 90%|████████▉ | 494834/552076 [00:03<00:00, 172380.40it/s] 93%|█████████▎| 513025/552076 [00:03<00:00, 170764.70it/s] 96%|█████████▋| 531403/552076 [00:03<00:00, 174470.98it/s]100%|██████████| 552076/552076 [00:03<00:00, 142300.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22703/552076 [00:00<00:02, 227025.89it/s]  8%|▊         | 43060/552076 [00:00<00:02, 219440.43it/s] 11%|█▏        | 63364/552076 [00:00<00:02, 214246.00it/s] 15%|█▌        | 85310/552076 [00:00<00:02, 215781.94it/s] 19%|█▉        | 106047/552076 [00:00<00:02, 213186.37it/s] 23%|██▎       | 127903/552076 [00:00<00:01, 214768.30it/s] 27%|██▋       | 148197/552076 [00:00<00:01, 211075.39it/s] 30%|███       | 167955/552076 [00:00<00:01, 206836.68it/s] 34%|███▍      | 189083/552076 [00:00<00:01, 208149.11it/s] 38%|███▊      | 209015/552076 [00:01<00:01, 187445.16it/s] 41%|████      | 227532/552076 [00:01<00:01, 166464.92it/s] 45%|████▍     | 247329/552076 [00:01<00:01, 174809.16it/s] 48%|████▊     | 266709/552076 [00:01<00:01, 180102.63it/s] 52%|█████▏    | 287018/552076 [00:01<00:01, 186432.43it/s] 56%|█████▌    | 307269/552076 [00:01<00:01, 190980.90it/s] 59%|█████▉    | 326870/552076 [00:01<00:01, 192460.49it/s] 63%|██████▎   | 346253/552076 [00:01<00:01, 149317.52it/s] 66%|██████▌   | 365173/552076 [00:01<00:01, 159397.55it/s] 70%|██████▉   | 385248/552076 [00:02<00:00, 169894.73it/s] 73%|███████▎  | 403333/552076 [00:02<00:00, 166323.34it/s] 77%|███████▋  | 422951/552076 [00:02<00:00, 174278.19it/s] 80%|████████  | 442786/552076 [00:02<00:00, 180862.53it/s] 84%|████████▍ | 462493/552076 [00:02<00:00, 185435.07it/s] 87%|████████▋ | 481686/552076 [00:02<00:00, 187336.06it/s] 91%|█████████ | 500698/552076 [00:02<00:00, 183108.89it/s] 94%|█████████▍| 519225/552076 [00:02<00:00, 127460.46it/s] 97%|█████████▋| 536079/552076 [00:03<00:00, 137514.94it/s]100%|█████████▉| 551780/552076 [00:03<00:00, 112789.62it/s]100%|██████████| 552076/552076 [00:03<00:00, 170332.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9287/552076 [00:00<00:05, 92869.65it/s]  4%|▍         | 22845/552076 [00:00<00:05, 102561.47it/s]  5%|▌         | 28863/552076 [00:00<00:06, 82448.31it/s]   7%|▋         | 37634/552076 [00:00<00:06, 83957.56it/s]  9%|▉         | 49929/552076 [00:00<00:05, 92784.58it/s] 11%|█         | 61014/552076 [00:00<00:05, 97553.25it/s] 13%|█▎        | 70238/552076 [00:00<00:05, 82949.92it/s] 16%|█▌        | 85898/552076 [00:00<00:04, 96575.46it/s] 17%|█▋        | 96407/552076 [00:01<00:05, 86135.18it/s] 19%|█▉        | 107028/552076 [00:01<00:04, 90028.00it/s] 21%|██▏       | 118177/552076 [00:01<00:04, 95545.37it/s] 24%|██▍       | 134252/552076 [00:01<00:03, 108780.90it/s] 27%|██▋       | 148385/552076 [00:01<00:03, 116854.54it/s] 30%|██▉       | 163853/552076 [00:01<00:03, 126104.92it/s] 33%|███▎      | 181645/552076 [00:01<00:02, 138176.00it/s] 36%|███▌      | 196578/552076 [00:01<00:02, 141342.12it/s] 39%|███▉      | 215627/552076 [00:01<00:02, 153198.00it/s] 43%|████▎     | 236603/552076 [00:01<00:01, 166681.05it/s] 47%|████▋     | 257901/552076 [00:02<00:01, 178309.62it/s] 51%|█████     | 281332/552076 [00:02<00:01, 192081.22it/s] 55%|█████▍    | 302355/552076 [00:02<00:01, 197187.35it/s] 58%|█████▊    | 322731/552076 [00:02<00:01, 175988.04it/s] 62%|██████▏   | 343003/552076 [00:02<00:01, 183235.86it/s] 66%|██████▌   | 363863/552076 [00:02<00:00, 190170.87it/s] 70%|██████▉   | 386131/552076 [00:02<00:00, 198881.22it/s] 74%|███████▎  | 406512/552076 [00:02<00:00, 188558.93it/s] 77%|███████▋  | 425825/552076 [00:02<00:00, 186520.52it/s] 81%|████████  | 446415/552076 [00:02<00:00, 191940.12it/s] 84%|████████▍ | 465876/552076 [00:03<00:00, 170936.21it/s] 88%|████████▊ | 487939/552076 [00:03<00:00, 183321.60it/s] 92%|█████████▏| 509564/552076 [00:03<00:00, 192096.21it/s] 96%|█████████▋| 531787/552076 [00:03<00:00, 200239.49it/s]100%|██████████| 552076/552076 [00:03<00:00, 156845.58it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20900/552076 [00:00<00:02, 208999.70it/s]  7%|▋         | 40728/552076 [00:00<00:02, 205662.87it/s] 11%|█         | 61985/552076 [00:00<00:02, 207686.02it/s] 15%|█▍        | 82442/552076 [00:00<00:02, 206738.06it/s] 18%|█▊        | 100384/552076 [00:00<00:02, 197705.05it/s] 22%|██▏       | 120202/552076 [00:00<00:02, 197846.79it/s] 25%|██▌       | 139991/552076 [00:00<00:02, 197857.40it/s] 29%|██▊       | 158101/552076 [00:00<00:02, 158034.24it/s] 32%|███▏      | 174004/552076 [00:01<00:02, 128809.27it/s] 34%|███▍      | 187836/552076 [00:01<00:03, 110732.97it/s] 38%|███▊      | 207472/552076 [00:01<00:02, 127398.65it/s] 41%|████      | 226782/552076 [00:01<00:02, 141880.08it/s] 45%|████▍     | 246591/552076 [00:01<00:01, 155081.21it/s] 48%|████▊     | 263655/552076 [00:01<00:01, 149198.44it/s] 51%|█████▏    | 283739/552076 [00:01<00:01, 161668.74it/s] 55%|█████▍    | 301004/552076 [00:01<00:01, 153211.88it/s] 58%|█████▊    | 318062/552076 [00:01<00:01, 158038.67it/s] 61%|██████    | 334507/552076 [00:02<00:01, 139395.06it/s] 63%|██████▎   | 349298/552076 [00:02<00:02, 100303.77it/s] 65%|██████▌   | 361471/552076 [00:02<00:01, 97479.74it/s]  68%|██████▊   | 376777/552076 [00:02<00:01, 109396.69it/s] 71%|███████   | 389254/552076 [00:02<00:01, 106144.16it/s] 73%|███████▎  | 404344/552076 [00:02<00:01, 116509.61it/s] 76%|███████▌  | 417069/552076 [00:03<00:01, 84330.95it/s]  79%|███████▊  | 433707/552076 [00:03<00:01, 98972.55it/s] 81%|████████  | 446011/552076 [00:03<00:01, 100222.48it/s] 83%|████████▎ | 457722/552076 [00:03<00:01, 86362.90it/s]  85%|████████▌ | 471645/552076 [00:03<00:00, 97464.65it/s] 89%|████████▉ | 490507/552076 [00:03<00:00, 113990.39it/s] 92%|█████████▏| 506532/552076 [00:03<00:00, 124796.52it/s] 95%|█████████▌| 526421/552076 [00:03<00:00, 140497.55it/s] 98%|█████████▊| 542397/552076 [00:03<00:00, 136883.67it/s]100%|██████████| 552076/552076 [00:04<00:00, 136871.30it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18721/552076 [00:00<00:02, 187207.05it/s]  7%|▋         | 40221/552076 [00:00<00:02, 194758.42it/s] 11%|█         | 61944/552076 [00:00<00:02, 200992.56it/s] 15%|█▍        | 82714/552076 [00:00<00:02, 202957.78it/s] 19%|█▉        | 105260/552076 [00:00<00:02, 209220.37it/s] 23%|██▎       | 127925/552076 [00:00<00:01, 214160.47it/s] 27%|██▋       | 149524/552076 [00:00<00:01, 214704.60it/s] 31%|███       | 169524/552076 [00:00<00:01, 203228.19it/s] 34%|███▍      | 188945/552076 [00:00<00:01, 198867.49it/s] 38%|███▊      | 208222/552076 [00:01<00:01, 191972.03it/s] 41%|████      | 227329/552076 [00:01<00:01, 191698.79it/s] 45%|████▍     | 247160/552076 [00:01<00:01, 193634.10it/s] 48%|████▊     | 266344/552076 [00:01<00:01, 173632.20it/s] 51%|█████▏    | 284213/552076 [00:01<00:01, 175117.43it/s] 55%|█████▍    | 301912/552076 [00:01<00:01, 161822.94it/s] 58%|█████▊    | 320143/552076 [00:01<00:01, 167466.90it/s] 61%|██████▏   | 339409/552076 [00:01<00:01, 174303.12it/s] 65%|██████▍   | 358720/552076 [00:01<00:01, 179546.87it/s] 69%|██████▊   | 378685/552076 [00:01<00:00, 185139.29it/s] 72%|███████▏  | 397403/552076 [00:02<00:01, 153626.74it/s] 76%|███████▌  | 417244/552076 [00:02<00:00, 164783.71it/s] 79%|███████▉  | 435387/552076 [00:02<00:00, 169446.93it/s] 82%|████████▏ | 455325/552076 [00:02<00:00, 177437.66it/s] 86%|████████▌ | 475207/552076 [00:02<00:00, 183352.43it/s] 90%|████████▉ | 494745/552076 [00:02<00:00, 186800.42it/s] 93%|█████████▎| 514663/552076 [00:02<00:00, 190348.14it/s] 97%|█████████▋| 534578/552076 [00:02<00:00, 192905.69it/s]100%|██████████| 552076/552076 [00:02<00:00, 187302.96it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21860/552076 [00:00<00:02, 218595.00it/s]  6%|▌         | 30531/552076 [00:00<00:03, 141546.85it/s]  7%|▋         | 39441/552076 [00:00<00:04, 120300.82it/s]  9%|▊         | 46959/552076 [00:00<00:05, 85526.43it/s]  10%|▉         | 53754/552076 [00:00<00:07, 67907.10it/s] 12%|█▏        | 66466/552076 [00:00<00:06, 78936.90it/s] 15%|█▍        | 81584/552076 [00:00<00:05, 92146.23it/s] 18%|█▊        | 100130/552076 [00:00<00:04, 108527.51it/s] 20%|██        | 112841/552076 [00:01<00:04, 103620.09it/s] 23%|██▎       | 125040/552076 [00:01<00:03, 108522.14it/s] 25%|██▍       | 136896/552076 [00:01<00:03, 104137.83it/s] 27%|██▋       | 148051/552076 [00:01<00:04, 99861.61it/s]  29%|██▉       | 158781/552076 [00:01<00:03, 100068.81it/s] 31%|███       | 169177/552076 [00:01<00:04, 85208.07it/s]  32%|███▏      | 178353/552076 [00:01<00:04, 86862.21it/s] 34%|███▍      | 187506/552076 [00:01<00:04, 86335.36it/s] 37%|███▋      | 201959/552076 [00:01<00:03, 98196.44it/s] 39%|███▉      | 217413/552076 [00:02<00:03, 110255.54it/s] 43%|████▎     | 237524/552076 [00:02<00:02, 127540.39it/s] 47%|████▋     | 256817/552076 [00:02<00:02, 141975.88it/s] 50%|█████     | 276945/552076 [00:02<00:01, 155740.99it/s] 54%|█████▍    | 296813/552076 [00:02<00:01, 166537.81it/s] 57%|█████▋    | 317048/552076 [00:02<00:01, 175874.35it/s] 61%|██████    | 336525/552076 [00:02<00:01, 181145.63it/s] 64%|██████▍   | 355432/552076 [00:02<00:01, 169683.28it/s] 68%|██████▊   | 376117/552076 [00:02<00:00, 179350.26it/s] 72%|███████▏  | 398449/552076 [00:02<00:00, 190607.10it/s] 76%|███████▌  | 419684/552076 [00:03<00:00, 196646.12it/s] 80%|████████  | 443063/552076 [00:03<00:00, 206487.78it/s] 84%|████████▍ | 464190/552076 [00:03<00:00, 193392.27it/s] 88%|████████▊ | 484033/552076 [00:03<00:00, 179665.99it/s] 91%|█████████▏| 504984/552076 [00:03<00:00, 187685.68it/s] 95%|█████████▌| 526663/552076 [00:03<00:00, 195560.93it/s] 99%|█████████▉| 547426/552076 [00:03<00:00, 199030.13it/s]100%|██████████| 552076/552076 [00:03<00:00, 146375.96it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22120/552076 [00:00<00:02, 221195.99it/s]  8%|▊         | 44519/552076 [00:00<00:02, 222023.92it/s] 12%|█▏        | 65670/552076 [00:00<00:02, 218760.37it/s] 16%|█▌        | 87746/552076 [00:00<00:02, 219355.57it/s] 20%|█▉        | 110060/552076 [00:00<00:02, 220475.24it/s] 24%|██▍       | 132236/552076 [00:00<00:01, 220854.91it/s] 27%|██▋       | 151725/552076 [00:00<00:02, 173953.99it/s] 31%|███       | 168857/552076 [00:00<00:02, 131252.73it/s] 33%|███▎      | 184733/552076 [00:01<00:02, 138447.49it/s] 36%|███▌      | 199643/552076 [00:01<00:02, 136687.37it/s] 39%|███▉      | 217172/552076 [00:01<00:02, 146356.40it/s] 43%|████▎     | 236269/552076 [00:01<00:02, 157386.48it/s] 46%|████▋     | 255610/552076 [00:01<00:01, 166700.46it/s] 49%|████▉     | 272946/552076 [00:01<00:01, 155541.58it/s] 53%|█████▎    | 290619/552076 [00:01<00:01, 161343.10it/s] 56%|█████▌    | 310265/552076 [00:01<00:01, 170485.12it/s] 60%|█████▉    | 330280/552076 [00:01<00:01, 178416.99it/s] 63%|██████▎   | 349918/552076 [00:02<00:01, 183449.68it/s] 67%|██████▋   | 370121/552076 [00:02<00:00, 188653.41it/s] 71%|███████   | 389261/552076 [00:02<00:01, 119473.10it/s] 73%|███████▎  | 404590/552076 [00:02<00:01, 81690.16it/s]  75%|███████▌  | 416731/552076 [00:02<00:01, 89444.18it/s] 79%|███████▉  | 436736/552076 [00:02<00:01, 107229.97it/s] 82%|████████▏ | 453614/552076 [00:03<00:00, 120401.49it/s] 85%|████████▍ | 468732/552076 [00:03<00:00, 96837.98it/s]  87%|████████▋ | 481483/552076 [00:03<00:00, 101692.62it/s] 89%|████████▉ | 493742/552076 [00:03<00:00, 91856.59it/s]  91%|█████████▏| 504572/552076 [00:03<00:00, 90519.50it/s] 93%|█████████▎| 514779/552076 [00:03<00:00, 83418.04it/s] 96%|█████████▋| 532218/552076 [00:03<00:00, 98894.12it/s]100%|█████████▉| 550030/552076 [00:04<00:00, 114121.62it/s]100%|██████████| 552076/552076 [00:04<00:00, 136982.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17075/552076 [00:00<00:03, 170741.61it/s]  7%|▋         | 36153/552076 [00:00<00:02, 176296.34it/s] 10%|█         | 57255/552076 [00:00<00:02, 185450.45it/s] 14%|█▍        | 78682/552076 [00:00<00:02, 193247.50it/s] 18%|█▊        | 98405/552076 [00:00<00:02, 194424.22it/s] 22%|██▏       | 119665/552076 [00:00<00:02, 199539.55it/s] 26%|██▌       | 141543/552076 [00:00<00:02, 204944.99it/s] 30%|██▉       | 163875/552076 [00:00<00:01, 210130.88it/s] 33%|███▎      | 184026/552076 [00:00<00:01, 205283.18it/s] 37%|███▋      | 204611/552076 [00:01<00:01, 205452.07it/s] 41%|████      | 224752/552076 [00:01<00:01, 202574.33it/s] 44%|████▍     | 244735/552076 [00:01<00:01, 200411.66it/s] 48%|████▊     | 264590/552076 [00:01<00:01, 196973.68it/s] 52%|█████▏    | 284393/552076 [00:01<00:01, 197286.92it/s] 55%|█████▌    | 304223/552076 [00:01<00:01, 197588.97it/s] 59%|█████▊    | 323925/552076 [00:01<00:01, 185678.31it/s] 62%|██████▏   | 342600/552076 [00:01<00:01, 166232.45it/s] 65%|██████▌   | 360431/552076 [00:01<00:01, 169678.10it/s] 69%|██████▉   | 379923/552076 [00:01<00:00, 176535.15it/s] 72%|███████▏  | 399212/552076 [00:02<00:00, 181142.72it/s] 76%|███████▌  | 418266/552076 [00:02<00:00, 183861.14it/s] 79%|███████▉  | 437993/552076 [00:02<00:00, 187686.55it/s] 83%|████████▎ | 456909/552076 [00:02<00:00, 168012.11it/s] 86%|████████▌ | 474200/552076 [00:02<00:00, 158876.59it/s] 89%|████████▉ | 493405/552076 [00:02<00:00, 167557.89it/s] 93%|█████████▎| 512531/552076 [00:02<00:00, 174026.56it/s] 96%|█████████▋| 531939/552076 [00:02<00:00, 179591.93it/s]100%|█████████▉| 550831/552076 [00:02<00:00, 182290.84it/s]100%|██████████| 552076/552076 [00:02<00:00, 187513.76it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13429/552076 [00:00<00:04, 134285.01it/s]  4%|▍         | 22257/552076 [00:00<00:04, 116124.36it/s]  6%|▌         | 30706/552076 [00:00<00:04, 104393.88it/s]  7%|▋         | 39169/552076 [00:00<00:05, 97557.91it/s]  10%|█         | 56778/552076 [00:00<00:04, 112626.02it/s] 14%|█▍        | 76040/552076 [00:00<00:03, 128654.14it/s] 17%|█▋        | 96171/552076 [00:00<00:03, 144274.80it/s] 20%|██        | 111242/552076 [00:00<00:03, 145575.35it/s] 23%|██▎       | 126253/552076 [00:00<00:03, 121550.41it/s] 26%|██▌       | 143562/552076 [00:01<00:03, 133472.03it/s] 29%|██▊       | 157953/552076 [00:01<00:02, 132633.98it/s] 31%|███       | 171948/552076 [00:01<00:03, 117782.50it/s] 33%|███▎      | 184547/552076 [00:01<00:03, 103592.65it/s] 35%|███▌      | 195792/552076 [00:01<00:03, 103467.24it/s] 37%|███▋      | 206759/552076 [00:01<00:03, 101902.03it/s] 39%|███▉      | 217389/552076 [00:01<00:03, 101474.93it/s] 42%|████▏     | 234291/552076 [00:01<00:02, 115296.85it/s] 45%|████▌     | 250576/552076 [00:02<00:02, 126364.73it/s] 48%|████▊     | 264134/552076 [00:02<00:02, 99813.08it/s]  50%|████▉     | 275634/552076 [00:02<00:02, 100979.09it/s] 52%|█████▏    | 286835/552076 [00:02<00:02, 104052.62it/s] 55%|█████▌    | 305904/552076 [00:02<00:02, 120472.22it/s] 59%|█████▉    | 325721/552076 [00:02<00:01, 136531.34it/s] 63%|██████▎   | 345795/552076 [00:02<00:01, 151022.43it/s] 66%|██████▌   | 365343/552076 [00:02<00:01, 162080.50it/s] 70%|██████▉   | 384961/552076 [00:02<00:00, 170996.80it/s] 74%|███████▎  | 406034/552076 [00:03<00:00, 181247.21it/s] 77%|███████▋  | 425119/552076 [00:03<00:00, 153634.54it/s] 80%|████████  | 442347/552076 [00:03<00:00, 158788.45it/s] 83%|████████▎ | 459461/552076 [00:03<00:00, 161142.33it/s] 87%|████████▋ | 479767/552076 [00:03<00:00, 171779.63it/s] 91%|█████████ | 499981/552076 [00:03<00:00, 179883.86it/s] 94%|█████████▍| 518560/552076 [00:03<00:00, 163321.86it/s] 97%|█████████▋| 538229/552076 [00:03<00:00, 172078.42it/s]100%|██████████| 552076/552076 [00:03<00:00, 141412.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20132/552076 [00:00<00:02, 201318.27it/s]  7%|▋         | 41113/552076 [00:00<00:02, 203792.36it/s]  9%|▉         | 51635/552076 [00:00<00:03, 131099.24it/s] 12%|█▏        | 67807/552076 [00:00<00:03, 138993.86it/s] 16%|█▋        | 89944/552076 [00:00<00:02, 156459.63it/s] 20%|██        | 110853/552076 [00:00<00:02, 169239.14it/s] 24%|██▍       | 133096/552076 [00:00<00:02, 182318.41it/s] 28%|██▊       | 154738/552076 [00:00<00:02, 191362.10it/s] 32%|███▏      | 174359/552076 [00:00<00:01, 192788.34it/s] 35%|███▌      | 193740/552076 [00:01<00:02, 177054.73it/s] 39%|███▉      | 215786/552076 [00:01<00:01, 188167.92it/s] 43%|████▎     | 238197/552076 [00:01<00:01, 197676.54it/s] 47%|████▋     | 260808/552076 [00:01<00:01, 205424.87it/s] 51%|█████     | 282706/552076 [00:01<00:01, 209310.92it/s] 55%|█████▌    | 303915/552076 [00:01<00:01, 191225.66it/s] 59%|█████▊    | 323536/552076 [00:01<00:01, 187404.39it/s] 62%|██████▏   | 343603/552076 [00:01<00:01, 191195.07it/s] 66%|██████▌   | 363641/552076 [00:01<00:00, 193858.68it/s] 69%|██████▉   | 383229/552076 [00:02<00:00, 192585.35it/s] 73%|███████▎  | 403252/552076 [00:02<00:00, 194816.53it/s] 77%|███████▋  | 422840/552076 [00:02<00:00, 177614.70it/s] 80%|████████  | 443221/552076 [00:02<00:00, 184736.03it/s] 84%|████████▎ | 462026/552076 [00:02<00:00, 132128.07it/s] 87%|████████▋ | 477571/552076 [00:02<00:00, 120593.85it/s] 89%|████████▉ | 491458/552076 [00:02<00:00, 100208.13it/s] 91%|█████████ | 503335/552076 [00:03<00:00, 104169.20it/s] 94%|█████████▎| 517201/552076 [00:03<00:00, 112568.07it/s] 96%|█████████▋| 531890/552076 [00:03<00:00, 121052.90it/s] 99%|█████████▊| 544969/552076 [00:03<00:00, 92688.47it/s] 100%|██████████| 552076/552076 [00:03<00:00, 156705.17it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7970/552076 [00:00<00:07, 72188.62it/s]  3%|▎         | 14314/552076 [00:00<00:07, 69320.49it/s]  5%|▍         | 26013/552076 [00:00<00:06, 78973.98it/s]  8%|▊         | 41615/552076 [00:00<00:05, 92707.86it/s] 11%|█         | 60420/552076 [00:00<00:04, 109337.61it/s] 13%|█▎        | 74252/552076 [00:00<00:04, 116669.50it/s] 16%|█▌        | 87915/552076 [00:00<00:03, 122016.62it/s] 19%|█▉        | 106502/552076 [00:00<00:03, 136035.64it/s] 23%|██▎       | 126255/552076 [00:00<00:02, 150047.75it/s] 26%|██▋       | 145813/552076 [00:01<00:02, 161313.13it/s] 30%|███       | 165695/552076 [00:01<00:02, 170988.86it/s] 34%|███▎      | 185999/552076 [00:01<00:02, 179488.72it/s] 38%|███▊      | 207704/552076 [00:01<00:01, 189316.90it/s] 42%|████▏     | 229155/552076 [00:01<00:01, 196228.41it/s] 45%|████▌     | 250347/552076 [00:01<00:01, 200684.50it/s] 49%|████▉     | 272566/552076 [00:01<00:01, 206684.64it/s] 53%|█████▎    | 294312/552076 [00:01<00:01, 209801.03it/s] 57%|█████▋    | 315890/552076 [00:01<00:01, 211558.51it/s] 61%|██████    | 337212/552076 [00:01<00:01, 206828.36it/s] 65%|██████▍   | 358035/552076 [00:02<00:00, 195142.46it/s] 69%|██████▊   | 378665/552076 [00:02<00:00, 198360.83it/s] 72%|███████▏  | 398678/552076 [00:02<00:00, 196088.28it/s] 76%|███████▌  | 418936/552076 [00:02<00:00, 197990.63it/s] 79%|███████▉  | 438831/552076 [00:02<00:00, 190110.92it/s] 83%|████████▎ | 457976/552076 [00:02<00:00, 172585.47it/s] 86%|████████▋ | 477386/552076 [00:02<00:00, 178520.57it/s] 90%|█████████ | 497065/552076 [00:02<00:00, 183633.96it/s] 94%|█████████▎| 516759/552076 [00:02<00:00, 187431.34it/s] 97%|█████████▋| 536084/552076 [00:02<00:00, 189138.81it/s]100%|██████████| 552076/552076 [00:03<00:00, 179585.57it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7239/552076 [00:00<00:07, 72387.31it/s]  4%|▍         | 22335/552076 [00:00<00:06, 85781.18it/s]  8%|▊         | 42756/552076 [00:00<00:04, 103848.40it/s] 12%|█▏        | 64106/552076 [00:00<00:03, 122762.76it/s] 15%|█▌        | 85532/552076 [00:00<00:03, 140800.42it/s] 19%|█▉        | 104792/552076 [00:00<00:02, 153156.73it/s] 23%|██▎       | 124837/552076 [00:00<00:02, 164822.76it/s] 26%|██▌       | 144713/552076 [00:00<00:02, 173719.67it/s] 30%|██▉       | 163900/552076 [00:00<00:02, 178792.41it/s] 33%|███▎      | 183145/552076 [00:01<00:02, 182679.42it/s] 37%|███▋      | 202006/552076 [00:01<00:02, 162913.32it/s] 40%|███▉      | 219111/552076 [00:01<00:02, 160956.51it/s] 43%|████▎     | 235782/552076 [00:01<00:02, 132315.50it/s] 45%|████▌     | 250257/552076 [00:01<00:02, 105412.10it/s] 48%|████▊     | 262534/552076 [00:01<00:03, 93214.76it/s]  50%|████▉     | 273330/552076 [00:01<00:03, 82647.50it/s] 53%|█████▎    | 290088/552076 [00:02<00:02, 97466.74it/s] 56%|█████▌    | 307485/552076 [00:02<00:02, 112277.15it/s] 58%|█████▊    | 320887/552076 [00:02<00:02, 105418.31it/s] 60%|██████    | 333037/552076 [00:02<00:02, 102012.31it/s] 62%|██████▏   | 344388/552076 [00:02<00:02, 102789.00it/s] 65%|██████▍   | 356795/552076 [00:02<00:01, 108363.71it/s] 67%|██████▋   | 371127/552076 [00:02<00:01, 116917.86it/s] 70%|███████   | 387194/552076 [00:02<00:01, 127317.68it/s] 73%|███████▎  | 401667/552076 [00:02<00:01, 132082.78it/s] 75%|███████▌  | 415428/552076 [00:03<00:01, 125723.21it/s] 79%|███████▉  | 435080/552076 [00:03<00:00, 140956.86it/s] 82%|████████▏ | 453292/552076 [00:03<00:00, 151209.21it/s] 86%|████████▌ | 472053/552076 [00:03<00:00, 160554.47it/s] 89%|████████▊ | 488862/552076 [00:03<00:00, 148568.86it/s] 92%|█████████▏| 508175/552076 [00:03<00:00, 159616.58it/s] 95%|█████████▌| 527139/552076 [00:03<00:00, 167573.79it/s] 99%|█████████▉| 547179/552076 [00:03<00:00, 176233.27it/s]100%|██████████| 552076/552076 [00:03<00:00, 144194.63it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13214/552076 [00:00<00:04, 132132.25it/s]  5%|▍         | 25128/552076 [00:00<00:04, 127946.41it/s]  8%|▊         | 41917/552076 [00:00<00:03, 137780.06it/s] 11%|█         | 60770/552076 [00:00<00:03, 149882.30it/s] 15%|█▍        | 80467/552076 [00:00<00:02, 161460.67it/s] 18%|█▊        | 98517/552076 [00:00<00:02, 166731.92it/s] 21%|██        | 116040/552076 [00:00<00:02, 169191.82it/s] 24%|██▍       | 133624/552076 [00:00<00:02, 171131.86it/s] 28%|██▊       | 152595/552076 [00:00<00:02, 176309.73it/s] 31%|███▏      | 173009/552076 [00:01<00:02, 183826.82it/s] 35%|███▌      | 193974/552076 [00:01<00:01, 190879.62it/s] 39%|███▉      | 215204/552076 [00:01<00:01, 196837.37it/s] 43%|████▎     | 235383/552076 [00:01<00:01, 198296.38it/s] 46%|████▌     | 255232/552076 [00:01<00:01, 194961.27it/s] 50%|████▉     | 275546/552076 [00:01<00:01, 197342.75it/s] 54%|█████▎    | 295585/552076 [00:01<00:01, 198245.24it/s] 57%|█████▋    | 315428/552076 [00:01<00:01, 197489.56it/s] 61%|██████    | 335191/552076 [00:01<00:01, 164038.31it/s] 64%|██████▍   | 353418/552076 [00:01<00:01, 169111.59it/s] 67%|██████▋   | 372553/552076 [00:02<00:01, 175220.58it/s] 71%|███████   | 391088/552076 [00:02<00:00, 178139.67it/s] 74%|███████▍  | 410097/552076 [00:02<00:00, 181561.79it/s] 78%|███████▊  | 428549/552076 [00:02<00:00, 181881.19it/s] 81%|████████  | 446944/552076 [00:02<00:00, 150782.30it/s] 84%|████████▍ | 463054/552076 [00:02<00:00, 112500.16it/s] 87%|████████▋ | 481449/552076 [00:02<00:00, 127336.84it/s] 90%|█████████ | 499411/552076 [00:02<00:00, 139519.56it/s] 94%|█████████▍| 519324/552076 [00:03<00:00, 153285.27it/s] 98%|█████████▊| 538880/552076 [00:03<00:00, 163915.43it/s]100%|██████████| 552076/552076 [00:03<00:00, 170189.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 19174/552076 [00:00<00:02, 191736.53it/s]  7%|▋         | 35928/552076 [00:00<00:02, 183773.10it/s]  9%|▉         | 48410/552076 [00:00<00:03, 160961.39it/s] 11%|█         | 58492/552076 [00:00<00:04, 110131.39it/s] 13%|█▎        | 70729/552076 [00:00<00:04, 113535.44it/s] 15%|█▍        | 80672/552076 [00:00<00:05, 85523.41it/s]  16%|█▋        | 90391/552076 [00:00<00:05, 88716.36it/s] 18%|█▊        | 99318/552076 [00:00<00:05, 78184.24it/s] 21%|██        | 113714/552076 [00:01<00:04, 90603.05it/s] 22%|██▏       | 123693/552076 [00:01<00:04, 90791.24it/s] 25%|██▍       | 136005/552076 [00:01<00:04, 98554.23it/s] 27%|██▋       | 146504/552076 [00:01<00:04, 83506.47it/s] 28%|██▊       | 155701/552076 [00:01<00:05, 74357.41it/s] 30%|███       | 165661/552076 [00:01<00:04, 77955.08it/s] 32%|███▏      | 174048/552076 [00:01<00:05, 73126.00it/s] 34%|███▍      | 189498/552076 [00:01<00:04, 86847.79it/s] 37%|███▋      | 202004/552076 [00:02<00:03, 95611.28it/s] 40%|████      | 221480/552076 [00:02<00:02, 112844.78it/s] 43%|████▎     | 235438/552076 [00:02<00:02, 119723.26it/s] 45%|████▌     | 249013/552076 [00:02<00:02, 118118.04it/s] 49%|████▉     | 270589/552076 [00:02<00:02, 136672.63it/s] 53%|█████▎    | 291779/552076 [00:02<00:01, 152963.46it/s] 57%|█████▋    | 313159/552076 [00:02<00:01, 167239.59it/s] 61%|██████    | 335288/552076 [00:02<00:01, 180461.78it/s] 65%|██████▍   | 357341/552076 [00:02<00:01, 190864.88it/s] 68%|██████▊   | 377656/552076 [00:02<00:00, 192315.98it/s] 72%|███████▏  | 397750/552076 [00:03<00:00, 193269.22it/s] 76%|███████▌  | 418195/552076 [00:03<00:00, 196490.40it/s] 80%|███████▉  | 439062/552076 [00:03<00:00, 199991.15it/s] 83%|████████▎ | 459531/552076 [00:03<00:00, 201377.77it/s] 87%|████████▋ | 480566/552076 [00:03<00:00, 203986.25it/s] 91%|█████████ | 501132/552076 [00:03<00:00, 198282.14it/s] 94%|█████████▍| 521112/552076 [00:03<00:00, 170119.53it/s] 98%|█████████▊| 538932/552076 [00:03<00:00, 155525.39it/s]100%|██████████| 552076/552076 [00:03<00:00, 138452.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7106/552076 [00:00<00:07, 70869.31it/s]  3%|▎         | 17384/552076 [00:00<00:06, 78147.71it/s]  5%|▌         | 29897/552076 [00:00<00:05, 88067.04it/s]  7%|▋         | 40233/552076 [00:00<00:05, 92156.94it/s] 10%|▉         | 54504/552076 [00:00<00:04, 103114.83it/s] 13%|█▎        | 72545/552076 [00:00<00:04, 118323.17it/s] 17%|█▋        | 91946/552076 [00:00<00:03, 134005.61it/s] 20%|█▉        | 110231/552076 [00:00<00:03, 145679.81it/s] 23%|██▎       | 125825/552076 [00:00<00:03, 141815.28it/s] 26%|██▌       | 144900/552076 [00:01<00:02, 153637.89it/s] 30%|██▉       | 164591/552076 [00:01<00:02, 164480.88it/s] 33%|███▎      | 184570/552076 [00:01<00:02, 173688.11it/s] 37%|███▋      | 204382/552076 [00:01<00:01, 180359.54it/s] 41%|████      | 223720/552076 [00:01<00:01, 184076.95it/s] 44%|████▍     | 242527/552076 [00:01<00:01, 181245.00it/s] 47%|████▋     | 260941/552076 [00:01<00:01, 166124.86it/s] 51%|█████     | 282033/552076 [00:01<00:01, 177429.00it/s] 54%|█████▍    | 300304/552076 [00:01<00:01, 174709.59it/s] 58%|█████▊    | 321129/552076 [00:01<00:01, 183579.29it/s] 62%|██████▏   | 343365/552076 [00:02<00:01, 193712.37it/s] 66%|██████▌   | 363155/552076 [00:02<00:01, 163226.24it/s] 70%|██████▉   | 384161/552076 [00:02<00:00, 174925.31it/s] 73%|███████▎  | 404290/552076 [00:02<00:00, 182078.75it/s] 77%|███████▋  | 424054/552076 [00:02<00:00, 186481.77it/s] 80%|████████  | 443977/552076 [00:02<00:00, 190129.30it/s] 84%|████████▍ | 463411/552076 [00:02<00:00, 171162.42it/s] 87%|████████▋ | 481180/552076 [00:02<00:00, 135138.56it/s] 90%|████████▉ | 496337/552076 [00:03<00:00, 106777.40it/s] 92%|█████████▏| 509098/552076 [00:03<00:00, 109142.70it/s] 95%|█████████▌| 526028/552076 [00:03<00:00, 122164.60it/s] 98%|█████████▊| 541792/552076 [00:03<00:00, 131007.95it/s]100%|██████████| 552076/552076 [00:03<00:00, 155499.94it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7574/552076 [00:00<00:07, 73108.60it/s]  2%|▏         | 13653/552076 [00:00<00:07, 68917.30it/s]  3%|▎         | 17574/552076 [00:00<00:10, 51398.53it/s]  5%|▍         | 27095/552076 [00:00<00:08, 59332.53it/s]  6%|▌         | 32671/552076 [00:00<00:08, 58213.41it/s]  9%|▉         | 50626/552076 [00:00<00:06, 73015.82it/s] 13%|█▎        | 69933/552076 [00:00<00:05, 89759.69it/s] 16%|█▌        | 89591/552076 [00:00<00:04, 107241.73it/s] 19%|█▉        | 103982/552076 [00:01<00:04, 98136.91it/s] 22%|██▏       | 122921/552076 [00:01<00:03, 114718.63it/s] 26%|██▌       | 142970/552076 [00:01<00:03, 131608.99it/s] 29%|██▉       | 162810/552076 [00:01<00:02, 146392.61it/s] 33%|███▎      | 182237/552076 [00:01<00:02, 158078.26it/s] 36%|███▋      | 200136/552076 [00:01<00:02, 145658.56it/s] 39%|███▉      | 217548/552076 [00:01<00:02, 153168.13it/s] 43%|████▎     | 239262/552076 [00:01<00:01, 168016.97it/s] 48%|████▊     | 262424/552076 [00:01<00:01, 183100.28it/s] 51%|█████▏    | 283706/552076 [00:01<00:01, 191103.63it/s] 55%|█████▌    | 305750/552076 [00:02<00:01, 199049.86it/s] 59%|█████▉    | 326516/552076 [00:02<00:01, 201555.37it/s] 63%|██████▎   | 348517/552076 [00:02<00:00, 206757.09it/s] 67%|██████▋   | 369622/552076 [00:02<00:01, 162190.31it/s] 70%|███████   | 387705/552076 [00:02<00:00, 167364.13it/s] 73%|███████▎  | 405738/552076 [00:02<00:00, 158256.79it/s] 77%|███████▋  | 422619/552076 [00:02<00:00, 161280.72it/s] 80%|███████▉  | 441606/552076 [00:02<00:00, 168909.60it/s] 83%|████████▎ | 459097/552076 [00:03<00:00, 155954.51it/s] 86%|████████▌ | 475309/552076 [00:03<00:00, 136271.08it/s] 89%|████████▊ | 489816/552076 [00:03<00:00, 138732.85it/s] 91%|█████████▏| 504316/552076 [00:03<00:00, 128458.67it/s] 95%|█████████▍| 523772/552076 [00:03<00:00, 143036.59it/s] 98%|█████████▊| 542856/552076 [00:03<00:00, 154657.67it/s]100%|██████████| 552076/552076 [00:03<00:00, 151710.01it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21004/552076 [00:00<00:02, 210033.69it/s]  7%|▋         | 41317/552076 [00:00<00:02, 207911.74it/s] 11%|█▏        | 63079/552076 [00:00<00:02, 210729.32it/s] 15%|█▌        | 84709/552076 [00:00<00:02, 212368.28it/s] 19%|█▉        | 106102/552076 [00:00<00:02, 212833.55it/s] 22%|██▏       | 123864/552076 [00:00<00:02, 198179.66it/s] 26%|██▌       | 141420/552076 [00:00<00:02, 157011.43it/s] 28%|██▊       | 156882/552076 [00:00<00:02, 139984.06it/s] 32%|███▏      | 176634/552076 [00:01<00:02, 153387.13it/s] 36%|███▌      | 196658/552076 [00:01<00:02, 164966.36it/s] 39%|███▉      | 217376/552076 [00:01<00:01, 175704.73it/s] 43%|████▎     | 235562/552076 [00:01<00:01, 167659.47it/s] 46%|████▌     | 252837/552076 [00:01<00:02, 106997.22it/s] 49%|████▉     | 272095/552076 [00:01<00:02, 123456.11it/s] 52%|█████▏    | 287555/552076 [00:01<00:02, 94432.70it/s]  54%|█████▍    | 300354/552076 [00:02<00:02, 102494.07it/s] 57%|█████▋    | 315775/552076 [00:02<00:02, 113958.78it/s] 60%|█████▉    | 329289/552076 [00:02<00:02, 90526.51it/s]  63%|██████▎   | 349591/552076 [00:02<00:01, 108574.21it/s] 66%|██████▌   | 363588/552076 [00:02<00:01, 101847.05it/s] 68%|██████▊   | 377923/552076 [00:02<00:01, 111532.41it/s] 71%|███████   | 390951/552076 [00:02<00:01, 110364.69it/s] 73%|███████▎  | 403302/552076 [00:03<00:01, 101417.76it/s] 75%|███████▌  | 415691/552076 [00:03<00:01, 107253.26it/s] 79%|███████▊  | 434284/552076 [00:03<00:00, 122847.95it/s] 82%|████████▏ | 454532/552076 [00:03<00:00, 139280.03it/s] 86%|████████▌ | 474873/552076 [00:03<00:00, 153828.21it/s] 90%|█████████ | 497003/552076 [00:03<00:00, 169314.33it/s] 93%|█████████▎| 515579/552076 [00:03<00:00, 137530.67it/s] 97%|█████████▋| 538266/552076 [00:03<00:00, 155953.69it/s]100%|██████████| 552076/552076 [00:03<00:00, 142337.00it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20842/552076 [00:00<00:02, 208417.22it/s]  8%|▊         | 41859/552076 [00:00<00:02, 208938.10it/s] 11%|█▏        | 62613/552076 [00:00<00:02, 208514.66it/s] 15%|█▌        | 85406/552076 [00:00<00:02, 213980.32it/s] 19%|█▉        | 105917/552076 [00:00<00:02, 211239.29it/s] 23%|██▎       | 126302/552076 [00:00<00:02, 208965.09it/s] 26%|██▌       | 144776/552076 [00:00<00:02, 195230.52it/s] 30%|███       | 168176/552076 [00:00<00:01, 205440.15it/s] 35%|███▍      | 191112/552076 [00:00<00:01, 212074.11it/s] 38%|███▊      | 211732/552076 [00:01<00:01, 204754.96it/s] 42%|████▏     | 231851/552076 [00:01<00:01, 200906.47it/s] 46%|████▌     | 251708/552076 [00:01<00:01, 176492.82it/s] 49%|████▉     | 269733/552076 [00:01<00:01, 147857.88it/s] 52%|█████▏    | 287180/552076 [00:01<00:01, 154947.86it/s] 56%|█████▌    | 309321/552076 [00:01<00:01, 170281.96it/s] 59%|█████▉    | 327727/552076 [00:01<00:01, 174192.67it/s] 63%|██████▎   | 345895/552076 [00:01<00:01, 172614.12it/s] 66%|██████▌   | 363931/552076 [00:01<00:01, 174864.01it/s] 69%|██████▉   | 381794/552076 [00:02<00:01, 140184.76it/s] 72%|███████▏  | 399515/552076 [00:02<00:01, 149557.40it/s] 76%|███████▌  | 417725/552076 [00:02<00:00, 158028.49it/s] 79%|███████▉  | 434851/552076 [00:02<00:00, 161777.12it/s] 82%|████████▏ | 451693/552076 [00:02<00:00, 145338.55it/s] 85%|████████▍ | 467007/552076 [00:02<00:00, 120087.60it/s] 87%|████████▋ | 481684/552076 [00:02<00:00, 127014.22it/s] 91%|█████████▏| 504615/552076 [00:02<00:00, 146638.32it/s] 95%|█████████▌| 526699/552076 [00:03<00:00, 163076.15it/s] 99%|█████████▉| 547853/552076 [00:03<00:00, 175109.23it/s]100%|██████████| 552076/552076 [00:03<00:00, 174003.87it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7112/552076 [00:00<00:07, 68641.52it/s]  2%|▏         | 13612/552076 [00:00<00:07, 67506.85it/s]  5%|▌         | 28775/552076 [00:00<00:06, 80985.55it/s]  7%|▋         | 40332/552076 [00:00<00:05, 88972.47it/s]  9%|▉         | 48967/552076 [00:00<00:05, 88167.90it/s] 11%|█▏        | 63127/552076 [00:00<00:04, 99422.75it/s] 13%|█▎        | 73341/552076 [00:00<00:04, 100219.56it/s] 15%|█▌        | 83500/552076 [00:00<00:05, 89277.92it/s]  17%|█▋        | 94552/552076 [00:00<00:04, 94739.05it/s] 20%|█▉        | 108019/552076 [00:01<00:04, 103988.52it/s] 23%|██▎       | 128490/552076 [00:01<00:03, 121995.04it/s] 26%|██▌       | 142255/552076 [00:01<00:04, 100319.08it/s] 28%|██▊       | 154018/552076 [00:01<00:04, 98099.87it/s]  30%|██▉       | 165051/552076 [00:01<00:03, 98382.30it/s] 32%|███▏      | 177914/552076 [00:01<00:03, 104546.94it/s] 34%|███▍      | 189074/552076 [00:01<00:03, 99075.59it/s]  36%|███▌      | 199535/552076 [00:01<00:03, 96533.04it/s] 39%|███▉      | 217223/552076 [00:02<00:02, 111762.88it/s] 42%|████▏     | 233952/552076 [00:02<00:02, 124121.26it/s] 46%|████▌     | 254252/552076 [00:02<00:02, 140497.83it/s] 50%|████▉     | 273558/552076 [00:02<00:01, 152992.38it/s] 53%|█████▎    | 293743/552076 [00:02<00:01, 164969.97it/s] 57%|█████▋    | 313939/552076 [00:02<00:01, 174561.35it/s] 61%|██████    | 336375/552076 [00:02<00:01, 187014.11it/s] 65%|██████▍   | 357937/552076 [00:02<00:00, 194765.80it/s] 69%|██████▉   | 380200/552076 [00:02<00:00, 202363.78it/s] 73%|███████▎  | 401052/552076 [00:02<00:00, 203629.13it/s] 76%|███████▋  | 421882/552076 [00:03<00:00, 205007.15it/s] 80%|████████  | 442688/552076 [00:03<00:00, 185681.74it/s] 84%|████████▎ | 461819/552076 [00:03<00:00, 184612.61it/s] 87%|████████▋ | 480676/552076 [00:03<00:00, 173081.16it/s] 90%|█████████ | 498408/552076 [00:03<00:00, 141109.65it/s] 94%|█████████▍| 519734/552076 [00:03<00:00, 157048.65it/s] 98%|█████████▊| 541994/552076 [00:03<00:00, 172266.18it/s]100%|██████████| 552076/552076 [00:03<00:00, 144074.30it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10279/552076 [00:00<00:05, 102786.42it/s]  6%|▌         | 30942/552076 [00:00<00:04, 121034.20it/s]  8%|▊         | 44377/552076 [00:00<00:04, 124742.41it/s] 10%|▉         | 54714/552076 [00:00<00:04, 117455.05it/s] 12%|█▏        | 65158/552076 [00:00<00:04, 113221.81it/s] 14%|█▍        | 76837/552076 [00:00<00:04, 114265.27it/s] 16%|█▌        | 87443/552076 [00:00<00:04, 103688.52it/s] 19%|█▉        | 107391/552076 [00:00<00:03, 121139.32it/s] 23%|██▎       | 127961/552076 [00:00<00:03, 138180.57it/s] 27%|██▋       | 147678/552076 [00:01<00:02, 151804.89it/s] 30%|██▉       | 164269/552076 [00:01<00:02, 145654.01it/s] 33%|███▎      | 184888/552076 [00:01<00:02, 159720.62it/s] 37%|███▋      | 205469/552076 [00:01<00:02, 171223.79it/s] 41%|████      | 224974/552076 [00:01<00:01, 177736.56it/s] 44%|████▍     | 245260/552076 [00:01<00:01, 184593.82it/s] 48%|████▊     | 264336/552076 [00:01<00:01, 151856.48it/s] 51%|█████     | 280912/552076 [00:01<00:01, 146310.14it/s] 54%|█████▎    | 296560/552076 [00:02<00:02, 106448.70it/s] 56%|█████▌    | 309466/552076 [00:02<00:02, 109267.72it/s] 58%|█████▊    | 321994/552076 [00:02<00:02, 98773.93it/s]  61%|██████    | 337811/552076 [00:02<00:01, 111313.05it/s] 63%|██████▎   | 350389/552076 [00:02<00:02, 97440.53it/s]  67%|██████▋   | 369538/552076 [00:02<00:01, 114277.74it/s] 69%|██████▉   | 383031/552076 [00:02<00:01, 87530.77it/s]  72%|███████▏  | 398412/552076 [00:03<00:01, 100525.61it/s] 74%|███████▍  | 410995/552076 [00:03<00:01, 105132.41it/s] 77%|███████▋  | 423217/552076 [00:03<00:01, 96375.90it/s]  79%|███████▊  | 434194/552076 [00:03<00:01, 90571.04it/s] 82%|████████▏ | 453624/552076 [00:03<00:00, 107842.62it/s] 86%|████████▌ | 473696/552076 [00:03<00:00, 125225.17it/s] 90%|████████▉ | 494293/552076 [00:03<00:00, 141915.04it/s] 93%|█████████▎| 513923/552076 [00:03<00:00, 154778.89it/s] 96%|█████████▋| 532238/552076 [00:03<00:00, 162321.64it/s]100%|█████████▉| 550039/552076 [00:04<00:00, 157289.26it/s]100%|██████████| 552076/552076 [00:04<00:00, 135051.03it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22024/552076 [00:00<00:02, 220238.63it/s]  8%|▊         | 45329/552076 [00:00<00:02, 223931.42it/s] 12%|█▏        | 65650/552076 [00:00<00:02, 217282.68it/s] 16%|█▌        | 86260/552076 [00:00<00:02, 213801.13it/s] 19%|█▉        | 104953/552076 [00:00<00:02, 204960.78it/s] 23%|██▎       | 125697/552076 [00:00<00:02, 205695.15it/s] 27%|██▋       | 146658/552076 [00:00<00:01, 206853.93it/s] 30%|███       | 167377/552076 [00:00<00:01, 206953.66it/s] 34%|███▍      | 187235/552076 [00:00<00:01, 204367.49it/s] 38%|███▊      | 207218/552076 [00:01<00:01, 202982.46it/s] 41%|████      | 226922/552076 [00:01<00:01, 185806.90it/s] 44%|████▍     | 245370/552076 [00:01<00:01, 174086.42it/s] 48%|████▊     | 264542/552076 [00:01<00:01, 179025.93it/s] 51%|█████▏    | 283765/552076 [00:01<00:01, 182792.60it/s] 55%|█████▍    | 302117/552076 [00:01<00:01, 151975.87it/s] 58%|█████▊    | 318235/552076 [00:01<00:01, 152383.49it/s] 61%|██████    | 334118/552076 [00:01<00:01, 138723.60it/s] 63%|██████▎   | 350084/552076 [00:01<00:01, 144402.54it/s] 66%|██████▌   | 365066/552076 [00:02<00:01, 139432.92it/s] 69%|██████▉   | 380349/552076 [00:02<00:01, 143198.52it/s] 72%|███████▏  | 394986/552076 [00:02<00:01, 127099.33it/s] 75%|███████▌  | 416104/552076 [00:02<00:00, 144339.55it/s] 79%|███████▉  | 437025/552076 [00:02<00:00, 159141.86it/s] 83%|████████▎ | 457980/552076 [00:02<00:00, 171518.04it/s] 87%|████████▋ | 479017/552076 [00:02<00:00, 181578.02it/s] 90%|█████████ | 498419/552076 [00:02<00:00, 185139.19it/s] 94%|█████████▍| 518642/552076 [00:02<00:00, 189953.62it/s] 98%|█████████▊| 538914/552076 [00:03<00:00, 193610.71it/s]100%|██████████| 552076/552076 [00:03<00:00, 174429.05it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18966/552076 [00:00<00:02, 189654.30it/s]  7%|▋         | 38555/552076 [00:00<00:02, 191479.77it/s]  9%|▉         | 48415/552076 [00:00<00:03, 135673.23it/s] 12%|█▏        | 68152/552076 [00:00<00:03, 149710.42it/s] 15%|█▍        | 80600/552076 [00:00<00:04, 117605.54it/s] 17%|█▋        | 92776/552076 [00:00<00:03, 118820.43it/s] 19%|█▉        | 104174/552076 [00:00<00:05, 89381.27it/s] 21%|██        | 115748/552076 [00:00<00:04, 95933.97it/s] 23%|██▎       | 127171/552076 [00:01<00:04, 95184.04it/s] 25%|██▍       | 137148/552076 [00:01<00:04, 85126.82it/s] 27%|██▋       | 147175/552076 [00:01<00:04, 89166.51it/s] 30%|██▉       | 163164/552076 [00:01<00:03, 98053.59it/s] 31%|███▏      | 173529/552076 [00:01<00:03, 94958.20it/s] 34%|███▍      | 186884/552076 [00:01<00:03, 103608.81it/s] 36%|███▌      | 197768/552076 [00:01<00:04, 83999.58it/s]  38%|███▊      | 207135/552076 [00:01<00:04, 85925.26it/s] 39%|███▉      | 216415/552076 [00:02<00:04, 79266.90it/s] 42%|████▏     | 230866/552076 [00:02<00:03, 90735.71it/s] 44%|████▍     | 244771/552076 [00:02<00:03, 101294.03it/s] 48%|████▊     | 265249/552076 [00:02<00:02, 119394.64it/s] 52%|█████▏    | 285544/552076 [00:02<00:01, 136218.76it/s] 55%|█████▌    | 305423/552076 [00:02<00:01, 150420.99it/s] 59%|█████▊    | 323352/552076 [00:02<00:01, 158054.02it/s] 62%|██████▏   | 340689/552076 [00:02<00:01, 132577.85it/s] 65%|██████▌   | 360842/552076 [00:03<00:01, 147742.23it/s] 69%|██████▉   | 381080/552076 [00:03<00:01, 160762.55it/s] 72%|███████▏  | 399155/552076 [00:03<00:00, 166278.53it/s] 76%|███████▌  | 417852/552076 [00:03<00:00, 171987.50it/s] 79%|███████▉  | 435914/552076 [00:03<00:00, 160647.94it/s] 82%|████████▏ | 455455/552076 [00:03<00:00, 169703.50it/s] 86%|████████▋ | 476544/552076 [00:03<00:00, 180263.54it/s] 90%|█████████ | 498218/552076 [00:03<00:00, 189847.40it/s] 94%|█████████▍| 520589/552076 [00:03<00:00, 198877.99it/s] 98%|█████████▊| 541122/552076 [00:03<00:00, 200768.14it/s]100%|██████████| 552076/552076 [00:03<00:00, 138245.43it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17887/552076 [00:00<00:02, 178868.89it/s]  7%|▋         | 36610/552076 [00:00<00:02, 181297.55it/s]  9%|▉         | 49123/552076 [00:00<00:03, 159779.69it/s] 12%|█▏        | 67097/552076 [00:00<00:02, 165284.45it/s] 16%|█▌        | 89211/552076 [00:00<00:02, 178833.51it/s] 20%|█▉        | 110204/552076 [00:00<00:02, 187149.13it/s] 23%|██▎       | 127326/552076 [00:00<00:02, 175211.55it/s] 26%|██▌       | 144426/552076 [00:00<00:02, 173926.14it/s] 29%|██▉       | 161149/552076 [00:00<00:02, 163502.70it/s] 32%|███▏      | 177158/552076 [00:01<00:02, 161649.10it/s] 36%|███▌      | 197130/552076 [00:01<00:02, 171453.14it/s] 39%|███▉      | 217896/552076 [00:01<00:01, 180914.44it/s] 43%|████▎     | 236427/552076 [00:01<00:01, 182209.83it/s] 46%|████▌     | 254747/552076 [00:01<00:01, 169587.42it/s] 50%|█████     | 276352/552076 [00:01<00:01, 181282.01it/s] 54%|█████▍    | 298390/552076 [00:01<00:01, 191471.96it/s] 58%|█████▊    | 320503/552076 [00:01<00:01, 199498.05it/s] 62%|██████▏   | 341793/552076 [00:01<00:01, 203335.89it/s] 66%|██████▌   | 362417/552076 [00:02<00:01, 179003.67it/s] 69%|██████▉   | 381052/552076 [00:02<00:01, 142853.43it/s] 72%|███████▏  | 397010/552076 [00:02<00:01, 124010.87it/s] 74%|███████▍  | 411025/552076 [00:02<00:01, 124829.84it/s] 77%|███████▋  | 424899/552076 [00:02<00:00, 128700.37it/s] 79%|███████▉  | 438591/552076 [00:02<00:00, 125556.37it/s] 82%|████████▏ | 451739/552076 [00:02<00:00, 110554.70it/s] 84%|████████▍ | 463537/552076 [00:02<00:00, 99579.25it/s]  86%|████████▋ | 476999/552076 [00:03<00:00, 108013.32it/s] 89%|████████▉ | 493799/552076 [00:03<00:00, 120969.60it/s] 92%|█████████▏| 506901/552076 [00:03<00:00, 111073.74it/s] 94%|█████████▍| 518871/552076 [00:03<00:00, 92255.94it/s]  96%|█████████▌| 531022/552076 [00:03<00:00, 99437.42it/s] 98%|█████████▊| 541921/552076 [00:03<00:00, 102009.98it/s]100%|██████████| 552076/552076 [00:03<00:00, 145686.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14750/552076 [00:00<00:03, 147493.46it/s]  6%|▌         | 33276/552076 [00:00<00:03, 157101.26it/s]  8%|▊         | 43695/552076 [00:00<00:03, 136329.94it/s] 11%|█         | 62066/552076 [00:00<00:03, 147762.25it/s] 15%|█▍        | 81859/552076 [00:00<00:02, 159922.11it/s] 19%|█▉        | 104929/552076 [00:00<00:02, 176132.39it/s] 23%|██▎       | 128546/552076 [00:00<00:02, 190672.79it/s] 27%|██▋       | 150021/552076 [00:00<00:02, 197306.01it/s] 31%|███       | 169718/552076 [00:00<00:02, 172001.57it/s] 35%|███▍      | 190685/552076 [00:01<00:01, 181798.80it/s] 38%|███▊      | 210031/552076 [00:01<00:01, 185146.12it/s] 42%|████▏     | 231944/552076 [00:01<00:01, 194179.07it/s] 46%|████▌     | 253089/552076 [00:01<00:01, 199055.78it/s] 50%|████▉     | 273300/552076 [00:01<00:01, 178378.24it/s] 53%|█████▎    | 292885/552076 [00:01<00:01, 183282.15it/s] 57%|█████▋    | 314084/552076 [00:01<00:01, 191043.33it/s] 61%|██████    | 337540/552076 [00:01<00:01, 202302.79it/s] 65%|██████▌   | 359470/552076 [00:01<00:00, 207117.65it/s] 69%|██████▉   | 381079/552076 [00:01<00:00, 209729.17it/s] 73%|███████▎  | 402309/552076 [00:02<00:00, 209412.03it/s] 77%|███████▋  | 423681/552076 [00:02<00:00, 210685.69it/s] 81%|████████  | 444878/552076 [00:02<00:00, 169422.14it/s] 84%|████████▍ | 466365/552076 [00:02<00:00, 180899.22it/s] 88%|████████▊ | 487608/552076 [00:02<00:00, 189327.59it/s] 92%|█████████▏| 508525/552076 [00:02<00:00, 194871.04it/s] 96%|█████████▌| 528705/552076 [00:02<00:00, 170215.93it/s] 99%|█████████▉| 546774/552076 [00:02<00:00, 161938.45it/s]100%|██████████| 552076/552076 [00:02<00:00, 184715.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22208/552076 [00:00<00:02, 222072.80it/s]  8%|▊         | 45257/552076 [00:00<00:02, 224531.97it/s] 12%|█▏        | 65525/552076 [00:00<00:02, 217492.02it/s] 14%|█▍        | 79710/552076 [00:00<00:02, 177007.26it/s] 18%|█▊        | 100235/552076 [00:00<00:02, 184626.97it/s] 22%|██▏       | 121384/552076 [00:00<00:02, 191940.76it/s] 26%|██▌       | 142705/552076 [00:00<00:02, 197860.17it/s] 30%|██▉       | 163613/552076 [00:00<00:01, 201095.73it/s] 34%|███▎      | 184991/552076 [00:00<00:01, 204737.91it/s] 37%|███▋      | 206386/552076 [00:01<00:01, 207415.92it/s] 41%|████      | 226723/552076 [00:01<00:01, 192843.37it/s] 45%|████▍     | 245930/552076 [00:01<00:01, 180503.17it/s] 48%|████▊     | 264086/552076 [00:01<00:02, 134406.34it/s] 51%|█████     | 279322/552076 [00:01<00:02, 117223.31it/s] 53%|█████▎    | 292696/552076 [00:01<00:02, 99857.18it/s]  55%|█████▌    | 304284/552076 [00:01<00:02, 97782.84it/s] 58%|█████▊    | 318549/552076 [00:02<00:02, 107969.82it/s] 61%|██████    | 335092/552076 [00:02<00:01, 120528.78it/s] 64%|██████▍   | 354311/552076 [00:02<00:01, 135706.84it/s] 67%|██████▋   | 369389/552076 [00:02<00:01, 96968.92it/s]  69%|██████▉   | 381690/552076 [00:02<00:01, 94093.11it/s] 72%|███████▏  | 396108/552076 [00:02<00:01, 105038.61it/s] 74%|███████▍  | 408695/552076 [00:02<00:01, 110524.50it/s] 78%|███████▊  | 428746/552076 [00:02<00:00, 127719.53it/s] 81%|████████▏ | 448597/552076 [00:03<00:00, 143018.33it/s] 84%|████████▍ | 464798/552076 [00:03<00:00, 141555.40it/s] 88%|████████▊ | 486696/552076 [00:03<00:00, 158351.21it/s] 92%|█████████▏| 507656/552076 [00:03<00:00, 170884.34it/s] 96%|█████████▌| 527717/552076 [00:03<00:00, 178832.71it/s] 99%|█████████▉| 546668/552076 [00:03<00:00, 164110.25it/s]100%|██████████| 552076/552076 [00:03<00:00, 152074.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20901/552076 [00:00<00:02, 209002.23it/s]  7%|▋         | 40963/552076 [00:00<00:02, 206411.49it/s] 11%|█▏        | 63103/552076 [00:00<00:02, 210689.02it/s] 14%|█▍        | 79810/552076 [00:00<00:02, 195381.16it/s] 17%|█▋        | 94571/552076 [00:00<00:02, 169835.84it/s] 21%|██        | 114567/552076 [00:00<00:02, 177874.77it/s] 24%|██▍       | 134959/552076 [00:00<00:02, 184961.61it/s] 28%|██▊       | 156597/552076 [00:00<00:02, 193384.92it/s] 32%|███▏      | 175194/552076 [00:00<00:02, 172839.41it/s] 35%|███▍      | 192367/552076 [00:01<00:02, 145116.38it/s] 38%|███▊      | 207556/552076 [00:01<00:02, 139426.94it/s] 41%|████▏     | 228041/552076 [00:01<00:02, 154198.17it/s] 45%|████▌     | 250533/552076 [00:01<00:01, 170258.03it/s] 50%|████▉     | 273569/552076 [00:01<00:01, 184715.83it/s] 53%|█████▎    | 293176/552076 [00:01<00:01, 151725.70it/s] 57%|█████▋    | 314743/552076 [00:01<00:01, 166537.93it/s] 61%|██████    | 335659/552076 [00:01<00:01, 177381.14it/s] 64%|██████▍   | 354762/552076 [00:02<00:01, 167951.24it/s] 67%|██████▋   | 372617/552076 [00:02<00:01, 170322.05it/s] 71%|███████   | 392170/552076 [00:02<00:00, 177172.72it/s] 75%|███████▍  | 412098/552076 [00:02<00:00, 183271.96it/s] 78%|███████▊  | 431868/552076 [00:02<00:00, 187373.97it/s] 82%|████████▏ | 451980/552076 [00:02<00:00, 191296.01it/s] 85%|████████▌ | 471616/552076 [00:02<00:00, 192785.59it/s] 89%|████████▉ | 491084/552076 [00:02<00:00, 170766.75it/s] 92%|█████████▏| 508816/552076 [00:02<00:00, 172679.18it/s] 95%|█████████▌| 526507/552076 [00:03<00:00, 161957.47it/s] 99%|█████████▉| 546259/552076 [00:03<00:00, 171204.47it/s]100%|██████████| 552076/552076 [00:03<00:00, 175833.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19554/552076 [00:00<00:02, 195535.52it/s]  7%|▋         | 40843/552076 [00:00<00:02, 200435.09it/s] 10%|▉         | 52696/552076 [00:00<00:03, 166015.40it/s] 12%|█▏        | 63597/552076 [00:00<00:03, 141938.41it/s] 14%|█▍        | 76580/552076 [00:00<00:03, 138072.82it/s] 16%|█▋        | 90396/552076 [00:00<00:03, 138097.52it/s] 19%|█▊        | 102565/552076 [00:00<00:04, 111329.79it/s] 21%|██▏       | 117665/552076 [00:00<00:03, 120854.44it/s] 24%|██▎       | 129768/552076 [00:00<00:03, 112527.52it/s] 26%|██▌       | 142308/552076 [00:01<00:03, 116100.76it/s] 28%|██▊       | 154036/552076 [00:01<00:03, 116073.44it/s] 30%|███       | 165771/552076 [00:01<00:03, 116452.69it/s] 32%|███▏      | 177475/552076 [00:01<00:03, 100462.86it/s] 34%|███▍      | 187950/552076 [00:01<00:04, 79881.46it/s]  36%|███▌      | 199201/552076 [00:01<00:04, 85968.67it/s] 38%|███▊      | 208606/552076 [00:01<00:04, 82033.91it/s] 39%|███▉      | 217413/552076 [00:02<00:04, 75234.07it/s] 43%|████▎     | 237911/552076 [00:02<00:03, 92868.53it/s] 47%|████▋     | 257757/552076 [00:02<00:02, 110506.78it/s] 50%|█████     | 277232/552076 [00:02<00:02, 126985.40it/s] 53%|█████▎    | 293019/552076 [00:02<00:02, 127237.34it/s] 57%|█████▋    | 313177/552076 [00:02<00:01, 143065.33it/s] 60%|█████▉    | 329644/552076 [00:02<00:01, 133996.57it/s] 63%|██████▎   | 347187/552076 [00:02<00:01, 144213.45it/s] 67%|██████▋   | 367808/552076 [00:02<00:01, 158508.98it/s] 70%|███████   | 388590/552076 [00:02<00:00, 170655.13it/s] 74%|███████▍  | 410034/552076 [00:03<00:00, 181789.83it/s] 78%|███████▊  | 431997/552076 [00:03<00:00, 191697.97it/s] 82%|████████▏ | 452971/552076 [00:03<00:00, 196775.68it/s] 86%|████████▌ | 473304/552076 [00:03<00:00, 198036.42it/s] 89%|████████▉ | 493765/552076 [00:03<00:00, 199962.37it/s] 93%|█████████▎| 514232/552076 [00:03<00:00, 201351.53it/s] 97%|█████████▋| 534859/552076 [00:03<00:00, 202798.62it/s]100%|██████████| 552076/552076 [00:03<00:00, 146380.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18329/552076 [00:00<00:02, 183284.49it/s]  7%|▋         | 41042/552076 [00:00<00:02, 194550.54it/s] 11%|█▏        | 62535/552076 [00:00<00:02, 200245.82it/s] 14%|█▍        | 77477/552076 [00:00<00:02, 181700.39it/s] 17%|█▋        | 91698/552076 [00:00<00:03, 137150.39it/s] 20%|██        | 111480/552076 [00:00<00:02, 151046.62it/s] 24%|██▍       | 132510/552076 [00:00<00:02, 164992.63it/s] 28%|██▊       | 153868/552076 [00:00<00:02, 177076.34it/s] 31%|███▏      | 173537/552076 [00:00<00:02, 182536.00it/s] 35%|███▌      | 193713/552076 [00:01<00:01, 187903.02it/s] 39%|███▊      | 212737/552076 [00:01<00:02, 147760.18it/s] 42%|████▏     | 232696/552076 [00:01<00:01, 160243.56it/s] 46%|████▌     | 252010/552076 [00:01<00:01, 168871.90it/s] 49%|████▉     | 272315/552076 [00:01<00:01, 177851.43it/s] 53%|█████▎    | 292647/552076 [00:01<00:01, 184794.73it/s] 57%|█████▋    | 312847/552076 [00:01<00:01, 189638.77it/s] 60%|██████    | 332322/552076 [00:01<00:01, 190427.79it/s] 64%|██████▍   | 352727/552076 [00:01<00:01, 194318.57it/s] 68%|██████▊   | 372784/552076 [00:02<00:00, 196149.73it/s] 71%|███████▏  | 394475/552076 [00:02<00:00, 201947.47it/s] 75%|███████▌  | 414848/552076 [00:02<00:00, 154404.19it/s] 78%|███████▊  | 432099/552076 [00:02<00:00, 129508.10it/s] 81%|████████  | 446998/552076 [00:02<00:00, 110834.23it/s] 84%|████████▎ | 461171/552076 [00:02<00:00, 118589.04it/s] 86%|████████▌ | 474465/552076 [00:03<00:00, 94301.09it/s]  88%|████████▊ | 487081/552076 [00:03<00:00, 102029.62it/s] 90%|█████████ | 498720/552076 [00:03<00:00, 89018.01it/s]  93%|█████████▎| 516160/552076 [00:03<00:00, 104342.65it/s] 96%|█████████▌| 528536/552076 [00:03<00:00, 102444.96it/s] 98%|█████████▊| 540148/552076 [00:03<00:00, 88419.69it/s] 100%|██████████| 552076/552076 [00:03<00:00, 145223.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10689/552076 [00:00<00:05, 106884.50it/s]  4%|▍         | 22411/552076 [00:00<00:04, 109787.43it/s]  7%|▋         | 40286/552076 [00:00<00:04, 124156.70it/s] 11%|█         | 58613/552076 [00:00<00:03, 137456.32it/s] 14%|█▍        | 77799/552076 [00:00<00:03, 150235.64it/s] 18%|█▊        | 98703/552076 [00:00<00:02, 164082.41it/s] 22%|██▏       | 119862/552076 [00:00<00:02, 175932.84it/s] 26%|██▌       | 141796/552076 [00:00<00:02, 187036.99it/s] 29%|██▉       | 161642/552076 [00:00<00:02, 190322.01it/s] 33%|███▎      | 181755/552076 [00:01<00:01, 193439.17it/s] 37%|███▋      | 202841/552076 [00:01<00:01, 198354.21it/s] 41%|████      | 226047/552076 [00:01<00:01, 207390.81it/s] 45%|████▍     | 246990/552076 [00:01<00:01, 190255.28it/s] 48%|████▊     | 266436/552076 [00:01<00:01, 185659.27it/s] 52%|█████▏    | 286644/552076 [00:01<00:01, 190296.66it/s] 56%|█████▌    | 306448/552076 [00:01<00:01, 192555.25it/s] 59%|█████▉    | 326477/552076 [00:01<00:01, 194809.69it/s] 63%|██████▎   | 346093/552076 [00:01<00:01, 185765.44it/s] 66%|██████▌   | 364852/552076 [00:02<00:01, 164998.11it/s] 69%|██████▉   | 381910/552076 [00:02<00:01, 146988.21it/s] 73%|███████▎  | 403354/552076 [00:02<00:00, 162302.14it/s] 77%|███████▋  | 424016/552076 [00:02<00:00, 173462.70it/s] 81%|████████  | 445081/552076 [00:02<00:00, 183162.07it/s] 85%|████████▍ | 466846/552076 [00:02<00:00, 192302.88it/s] 88%|████████▊ | 486754/552076 [00:02<00:00, 171674.72it/s] 92%|█████████▏| 508100/552076 [00:02<00:00, 182384.47it/s] 96%|█████████▌| 527826/552076 [00:02<00:00, 186605.14it/s] 99%|█████████▉| 547992/552076 [00:02<00:00, 190877.64it/s]100%|██████████| 552076/552076 [00:03<00:00, 183179.51it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17157/552076 [00:00<00:03, 171563.21it/s]  4%|▍         | 23996/552076 [00:00<00:04, 118107.74it/s]  8%|▊         | 42004/552076 [00:00<00:03, 131704.34it/s] 11%|█         | 60425/552076 [00:00<00:03, 144017.70it/s] 14%|█▍        | 79797/552076 [00:00<00:03, 156026.29it/s] 18%|█▊        | 99413/552076 [00:00<00:02, 166227.51it/s] 21%|██        | 115284/552076 [00:00<00:02, 158410.20it/s] 24%|██▎       | 130677/552076 [00:00<00:03, 110058.18it/s] 26%|██▌       | 143380/552076 [00:01<00:04, 100991.92it/s] 29%|██▉       | 162833/552076 [00:01<00:03, 118015.94it/s] 33%|███▎      | 184021/552076 [00:01<00:02, 136104.42it/s] 36%|███▌      | 200065/552076 [00:01<00:02, 133083.69it/s] 40%|███▉      | 218236/552076 [00:01<00:02, 144699.45it/s] 42%|████▏     | 234206/552076 [00:01<00:02, 120843.81it/s] 45%|████▍     | 248003/552076 [00:01<00:02, 104048.17it/s] 47%|████▋     | 260018/552076 [00:02<00:02, 101622.57it/s] 49%|████▉     | 271320/552076 [00:02<00:02, 97990.91it/s]  52%|█████▏    | 286008/552076 [00:02<00:02, 108860.77it/s] 54%|█████▍    | 298961/552076 [00:02<00:02, 114333.26it/s] 56%|█████▋    | 311138/552076 [00:02<00:02, 114973.90it/s] 59%|█████▊    | 323157/552076 [00:02<00:02, 88291.13it/s]  61%|██████    | 336642/552076 [00:02<00:02, 98492.46it/s] 63%|██████▎   | 347780/552076 [00:02<00:02, 86504.24it/s] 65%|██████▍   | 357598/552076 [00:03<00:02, 83911.31it/s] 68%|██████▊   | 377145/552076 [00:03<00:01, 101243.10it/s] 72%|███████▏  | 395982/552076 [00:03<00:01, 117554.05it/s] 75%|███████▍  | 411605/552076 [00:03<00:01, 126983.73it/s] 77%|███████▋  | 426837/552076 [00:03<00:00, 133652.23it/s] 80%|████████  | 442236/552076 [00:03<00:00, 139164.99it/s] 83%|████████▎ | 457951/552076 [00:03<00:00, 144112.74it/s] 87%|████████▋ | 478346/552076 [00:03<00:00, 158021.25it/s] 90%|█████████ | 498427/552076 [00:03<00:00, 168810.67it/s] 94%|█████████▎| 517309/552076 [00:03<00:00, 174352.00it/s] 97%|█████████▋| 535410/552076 [00:04<00:00, 156465.09it/s]100%|██████████| 552076/552076 [00:04<00:00, 132515.64it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17905/552076 [00:00<00:02, 179046.33it/s]  7%|▋         | 38731/552076 [00:00<00:02, 186909.82it/s] 11%|█         | 58929/552076 [00:00<00:02, 191189.26it/s] 15%|█▍        | 82316/552076 [00:00<00:02, 202261.95it/s] 19%|█▉        | 103966/552076 [00:00<00:02, 206331.84it/s] 23%|██▎       | 124939/552076 [00:00<00:02, 207339.29it/s] 26%|██▌       | 144829/552076 [00:00<00:01, 204730.60it/s] 30%|██▉       | 163926/552076 [00:00<00:02, 180445.67it/s] 34%|███▎      | 185229/552076 [00:00<00:01, 189122.24it/s] 38%|███▊      | 207065/552076 [00:01<00:01, 197035.95it/s] 42%|████▏     | 229340/552076 [00:01<00:01, 204103.69it/s] 46%|████▌     | 252028/552076 [00:01<00:01, 210439.75it/s] 49%|████▉     | 273142/552076 [00:01<00:01, 174605.08it/s] 53%|█████▎    | 294393/552076 [00:01<00:01, 184476.17it/s] 57%|█████▋    | 316807/552076 [00:01<00:01, 194817.06it/s] 61%|██████▏   | 338833/552076 [00:01<00:01, 201809.07it/s] 65%|██████▌   | 361580/552076 [00:01<00:00, 208877.51it/s] 69%|██████▉   | 382960/552076 [00:01<00:00, 197108.03it/s] 73%|███████▎  | 403152/552076 [00:02<00:00, 181302.69it/s] 76%|███████▋  | 421869/552076 [00:02<00:00, 170651.53it/s] 80%|███████▉  | 439473/552076 [00:02<00:00, 148377.82it/s] 82%|████████▏ | 455208/552076 [00:02<00:00, 125215.10it/s] 86%|████████▌ | 473554/552076 [00:02<00:00, 138395.08it/s] 89%|████████▊ | 488695/552076 [00:02<00:00, 126087.50it/s] 91%|█████████ | 502427/552076 [00:02<00:00, 108684.46it/s] 93%|█████████▎| 515560/552076 [00:03<00:00, 114611.76it/s] 96%|█████████▌| 527955/552076 [00:03<00:00, 102861.72it/s] 98%|█████████▊| 539122/552076 [00:03<00:00, 94754.65it/s] 100%|█████████▉| 551946/552076 [00:03<00:00, 102807.02it/s]100%|██████████| 552076/552076 [00:03<00:00, 161789.87it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6857/552076 [00:00<00:07, 68567.29it/s]  4%|▍         | 23736/552076 [00:00<00:06, 83427.72it/s]  7%|▋         | 36037/552076 [00:00<00:05, 92341.80it/s]  9%|▊         | 48297/552076 [00:00<00:05, 99725.11it/s] 12%|█▏        | 68075/552076 [00:00<00:04, 117148.55it/s] 16%|█▌        | 86666/552076 [00:00<00:03, 131768.50it/s] 18%|█▊        | 101026/552076 [00:00<00:03, 114794.86it/s] 21%|██        | 113726/552076 [00:00<00:03, 118182.34it/s] 24%|██▍       | 133543/552076 [00:00<00:03, 134463.77it/s] 28%|██▊       | 153416/552076 [00:01<00:02, 148910.24it/s] 31%|███▏      | 173287/552076 [00:01<00:02, 161014.15it/s] 35%|███▌      | 193566/552076 [00:01<00:02, 171618.97it/s] 39%|███▉      | 214332/552076 [00:01<00:01, 181044.11it/s] 42%|████▏     | 233348/552076 [00:01<00:01, 180666.59it/s] 47%|████▋     | 256997/552076 [00:01<00:01, 194434.55it/s] 51%|█████     | 280343/552076 [00:01<00:01, 204698.42it/s] 55%|█████▌    | 304369/552076 [00:01<00:01, 214209.42it/s] 59%|█████▉    | 326372/552076 [00:01<00:01, 214551.89it/s] 63%|██████▎   | 349298/552076 [00:01<00:00, 218761.74it/s] 67%|██████▋   | 372298/552076 [00:02<00:00, 222015.48it/s] 72%|███████▏  | 394799/552076 [00:02<00:00, 222904.71it/s] 76%|███████▌  | 417248/552076 [00:02<00:00, 212212.63it/s] 79%|███████▉  | 438688/552076 [00:02<00:00, 206448.87it/s] 83%|████████▎ | 459521/552076 [00:02<00:00, 203410.94it/s] 87%|████████▋ | 480004/552076 [00:02<00:00, 202845.35it/s] 91%|█████████ | 500388/552076 [00:02<00:00, 157201.14it/s] 94%|█████████▍| 519741/552076 [00:02<00:00, 166581.35it/s] 98%|█████████▊| 539174/552076 [00:03<00:00, 174034.55it/s]100%|██████████| 552076/552076 [00:03<00:00, 179652.05it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21417/552076 [00:00<00:02, 214168.67it/s]  6%|▋         | 35470/552076 [00:00<00:02, 185068.72it/s]  9%|▊         | 48045/552076 [00:00<00:03, 162124.42it/s] 12%|█▏        | 67879/552076 [00:00<00:02, 171518.61it/s] 16%|█▌        | 87750/552076 [00:00<00:02, 178860.55it/s] 20%|█▉        | 107725/552076 [00:00<00:02, 184651.37it/s] 23%|██▎       | 127252/552076 [00:00<00:02, 187711.80it/s] 26%|██▋       | 145932/552076 [00:00<00:02, 187436.71it/s] 30%|██▉       | 165160/552076 [00:00<00:02, 188862.48it/s] 33%|███▎      | 183370/552076 [00:01<00:01, 186637.72it/s] 37%|███▋      | 201566/552076 [00:01<00:01, 181243.37it/s] 40%|███▉      | 219552/552076 [00:01<00:01, 180825.53it/s] 43%|████▎     | 237430/552076 [00:01<00:01, 179677.33it/s] 46%|████▌     | 255256/552076 [00:01<00:01, 163057.60it/s] 49%|████▉     | 271758/552076 [00:01<00:01, 152468.04it/s] 52%|█████▏    | 287282/552076 [00:01<00:02, 117848.08it/s] 55%|█████▍    | 302846/552076 [00:01<00:01, 127105.81it/s] 57%|█████▋    | 316740/552076 [00:02<00:02, 110865.67it/s] 60%|█████▉    | 329028/552076 [00:02<00:02, 92415.82it/s]  62%|██████▏   | 341299/552076 [00:02<00:02, 99807.44it/s] 64%|██████▍   | 354064/552076 [00:02<00:01, 106795.50it/s] 66%|██████▌   | 365664/552076 [00:02<00:01, 105752.96it/s] 68%|██████▊   | 376886/552076 [00:02<00:01, 95080.52it/s]  70%|███████   | 387517/552076 [00:02<00:01, 97075.04it/s] 72%|███████▏  | 397694/552076 [00:02<00:01, 83373.65it/s] 74%|███████▎  | 406700/552076 [00:03<00:01, 74924.10it/s] 77%|███████▋  | 424695/552076 [00:03<00:01, 90826.69it/s] 80%|████████  | 443939/552076 [00:03<00:01, 107922.11it/s] 83%|████████▎ | 460281/552076 [00:03<00:00, 120161.00it/s] 86%|████████▌ | 474655/552076 [00:03<00:00, 110440.70it/s] 88%|████████▊ | 487504/552076 [00:03<00:00, 102540.04it/s] 91%|█████████ | 503368/552076 [00:03<00:00, 114709.38it/s] 94%|█████████▍| 519088/552076 [00:03<00:00, 124830.62it/s] 97%|█████████▋| 532835/552076 [00:03<00:00, 126968.25it/s] 99%|█████████▉| 546425/552076 [00:04<00:00, 114359.28it/s]100%|██████████| 552076/552076 [00:04<00:00, 132145.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18243/552076 [00:00<00:02, 182425.39it/s]  7%|▋         | 38625/552076 [00:00<00:02, 188355.64it/s]  9%|▉         | 51238/552076 [00:00<00:03, 164072.10it/s] 11%|█         | 61984/552076 [00:00<00:03, 139485.19it/s] 13%|█▎        | 73718/552076 [00:00<00:03, 132009.55it/s] 17%|█▋        | 92436/552076 [00:00<00:03, 144814.13it/s] 20%|██        | 112490/552076 [00:00<00:02, 157983.08it/s] 24%|██▍       | 132497/552076 [00:00<00:02, 168623.82it/s] 27%|██▋       | 149220/552076 [00:00<00:02, 164921.38it/s] 30%|███       | 167304/552076 [00:01<00:02, 169393.18it/s] 34%|███▎      | 185583/552076 [00:01<00:02, 173200.62it/s] 37%|███▋      | 205920/552076 [00:01<00:01, 181265.76it/s] 41%|████      | 225874/552076 [00:01<00:01, 186384.71it/s] 45%|████▍     | 246990/552076 [00:01<00:01, 193182.23it/s] 48%|████▊     | 266446/552076 [00:01<00:01, 193505.97it/s] 52%|█████▏    | 285894/552076 [00:01<00:01, 193790.31it/s] 55%|█████▌    | 305341/552076 [00:01<00:01, 193487.80it/s] 59%|█████▉    | 324738/552076 [00:01<00:01, 163276.42it/s] 62%|██████▏   | 341906/552076 [00:02<00:01, 132669.45it/s] 65%|██████▍   | 357064/552076 [00:02<00:01, 137825.89it/s] 68%|██████▊   | 374341/552076 [00:02<00:01, 146728.79it/s] 71%|███████▏  | 393367/552076 [00:02<00:01, 157540.61it/s] 75%|███████▍  | 412975/552076 [00:02<00:00, 167410.02it/s] 78%|███████▊  | 431351/552076 [00:02<00:00, 171997.62it/s] 81%|████████▏ | 449133/552076 [00:02<00:00, 135497.75it/s] 85%|████████▍ | 468034/552076 [00:02<00:00, 148072.92it/s] 88%|████████▊ | 487580/552076 [00:02<00:00, 159686.80it/s] 92%|█████████▏| 507215/552076 [00:03<00:00, 169161.81it/s] 96%|█████████▌| 528357/552076 [00:03<00:00, 179951.53it/s] 99%|█████████▉| 547283/552076 [00:03<00:00, 159312.08it/s]100%|██████████| 552076/552076 [00:03<00:00, 161464.38it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7509/552076 [00:00<00:07, 75087.21it/s]  3%|▎         | 18706/552076 [00:00<00:06, 82448.58it/s]  5%|▌         | 29538/552076 [00:00<00:05, 88812.14it/s]  7%|▋         | 37385/552076 [00:00<00:06, 83925.49it/s]  9%|▉         | 50980/552076 [00:00<00:05, 94809.23it/s] 13%|█▎        | 69238/552076 [00:00<00:04, 110786.28it/s] 15%|█▍        | 80927/552076 [00:00<00:04, 107763.59it/s] 17%|█▋        | 94510/552076 [00:00<00:03, 114884.09it/s] 19%|█▉        | 106440/552076 [00:00<00:04, 95734.31it/s] 21%|██        | 116859/552076 [00:01<00:04, 95668.06it/s] 23%|██▎       | 127018/552076 [00:01<00:04, 90299.90it/s] 26%|██▌       | 142184/552076 [00:01<00:03, 102774.25it/s] 28%|██▊       | 153389/552076 [00:01<00:04, 88860.28it/s]  31%|███       | 171848/552076 [00:01<00:03, 105232.23it/s] 35%|███▍      | 190980/552076 [00:01<00:02, 121654.29it/s] 38%|███▊      | 210587/552076 [00:01<00:02, 137284.30it/s] 42%|████▏     | 230336/552076 [00:01<00:02, 151102.48it/s] 45%|████▌     | 248893/552076 [00:02<00:01, 160018.83it/s] 48%|████▊     | 266447/552076 [00:02<00:02, 140361.94it/s] 52%|█████▏    | 285954/552076 [00:02<00:01, 153256.10it/s] 55%|█████▌    | 304085/552076 [00:02<00:01, 160714.14it/s] 59%|█████▉    | 325106/552076 [00:02<00:01, 172928.41it/s] 62%|██████▏   | 344833/552076 [00:02<00:01, 179574.06it/s] 66%|██████▌   | 363850/552076 [00:02<00:01, 182624.42it/s] 70%|██████▉   | 384642/552076 [00:02<00:00, 189540.42it/s] 74%|███████▍  | 407585/552076 [00:02<00:00, 199968.90it/s] 78%|███████▊  | 428792/552076 [00:02<00:00, 203451.06it/s] 82%|████████▏ | 451367/552076 [00:03<00:00, 209663.28it/s] 86%|████████▌ | 473784/552076 [00:03<00:00, 213812.85it/s] 90%|████████▉ | 496187/552076 [00:03<00:00, 216777.95it/s] 94%|█████████▍| 518032/552076 [00:03<00:00, 215895.07it/s] 98%|█████████▊| 539771/552076 [00:03<00:00, 216339.45it/s]100%|██████████| 552076/552076 [00:03<00:00, 156670.28it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14577/552076 [00:00<00:03, 145768.75it/s]  5%|▍         | 26650/552076 [00:00<00:03, 137227.08it/s]  7%|▋         | 39936/552076 [00:00<00:03, 135886.25it/s]  9%|▉         | 49348/552076 [00:00<00:04, 119919.26it/s] 11%|█         | 61475/552076 [00:00<00:04, 120319.89it/s] 14%|█▍        | 79487/552076 [00:00<00:03, 133628.62it/s] 18%|█▊        | 98224/552076 [00:00<00:03, 146207.49it/s] 21%|██        | 116359/552076 [00:00<00:02, 155230.67it/s] 24%|██▍       | 132992/552076 [00:00<00:02, 158399.96it/s] 27%|██▋       | 148765/552076 [00:01<00:02, 136444.60it/s] 30%|███       | 166936/552076 [00:01<00:02, 147464.96it/s] 34%|███▍      | 187170/552076 [00:01<00:02, 160524.99it/s] 37%|███▋      | 203982/552076 [00:01<00:02, 151585.18it/s] 40%|████      | 222921/552076 [00:01<00:02, 161240.50it/s] 43%|████▎     | 239658/552076 [00:01<00:02, 148127.11it/s] 46%|████▌     | 255109/552076 [00:01<00:02, 135178.03it/s] 49%|████▉     | 271751/552076 [00:01<00:01, 143245.05it/s] 52%|█████▏    | 286673/552076 [00:01<00:02, 127146.86it/s] 54%|█████▍    | 300140/552076 [00:02<00:02, 118853.10it/s] 58%|█████▊    | 319830/552076 [00:02<00:01, 134893.03it/s] 61%|██████    | 335440/552076 [00:02<00:01, 139748.45it/s] 63%|██████▎   | 350288/552076 [00:02<00:01, 116114.78it/s] 66%|██████▌   | 363179/552076 [00:02<00:01, 105368.55it/s] 68%|██████▊   | 377094/552076 [00:02<00:01, 113644.43it/s] 71%|███████   | 389405/552076 [00:02<00:01, 107815.28it/s] 73%|███████▎  | 400912/552076 [00:03<00:01, 103052.85it/s] 76%|███████▌  | 417188/552076 [00:03<00:01, 115795.51it/s] 79%|███████▉  | 436960/552076 [00:03<00:00, 132231.34it/s] 82%|████████▏ | 451630/552076 [00:03<00:00, 108982.13it/s] 84%|████████▍ | 466443/552076 [00:03<00:00, 118366.35it/s] 88%|████████▊ | 485461/552076 [00:03<00:00, 133487.14it/s] 91%|█████████▏| 504964/552076 [00:03<00:00, 147444.07it/s] 95%|█████████▍| 524315/552076 [00:03<00:00, 158782.47it/s] 98%|█████████▊| 543305/552076 [00:03<00:00, 166989.63it/s]100%|██████████| 552076/552076 [00:03<00:00, 139953.30it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20668/552076 [00:00<00:02, 206677.73it/s]  8%|▊         | 42376/552076 [00:00<00:02, 209690.67it/s] 12%|█▏        | 64417/552076 [00:00<00:02, 212795.28it/s] 16%|█▌        | 87334/552076 [00:00<00:02, 217455.35it/s] 20%|█▉        | 108812/552076 [00:00<00:02, 216643.96it/s] 23%|██▎       | 129214/552076 [00:00<00:01, 212693.25it/s] 27%|██▋       | 151812/552076 [00:00<00:01, 216509.81it/s] 31%|███       | 171803/552076 [00:00<00:01, 210031.67it/s] 35%|███▍      | 192139/552076 [00:00<00:01, 207982.13it/s] 38%|███▊      | 212470/552076 [00:01<00:01, 206556.35it/s] 42%|████▏     | 234000/552076 [00:01<00:01, 209103.58it/s] 46%|████▌     | 254538/552076 [00:01<00:01, 203520.20it/s] 50%|████▉     | 274662/552076 [00:01<00:01, 202102.60it/s] 53%|█████▎    | 294715/552076 [00:01<00:01, 153344.18it/s] 57%|█████▋    | 314116/552076 [00:01<00:01, 163631.57it/s] 61%|██████    | 334467/552076 [00:01<00:01, 173849.20it/s] 64%|██████▍   | 354370/552076 [00:01<00:01, 180707.02it/s] 68%|██████▊   | 374307/552076 [00:01<00:00, 185926.50it/s] 71%|███████▏  | 394626/552076 [00:02<00:00, 190787.22it/s] 75%|███████▌  | 414180/552076 [00:02<00:00, 148623.65it/s] 79%|███████▊  | 434435/552076 [00:02<00:00, 161524.13it/s] 82%|████████▏ | 454799/552076 [00:02<00:00, 172206.81it/s] 86%|████████▌ | 474283/552076 [00:02<00:00, 178423.24it/s] 90%|████████▉ | 494299/552076 [00:02<00:00, 184430.21it/s] 93%|█████████▎| 513717/552076 [00:02<00:00, 187249.27it/s] 97%|█████████▋| 533957/552076 [00:02<00:00, 191549.61it/s]100%|██████████| 552076/552076 [00:02<00:00, 189567.17it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20774/552076 [00:00<00:02, 207737.72it/s]  7%|▋         | 40367/552076 [00:00<00:02, 204047.47it/s] 11%|█         | 60355/552076 [00:00<00:02, 202778.57it/s] 13%|█▎        | 73520/552076 [00:00<00:02, 173015.61it/s] 16%|█▌        | 86602/552076 [00:00<00:03, 132195.55it/s] 18%|█▊        | 98317/552076 [00:00<00:04, 109066.17it/s] 20%|██        | 111398/552076 [00:00<00:03, 113794.27it/s] 22%|██▏       | 122563/552076 [00:00<00:04, 102284.40it/s] 24%|██▍       | 132861/552076 [00:01<00:04, 92536.26it/s]  27%|██▋       | 146950/552076 [00:01<00:03, 103156.08it/s] 30%|██▉       | 163117/552076 [00:01<00:03, 115720.19it/s] 32%|███▏      | 176930/552076 [00:01<00:03, 121639.61it/s] 34%|███▍      | 189926/552076 [00:01<00:02, 124020.10it/s] 37%|███▋      | 202828/552076 [00:01<00:02, 121491.38it/s] 39%|███▉      | 215339/552076 [00:01<00:03, 90784.50it/s]  41%|████▏     | 228120/552076 [00:01<00:03, 99422.89it/s] 43%|████▎     | 239284/552076 [00:02<00:03, 95796.97it/s] 45%|████▌     | 249747/552076 [00:02<00:03, 89000.06it/s] 49%|████▉     | 270790/552076 [00:02<00:02, 107632.60it/s] 53%|█████▎    | 290527/552076 [00:02<00:02, 124632.01it/s] 56%|█████▋    | 311422/552076 [00:02<00:01, 141797.56it/s] 60%|█████▉    | 330154/552076 [00:02<00:01, 152946.74it/s] 63%|██████▎   | 350016/552076 [00:02<00:01, 164278.79it/s] 67%|██████▋   | 370127/552076 [00:02<00:01, 173827.73it/s] 71%|███████   | 390021/552076 [00:02<00:00, 180669.10it/s] 75%|███████▍  | 411722/552076 [00:02<00:00, 190223.19it/s] 78%|███████▊  | 431584/552076 [00:03<00:00, 190504.27it/s] 82%|████████▏ | 453675/552076 [00:03<00:00, 198707.93it/s] 86%|████████▌ | 474049/552076 [00:03<00:00, 192898.14it/s] 89%|████████▉ | 493728/552076 [00:03<00:00, 186161.33it/s] 93%|█████████▎| 512668/552076 [00:03<00:00, 185872.71it/s] 96%|█████████▋| 531482/552076 [00:03<00:00, 154320.76it/s]100%|█████████▉| 551425/552076 [00:03<00:00, 165554.21it/s]100%|██████████| 552076/552076 [00:03<00:00, 145972.02it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11161/552076 [00:00<00:04, 111606.65it/s]  5%|▍         | 27155/552076 [00:00<00:04, 122732.10it/s]  8%|▊         | 46158/552076 [00:00<00:03, 137321.31it/s] 11%|█         | 58594/552076 [00:00<00:03, 133156.34it/s] 14%|█▍        | 76583/552076 [00:00<00:03, 144410.96it/s] 18%|█▊        | 96841/552076 [00:00<00:02, 158021.38it/s] 21%|██        | 115788/552076 [00:00<00:02, 166300.19it/s] 25%|██▍       | 135425/552076 [00:00<00:02, 174306.67it/s] 28%|██▊       | 153883/552076 [00:00<00:02, 177265.99it/s] 31%|███       | 171596/552076 [00:01<00:03, 115885.49it/s] 34%|███▎      | 185918/552076 [00:01<00:03, 120467.74it/s] 37%|███▋      | 206101/552076 [00:01<00:02, 137039.68it/s] 41%|████      | 226156/552076 [00:01<00:02, 151424.41it/s] 44%|████▍     | 243805/552076 [00:01<00:01, 158160.85it/s] 47%|████▋     | 261082/552076 [00:01<00:01, 153992.40it/s] 50%|█████     | 277528/552076 [00:01<00:02, 136244.55it/s] 53%|█████▎    | 292262/552076 [00:01<00:02, 128242.17it/s] 55%|█████▌    | 305959/552076 [00:02<00:02, 113751.46it/s] 58%|█████▊    | 318248/552076 [00:02<00:02, 114139.24it/s] 60%|█████▉    | 330302/552076 [00:02<00:02, 95987.51it/s]  62%|██████▏   | 340840/552076 [00:02<00:02, 88940.14it/s] 63%|██████▎   | 350495/552076 [00:02<00:02, 88734.02it/s] 65%|██████▌   | 359901/552076 [00:02<00:02, 88355.59it/s] 67%|██████▋   | 369110/552076 [00:02<00:02, 76897.34it/s] 69%|██████▉   | 379556/552076 [00:03<00:02, 83506.90it/s] 70%|███████   | 388442/552076 [00:03<00:01, 84805.87it/s] 74%|███████▍  | 408055/552076 [00:03<00:01, 102209.81it/s] 76%|███████▌  | 420141/552076 [00:03<00:01, 93089.59it/s]  80%|███████▉  | 439644/552076 [00:03<00:01, 110400.14it/s] 82%|████████▏ | 453035/552076 [00:03<00:01, 96243.81it/s]  84%|████████▍ | 464631/552076 [00:03<00:00, 99774.76it/s] 86%|████████▌ | 476022/552076 [00:03<00:00, 82862.11it/s] 88%|████████▊ | 486633/552076 [00:04<00:00, 88410.91it/s] 90%|████████▉ | 496605/552076 [00:04<00:00, 88969.96it/s] 92%|█████████▏| 506295/552076 [00:04<00:00, 82050.31it/s] 95%|█████████▌| 525120/552076 [00:04<00:00, 98765.35it/s] 99%|█████████▊| 544683/552076 [00:04<00:00, 115994.83it/s]100%|██████████| 552076/552076 [00:04<00:00, 121183.24it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18999/552076 [00:00<00:02, 189975.69it/s]  4%|▍         | 24699/552076 [00:00<00:04, 107147.04it/s]  8%|▊         | 43031/552076 [00:00<00:04, 122405.10it/s] 12%|█▏        | 65645/552076 [00:00<00:03, 141937.11it/s] 16%|█▌        | 86775/552076 [00:00<00:02, 157441.31it/s] 19%|█▉        | 106855/552076 [00:00<00:02, 168345.65it/s] 23%|██▎       | 125798/552076 [00:00<00:02, 174160.01it/s] 26%|██▋       | 145901/552076 [00:00<00:02, 181434.87it/s] 30%|███       | 165877/552076 [00:00<00:02, 186567.82it/s] 34%|███▎      | 185915/552076 [00:01<00:01, 190505.43it/s] 37%|███▋      | 205110/552076 [00:01<00:01, 182333.86it/s] 41%|████      | 224749/552076 [00:01<00:01, 186333.33it/s] 45%|████▍     | 245975/552076 [00:01<00:01, 193420.93it/s] 48%|████▊     | 266460/552076 [00:01<00:01, 196712.98it/s] 52%|█████▏    | 286264/552076 [00:01<00:01, 196763.28it/s] 55%|█████▌    | 306087/552076 [00:01<00:01, 197199.81it/s] 59%|█████▉    | 325873/552076 [00:01<00:01, 197372.53it/s] 63%|██████▎   | 345656/552076 [00:01<00:01, 195592.47it/s] 66%|██████▌   | 365665/552076 [00:01<00:00, 196919.02it/s] 70%|██████▉   | 385384/552076 [00:02<00:00, 192311.13it/s] 73%|███████▎  | 404658/552076 [00:02<00:00, 175357.64it/s] 77%|███████▋  | 424353/552076 [00:02<00:00, 181318.62it/s] 80%|████████  | 443333/552076 [00:02<00:00, 183780.88it/s] 84%|████████▍ | 463270/552076 [00:02<00:00, 188193.76it/s] 87%|████████▋ | 482996/552076 [00:02<00:00, 190822.05it/s] 91%|█████████ | 502701/552076 [00:02<00:00, 192646.74it/s] 95%|█████████▍| 522058/552076 [00:02<00:00, 182899.80it/s] 98%|█████████▊| 540516/552076 [00:02<00:00, 145090.11it/s]100%|██████████| 552076/552076 [00:03<00:00, 182287.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21286/552076 [00:00<00:02, 212853.10it/s]  8%|▊         | 43844/552076 [00:00<00:02, 216516.06it/s] 12%|█▏        | 64040/552076 [00:00<00:02, 211930.63it/s] 15%|█▌        | 83874/552076 [00:00<00:02, 207660.95it/s] 19%|█▊        | 102171/552076 [00:00<00:02, 199578.91it/s] 22%|██▏       | 120228/552076 [00:00<00:02, 193468.34it/s] 25%|██▍       | 137188/552076 [00:00<00:02, 185628.74it/s] 28%|██▊       | 155719/552076 [00:00<00:02, 185532.92it/s] 31%|███▏      | 173146/552076 [00:00<00:02, 166696.63it/s] 34%|███▍      | 189388/552076 [00:01<00:03, 120143.50it/s] 37%|███▋      | 202940/552076 [00:01<00:03, 99310.14it/s]  39%|███▉      | 214548/552076 [00:01<00:03, 96396.28it/s] 42%|████▏     | 231247/552076 [00:01<00:02, 110395.91it/s] 44%|████▍     | 243848/552076 [00:01<00:02, 114656.69it/s] 47%|████▋     | 259331/552076 [00:01<00:02, 124101.52it/s] 49%|████▉     | 272756/552076 [00:01<00:02, 103105.25it/s] 52%|█████▏    | 284372/552076 [00:02<00:02, 95833.37it/s]  54%|█████▍    | 299930/552076 [00:02<00:02, 108311.61it/s] 57%|█████▋    | 313970/552076 [00:02<00:02, 116284.00it/s] 59%|█████▉    | 326643/552076 [00:02<00:02, 106676.67it/s] 61%|██████▏   | 339234/552076 [00:02<00:01, 111799.38it/s] 64%|██████▎   | 351705/552076 [00:02<00:01, 115382.77it/s] 66%|██████▋   | 366771/552076 [00:02<00:01, 124100.04it/s] 69%|██████▉   | 379724/552076 [00:02<00:01, 124034.97it/s] 72%|███████▏  | 399570/552076 [00:02<00:01, 139757.22it/s] 76%|███████▌  | 418902/552076 [00:03<00:00, 152426.27it/s] 80%|███████▉  | 438925/552076 [00:03<00:00, 164185.25it/s] 83%|████████▎ | 458136/552076 [00:03<00:00, 171669.69it/s] 87%|████████▋ | 477559/552076 [00:03<00:00, 177866.27it/s] 90%|█████████ | 497680/552076 [00:03<00:00, 184278.75it/s] 94%|█████████▎| 517559/552076 [00:03<00:00, 188404.49it/s] 97%|█████████▋| 537792/552076 [00:03<00:00, 192374.45it/s]100%|██████████| 552076/552076 [00:03<00:00, 148811.32it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11691/552076 [00:00<00:04, 116902.86it/s]  5%|▍         | 25403/552076 [00:00<00:04, 122312.39it/s]  7%|▋         | 40557/552076 [00:00<00:03, 129823.96it/s] 11%|█         | 58318/552076 [00:00<00:03, 141221.60it/s] 13%|█▎        | 74406/552076 [00:00<00:03, 146595.14it/s] 16%|█▌        | 87443/552076 [00:00<00:03, 138789.23it/s] 18%|█▊        | 100273/552076 [00:00<00:03, 126747.78it/s] 22%|██▏       | 118954/552076 [00:00<00:03, 140276.92it/s] 25%|██▌       | 138365/552076 [00:00<00:02, 153006.87it/s] 28%|██▊       | 157022/552076 [00:01<00:02, 161734.06it/s] 32%|███▏      | 176581/552076 [00:01<00:02, 170590.99it/s] 35%|███▌      | 195603/552076 [00:01<00:02, 176039.51it/s] 39%|███▊      | 213543/552076 [00:01<00:02, 143709.25it/s] 42%|████▏     | 229119/552076 [00:01<00:02, 141864.56it/s] 45%|████▌     | 249233/552076 [00:01<00:01, 155622.42it/s] 49%|████▉     | 270236/552076 [00:01<00:01, 168733.93it/s] 53%|█████▎    | 290787/552076 [00:01<00:01, 178305.26it/s] 56%|█████▋    | 311098/552076 [00:01<00:01, 185084.09it/s] 60%|█████▉    | 330852/552076 [00:02<00:01, 188651.38it/s] 63%|██████▎   | 350438/552076 [00:02<00:01, 190755.96it/s] 67%|██████▋   | 370091/552076 [00:02<00:00, 192451.07it/s] 71%|███████   | 390322/552076 [00:02<00:00, 195304.52it/s] 74%|███████▍  | 410034/552076 [00:02<00:00, 194832.08it/s] 78%|███████▊  | 429645/552076 [00:02<00:00, 195158.46it/s] 81%|████████▏ | 449251/552076 [00:02<00:00, 193913.29it/s] 85%|████████▍ | 468707/552076 [00:02<00:00, 157621.38it/s] 88%|████████▊ | 485618/552076 [00:03<00:00, 117127.25it/s] 91%|█████████ | 499653/552076 [00:03<00:00, 122786.78it/s] 93%|█████████▎| 513629/552076 [00:03<00:00, 109111.58it/s] 97%|█████████▋| 534455/552076 [00:03<00:00, 127291.00it/s]100%|█████████▉| 550238/552076 [00:03<00:00, 135135.19it/s]100%|██████████| 552076/552076 [00:03<00:00, 156045.63it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5464/552076 [00:00<00:10, 53690.24it/s]  2%|▏         | 10044/552076 [00:00<00:10, 51051.23it/s]  4%|▍         | 22953/552076 [00:00<00:08, 62360.35it/s]  6%|▋         | 35015/552076 [00:00<00:07, 72926.94it/s]  8%|▊         | 46198/552076 [00:00<00:06, 80661.41it/s] 10%|▉         | 54702/552076 [00:00<00:06, 77680.89it/s] 13%|█▎        | 74164/552076 [00:00<00:05, 94762.54it/s] 17%|█▋        | 92786/552076 [00:00<00:04, 111136.94it/s] 20%|██        | 112373/552076 [00:00<00:03, 127710.92it/s] 24%|██▍       | 132329/552076 [00:01<00:02, 143174.63it/s] 28%|██▊       | 152005/552076 [00:01<00:02, 155912.12it/s] 31%|███▏      | 172877/552076 [00:01<00:02, 168716.63it/s] 36%|███▌      | 196128/552076 [00:01<00:01, 183848.68it/s] 40%|███▉      | 219218/552076 [00:01<00:01, 195818.51it/s] 44%|████▎     | 240170/552076 [00:01<00:01, 199736.00it/s] 48%|████▊     | 262365/552076 [00:01<00:01, 205916.17it/s] 51%|█████▏    | 283680/552076 [00:01<00:01, 207613.12it/s] 55%|█████▌    | 305879/552076 [00:01<00:01, 211725.25it/s] 59%|█████▉    | 327429/552076 [00:01<00:01, 200534.06it/s] 63%|██████▎   | 347869/552076 [00:02<00:01, 200502.02it/s] 67%|██████▋   | 369108/552076 [00:02<00:00, 203925.65it/s] 71%|███████   | 391245/552076 [00:02<00:00, 208858.69it/s] 75%|███████▍  | 412303/552076 [00:02<00:00, 183571.79it/s] 78%|███████▊  | 431338/552076 [00:02<00:00, 182775.42it/s] 82%|████████▏ | 450710/552076 [00:02<00:00, 185925.48it/s] 85%|████████▌ | 469649/552076 [00:02<00:00, 181203.75it/s] 88%|████████▊ | 488038/552076 [00:02<00:00, 166134.20it/s] 92%|█████████▏| 506666/552076 [00:02<00:00, 171702.84it/s] 95%|█████████▍| 524187/552076 [00:03<00:00, 155737.07it/s] 99%|█████████▊| 544113/552076 [00:03<00:00, 166655.47it/s]100%|██████████| 552076/552076 [00:03<00:00, 171443.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9349/552076 [00:00<00:05, 93488.08it/s]  3%|▎         | 15950/552076 [00:00<00:06, 83106.24it/s]  5%|▍         | 25643/552076 [00:00<00:06, 86820.59it/s]  7%|▋         | 36750/552076 [00:00<00:05, 92905.55it/s]  9%|▊         | 48039/552076 [00:00<00:05, 98114.48it/s] 11%|█         | 58733/552076 [00:00<00:04, 100604.45it/s] 13%|█▎        | 69351/552076 [00:00<00:04, 102212.99it/s] 15%|█▍        | 80543/552076 [00:00<00:04, 104941.20it/s] 17%|█▋        | 91807/552076 [00:00<00:04, 107136.16it/s] 19%|█▊        | 102941/552076 [00:01<00:04, 108359.78it/s] 21%|██        | 113582/552076 [00:01<00:04, 97667.07it/s]  22%|██▏       | 123413/552076 [00:01<00:04, 88831.51it/s] 24%|██▍       | 132574/552076 [00:01<00:04, 89646.28it/s] 26%|██▌       | 143898/552076 [00:01<00:04, 95621.60it/s] 28%|██▊       | 153811/552076 [00:01<00:04, 96646.72it/s] 30%|██▉       | 164858/552076 [00:01<00:03, 100415.73it/s] 32%|███▏      | 175042/552076 [00:01<00:03, 95768.86it/s]  33%|███▎      | 184764/552076 [00:01<00:04, 75369.16it/s] 35%|███▍      | 193080/552076 [00:02<00:04, 77059.16it/s] 36%|███▋      | 201341/552076 [00:02<00:04, 71998.66it/s] 38%|███▊      | 208997/552076 [00:02<00:05, 66444.51it/s] 40%|███▉      | 218204/552076 [00:02<00:04, 69505.24it/s] 41%|████      | 225474/552076 [00:02<00:04, 67144.48it/s] 44%|████▍     | 243491/552076 [00:02<00:03, 82709.82it/s] 46%|████▋     | 256127/552076 [00:02<00:03, 92269.49it/s] 48%|████▊     | 267441/552076 [00:02<00:02, 97674.52it/s] 51%|█████     | 280857/552076 [00:02<00:02, 106350.59it/s] 53%|█████▎    | 293249/552076 [00:03<00:02, 111073.82it/s] 56%|█████▌    | 308507/552076 [00:03<00:02, 120941.59it/s] 58%|█████▊    | 321460/552076 [00:03<00:02, 87712.24it/s]  60%|██████    | 332130/552076 [00:03<00:02, 89727.89it/s] 63%|██████▎   | 346096/552076 [00:03<00:02, 100507.37it/s] 65%|██████▌   | 359147/552076 [00:03<00:01, 107950.43it/s] 67%|██████▋   | 371049/552076 [00:03<00:01, 103815.64it/s] 71%|███████   | 390769/552076 [00:03<00:01, 121006.18it/s] 74%|███████▍  | 410265/552076 [00:04<00:01, 136544.59it/s] 78%|███████▊  | 430121/552076 [00:04<00:00, 150660.50it/s] 81%|████████▏ | 448933/552076 [00:04<00:00, 160232.35it/s] 84%|████████▍ | 466329/552076 [00:04<00:00, 139304.28it/s] 87%|████████▋ | 481709/552076 [00:04<00:00, 133834.61it/s] 91%|█████████ | 500206/552076 [00:04<00:00, 145937.96it/s] 94%|█████████▍| 518680/552076 [00:04<00:00, 155751.11it/s] 97%|█████████▋| 536852/552076 [00:04<00:00, 162726.75it/s]100%|██████████| 552076/552076 [00:04<00:00, 111761.60it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19401/552076 [00:00<00:02, 194006.95it/s]  7%|▋         | 36213/552076 [00:00<00:02, 185440.08it/s] 10%|█         | 55727/552076 [00:00<00:02, 188246.54it/s] 13%|█▎        | 74283/552076 [00:00<00:02, 186509.21it/s] 17%|█▋        | 93075/552076 [00:00<00:02, 186928.27it/s] 20%|██        | 112610/552076 [00:00<00:02, 189375.63it/s] 24%|██▍       | 132339/552076 [00:00<00:02, 191681.18it/s] 27%|██▋       | 151794/552076 [00:00<00:02, 192531.59it/s] 31%|███       | 169951/552076 [00:00<00:02, 186161.25it/s] 34%|███▍      | 187845/552076 [00:01<00:02, 171883.49it/s] 37%|███▋      | 204745/552076 [00:01<00:02, 157362.91it/s] 41%|████      | 223806/552076 [00:01<00:01, 166051.81it/s] 44%|████▍     | 243448/552076 [00:01<00:01, 174126.71it/s] 48%|████▊     | 263038/552076 [00:01<00:01, 180130.77it/s] 51%|█████     | 282296/552076 [00:01<00:01, 183692.99it/s] 55%|█████▍    | 301321/552076 [00:01<00:01, 185610.25it/s] 58%|█████▊    | 319998/552076 [00:01<00:01, 168141.49it/s] 61%|██████    | 337208/552076 [00:01<00:01, 132098.20it/s] 64%|██████▎   | 351897/552076 [00:02<00:01, 124534.62it/s] 66%|██████▌   | 365475/552076 [00:02<00:01, 119667.65it/s] 69%|██████▊   | 378270/552076 [00:02<00:01, 119745.49it/s] 72%|███████▏  | 399896/552076 [00:02<00:01, 138256.06it/s] 76%|███████▌  | 419964/552076 [00:02<00:00, 152485.36it/s] 80%|███████▉  | 439599/552076 [00:02<00:00, 163438.03it/s] 83%|████████▎ | 459064/552076 [00:02<00:00, 171695.37it/s] 87%|████████▋ | 478981/552076 [00:02<00:00, 179105.82it/s] 90%|█████████ | 498947/552076 [00:02<00:00, 184813.12it/s] 94%|█████████▍| 518273/552076 [00:03<00:00, 187266.34it/s] 97%|█████████▋| 537418/552076 [00:03<00:00, 186005.70it/s]100%|██████████| 552076/552076 [00:03<00:00, 168018.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 13832/552076 [00:00<00:03, 138318.81it/s]  5%|▍         | 26456/552076 [00:00<00:03, 134458.87it/s]  8%|▊         | 42540/552076 [00:00<00:03, 141414.87it/s]  9%|▉         | 52050/552076 [00:00<00:05, 90724.48it/s]  12%|█▏        | 68376/552076 [00:00<00:04, 104676.59it/s] 14%|█▍        | 78971/552076 [00:00<00:05, 88046.48it/s]  16%|█▋        | 90320/552076 [00:00<00:04, 94394.17it/s] 19%|█▊        | 103001/552076 [00:00<00:04, 102233.17it/s] 22%|██▏       | 119207/552076 [00:01<00:03, 114964.51it/s] 24%|██▍       | 131605/552076 [00:01<00:04, 104072.75it/s] 26%|██▌       | 142841/552076 [00:01<00:04, 82936.36it/s]  28%|██▊       | 154156/552076 [00:01<00:04, 87997.48it/s] 30%|██▉       | 164964/552076 [00:01<00:04, 93191.91it/s] 32%|███▏      | 177528/552076 [00:01<00:03, 101018.56it/s] 35%|███▌      | 195905/552076 [00:01<00:03, 116795.58it/s] 39%|███▉      | 214777/552076 [00:01<00:02, 131872.11it/s] 42%|████▏     | 234072/552076 [00:02<00:02, 145708.86it/s] 46%|████▌     | 253327/552076 [00:02<00:01, 157179.64it/s] 50%|████▉     | 273324/552076 [00:02<00:01, 167961.83it/s] 53%|█████▎    | 294007/552076 [00:02<00:01, 177996.46it/s] 57%|█████▋    | 313013/552076 [00:02<00:01, 181449.42it/s] 60%|██████    | 331861/552076 [00:02<00:01, 170475.87it/s] 64%|██████▎   | 351483/552076 [00:02<00:01, 177459.64it/s] 67%|██████▋   | 369742/552076 [00:02<00:01, 174267.17it/s] 71%|███████   | 392502/552076 [00:02<00:00, 187443.96it/s] 75%|███████▍  | 413840/552076 [00:02<00:00, 194535.46it/s] 79%|███████▊  | 433743/552076 [00:03<00:00, 154022.82it/s] 82%|████████▏ | 455288/552076 [00:03<00:00, 168428.88it/s] 87%|████████▋ | 478245/552076 [00:03<00:00, 183053.49it/s] 90%|█████████ | 498123/552076 [00:03<00:00, 187499.43it/s] 94%|█████████▍| 517919/552076 [00:03<00:00, 181813.39it/s] 97%|█████████▋| 536871/552076 [00:03<00:00, 178525.76it/s]100%|██████████| 552076/552076 [00:03<00:00, 144230.31it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22611/552076 [00:00<00:02, 226108.60it/s]  8%|▊         | 42886/552076 [00:00<00:02, 218551.46it/s] 12%|█▏        | 64331/552076 [00:00<00:02, 217302.03it/s] 15%|█▌        | 84808/552076 [00:00<00:02, 213380.67it/s] 18%|█▊        | 100761/552076 [00:00<00:02, 192658.46it/s] 21%|██        | 116641/552076 [00:00<00:02, 177886.90it/s] 25%|██▍       | 136162/552076 [00:00<00:02, 182751.12it/s] 28%|██▊       | 156402/552076 [00:00<00:02, 188230.61it/s] 32%|███▏      | 176604/552076 [00:00<00:01, 192164.51it/s] 35%|███▌      | 195150/552076 [00:01<00:01, 184015.71it/s] 39%|███▊      | 213156/552076 [00:01<00:01, 174848.26it/s] 42%|████▏     | 230459/552076 [00:01<00:02, 144191.83it/s] 44%|████▍     | 245641/552076 [00:01<00:02, 111187.66it/s] 47%|████▋     | 258443/552076 [00:01<00:02, 100900.15it/s] 49%|████▉     | 271596/552076 [00:01<00:02, 108476.93it/s] 51%|█████▏    | 283558/552076 [00:01<00:02, 92628.21it/s]  55%|█████▍    | 301471/552076 [00:02<00:02, 108320.57it/s] 57%|█████▋    | 317173/552076 [00:02<00:01, 119431.17it/s] 60%|█████▉    | 330764/552076 [00:02<00:01, 122988.89it/s] 63%|██████▎   | 348568/552076 [00:02<00:01, 135563.59it/s] 67%|██████▋   | 367160/552076 [00:02<00:01, 147551.03it/s] 70%|██████▉   | 385601/552076 [00:02<00:01, 156961.05it/s] 73%|███████▎  | 404504/552076 [00:02<00:00, 165377.80it/s] 77%|███████▋  | 422912/552076 [00:02<00:00, 170575.92it/s] 80%|███████▉  | 440576/552076 [00:02<00:00, 165628.30it/s] 83%|████████▎ | 457595/552076 [00:02<00:00, 153597.51it/s] 86%|████████▌ | 476107/552076 [00:03<00:00, 161864.48it/s] 90%|████████▉ | 494791/552076 [00:03<00:00, 168626.03it/s] 93%|█████████▎| 512052/552076 [00:03<00:00, 157560.90it/s] 96%|█████████▌| 529001/552076 [00:03<00:00, 160959.33it/s] 99%|█████████▉| 545413/552076 [00:03<00:00, 136274.69it/s]100%|██████████| 552076/552076 [00:03<00:00, 153011.96it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5000/552076 [00:00<00:10, 49999.93it/s]  2%|▏         | 10636/552076 [00:00<00:10, 51038.17it/s]  3%|▎         | 17032/552076 [00:00<00:09, 54329.29it/s]  4%|▍         | 23522/552076 [00:00<00:09, 57119.41it/s]  6%|▌         | 33226/552076 [00:00<00:07, 65158.69it/s]  8%|▊         | 43159/552076 [00:00<00:07, 72656.88it/s]  9%|▉         | 51088/552076 [00:00<00:06, 74526.71it/s] 12%|█▏        | 68055/552076 [00:00<00:05, 89599.30it/s] 14%|█▍        | 78372/552076 [00:00<00:05, 92026.63it/s] 16%|█▌        | 88541/552076 [00:01<00:05, 85216.13it/s] 18%|█▊        | 101015/552076 [00:01<00:04, 94166.14it/s] 22%|██▏       | 121827/552076 [00:01<00:03, 112673.83it/s] 26%|██▌       | 141900/552076 [00:01<00:03, 129748.90it/s] 29%|██▉       | 162113/552076 [00:01<00:02, 145364.25it/s] 32%|███▏      | 178968/552076 [00:01<00:02, 143709.61it/s] 36%|███▌      | 198370/552076 [00:01<00:02, 155830.80it/s] 40%|███▉      | 219521/552076 [00:01<00:01, 169192.15it/s] 44%|████▎     | 240484/552076 [00:01<00:01, 179583.17it/s] 47%|████▋     | 259554/552076 [00:01<00:01, 178912.26it/s] 50%|█████     | 278224/552076 [00:02<00:01, 137012.58it/s] 53%|█████▎    | 293951/552076 [00:02<00:01, 138192.52it/s] 56%|█████▌    | 310401/552076 [00:02<00:01, 145154.84it/s] 60%|█████▉    | 330093/552076 [00:02<00:01, 157581.25it/s] 63%|██████▎   | 349467/552076 [00:02<00:01, 166927.37it/s] 66%|██████▋   | 367060/552076 [00:02<00:01, 153777.45it/s] 69%|██████▉   | 383455/552076 [00:02<00:01, 156693.77it/s] 73%|███████▎  | 401479/552076 [00:02<00:00, 163083.89it/s] 76%|███████▋  | 421931/552076 [00:03<00:00, 173637.40it/s] 80%|████████  | 441909/552076 [00:03<00:00, 180732.36it/s] 84%|████████▍ | 462684/552076 [00:03<00:00, 188068.18it/s] 87%|████████▋ | 482706/552076 [00:03<00:00, 191553.14it/s] 91%|█████████ | 502286/552076 [00:03<00:00, 192805.88it/s] 95%|█████████▍| 521770/552076 [00:03<00:00, 184562.46it/s] 98%|█████████▊| 540444/552076 [00:03<00:00, 180620.74it/s]100%|██████████| 552076/552076 [00:03<00:00, 148441.98it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12491/552076 [00:00<00:04, 124909.82it/s]  4%|▍         | 24016/552076 [00:00<00:04, 121842.65it/s]  6%|▌         | 34207/552076 [00:00<00:04, 115089.09it/s]  8%|▊         | 46342/552076 [00:00<00:04, 116898.25it/s] 12%|█▏        | 66406/552076 [00:00<00:03, 133629.82it/s] 16%|█▌        | 86579/552076 [00:00<00:03, 148687.42it/s] 20%|█▉        | 107834/552076 [00:00<00:02, 163417.45it/s] 23%|██▎       | 124401/552076 [00:00<00:03, 131888.09it/s] 25%|██▌       | 138727/552076 [00:01<00:03, 103703.40it/s] 27%|██▋       | 150831/552076 [00:01<00:04, 99239.68it/s]  30%|███       | 166208/552076 [00:01<00:03, 111053.90it/s] 33%|███▎      | 179775/552076 [00:01<00:03, 117444.72it/s] 35%|███▍      | 192552/552076 [00:01<00:03, 110053.84it/s] 38%|███▊      | 212033/552076 [00:01<00:02, 126574.17it/s] 41%|████      | 226153/552076 [00:01<00:03, 101355.08it/s] 43%|████▎     | 238113/552076 [00:02<00:03, 88036.48it/s]  46%|████▌     | 254225/552076 [00:02<00:02, 101903.00it/s] 49%|████▊     | 268671/552076 [00:02<00:02, 111780.88it/s] 51%|█████     | 281481/552076 [00:02<00:02, 96966.10it/s]  54%|█████▍    | 299112/552076 [00:02<00:02, 112099.20it/s] 57%|█████▋    | 312233/552076 [00:02<00:02, 111814.98it/s] 59%|█████▉    | 324753/552076 [00:02<00:02, 104233.00it/s] 63%|██████▎   | 345646/552076 [00:02<00:01, 122674.33it/s] 66%|██████▌   | 365584/552076 [00:02<00:01, 138678.95it/s] 70%|██████▉   | 385952/552076 [00:03<00:01, 153360.76it/s] 73%|███████▎  | 403253/552076 [00:03<00:00, 152768.92it/s] 76%|███████▌  | 419906/552076 [00:03<00:00, 156088.45it/s] 79%|███████▉  | 436496/552076 [00:03<00:00, 150620.38it/s] 83%|████████▎ | 459760/552076 [00:03<00:00, 168434.73it/s] 87%|████████▋ | 482005/552076 [00:03<00:00, 181666.47it/s] 91%|█████████ | 501744/552076 [00:03<00:00, 186113.99it/s] 94%|█████████▍| 521173/552076 [00:03<00:00, 184384.88it/s] 98%|█████████▊| 540188/552076 [00:03<00:00, 185818.60it/s]100%|██████████| 552076/552076 [00:03<00:00, 138948.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18411/552076 [00:00<00:02, 184101.40it/s]  7%|▋         | 39426/552076 [00:00<00:02, 191210.18it/s] 11%|█         | 59597/552076 [00:00<00:02, 194241.84it/s] 14%|█▍        | 79685/552076 [00:00<00:02, 196185.45it/s] 18%|█▊        | 99227/552076 [00:00<00:02, 195953.97it/s] 22%|██▏       | 118975/552076 [00:00<00:02, 196409.22it/s] 25%|██▌       | 138433/552076 [00:00<00:02, 195854.23it/s] 28%|██▊       | 156520/552076 [00:00<00:02, 147382.42it/s] 31%|███       | 172262/552076 [00:00<00:02, 150255.27it/s] 35%|███▍      | 191907/552076 [00:01<00:02, 161657.74it/s] 38%|███▊      | 210150/552076 [00:01<00:02, 167373.44it/s] 41%|████▏     | 228781/552076 [00:01<00:01, 172637.44it/s] 45%|████▍     | 248006/552076 [00:01<00:01, 178087.47it/s] 48%|████▊     | 266328/552076 [00:01<00:01, 179595.82it/s] 52%|█████▏    | 284506/552076 [00:01<00:02, 131739.09it/s] 54%|█████▍    | 299668/552076 [00:01<00:02, 121438.19it/s] 57%|█████▋    | 313362/552076 [00:02<00:02, 102634.20it/s] 60%|█████▉    | 329561/552076 [00:02<00:01, 115309.15it/s] 62%|██████▏   | 342714/552076 [00:02<00:02, 95267.24it/s]  65%|██████▌   | 361426/552076 [00:02<00:01, 111718.89it/s] 69%|██████▉   | 381868/552076 [00:02<00:01, 129310.69it/s] 73%|███████▎  | 401593/552076 [00:02<00:01, 144210.31it/s] 76%|███████▌  | 420712/552076 [00:02<00:00, 155686.36it/s] 80%|███████▉  | 439736/552076 [00:02<00:00, 164656.43it/s] 83%|████████▎ | 459242/552076 [00:02<00:00, 172732.24it/s] 87%|████████▋ | 479120/552076 [00:03<00:00, 179799.11it/s] 90%|█████████ | 498665/552076 [00:03<00:00, 184224.14it/s] 94%|█████████▍| 517731/552076 [00:03<00:00, 147442.83it/s] 97%|█████████▋| 534095/552076 [00:03<00:00, 123673.30it/s] 99%|█████████▉| 548246/552076 [00:03<00:00, 117844.89it/s]100%|██████████| 552076/552076 [00:03<00:00, 150580.81it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11449/552076 [00:00<00:04, 114481.65it/s]  4%|▍         | 21955/552076 [00:00<00:04, 111476.82it/s]  5%|▍         | 27511/552076 [00:00<00:08, 59227.48it/s]   6%|▌         | 34123/552076 [00:00<00:08, 61138.28it/s]  7%|▋         | 39423/552076 [00:00<00:09, 55433.26it/s]  8%|▊         | 44963/552076 [00:00<00:09, 55421.51it/s]  9%|▉         | 50178/552076 [00:00<00:10, 47768.49it/s] 13%|█▎        | 70669/552076 [00:00<00:07, 62042.02it/s] 15%|█▌        | 85416/552076 [00:01<00:06, 75091.66it/s] 18%|█▊        | 101848/552076 [00:01<00:05, 89704.97it/s] 21%|██▏       | 117917/552076 [00:01<00:04, 103409.26it/s] 24%|██▍       | 131602/552076 [00:01<00:04, 94799.62it/s]  26%|██▌       | 143563/552076 [00:01<00:04, 100800.38it/s] 29%|██▉       | 159747/552076 [00:01<00:03, 113659.89it/s] 33%|███▎      | 179576/552076 [00:01<00:02, 130349.41it/s] 36%|███▌      | 200010/552076 [00:01<00:02, 146233.22it/s] 40%|███▉      | 219963/552076 [00:01<00:02, 158970.53it/s] 43%|████▎     | 237682/552076 [00:02<00:02, 131490.90it/s] 47%|████▋     | 258082/552076 [00:02<00:01, 147185.08it/s] 50%|█████     | 278260/552076 [00:02<00:01, 160187.26it/s] 54%|█████▍    | 298793/552076 [00:02<00:01, 171498.12it/s] 57%|█████▋    | 317408/552076 [00:02<00:01, 171864.75it/s] 61%|██████    | 335620/552076 [00:02<00:01, 137088.19it/s] 64%|██████▍   | 354277/552076 [00:02<00:01, 148937.41it/s] 68%|██████▊   | 373099/552076 [00:02<00:01, 158885.16it/s] 71%|███████   | 392405/552076 [00:03<00:00, 167794.75it/s] 75%|███████▍  | 411549/552076 [00:03<00:00, 174249.32it/s] 78%|███████▊  | 430582/552076 [00:03<00:00, 178779.64it/s] 82%|████████▏ | 450214/552076 [00:03<00:00, 183702.89it/s] 85%|████████▌ | 470141/552076 [00:03<00:00, 188111.43it/s] 89%|████████▊ | 489361/552076 [00:03<00:00, 189317.67it/s] 92%|█████████▏| 509315/552076 [00:03<00:00, 192271.01it/s] 96%|█████████▌| 528976/552076 [00:03<00:00, 193551.16it/s] 99%|█████████▉| 548541/552076 [00:03<00:00, 194173.36it/s]100%|██████████| 552076/552076 [00:03<00:00, 143635.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15542/552076 [00:00<00:03, 155412.00it/s]  4%|▍         | 22564/552076 [00:00<00:04, 111001.68it/s]  7%|▋         | 40611/552076 [00:00<00:04, 125492.45it/s] 11%|█         | 59779/552076 [00:00<00:03, 139994.47it/s] 14%|█▍        | 78808/552076 [00:00<00:03, 152050.65it/s] 17%|█▋        | 94641/552076 [00:00<00:03, 152428.41it/s] 20%|█▉        | 109175/552076 [00:00<00:03, 130526.23it/s] 22%|██▏       | 122282/552076 [00:00<00:03, 120320.69it/s] 24%|██▍       | 134509/552076 [00:01<00:03, 113917.85it/s] 27%|██▋       | 149570/552076 [00:01<00:03, 122899.01it/s] 29%|██▉       | 162208/552076 [00:01<00:03, 99622.84it/s]  33%|███▎      | 180023/552076 [00:01<00:03, 114803.53it/s] 35%|███▍      | 193011/552076 [00:01<00:03, 118492.05it/s] 38%|███▊      | 209798/552076 [00:01<00:02, 129959.46it/s] 42%|████▏     | 229171/552076 [00:01<00:02, 144197.35it/s] 44%|████▍     | 244846/552076 [00:01<00:02, 133906.21it/s] 47%|████▋     | 259262/552076 [00:02<00:03, 90801.71it/s]  50%|████▉     | 274469/552076 [00:02<00:02, 103285.68it/s] 52%|█████▏    | 289556/552076 [00:02<00:02, 110701.72it/s] 55%|█████▍    | 302446/552076 [00:02<00:02, 113223.24it/s] 57%|█████▋    | 315057/552076 [00:02<00:02, 98566.73it/s]  60%|██████    | 333011/552076 [00:02<00:01, 113988.56it/s] 63%|██████▎   | 346166/552076 [00:02<00:02, 87911.39it/s]  65%|██████▌   | 360032/552076 [00:03<00:01, 98754.15it/s] 69%|██████▊   | 379543/552076 [00:03<00:01, 115929.80it/s] 71%|███████▏  | 393663/552076 [00:03<00:01, 105889.32it/s] 75%|███████▍  | 412776/552076 [00:03<00:01, 122244.48it/s] 78%|███████▊  | 430425/552076 [00:03<00:00, 134660.15it/s] 81%|████████▏ | 449837/552076 [00:03<00:00, 148285.78it/s] 85%|████████▌ | 469731/552076 [00:03<00:00, 159755.97it/s] 89%|████████▊ | 489444/552076 [00:03<00:00, 169389.01it/s] 92%|█████████▏| 507603/552076 [00:03<00:00, 167376.96it/s] 95%|█████████▌| 526630/552076 [00:03<00:00, 173643.80it/s] 99%|█████████▉| 547257/552076 [00:04<00:00, 182292.73it/s]100%|██████████| 552076/552076 [00:04<00:00, 133936.21it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21196/552076 [00:00<00:02, 211946.05it/s]  8%|▊         | 44017/552076 [00:00<00:02, 216575.83it/s] 12%|█▏        | 66447/552076 [00:00<00:02, 218834.11it/s] 16%|█▌        | 87809/552076 [00:00<00:02, 217241.67it/s] 20%|██        | 110702/552076 [00:00<00:02, 220619.59it/s] 24%|██▍       | 132916/552076 [00:00<00:01, 221072.80it/s] 28%|██▊       | 155085/552076 [00:00<00:01, 221255.45it/s] 32%|███▏      | 175645/552076 [00:00<00:01, 216311.37it/s] 36%|███▌      | 196088/552076 [00:00<00:02, 172997.06it/s] 39%|███▉      | 213936/552076 [00:01<00:02, 166012.46it/s] 42%|████▏     | 233315/552076 [00:01<00:01, 173471.73it/s] 46%|████▌     | 252860/552076 [00:01<00:01, 179527.78it/s] 49%|████▉     | 272261/552076 [00:01<00:01, 183639.53it/s] 53%|█████▎    | 292185/552076 [00:01<00:01, 188056.02it/s] 56%|█████▋    | 311196/552076 [00:01<00:01, 174839.21it/s] 60%|█████▉    | 329010/552076 [00:01<00:01, 149811.69it/s] 63%|██████▎   | 350295/552076 [00:01<00:01, 164419.10it/s] 67%|██████▋   | 369981/552076 [00:01<00:01, 172970.26it/s] 71%|███████   | 389755/552076 [00:02<00:00, 179723.27it/s] 74%|███████▍  | 408383/552076 [00:02<00:00, 181328.86it/s] 77%|███████▋  | 426979/552076 [00:02<00:00, 157613.22it/s] 80%|████████  | 443619/552076 [00:02<00:00, 125649.91it/s] 83%|████████▎ | 457826/552076 [00:02<00:00, 126462.23it/s] 85%|████████▌ | 471623/552076 [00:02<00:00, 83876.09it/s]  89%|████████▉ | 490099/552076 [00:03<00:00, 100303.93it/s] 91%|█████████ | 503388/552076 [00:03<00:00, 98155.26it/s]  93%|█████████▎| 515495/552076 [00:03<00:00, 103205.19it/s] 97%|█████████▋| 535429/552076 [00:03<00:00, 120662.59it/s]100%|██████████| 552076/552076 [00:03<00:00, 159995.24it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10307/552076 [00:00<00:05, 103065.68it/s]  5%|▌         | 29738/552076 [00:00<00:04, 119965.16it/s]  8%|▊         | 45335/552076 [00:00<00:03, 128890.90it/s] 11%|█         | 59694/552076 [00:00<00:03, 132972.02it/s] 13%|█▎        | 71612/552076 [00:00<00:03, 128508.24it/s] 15%|█▌        | 83237/552076 [00:00<00:04, 107650.42it/s] 17%|█▋        | 93717/552076 [00:00<00:04, 104623.25it/s] 19%|█▉        | 103999/552076 [00:00<00:05, 88829.45it/s] 22%|██▏       | 121684/552076 [00:01<00:04, 104420.13it/s] 25%|██▍       | 137534/552076 [00:01<00:03, 114751.63it/s] 27%|██▋       | 150216/552076 [00:01<00:03, 114592.60it/s] 29%|██▉       | 162520/552076 [00:01<00:03, 116507.70it/s] 32%|███▏      | 174770/552076 [00:01<00:03, 111921.08it/s] 34%|███▍      | 186421/552076 [00:01<00:03, 108452.70it/s] 37%|███▋      | 205982/552076 [00:01<00:02, 125185.93it/s] 40%|███▉      | 219683/552076 [00:01<00:02, 125972.10it/s] 43%|████▎     | 238435/552076 [00:01<00:02, 139730.37it/s] 47%|████▋     | 258724/552076 [00:01<00:01, 154122.70it/s] 50%|█████     | 278406/552076 [00:02<00:01, 164850.89it/s] 54%|█████▎    | 295933/552076 [00:02<00:01, 156465.03it/s] 57%|█████▋    | 313981/552076 [00:02<00:01, 162970.09it/s] 61%|██████    | 334023/552076 [00:02<00:01, 172646.06it/s] 64%|██████▍   | 354370/552076 [00:02<00:01, 180863.58it/s] 68%|██████▊   | 374433/552076 [00:02<00:00, 186369.91it/s] 71%|███████▏  | 393530/552076 [00:02<00:00, 187723.39it/s] 75%|███████▍  | 412593/552076 [00:02<00:00, 165891.75it/s] 78%|███████▊  | 432623/552076 [00:02<00:00, 174903.71it/s] 82%|████████▏ | 454262/552076 [00:03<00:00, 185576.85it/s] 86%|████████▋ | 476653/552076 [00:03<00:00, 195623.23it/s] 90%|████████▉ | 496779/552076 [00:03<00:00, 147948.88it/s] 94%|█████████▎| 516973/552076 [00:03<00:00, 160849.70it/s] 98%|█████████▊| 539838/552076 [00:03<00:00, 176554.97it/s]100%|██████████| 552076/552076 [00:03<00:00, 152888.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20541/552076 [00:00<00:02, 205399.91it/s]  7%|▋         | 39864/552076 [00:00<00:02, 201590.27it/s] 11%|█         | 59904/552076 [00:00<00:02, 201231.19it/s] 14%|█▍        | 76889/552076 [00:00<00:02, 190662.96it/s] 17%|█▋        | 92105/552076 [00:00<00:02, 177209.30it/s] 20%|██        | 112027/552076 [00:00<00:02, 183283.40it/s] 24%|██▍       | 131836/552076 [00:00<00:02, 187487.30it/s] 27%|██▋       | 151732/552076 [00:00<00:02, 190785.96it/s] 31%|███       | 171837/552076 [00:00<00:01, 193751.20it/s] 35%|███▍      | 191781/552076 [00:01<00:01, 195420.93it/s] 38%|███▊      | 210829/552076 [00:01<00:02, 165600.78it/s] 42%|████▏     | 230305/552076 [00:01<00:01, 173387.69it/s] 45%|████▌     | 250091/552076 [00:01<00:01, 180067.53it/s] 49%|████▉     | 271690/552076 [00:01<00:01, 189521.54it/s] 53%|█████▎    | 292629/552076 [00:01<00:01, 195071.37it/s] 57%|█████▋    | 312440/552076 [00:01<00:01, 174103.58it/s] 60%|██████    | 332711/552076 [00:01<00:01, 181796.71it/s] 64%|██████▎   | 351422/552076 [00:02<00:01, 134846.02it/s] 66%|██████▋   | 367044/552076 [00:02<00:01, 113432.37it/s] 69%|██████▉   | 381595/552076 [00:02<00:01, 121461.45it/s] 72%|███████▏  | 395353/552076 [00:02<00:01, 105621.98it/s] 74%|███████▍  | 409152/552076 [00:02<00:01, 113615.82it/s] 77%|███████▋  | 425231/552076 [00:02<00:01, 124580.62it/s] 79%|███████▉  | 438862/552076 [00:02<00:00, 121871.35it/s] 82%|████████▏ | 451883/552076 [00:03<00:01, 91279.23it/s]  85%|████████▍ | 466985/552076 [00:03<00:00, 103569.41it/s] 87%|████████▋ | 480111/552076 [00:03<00:00, 110566.32it/s] 89%|████████▉ | 493221/552076 [00:03<00:00, 116015.50it/s] 92%|█████████▏| 507934/552076 [00:03<00:00, 123873.43it/s] 95%|█████████▍| 523645/552076 [00:03<00:00, 132258.67it/s] 97%|█████████▋| 537635/552076 [00:03<00:00, 127050.64it/s]100%|█████████▉| 550919/552076 [00:03<00:00, 103020.12it/s]100%|██████████| 552076/552076 [00:03<00:00, 143750.01it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12125/552076 [00:00<00:04, 121244.91it/s]  4%|▍         | 23042/552076 [00:00<00:04, 117348.76it/s]  6%|▌         | 34230/552076 [00:00<00:04, 115650.70it/s]  8%|▊         | 45087/552076 [00:00<00:04, 113429.21it/s] 10%|█         | 56456/552076 [00:00<00:04, 113507.11it/s] 12%|█▏        | 68413/552076 [00:00<00:04, 115257.43it/s] 15%|█▍        | 80134/552076 [00:00<00:04, 115833.91it/s] 17%|█▋        | 92326/552076 [00:00<00:03, 117592.73it/s] 19%|█▊        | 103482/552076 [00:00<00:03, 115713.56it/s] 21%|██        | 116285/552076 [00:01<00:03, 119148.66it/s] 23%|██▎       | 127896/552076 [00:01<00:03, 114535.50it/s] 25%|██▌       | 139465/552076 [00:01<00:03, 114877.83it/s] 28%|██▊       | 151859/552076 [00:01<00:03, 117451.85it/s] 30%|██▉       | 163533/552076 [00:01<00:03, 116460.44it/s] 32%|███▏      | 175132/552076 [00:01<00:03, 115204.70it/s] 34%|███▍      | 186623/552076 [00:01<00:03, 101569.85it/s] 37%|███▋      | 204736/552076 [00:01<00:02, 116984.90it/s] 40%|████      | 223264/552076 [00:01<00:02, 131528.80it/s] 44%|████▍     | 242785/552076 [00:01<00:02, 145796.30it/s] 47%|████▋     | 261682/552076 [00:02<00:01, 156523.23it/s] 51%|█████     | 281047/552076 [00:02<00:01, 166074.28it/s] 54%|█████▍    | 298659/552076 [00:02<00:01, 159089.06it/s] 57%|█████▋    | 315334/552076 [00:02<00:01, 156727.51it/s] 60%|██████    | 332819/552076 [00:02<00:01, 161754.84it/s] 63%|██████▎   | 349416/552076 [00:02<00:01, 153148.95it/s] 67%|██████▋   | 368134/552076 [00:02<00:01, 161982.64it/s] 70%|██████▉   | 386354/552076 [00:02<00:00, 167560.12it/s] 73%|███████▎  | 405698/552076 [00:02<00:00, 174564.14it/s] 77%|███████▋  | 424852/552076 [00:03<00:00, 179331.88it/s] 81%|████████  | 444624/552076 [00:03<00:00, 184476.60it/s] 84%|████████▍ | 463284/552076 [00:03<00:00, 184966.32it/s] 87%|████████▋ | 482256/552076 [00:03<00:00, 186365.70it/s] 91%|█████████ | 501078/552076 [00:03<00:00, 186916.20it/s] 94%|█████████▍| 519845/552076 [00:03<00:00, 142034.17it/s] 97%|█████████▋| 535713/552076 [00:03<00:00, 130349.43it/s]100%|█████████▉| 550102/552076 [00:03<00:00, 127356.62it/s]100%|██████████| 552076/552076 [00:03<00:00, 141229.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16484/552076 [00:00<00:03, 164839.37it/s]  5%|▌         | 29463/552076 [00:00<00:03, 144347.23it/s]  7%|▋         | 36282/552076 [00:00<00:05, 101563.20it/s]  8%|▊         | 46822/552076 [00:00<00:04, 102682.61it/s] 11%|█         | 59070/552076 [00:00<00:04, 107914.66it/s] 13%|█▎        | 71439/552076 [00:00<00:04, 112206.73it/s] 16%|█▌        | 86982/552076 [00:00<00:03, 122418.64it/s] 18%|█▊        | 98706/552076 [00:00<00:04, 109672.80it/s] 21%|██        | 113890/552076 [00:00<00:03, 119638.73it/s] 23%|██▎       | 129400/552076 [00:01<00:03, 128448.39it/s] 26%|██▌       | 142560/552076 [00:01<00:03, 107040.61it/s] 29%|██▉       | 161630/552076 [00:01<00:03, 123263.10it/s] 32%|███▏      | 178054/552076 [00:01<00:02, 130157.68it/s] 35%|███▍      | 192197/552076 [00:01<00:03, 111589.39it/s] 37%|███▋      | 205311/552076 [00:01<00:02, 116813.35it/s] 40%|███▉      | 219346/552076 [00:01<00:02, 123000.19it/s] 43%|████▎     | 238669/552076 [00:01<00:02, 138051.90it/s] 47%|████▋     | 258584/552076 [00:02<00:01, 152045.41it/s] 50%|████▉     | 275009/552076 [00:02<00:01, 149787.75it/s] 53%|█████▎    | 291972/552076 [00:02<00:01, 155233.80it/s] 56%|█████▋    | 310950/552076 [00:02<00:01, 164198.28it/s] 59%|█████▉    | 327967/552076 [00:02<00:01, 152507.58it/s] 63%|██████▎   | 347565/552076 [00:02<00:01, 163379.06it/s] 66%|██████▋   | 367117/552076 [00:02<00:01, 170379.00it/s] 70%|██████▉   | 384671/552076 [00:02<00:01, 165517.92it/s] 73%|███████▎  | 401615/552076 [00:02<00:00, 160390.96it/s] 76%|███████▌  | 420190/552076 [00:02<00:00, 167238.80it/s] 80%|███████▉  | 440425/552076 [00:03<00:00, 176421.44it/s] 83%|████████▎ | 460271/552076 [00:03<00:00, 182499.96it/s] 87%|████████▋ | 481296/552076 [00:03<00:00, 190022.57it/s] 91%|█████████ | 501356/552076 [00:03<00:00, 193074.58it/s] 94%|█████████▍| 520972/552076 [00:03<00:00, 193989.61it/s] 98%|█████████▊| 541793/552076 [00:03<00:00, 198047.02it/s]100%|██████████| 552076/552076 [00:03<00:00, 151840.40it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21937/552076 [00:00<00:02, 219368.64it/s]  8%|▊         | 43445/552076 [00:00<00:02, 218063.94it/s] 11%|█▏        | 62997/552076 [00:00<00:02, 210773.05it/s] 15%|█▌        | 83264/552076 [00:00<00:02, 208272.67it/s] 18%|█▊        | 98869/552076 [00:00<00:03, 136928.17it/s] 20%|██        | 112489/552076 [00:00<00:03, 136708.45it/s] 23%|██▎       | 127964/552076 [00:00<00:02, 141662.40it/s] 26%|██▌       | 142011/552076 [00:00<00:02, 141301.89it/s] 28%|██▊       | 156007/552076 [00:01<00:03, 112656.64it/s] 30%|███       | 168099/552076 [00:01<00:03, 114115.13it/s] 33%|███▎      | 180094/552076 [00:01<00:03, 112486.19it/s] 35%|███▍      | 191756/552076 [00:01<00:03, 111464.21it/s] 37%|███▋      | 203264/552076 [00:01<00:03, 112524.58it/s] 40%|████      | 223251/552076 [00:01<00:02, 129502.62it/s] 43%|████▎     | 237269/552076 [00:01<00:02, 120487.48it/s] 45%|████▌     | 250191/552076 [00:01<00:03, 90118.62it/s]  49%|████▊     | 268524/552076 [00:02<00:02, 106337.79it/s] 51%|█████     | 281547/552076 [00:02<00:03, 89776.95it/s]  53%|█████▎    | 292639/552076 [00:02<00:02, 90737.40it/s] 57%|█████▋    | 312264/552076 [00:02<00:02, 108186.34it/s] 59%|█████▉    | 327728/552076 [00:02<00:01, 118900.89it/s] 62%|██████▏   | 341661/552076 [00:02<00:01, 109763.81it/s] 64%|██████▍   | 354206/552076 [00:02<00:01, 99662.57it/s]  68%|██████▊   | 373038/552076 [00:02<00:01, 116052.93it/s] 70%|███████   | 388102/552076 [00:03<00:01, 124636.80it/s] 73%|███████▎  | 404324/552076 [00:03<00:01, 133945.18it/s] 77%|███████▋  | 424119/552076 [00:03<00:00, 148332.22it/s] 81%|████████  | 444838/552076 [00:03<00:00, 162149.98it/s] 84%|████████▍ | 466315/552076 [00:03<00:00, 175012.44it/s] 88%|████████▊ | 485884/552076 [00:03<00:00, 180741.43it/s] 91%|█████████▏| 504866/552076 [00:03<00:00, 151832.41it/s] 95%|█████████▍| 523263/552076 [00:03<00:00, 160228.07it/s] 99%|█████████▊| 544952/552076 [00:03<00:00, 173851.96it/s]100%|██████████| 552076/552076 [00:03<00:00, 138243.18it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21669/552076 [00:00<00:02, 216687.62it/s]  7%|▋         | 37712/552076 [00:00<00:02, 196059.18it/s] 11%|█         | 58834/552076 [00:00<00:02, 200372.30it/s] 14%|█▍        | 78455/552076 [00:00<00:02, 199103.65it/s] 18%|█▊        | 98073/552076 [00:00<00:02, 198214.78it/s] 22%|██▏       | 118849/552076 [00:00<00:02, 200984.47it/s] 25%|██▌       | 138190/552076 [00:00<00:02, 198649.74it/s] 29%|██▊       | 158200/552076 [00:00<00:01, 199082.52it/s] 32%|███▏      | 176917/552076 [00:00<00:01, 193538.91it/s] 35%|███▌      | 195471/552076 [00:01<00:02, 174281.06it/s] 39%|███▉      | 214925/552076 [00:01<00:01, 179899.44it/s] 43%|████▎     | 235049/552076 [00:01<00:01, 185809.45it/s] 46%|████▌     | 255243/552076 [00:01<00:01, 190368.87it/s] 50%|████▉     | 275561/552076 [00:01<00:01, 194038.70it/s] 53%|█████▎    | 294994/552076 [00:01<00:01, 172354.12it/s] 57%|█████▋    | 312699/552076 [00:01<00:01, 162920.09it/s] 60%|██████    | 332853/552076 [00:01<00:01, 172855.52it/s] 64%|██████▍   | 353083/552076 [00:01<00:01, 180747.49it/s] 68%|██████▊   | 373445/552076 [00:01<00:00, 187048.23it/s] 71%|███████   | 393099/552076 [00:02<00:00, 189797.87it/s] 75%|███████▍  | 413240/552076 [00:02<00:00, 193137.17it/s] 79%|███████▊  | 433880/552076 [00:02<00:00, 196932.91it/s] 82%|████████▏ | 454364/552076 [00:02<00:00, 199237.34it/s] 86%|████████▌ | 474402/552076 [00:02<00:00, 196007.11it/s] 89%|████████▉ | 494095/552076 [00:02<00:00, 170036.54it/s] 93%|█████████▎| 511777/552076 [00:02<00:00, 153558.95it/s] 96%|█████████▌| 527911/552076 [00:02<00:00, 140115.17it/s] 98%|█████████▊| 542696/552076 [00:03<00:00, 117948.14it/s]100%|██████████| 552076/552076 [00:03<00:00, 175034.75it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4872/552076 [00:00<00:11, 45883.85it/s]  2%|▏         | 13139/552076 [00:00<00:10, 52952.03it/s]  5%|▌         | 28944/552076 [00:00<00:07, 66147.69it/s]  7%|▋         | 36096/552076 [00:00<00:08, 62571.60it/s]  8%|▊         | 44256/552076 [00:00<00:07, 67277.07it/s] 10%|█         | 55595/552076 [00:00<00:06, 76119.61it/s] 12%|█▏        | 68313/552076 [00:00<00:05, 86542.09it/s] 16%|█▌        | 85589/552076 [00:00<00:04, 101779.60it/s] 18%|█▊        | 97498/552076 [00:01<00:05, 88517.22it/s]  21%|██        | 114227/552076 [00:01<00:04, 103077.82it/s] 23%|██▎       | 127941/552076 [00:01<00:03, 111375.33it/s] 25%|██▌       | 140651/552076 [00:01<00:03, 111566.24it/s] 29%|██▉       | 161283/552076 [00:01<00:03, 129392.85it/s] 33%|███▎      | 180508/552076 [00:01<00:02, 143462.25it/s] 36%|███▌      | 196614/552076 [00:01<00:02, 127052.13it/s] 39%|███▉      | 216743/552076 [00:01<00:02, 142857.67it/s] 43%|████▎     | 236146/552076 [00:01<00:02, 155131.23it/s] 46%|████▋     | 255699/552076 [00:01<00:01, 165380.23it/s] 50%|████▉     | 275228/552076 [00:02<00:01, 173343.47it/s] 53%|█████▎    | 293546/552076 [00:02<00:01, 160594.74it/s] 57%|█████▋    | 313751/552076 [00:02<00:01, 171127.32it/s] 61%|██████    | 335494/552076 [00:02<00:01, 182805.52it/s] 64%|██████▍   | 355327/552076 [00:02<00:01, 187201.33it/s] 68%|██████▊   | 375436/552076 [00:02<00:00, 191161.24it/s] 72%|███████▏  | 395169/552076 [00:02<00:00, 192970.50it/s] 75%|███████▌  | 415416/552076 [00:02<00:00, 195724.26it/s] 79%|███████▉  | 435288/552076 [00:02<00:00, 196612.26it/s] 83%|████████▎ | 456172/552076 [00:03<00:00, 200124.85it/s] 86%|████████▋ | 476308/552076 [00:03<00:00, 200239.02it/s] 90%|████████▉ | 496419/552076 [00:03<00:00, 198942.21it/s] 94%|█████████▎| 516563/552076 [00:03<00:00, 199684.94it/s] 97%|█████████▋| 536576/552076 [00:03<00:00, 199690.67it/s]100%|██████████| 552076/552076 [00:03<00:00, 157274.08it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17385/552076 [00:00<00:03, 173848.92it/s]  7%|▋         | 37211/552076 [00:00<00:02, 180515.60it/s] 10%|█         | 56094/552076 [00:00<00:02, 182930.67it/s] 14%|█▍        | 77599/552076 [00:00<00:02, 191511.35it/s] 17%|█▋        | 94007/552076 [00:00<00:02, 182362.61it/s] 20%|█▉        | 109514/552076 [00:00<00:03, 122527.36it/s] 22%|██▏       | 122451/552076 [00:00<00:04, 100862.23it/s] 24%|██▍       | 133649/552076 [00:01<00:04, 101067.54it/s] 26%|██▌       | 144534/552076 [00:01<00:04, 98418.35it/s]  28%|██▊       | 155996/552076 [00:01<00:03, 102776.19it/s] 32%|███▏      | 175747/552076 [00:01<00:03, 120050.38it/s] 34%|███▍      | 189177/552076 [00:01<00:02, 121795.37it/s] 37%|███▋      | 202360/552076 [00:01<00:03, 97320.51it/s]  39%|███▉      | 214878/552076 [00:01<00:03, 104282.24it/s] 41%|████▏     | 227754/552076 [00:01<00:03, 107377.00it/s] 43%|████▎     | 239340/552076 [00:01<00:03, 102641.59it/s] 45%|████▌     | 250242/552076 [00:02<00:03, 87428.70it/s]  48%|████▊     | 265803/552076 [00:02<00:02, 100659.58it/s] 50%|█████     | 277178/552076 [00:02<00:02, 99676.88it/s]  54%|█████▎    | 296085/552076 [00:02<00:02, 116151.75it/s] 57%|█████▋    | 316038/552076 [00:02<00:01, 132799.50it/s] 61%|██████    | 336203/552076 [00:02<00:01, 147953.31it/s] 65%|██████▍   | 357618/552076 [00:02<00:01, 163075.52it/s] 68%|██████▊   | 375770/552076 [00:02<00:01, 150698.37it/s] 71%|███████▏  | 394347/552076 [00:03<00:00, 159742.82it/s] 75%|███████▍  | 411503/552076 [00:03<00:01, 124958.70it/s] 77%|███████▋  | 425998/552076 [00:03<00:01, 118055.58it/s] 81%|████████  | 444698/552076 [00:03<00:00, 132735.85it/s] 84%|████████▍ | 464303/552076 [00:03<00:00, 146974.38it/s] 88%|████████▊ | 483699/552076 [00:03<00:00, 158491.55it/s] 91%|█████████ | 501104/552076 [00:03<00:00, 162858.36it/s] 94%|█████████▍| 520973/552076 [00:03<00:00, 172172.97it/s] 98%|█████████▊| 540597/552076 [00:03<00:00, 178749.03it/s]100%|██████████| 552076/552076 [00:04<00:00, 137985.88it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21748/552076 [00:00<00:02, 217476.06it/s]  8%|▊         | 44879/552076 [00:00<00:02, 221446.80it/s] 11%|█         | 60954/552076 [00:00<00:02, 198914.36it/s] 14%|█▍        | 77676/552076 [00:00<00:02, 188210.64it/s] 18%|█▊        | 99629/552076 [00:00<00:02, 196624.59it/s] 22%|██▏       | 121231/552076 [00:00<00:02, 202066.36it/s] 26%|██▌       | 144358/552076 [00:00<00:01, 210020.42it/s] 30%|███       | 167528/552076 [00:00<00:01, 216083.90it/s] 34%|███▍      | 190140/552076 [00:00<00:01, 218998.62it/s] 38%|███▊      | 211351/552076 [00:01<00:01, 181818.10it/s] 42%|████▏     | 232458/552076 [00:01<00:01, 189704.84it/s] 46%|████▌     | 252700/552076 [00:01<00:01, 193346.38it/s] 49%|████▉     | 272792/552076 [00:01<00:01, 195555.70it/s] 53%|█████▎    | 292606/552076 [00:01<00:01, 193045.13it/s] 57%|█████▋    | 312099/552076 [00:01<00:01, 192627.15it/s] 60%|██████    | 332317/552076 [00:01<00:01, 195394.75it/s] 64%|██████▍   | 352306/552076 [00:01<00:01, 196719.24it/s] 67%|██████▋   | 372052/552076 [00:01<00:01, 145143.67it/s] 70%|███████   | 388576/552076 [00:02<00:01, 140607.20it/s] 73%|███████▎  | 404074/552076 [00:02<00:01, 140354.49it/s] 77%|███████▋  | 425312/552076 [00:02<00:00, 156251.48it/s] 81%|████████  | 445553/552076 [00:02<00:00, 167725.34it/s] 84%|████████▍ | 466325/552076 [00:02<00:00, 178006.86it/s] 88%|████████▊ | 486142/552076 [00:02<00:00, 183610.37it/s] 92%|█████████▏| 506677/552076 [00:02<00:00, 189630.89it/s] 95%|█████████▌| 526193/552076 [00:02<00:00, 149963.54it/s] 98%|█████████▊| 543544/552076 [00:03<00:00, 156325.79it/s]100%|██████████| 552076/552076 [00:03<00:00, 178475.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13450/552076 [00:00<00:04, 134488.26it/s]  3%|▎         | 17485/552076 [00:00<00:07, 67905.36it/s]   5%|▍         | 25960/552076 [00:00<00:07, 72210.14it/s]  6%|▋         | 35586/552076 [00:00<00:06, 78060.33it/s]  8%|▊         | 43501/552076 [00:00<00:06, 78382.37it/s] 10%|▉         | 52839/552076 [00:00<00:06, 80200.49it/s] 11%|█▏        | 63181/552076 [00:00<00:05, 85992.18it/s] 15%|█▌        | 82836/552076 [00:00<00:04, 103448.53it/s] 17%|█▋        | 94530/552076 [00:00<00:04, 100455.43it/s] 19%|█▉        | 105539/552076 [00:01<00:04, 91500.74it/s] 22%|██▏       | 121310/552076 [00:01<00:04, 104684.95it/s] 24%|██▍       | 133026/552076 [00:01<00:04, 91271.09it/s]  26%|██▌       | 144368/552076 [00:01<00:04, 96949.82it/s] 29%|██▊       | 158040/552076 [00:01<00:03, 106219.03it/s] 32%|███▏      | 178741/552076 [00:01<00:03, 124387.85it/s] 36%|███▌      | 198804/552076 [00:01<00:02, 140392.51it/s] 39%|███▉      | 218011/552076 [00:01<00:02, 152717.55it/s] 43%|████▎     | 237554/552076 [00:01<00:01, 163431.65it/s] 46%|████▌     | 255299/552076 [00:02<00:01, 152502.10it/s] 50%|████▉     | 275612/552076 [00:02<00:01, 164826.01it/s] 53%|█████▎    | 294824/552076 [00:02<00:01, 172163.49it/s] 57%|█████▋    | 314641/552076 [00:02<00:01, 179219.29it/s] 61%|██████    | 335030/552076 [00:02<00:01, 185969.32it/s] 64%|██████▍   | 355769/552076 [00:02<00:01, 191915.97it/s] 69%|██████▊   | 378369/552076 [00:02<00:00, 201009.32it/s] 72%|███████▏  | 398876/552076 [00:02<00:00, 199202.76it/s] 76%|███████▌  | 419084/552076 [00:02<00:00, 195034.80it/s] 79%|███████▉  | 438809/552076 [00:03<00:00, 185732.83it/s] 83%|████████▎ | 457688/552076 [00:03<00:00, 186639.32it/s] 86%|████████▋ | 476812/552076 [00:03<00:00, 187994.98it/s] 90%|████████▉ | 495736/552076 [00:03<00:00, 165936.72it/s] 93%|█████████▎| 515203/552076 [00:03<00:00, 173624.32it/s] 97%|█████████▋| 534718/552076 [00:03<00:00, 179564.50it/s]100%|██████████| 552076/552076 [00:03<00:00, 150210.14it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13179/552076 [00:00<00:04, 131789.18it/s]  4%|▍         | 24301/552076 [00:00<00:04, 124857.59it/s]  7%|▋         | 40440/552076 [00:00<00:03, 133953.11it/s] 11%|█         | 60290/552076 [00:00<00:03, 148431.65it/s] 15%|█▍        | 80472/552076 [00:00<00:02, 161225.40it/s] 18%|█▊        | 98995/552076 [00:00<00:02, 167745.93it/s] 21%|██▏       | 117857/552076 [00:00<00:02, 173504.36it/s] 25%|██▍       | 137171/552076 [00:00<00:02, 178961.87it/s] 28%|██▊       | 154688/552076 [00:00<00:02, 162310.83it/s] 31%|███       | 170950/552076 [00:01<00:02, 156582.52it/s] 34%|███▍      | 186674/552076 [00:01<00:02, 154694.80it/s] 37%|███▋      | 202195/552076 [00:01<00:03, 105221.77it/s] 39%|███▉      | 217914/552076 [00:01<00:02, 116806.92it/s] 42%|████▏     | 231501/552076 [00:01<00:02, 117823.98it/s] 44%|████▍     | 244620/552076 [00:01<00:02, 115774.15it/s] 47%|████▋     | 257141/552076 [00:01<00:03, 87618.74it/s]  49%|████▊     | 268344/552076 [00:02<00:03, 93632.54it/s] 51%|█████     | 278998/552076 [00:02<00:03, 88662.24it/s] 52%|█████▏    | 288823/552076 [00:02<00:03, 80293.66it/s] 55%|█████▍    | 301236/552076 [00:02<00:02, 89807.69it/s] 57%|█████▋    | 313922/552076 [00:02<00:02, 98432.38it/s] 60%|██████    | 333034/552076 [00:02<00:01, 115190.95it/s] 63%|██████▎   | 346292/552076 [00:02<00:02, 102223.99it/s] 65%|██████▍   | 358834/552076 [00:02<00:01, 108228.86it/s] 68%|██████▊   | 376651/552076 [00:03<00:01, 122675.80it/s] 72%|███████▏  | 395064/552076 [00:03<00:01, 136324.67it/s] 75%|███████▌  | 415301/552076 [00:03<00:00, 151120.42it/s] 79%|███████▊  | 434420/552076 [00:03<00:00, 161257.63it/s] 82%|████████▏ | 454758/552076 [00:03<00:00, 171940.34it/s] 86%|████████▋ | 476243/552076 [00:03<00:00, 182897.46it/s] 90%|█████████ | 498688/552076 [00:03<00:00, 193652.58it/s] 94%|█████████▍| 520906/552076 [00:03<00:00, 201408.88it/s] 98%|█████████▊| 543741/552076 [00:03<00:00, 208797.51it/s]100%|██████████| 552076/552076 [00:03<00:00, 143543.41it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22434/552076 [00:00<00:02, 224337.00it/s]  8%|▊         | 44213/552076 [00:00<00:02, 222330.55it/s] 12%|█▏        | 66502/552076 [00:00<00:02, 222496.88it/s] 16%|█▌        | 89209/552076 [00:00<00:02, 223847.37it/s] 20%|█▉        | 109097/552076 [00:00<00:02, 215721.22it/s] 24%|██▍       | 131808/552076 [00:00<00:01, 219015.09it/s] 27%|██▋       | 151364/552076 [00:00<00:01, 211407.57it/s] 31%|███       | 170756/552076 [00:00<00:02, 184103.03it/s] 34%|███▍      | 188574/552076 [00:00<00:02, 159443.91it/s] 37%|███▋      | 204691/552076 [00:01<00:02, 154337.65it/s] 40%|████      | 222118/552076 [00:01<00:02, 159819.95it/s] 44%|████▍     | 243070/552076 [00:01<00:01, 172063.56it/s] 48%|████▊     | 263289/552076 [00:01<00:01, 180112.93it/s] 51%|█████     | 281664/552076 [00:01<00:01, 180028.88it/s] 54%|█████▍    | 300600/552076 [00:01<00:01, 182729.63it/s] 58%|█████▊    | 319061/552076 [00:01<00:01, 151034.96it/s] 61%|██████▏   | 338867/552076 [00:01<00:01, 162615.93it/s] 65%|██████▌   | 359189/552076 [00:01<00:01, 172982.87it/s] 69%|██████▊   | 378802/552076 [00:02<00:00, 179330.09it/s] 72%|███████▏  | 398998/552076 [00:02<00:00, 185567.72it/s] 76%|███████▌  | 418753/552076 [00:02<00:00, 189003.90it/s] 80%|███████▉  | 439262/552076 [00:02<00:00, 193557.92it/s] 83%|████████▎ | 459892/552076 [00:02<00:00, 197210.45it/s] 87%|████████▋ | 480320/552076 [00:02<00:00, 199276.95it/s] 91%|█████████ | 500409/552076 [00:02<00:00, 186806.95it/s] 94%|█████████▍| 519362/552076 [00:02<00:00, 175933.22it/s] 97%|█████████▋| 537276/552076 [00:03<00:00, 134448.16it/s]100%|██████████| 552076/552076 [00:03<00:00, 170002.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5748/552076 [00:00<00:09, 57226.28it/s]  2%|▏         | 10989/552076 [00:00<00:09, 55689.61it/s]  4%|▍         | 22048/552076 [00:00<00:08, 63210.45it/s]  5%|▍         | 26759/552076 [00:00<00:09, 52549.43it/s]  7%|▋         | 38762/552076 [00:00<00:08, 63209.78it/s]  9%|▉         | 51077/552076 [00:00<00:06, 74016.56it/s] 11%|█         | 60202/552076 [00:00<00:06, 78461.45it/s] 13%|█▎        | 72604/552076 [00:00<00:05, 88178.09it/s] 15%|█▍        | 82350/552076 [00:01<00:06, 76784.43it/s] 17%|█▋        | 92998/552076 [00:01<00:05, 82879.85it/s] 18%|█▊        | 102064/552076 [00:01<00:07, 63929.68it/s] 20%|█▉        | 110219/552076 [00:01<00:06, 67845.99it/s] 21%|██▏       | 117912/552076 [00:01<00:08, 53504.46it/s] 23%|██▎       | 124372/552076 [00:01<00:08, 49224.88it/s] 24%|██▍       | 132076/552076 [00:01<00:07, 55203.85it/s] 26%|██▌       | 144369/552076 [00:02<00:06, 66134.24it/s] 28%|██▊       | 156332/552076 [00:02<00:05, 76380.19it/s] 31%|███       | 168663/552076 [00:02<00:04, 86223.88it/s] 33%|███▎      | 181033/552076 [00:02<00:03, 94843.14it/s] 35%|███▌      | 193396/552076 [00:02<00:03, 101964.39it/s] 37%|███▋      | 205813/552076 [00:02<00:03, 107744.16it/s] 40%|███▉      | 218152/552076 [00:02<00:02, 112004.34it/s] 42%|████▏     | 230372/552076 [00:02<00:02, 114879.30it/s] 44%|████▍     | 242794/552076 [00:02<00:02, 117528.49it/s] 46%|████▌     | 255089/552076 [00:02<00:02, 119102.78it/s] 48%|████▊     | 267581/552076 [00:03<00:02, 120788.45it/s] 51%|█████     | 280075/552076 [00:03<00:02, 122002.47it/s] 53%|█████▎    | 292452/552076 [00:03<00:02, 122525.01it/s] 55%|█████▌    | 304968/552076 [00:03<00:02, 123301.21it/s] 57%|█████▋    | 317393/552076 [00:03<00:01, 123583.30it/s] 60%|█████▉    | 329955/552076 [00:03<00:01, 124187.29it/s] 64%|██████▎   | 351582/552076 [00:03<00:01, 142372.45it/s] 68%|██████▊   | 373091/552076 [00:03<00:01, 158440.98it/s] 71%|███████▏  | 393419/552076 [00:03<00:00, 169668.24it/s] 75%|███████▍  | 411484/552076 [00:03<00:00, 148365.80it/s] 78%|███████▊  | 428414/552076 [00:04<00:00, 154080.06it/s] 81%|████████  | 445620/552076 [00:04<00:00, 159065.28it/s] 84%|████████▍ | 464937/552076 [00:04<00:00, 167958.10it/s] 87%|████████▋ | 482352/552076 [00:04<00:00, 153986.20it/s] 91%|█████████ | 503627/552076 [00:04<00:00, 167896.98it/s] 94%|█████████▍| 521251/552076 [00:04<00:00, 160293.86it/s] 98%|█████████▊| 541417/552076 [00:04<00:00, 170803.62it/s]100%|██████████| 552076/552076 [00:04<00:00, 115819.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12422/552076 [00:00<00:04, 124214.49it/s]  6%|▌         | 31918/552076 [00:00<00:03, 139387.51it/s]  9%|▉         | 51573/552076 [00:00<00:03, 152710.66it/s] 13%|█▎        | 71105/552076 [00:00<00:02, 163402.64it/s] 16%|█▋        | 90506/552076 [00:00<00:02, 171518.54it/s] 20%|██        | 110488/552076 [00:00<00:02, 179127.71it/s] 24%|██▎       | 130773/552076 [00:00<00:02, 185638.62it/s] 27%|██▋       | 148753/552076 [00:00<00:02, 168076.61it/s] 31%|███       | 168511/552076 [00:00<00:02, 175957.10it/s] 34%|███▍      | 189690/552076 [00:01<00:01, 185362.20it/s] 38%|███▊      | 211096/552076 [00:01<00:01, 193129.42it/s] 42%|████▏     | 231582/552076 [00:01<00:01, 196503.64it/s] 46%|████▌     | 251754/552076 [00:01<00:01, 198038.24it/s] 49%|████▉     | 271666/552076 [00:01<00:01, 172489.52it/s] 53%|█████▎    | 291736/552076 [00:01<00:01, 180080.91it/s] 56%|█████▋    | 311755/552076 [00:01<00:01, 185673.48it/s] 60%|██████    | 331862/552076 [00:01<00:01, 190038.83it/s] 64%|██████▎   | 351755/552076 [00:01<00:01, 192621.12it/s] 67%|██████▋   | 371255/552076 [00:02<00:01, 140982.41it/s] 70%|███████   | 387507/552076 [00:02<00:01, 114019.02it/s] 73%|███████▎  | 401249/552076 [00:02<00:01, 118779.17it/s] 75%|███████▌  | 414816/552076 [00:02<00:01, 120704.26it/s] 79%|███████▊  | 434502/552076 [00:02<00:00, 136551.71it/s] 82%|████████▏ | 453143/552076 [00:02<00:00, 148462.63it/s] 85%|████████▌ | 469367/552076 [00:02<00:00, 114692.47it/s] 87%|████████▋ | 482972/552076 [00:03<00:00, 117755.84it/s] 90%|█████████ | 497461/552076 [00:03<00:00, 124764.24it/s] 93%|█████████▎| 512539/552076 [00:03<00:00, 127745.04it/s] 95%|█████████▌| 526153/552076 [00:03<00:00, 110942.58it/s] 98%|█████████▊| 540500/552076 [00:03<00:00, 119036.61it/s]100%|██████████| 552076/552076 [00:03<00:00, 149565.71it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10770/552076 [00:00<00:05, 101785.83it/s]  3%|▎         | 15629/552076 [00:00<00:07, 76619.06it/s]   6%|▌         | 32492/552076 [00:00<00:05, 91614.90it/s]  7%|▋         | 40068/552076 [00:00<00:06, 84041.68it/s] 10%|▉         | 52674/552076 [00:00<00:05, 93378.85it/s] 12%|█▏        | 67739/552076 [00:00<00:04, 105397.84it/s] 14%|█▍        | 79567/552076 [00:00<00:04, 108955.64it/s] 16%|█▋        | 90676/552076 [00:00<00:04, 97389.45it/s]  20%|█▉        | 110277/552076 [00:00<00:03, 114702.06it/s] 24%|██▎       | 130085/552076 [00:01<00:03, 131278.84it/s] 27%|██▋       | 148510/552076 [00:01<00:02, 143669.06it/s] 30%|██▉       | 164549/552076 [00:01<00:02, 139927.59it/s] 33%|███▎      | 183467/552076 [00:01<00:02, 151781.05it/s] 37%|███▋      | 202378/552076 [00:01<00:02, 161334.80it/s] 40%|████      | 222507/552076 [00:01<00:01, 171549.51it/s] 44%|████▍     | 241850/552076 [00:01<00:01, 177573.93it/s] 47%|████▋     | 260633/552076 [00:01<00:01, 180527.39it/s] 51%|█████     | 279149/552076 [00:01<00:01, 161951.14it/s] 54%|█████▍    | 298053/552076 [00:02<00:01, 169225.73it/s] 58%|█████▊    | 317947/552076 [00:02<00:01, 177161.94it/s] 61%|██████    | 337695/552076 [00:02<00:01, 181901.27it/s] 65%|██████▍   | 357968/552076 [00:02<00:01, 187685.51it/s] 69%|██████▊   | 379519/552076 [00:02<00:00, 195246.96it/s] 73%|███████▎  | 400371/552076 [00:02<00:00, 199046.55it/s] 76%|███████▌  | 420912/552076 [00:02<00:00, 200913.15it/s] 80%|███████▉  | 441165/552076 [00:02<00:00, 146027.93it/s] 83%|████████▎ | 460672/552076 [00:02<00:00, 157939.80it/s] 87%|████████▋ | 481210/552076 [00:03<00:00, 169699.26it/s] 91%|█████████ | 499726/552076 [00:03<00:00, 161632.49it/s] 94%|█████████▎| 517052/552076 [00:03<00:00, 163622.63it/s] 97%|█████████▋| 537934/552076 [00:03<00:00, 174983.20it/s]100%|██████████| 552076/552076 [00:03<00:00, 160033.25it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16994/552076 [00:00<00:03, 169936.92it/s]  6%|▋         | 35590/552076 [00:00<00:02, 174445.45it/s]  9%|▊         | 48083/552076 [00:00<00:03, 155904.61it/s] 12%|█▏        | 66382/552076 [00:00<00:02, 163148.62it/s] 16%|█▌        | 86380/552076 [00:00<00:02, 172688.75it/s] 20%|█▉        | 108592/552076 [00:00<00:02, 185041.46it/s] 24%|██▎       | 131095/552076 [00:00<00:02, 195459.94it/s] 28%|██▊       | 152023/552076 [00:00<00:02, 199407.77it/s] 31%|███▏      | 173658/552076 [00:00<00:01, 204205.04it/s] 35%|███▌      | 193887/552076 [00:01<00:01, 203624.00it/s] 39%|███▉      | 213981/552076 [00:01<00:01, 202803.75it/s] 42%|████▏     | 234549/552076 [00:01<00:01, 203655.17it/s] 46%|████▋     | 256335/552076 [00:01<00:01, 207717.59it/s] 50%|█████     | 277811/552076 [00:01<00:01, 209780.95it/s] 54%|█████▍    | 298744/552076 [00:01<00:01, 190318.97it/s] 58%|█████▊    | 318091/552076 [00:01<00:01, 165406.93it/s] 61%|██████    | 337941/552076 [00:01<00:01, 174113.66it/s] 65%|██████▌   | 358996/552076 [00:01<00:01, 183647.84it/s] 68%|██████▊   | 377980/552076 [00:01<00:00, 179539.20it/s] 72%|███████▏  | 396388/552076 [00:02<00:01, 151703.38it/s] 75%|███████▍  | 412616/552076 [00:02<00:01, 121673.20it/s] 77%|███████▋  | 426472/552076 [00:02<00:01, 93215.77it/s]  79%|███████▉  | 437981/552076 [00:02<00:01, 79997.79it/s] 81%|████████▏ | 449899/552076 [00:02<00:01, 88750.74it/s] 84%|████████▎ | 461604/552076 [00:02<00:00, 95691.20it/s] 87%|████████▋ | 480443/552076 [00:03<00:00, 112262.60it/s] 89%|████████▉ | 493687/552076 [00:03<00:00, 104860.41it/s] 92%|█████████▏| 505684/552076 [00:03<00:00, 106181.42it/s] 94%|█████████▎| 517364/552076 [00:03<00:00, 91965.95it/s]  96%|█████████▌| 528883/552076 [00:03<00:00, 97884.69it/s] 98%|█████████▊| 539575/552076 [00:03<00:00, 100428.77it/s]100%|██████████| 552076/552076 [00:03<00:00, 146581.10it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10449/552076 [00:00<00:05, 104487.11it/s]  6%|▌         | 30536/552076 [00:00<00:04, 122056.06it/s]  9%|▉         | 50515/552076 [00:00<00:03, 138184.49it/s] 13%|█▎        | 70474/552076 [00:00<00:03, 152234.80it/s] 16%|█▋        | 90308/552076 [00:00<00:02, 163646.06it/s] 19%|█▉        | 106206/552076 [00:00<00:02, 153869.91it/s] 23%|██▎       | 126564/552076 [00:00<00:02, 166030.92it/s] 27%|██▋       | 147059/552076 [00:00<00:02, 174976.33it/s] 30%|███       | 168112/552076 [00:00<00:02, 184313.85it/s] 35%|███▍      | 190666/552076 [00:01<00:01, 195006.95it/s] 38%|███▊      | 211696/552076 [00:01<00:01, 199354.01it/s] 42%|████▏     | 231913/552076 [00:01<00:01, 198421.15it/s] 46%|████▌     | 253382/552076 [00:01<00:01, 203036.39it/s] 50%|████▉     | 274517/552076 [00:01<00:01, 205458.47it/s] 53%|█████▎    | 295186/552076 [00:01<00:01, 194112.76it/s] 57%|█████▋    | 314813/552076 [00:01<00:01, 191792.17it/s] 61%|██████    | 334150/552076 [00:01<00:01, 181047.14it/s] 64%|██████▍   | 352489/552076 [00:01<00:01, 174949.10it/s] 68%|██████▊   | 375481/552076 [00:01<00:00, 188466.94it/s] 72%|███████▏  | 398197/552076 [00:02<00:00, 198614.83it/s] 76%|███████▋  | 422092/552076 [00:02<00:00, 209207.51it/s] 80%|████████  | 443483/552076 [00:02<00:00, 195712.98it/s] 84%|████████▍ | 463560/552076 [00:02<00:00, 188094.65it/s] 88%|████████▊ | 485276/552076 [00:02<00:00, 195962.31it/s] 92%|█████████▏| 507054/552076 [00:02<00:00, 202032.03it/s] 96%|█████████▌| 528040/552076 [00:02<00:00, 204316.76it/s] 99%|█████████▉| 549031/552076 [00:02<00:00, 205962.95it/s]100%|██████████| 552076/552076 [00:02<00:00, 194376.07it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22123/552076 [00:00<00:02, 221227.57it/s]  8%|▊         | 43082/552076 [00:00<00:02, 217602.08it/s] 11%|█         | 61965/552076 [00:00<00:02, 208089.31it/s] 14%|█▍        | 79944/552076 [00:00<00:02, 198705.71it/s] 18%|█▊        | 97471/552076 [00:00<00:02, 191039.24it/s] 20%|██        | 113031/552076 [00:00<00:02, 153624.17it/s] 24%|██▍       | 134047/552076 [00:00<00:02, 167109.09it/s] 28%|██▊       | 154521/552076 [00:00<00:02, 176859.43it/s] 32%|███▏      | 175648/552076 [00:00<00:02, 185944.63it/s] 36%|███▌      | 197553/552076 [00:01<00:01, 194774.96it/s] 40%|███▉      | 218162/552076 [00:01<00:01, 198034.84it/s] 43%|████▎     | 238033/552076 [00:01<00:01, 162777.81it/s] 46%|████▋     | 255393/552076 [00:01<00:02, 145676.96it/s] 49%|████▉     | 271055/552076 [00:01<00:02, 126054.83it/s] 52%|█████▏    | 284896/552076 [00:01<00:03, 86720.85it/s]  55%|█████▍    | 303570/552076 [00:02<00:02, 103322.30it/s] 58%|█████▊    | 321603/552076 [00:02<00:01, 118503.80it/s] 61%|██████    | 336420/552076 [00:02<00:02, 101595.40it/s] 63%|██████▎   | 349078/552076 [00:02<00:02, 89841.21it/s]  65%|██████▌   | 360061/552076 [00:02<00:02, 80714.28it/s] 67%|██████▋   | 369707/552076 [00:02<00:02, 77860.11it/s] 69%|██████▊   | 378617/552076 [00:02<00:02, 76780.07it/s] 71%|███████   | 391373/552076 [00:03<00:01, 87192.37it/s] 74%|███████▍  | 407657/552076 [00:03<00:01, 101311.40it/s] 76%|███████▌  | 419371/552076 [00:03<00:01, 88537.24it/s]  78%|███████▊  | 432315/552076 [00:03<00:01, 97808.64it/s] 82%|████████▏ | 451416/552076 [00:03<00:00, 114580.74it/s] 85%|████████▌ | 471485/552076 [00:03<00:00, 131507.16it/s] 88%|████████▊ | 486936/552076 [00:03<00:00, 132958.76it/s] 91%|█████████▏| 504656/552076 [00:03<00:00, 143723.19it/s] 95%|█████████▌| 524900/552076 [00:03<00:00, 157420.38it/s] 99%|█████████▊| 545062/552076 [00:03<00:00, 168501.96it/s]100%|██████████| 552076/552076 [00:04<00:00, 137236.93it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20770/552076 [00:00<00:02, 207694.75it/s]  8%|▊         | 42911/552076 [00:00<00:02, 211626.00it/s] 12%|█▏        | 65239/552076 [00:00<00:02, 214991.30it/s] 16%|█▌        | 88998/552076 [00:00<00:02, 221305.29it/s] 20%|██        | 111818/552076 [00:00<00:01, 223327.90it/s] 24%|██▍       | 134869/552076 [00:00<00:01, 225434.37it/s] 29%|██▊       | 157656/552076 [00:00<00:01, 226158.99it/s] 33%|███▎      | 179759/552076 [00:00<00:01, 224592.76it/s] 37%|███▋      | 201783/552076 [00:00<00:01, 223267.26it/s] 41%|████      | 223668/552076 [00:01<00:01, 221922.41it/s] 44%|████▍     | 245288/552076 [00:01<00:01, 190430.91it/s] 48%|████▊     | 265282/552076 [00:01<00:01, 193184.40it/s] 52%|█████▏    | 284896/552076 [00:01<00:01, 194061.33it/s] 55%|█████▌    | 304498/552076 [00:01<00:01, 194391.38it/s] 59%|█████▊    | 324074/552076 [00:01<00:01, 194409.94it/s] 62%|██████▏   | 343611/552076 [00:01<00:01, 172689.35it/s] 66%|██████▌   | 363549/552076 [00:01<00:01, 179914.05it/s] 69%|██████▉   | 382857/552076 [00:01<00:00, 183670.42it/s] 73%|███████▎  | 402417/552076 [00:01<00:00, 187093.57it/s] 76%|███████▋  | 421850/552076 [00:02<00:00, 189206.80it/s] 80%|███████▉  | 440948/552076 [00:02<00:00, 188573.04it/s] 83%|████████▎ | 460245/552076 [00:02<00:00, 189868.19it/s] 87%|████████▋ | 479321/552076 [00:02<00:00, 157641.61it/s] 90%|█████████ | 499380/552076 [00:02<00:00, 168461.50it/s] 94%|█████████▍| 518857/552076 [00:02<00:00, 175575.19it/s] 98%|█████████▊| 538900/552076 [00:02<00:00, 182359.06it/s]100%|██████████| 552076/552076 [00:02<00:00, 194711.48it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19397/552076 [00:00<00:02, 193963.25it/s]  7%|▋         | 41121/552076 [00:00<00:02, 200404.79it/s] 12%|█▏        | 63639/552076 [00:00<00:02, 207244.89it/s] 16%|█▌        | 86371/552076 [00:00<00:02, 212882.90it/s] 20%|█▉        | 109196/552076 [00:00<00:02, 217269.87it/s] 24%|██▍       | 131271/552076 [00:00<00:01, 218299.61it/s] 27%|██▋       | 150888/552076 [00:00<00:02, 192351.84it/s] 31%|███       | 169138/552076 [00:00<00:02, 188044.74it/s] 34%|███▍      | 190382/552076 [00:00<00:01, 194752.68it/s] 38%|███▊      | 210572/552076 [00:01<00:01, 196841.85it/s] 42%|████▏     | 231782/552076 [00:01<00:01, 201181.85it/s] 46%|████▌     | 252229/552076 [00:01<00:01, 202156.05it/s] 49%|████▉     | 272326/552076 [00:01<00:01, 179345.58it/s] 53%|█████▎    | 291916/552076 [00:01<00:01, 184007.82it/s] 56%|█████▋    | 311811/552076 [00:01<00:01, 188247.00it/s] 60%|█████▉    | 330873/552076 [00:01<00:01, 187551.32it/s] 63%|██████▎   | 349880/552076 [00:01<00:01, 188299.54it/s] 67%|██████▋   | 370490/552076 [00:01<00:00, 193308.16it/s] 71%|███████   | 392143/552076 [00:01<00:00, 199733.99it/s] 75%|███████▍  | 412560/552076 [00:02<00:00, 201041.36it/s] 78%|███████▊  | 432761/552076 [00:02<00:00, 194456.65it/s] 82%|████████▏ | 452321/552076 [00:02<00:00, 169176.51it/s] 85%|████████▌ | 469907/552076 [00:02<00:00, 146639.44it/s] 88%|████████▊ | 485574/552076 [00:02<00:00, 146371.89it/s] 91%|█████████ | 500913/552076 [00:02<00:00, 143623.10it/s] 93%|█████████▎| 515779/552076 [00:02<00:00, 137771.99it/s] 96%|█████████▋| 531565/552076 [00:02<00:00, 139539.36it/s] 99%|█████████▉| 545807/552076 [00:03<00:00, 98820.43it/s] 100%|██████████| 552076/552076 [00:03<00:00, 170427.55it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3610/552076 [00:00<00:15, 36098.74it/s]  4%|▍         | 21433/552076 [00:00<00:11, 47450.69it/s]  5%|▌         | 28942/552076 [00:00<00:09, 53340.06it/s]  7%|▋         | 40739/552076 [00:00<00:08, 63830.51it/s] 10%|▉         | 53115/552076 [00:00<00:06, 74678.88it/s] 12%|█▏        | 65107/552076 [00:00<00:05, 82413.86it/s] 14%|█▎        | 74939/552076 [00:00<00:05, 84970.91it/s] 16%|█▌        | 87431/552076 [00:00<00:04, 93987.72it/s] 18%|█▊        | 97920/552076 [00:00<00:05, 86335.03it/s] 19%|█▉        | 107439/552076 [00:01<00:05, 80998.25it/s] 23%|██▎       | 125770/552076 [00:01<00:04, 97287.97it/s] 25%|██▌       | 139848/552076 [00:01<00:03, 107224.71it/s] 28%|██▊       | 156967/552076 [00:01<00:03, 120760.98it/s] 32%|███▏      | 176216/552076 [00:01<00:02, 135958.79it/s] 35%|███▌      | 195965/552076 [00:01<00:02, 149975.78it/s] 39%|███▉      | 215700/552076 [00:01<00:02, 161613.44it/s] 43%|████▎     | 234672/552076 [00:01<00:01, 169129.82it/s] 46%|████▌     | 254345/552076 [00:01<00:01, 176560.13it/s] 50%|████▉     | 274227/552076 [00:01<00:01, 182694.66it/s] 53%|█████▎    | 293159/552076 [00:02<00:01, 182110.40it/s] 57%|█████▋    | 315954/552076 [00:02<00:01, 193801.54it/s] 61%|██████    | 336268/552076 [00:02<00:01, 196510.22it/s] 65%|██████▍   | 358537/552076 [00:02<00:00, 203692.66it/s] 69%|██████▉   | 381865/552076 [00:02<00:00, 211746.67it/s] 73%|███████▎  | 403355/552076 [00:02<00:00, 211883.84it/s] 77%|███████▋  | 425517/552076 [00:02<00:00, 214711.64it/s] 81%|████████  | 448451/552076 [00:02<00:00, 218897.00it/s] 85%|████████▌ | 470476/552076 [00:02<00:00, 188480.90it/s] 89%|████████▉ | 490163/552076 [00:03<00:00, 189371.76it/s] 92%|█████████▏| 509901/552076 [00:03<00:00, 191702.55it/s] 96%|█████████▌| 529490/552076 [00:03<00:00, 191730.50it/s] 99%|█████████▉| 549131/552076 [00:03<00:00, 193108.65it/s]100%|██████████| 552076/552076 [00:03<00:00, 163434.88it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12008/552076 [00:00<00:04, 120071.81it/s]  5%|▌         | 30205/552076 [00:00<00:03, 133716.34it/s]  9%|▉         | 49811/552076 [00:00<00:03, 147815.54it/s] 12%|█▏        | 68965/552076 [00:00<00:03, 158681.42it/s] 16%|█▌        | 89665/552076 [00:00<00:02, 170628.85it/s] 20%|█▉        | 108983/552076 [00:00<00:02, 176819.26it/s] 23%|██▎       | 127413/552076 [00:00<00:02, 178998.48it/s] 26%|██▋       | 146090/552076 [00:00<00:02, 181135.11it/s] 30%|██▉       | 165346/552076 [00:00<00:02, 184416.56it/s] 33%|███▎      | 184648/552076 [00:01<00:01, 186914.60it/s] 37%|███▋      | 204833/552076 [00:01<00:01, 191156.25it/s] 41%|████      | 224722/552076 [00:01<00:01, 193410.91it/s] 44%|████▍     | 245509/552076 [00:01<00:01, 197530.97it/s] 48%|████▊     | 265366/552076 [00:01<00:01, 197840.61it/s] 52%|█████▏    | 286118/552076 [00:01<00:01, 200645.96it/s] 55%|█████▌    | 306183/552076 [00:01<00:01, 177689.40it/s] 59%|█████▉    | 324436/552076 [00:01<00:01, 176622.24it/s] 62%|██████▏   | 343573/552076 [00:01<00:01, 180801.45it/s] 66%|██████▌   | 362964/552076 [00:01<00:01, 184543.74it/s] 69%|██████▉   | 381622/552076 [00:02<00:01, 163246.21it/s] 73%|███████▎  | 400629/552076 [00:02<00:00, 170460.77it/s] 76%|███████▌  | 418174/552076 [00:02<00:00, 136526.06it/s] 78%|███████▊  | 433252/552076 [00:02<00:00, 120891.57it/s] 81%|████████  | 446669/552076 [00:02<00:00, 109182.56it/s] 84%|████████▍ | 466359/552076 [00:02<00:00, 126025.10it/s] 88%|████████▊ | 484407/552076 [00:02<00:00, 137024.88it/s] 90%|█████████ | 499615/552076 [00:03<00:00, 129860.62it/s] 94%|█████████▍| 519568/552076 [00:03<00:00, 145054.54it/s] 98%|█████████▊| 538909/552076 [00:03<00:00, 155793.96it/s]100%|██████████| 552076/552076 [00:03<00:00, 163639.65it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7925/552076 [00:00<00:07, 70659.81it/s]  3%|▎         | 18134/552076 [00:00<00:06, 77849.31it/s]  7%|▋         | 37880/552076 [00:00<00:05, 95138.08it/s]  9%|▉         | 50219/552076 [00:00<00:04, 102001.89it/s] 11%|█         | 61179/552076 [00:00<00:04, 104167.18it/s] 13%|█▎        | 71505/552076 [00:00<00:05, 81460.64it/s]  15%|█▍        | 80353/552076 [00:00<00:06, 70683.29it/s] 17%|█▋        | 94320/552076 [00:00<00:05, 82978.35it/s] 20%|█▉        | 110243/552076 [00:01<00:04, 96899.09it/s] 22%|██▏       | 123099/552076 [00:01<00:04, 104628.73it/s] 25%|██▍       | 137227/552076 [00:01<00:03, 113457.67it/s] 28%|██▊       | 154458/552076 [00:01<00:03, 124118.30it/s] 30%|███       | 168042/552076 [00:01<00:03, 97662.07it/s]  33%|███▎      | 179508/552076 [00:01<00:04, 92152.19it/s] 36%|███▌      | 199444/552076 [00:01<00:03, 109877.89it/s] 40%|███▉      | 219995/552076 [00:01<00:02, 127705.36it/s] 43%|████▎     | 235477/552076 [00:02<00:02, 126946.63it/s] 46%|████▋     | 256610/552076 [00:02<00:02, 144221.57it/s] 50%|█████     | 277326/552076 [00:02<00:01, 158684.10it/s] 54%|█████▍    | 298854/552076 [00:02<00:01, 172269.37it/s] 58%|█████▊    | 320383/552076 [00:02<00:01, 183252.72it/s] 62%|██████▏   | 340086/552076 [00:02<00:01, 186870.89it/s] 66%|██████▌   | 362336/552076 [00:02<00:00, 196299.60it/s] 70%|██████▉   | 384953/552076 [00:02<00:00, 204396.96it/s] 74%|███████▍  | 408022/552076 [00:02<00:00, 211630.96it/s] 78%|███████▊  | 429709/552076 [00:02<00:00, 209826.01it/s] 82%|████████▏ | 451062/552076 [00:03<00:00, 165523.89it/s] 85%|████████▌ | 469336/552076 [00:03<00:00, 165333.15it/s] 89%|████████▉ | 490129/552076 [00:03<00:00, 176158.94it/s] 92%|█████████▏| 509030/552076 [00:03<00:00, 179824.43it/s] 96%|█████████▌| 527759/552076 [00:03<00:00, 169930.40it/s] 99%|█████████▉| 546517/552076 [00:03<00:00, 174865.87it/s]100%|██████████| 552076/552076 [00:03<00:00, 148789.92it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18662/552076 [00:00<00:02, 186608.17it/s]  6%|▌         | 34450/552076 [00:00<00:02, 176944.44it/s]  8%|▊         | 43284/552076 [00:00<00:03, 136015.86it/s] 11%|█▏        | 62484/552076 [00:00<00:03, 149053.55it/s] 15%|█▌        | 83659/552076 [00:00<00:02, 163582.77it/s] 19%|█▉        | 106447/552076 [00:00<00:02, 178709.42it/s] 23%|██▎       | 128680/552076 [00:00<00:02, 189883.57it/s] 27%|██▋       | 150911/552076 [00:00<00:02, 198570.69it/s] 31%|███▏      | 173063/552076 [00:00<00:01, 204939.97it/s] 35%|███▌      | 194876/552076 [00:01<00:01, 208725.16it/s] 39%|███▉      | 215732/552076 [00:01<00:01, 208055.35it/s] 43%|████▎     | 236526/552076 [00:01<00:01, 188972.36it/s] 46%|████▋     | 255752/552076 [00:01<00:01, 168315.96it/s] 50%|████▉     | 274868/552076 [00:01<00:01, 174573.02it/s] 53%|█████▎    | 293430/552076 [00:01<00:01, 177744.52it/s] 57%|█████▋    | 312471/552076 [00:01<00:01, 181359.25it/s] 60%|█████▉    | 330887/552076 [00:01<00:01, 160956.61it/s] 63%|██████▎   | 347603/552076 [00:01<00:01, 157315.09it/s] 67%|██████▋   | 368916/552076 [00:02<00:01, 170727.64it/s] 71%|███████   | 389767/552076 [00:02<00:00, 180540.81it/s] 74%|███████▍  | 410341/552076 [00:02<00:00, 187427.62it/s] 78%|███████▊  | 431201/552076 [00:02<00:00, 193312.66it/s] 82%|████████▏ | 451822/552076 [00:02<00:00, 197009.14it/s] 86%|████████▌ | 472237/552076 [00:02<00:00, 199096.78it/s] 89%|████████▉ | 492879/552076 [00:02<00:00, 201238.51it/s] 93%|█████████▎| 513492/552076 [00:02<00:00, 202680.90it/s] 97%|█████████▋| 533869/552076 [00:02<00:00, 179855.97it/s]100%|██████████| 552076/552076 [00:02<00:00, 185944.70it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10575/552076 [00:00<00:05, 96464.29it/s]  3%|▎         | 14661/552076 [00:00<00:07, 68497.82it/s]  5%|▍         | 25502/552076 [00:00<00:06, 77002.53it/s]  6%|▌         | 32812/552076 [00:00<00:06, 74312.83it/s]  8%|▊         | 44100/552076 [00:00<00:06, 82799.18it/s]  9%|▉         | 51639/552076 [00:00<00:07, 67095.25it/s] 13%|█▎        | 69217/552076 [00:00<00:05, 81716.58it/s] 14%|█▍        | 78875/552076 [00:00<00:06, 77827.95it/s] 16%|█▋        | 90690/552076 [00:01<00:05, 84054.60it/s] 18%|█▊        | 102035/552076 [00:01<00:04, 91137.72it/s] 21%|██        | 113591/552076 [00:01<00:04, 93349.98it/s] 22%|██▏       | 123501/552076 [00:01<00:04, 91362.27it/s] 25%|██▍       | 135991/552076 [00:01<00:04, 99366.04it/s] 27%|██▋       | 146649/552076 [00:01<00:03, 101424.42it/s] 29%|██▉       | 159848/552076 [00:01<00:03, 108995.94it/s] 31%|███       | 171157/552076 [00:01<00:03, 107332.54it/s] 33%|███▎      | 182183/552076 [00:01<00:04, 88074.99it/s]  36%|███▌      | 198613/552076 [00:02<00:03, 102314.73it/s] 40%|███▉      | 219236/552076 [00:02<00:02, 120534.51it/s] 43%|████▎     | 239183/552076 [00:02<00:02, 136770.31it/s] 47%|████▋     | 258480/552076 [00:02<00:01, 149863.89it/s] 50%|█████     | 278451/552076 [00:02<00:01, 161991.57it/s] 54%|█████▍    | 298440/552076 [00:02<00:01, 171759.41it/s] 57%|█████▋    | 316961/552076 [00:02<00:01, 167423.02it/s] 61%|██████    | 334669/552076 [00:02<00:01, 153508.26it/s] 64%|██████▍   | 354570/552076 [00:02<00:01, 164810.55it/s] 68%|██████▊   | 375066/552076 [00:03<00:01, 175099.08it/s] 72%|███████▏  | 395762/552076 [00:03<00:00, 183575.76it/s] 75%|███████▌  | 414775/552076 [00:03<00:00, 174511.22it/s] 78%|███████▊  | 432779/552076 [00:03<00:00, 171667.30it/s] 82%|████████▏ | 450343/552076 [00:03<00:00, 169356.12it/s] 85%|████████▌ | 469465/552076 [00:03<00:00, 175370.33it/s] 89%|████████▉ | 490608/552076 [00:03<00:00, 184826.32it/s] 93%|█████████▎| 512071/552076 [00:03<00:00, 192858.98it/s] 96%|█████████▋| 532162/552076 [00:03<00:00, 195204.41it/s]100%|██████████| 552076/552076 [00:03<00:00, 140139.95it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12229/552076 [00:00<00:04, 122289.24it/s]  4%|▍         | 23431/552076 [00:00<00:04, 119012.66it/s]  6%|▋         | 34708/552076 [00:00<00:04, 117067.30it/s]  8%|▊         | 45796/552076 [00:00<00:04, 115138.46it/s] 10%|▉         | 54396/552076 [00:00<00:04, 103288.20it/s] 11%|█▏        | 62915/552076 [00:00<00:05, 92223.01it/s]  13%|█▎        | 74122/552076 [00:00<00:04, 97397.07it/s] 15%|█▌        | 85527/552076 [00:00<00:04, 101857.52it/s] 18%|█▊        | 97028/552076 [00:00<00:04, 105475.86it/s] 20%|█▉        | 108324/552076 [00:01<00:04, 107613.28it/s] 22%|██▏       | 119291/552076 [00:01<00:03, 108219.20it/s] 24%|██▎       | 129999/552076 [00:01<00:04, 102411.79it/s] 25%|██▌       | 140225/552076 [00:01<00:04, 100432.94it/s] 28%|██▊       | 156427/552076 [00:01<00:03, 113359.58it/s] 32%|███▏      | 175674/552076 [00:01<00:02, 129302.64it/s] 35%|███▌      | 195048/552076 [00:01<00:02, 143633.77it/s] 39%|███▊      | 213828/552076 [00:01<00:02, 154536.22it/s] 42%|████▏     | 232709/552076 [00:01<00:01, 163435.51it/s] 46%|████▌     | 252574/552076 [00:01<00:01, 172613.32it/s] 49%|████▉     | 272019/552076 [00:02<00:01, 178629.45it/s] 53%|█████▎    | 291094/552076 [00:02<00:01, 182099.67it/s] 56%|█████▌    | 309751/552076 [00:02<00:01, 183246.66it/s] 60%|█████▉    | 330595/552076 [00:02<00:01, 190138.84it/s] 63%|██████▎   | 350264/552076 [00:02<00:01, 192057.55it/s] 67%|██████▋   | 369675/552076 [00:02<00:00, 190099.13it/s] 70%|███████   | 388833/552076 [00:02<00:01, 159368.91it/s] 73%|███████▎  | 405716/552076 [00:02<00:00, 156702.22it/s] 76%|███████▋  | 422058/552076 [00:02<00:00, 149607.17it/s] 79%|███████▉  | 437557/552076 [00:03<00:00, 143150.72it/s] 82%|████████▏ | 452551/552076 [00:03<00:00, 145121.20it/s] 85%|████████▍ | 467375/552076 [00:03<00:00, 140584.89it/s] 88%|████████▊ | 483626/552076 [00:03<00:00, 146512.99it/s] 90%|█████████ | 498517/552076 [00:03<00:00, 142525.36it/s] 93%|█████████▎| 512961/552076 [00:03<00:00, 137093.88it/s] 96%|█████████▋| 532578/552076 [00:03<00:00, 150708.34it/s]100%|██████████| 552076/552076 [00:03<00:00, 145361.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12851/552076 [00:00<00:04, 128506.14it/s]  6%|▌         | 30395/552076 [00:00<00:03, 139717.94it/s]  7%|▋         | 38357/552076 [00:00<00:05, 91781.82it/s]  10%|█         | 56320/552076 [00:00<00:04, 107562.04it/s] 13%|█▎        | 69759/552076 [00:00<00:04, 114413.58it/s] 16%|█▋        | 90174/552076 [00:00<00:03, 131792.18it/s] 19%|█▉        | 104198/552076 [00:00<00:03, 129515.03it/s] 21%|██▏       | 117749/552076 [00:00<00:03, 121252.26it/s] 24%|██▎       | 130401/552076 [00:01<00:04, 104957.43it/s] 26%|██▌       | 141655/552076 [00:01<00:04, 96569.13it/s]  28%|██▊       | 152467/552076 [00:01<00:04, 99765.11it/s] 30%|██▉       | 162934/552076 [00:01<00:04, 92507.86it/s] 32%|███▏      | 176018/552076 [00:01<00:03, 101421.33it/s] 34%|███▍      | 188335/552076 [00:01<00:03, 107092.99it/s] 36%|███▌      | 199531/552076 [00:01<00:04, 80624.83it/s]  39%|███▊      | 213156/552076 [00:01<00:03, 91877.45it/s] 43%|████▎     | 234972/552076 [00:02<00:02, 111184.95it/s] 45%|████▌     | 248970/552076 [00:02<00:02, 116637.84it/s] 49%|████▉     | 269144/552076 [00:02<00:02, 133536.24it/s] 53%|█████▎    | 290135/552076 [00:02<00:01, 149896.11it/s] 56%|█████▌    | 309980/552076 [00:02<00:01, 161767.84it/s] 60%|█████▉    | 329124/552076 [00:02<00:01, 169654.27it/s] 63%|██████▎   | 347497/552076 [00:02<00:01, 171638.11it/s] 66%|██████▋   | 366552/552076 [00:02<00:01, 176904.29it/s] 70%|███████   | 386772/552076 [00:02<00:00, 183800.19it/s] 74%|███████▍  | 408045/552076 [00:02<00:00, 191615.87it/s] 78%|███████▊  | 430446/552076 [00:03<00:00, 200305.54it/s] 82%|████████▏ | 452752/552076 [00:03<00:00, 206626.77it/s] 86%|████████▌ | 474651/552076 [00:03<00:00, 210184.24it/s] 90%|█████████ | 498111/552076 [00:03<00:00, 216957.21it/s] 94%|█████████▍| 521057/552076 [00:03<00:00, 220561.60it/s] 99%|█████████▊| 543908/552076 [00:03<00:00, 222885.49it/s]100%|██████████| 552076/552076 [00:03<00:00, 153694.68it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20011/552076 [00:00<00:02, 200103.51it/s]  7%|▋         | 41387/552076 [00:00<00:02, 204010.93it/s] 11%|█         | 58300/552076 [00:00<00:02, 192122.80it/s] 13%|█▎        | 70805/552076 [00:00<00:03, 154975.69it/s] 16%|█▌        | 88362/552076 [00:00<00:02, 160627.70it/s] 20%|█▉        | 108657/552076 [00:00<00:02, 171347.24it/s] 24%|██▍       | 131381/552076 [00:00<00:02, 184996.29it/s] 28%|██▊       | 154401/552076 [00:00<00:02, 196575.25it/s] 32%|███▏      | 176926/552076 [00:00<00:01, 204379.79it/s] 36%|███▌      | 197221/552076 [00:01<00:02, 168916.61it/s] 39%|███▉      | 215035/552076 [00:01<00:02, 168220.73it/s] 43%|████▎     | 235461/552076 [00:01<00:01, 177622.15it/s] 46%|████▋     | 255548/552076 [00:01<00:01, 184009.52it/s] 50%|█████     | 276038/552076 [00:01<00:01, 189813.69it/s] 54%|█████▍    | 298182/552076 [00:01<00:01, 198308.46it/s] 58%|█████▊    | 320235/552076 [00:01<00:01, 204489.42it/s] 62%|██████▏   | 340987/552076 [00:01<00:01, 203226.57it/s] 65%|██████▌   | 361524/552076 [00:01<00:00, 202264.69it/s] 69%|██████▉   | 382919/552076 [00:01<00:00, 205632.95it/s] 74%|███████▎  | 405814/552076 [00:02<00:00, 212110.91it/s] 78%|███████▊  | 428483/552076 [00:02<00:00, 216282.15it/s] 82%|████████▏ | 450226/552076 [00:02<00:00, 215002.92it/s] 85%|████████▌ | 471809/552076 [00:02<00:00, 212602.81it/s] 89%|████████▉ | 493133/552076 [00:02<00:00, 191298.04it/s] 93%|█████████▎| 512711/552076 [00:02<00:00, 184003.93it/s] 96%|█████████▋| 532178/552076 [00:02<00:00, 187078.77it/s]100%|██████████| 552076/552076 [00:02<00:00, 193131.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14698/552076 [00:00<00:03, 146978.39it/s]  5%|▌         | 29663/552076 [00:00<00:03, 147766.92it/s]  7%|▋         | 39749/552076 [00:00<00:03, 129672.15it/s] 10%|▉         | 54045/552076 [00:00<00:03, 133390.49it/s] 13%|█▎        | 74448/552076 [00:00<00:03, 148850.29it/s] 17%|█▋        | 95846/552076 [00:00<00:02, 163807.75it/s] 21%|██▏       | 117667/552076 [00:00<00:02, 177049.86it/s] 24%|██▍       | 135177/552076 [00:00<00:02, 169890.35it/s] 28%|██▊       | 152092/552076 [00:01<00:03, 130183.55it/s] 30%|███       | 167747/552076 [00:01<00:02, 133799.29it/s] 33%|███▎      | 182097/552076 [00:01<00:03, 122294.76it/s] 35%|███▌      | 195198/552076 [00:01<00:03, 117120.96it/s] 38%|███▊      | 207567/552076 [00:01<00:02, 115342.93it/s] 40%|███▉      | 219567/552076 [00:01<00:02, 115237.98it/s] 42%|████▏     | 231417/552076 [00:01<00:02, 108852.49it/s] 44%|████▍     | 242604/552076 [00:01<00:03, 81917.39it/s]  47%|████▋     | 260389/552076 [00:02<00:02, 97732.38it/s] 49%|████▉     | 272297/552076 [00:02<00:03, 79426.50it/s] 52%|█████▏    | 284351/552076 [00:02<00:03, 88478.83it/s] 54%|█████▎    | 295864/552076 [00:02<00:02, 95081.55it/s] 56%|█████▌    | 306746/552076 [00:02<00:02, 81958.36it/s] 59%|█████▊    | 323046/552076 [00:02<00:02, 96325.61it/s] 62%|██████▏   | 340640/552076 [00:02<00:01, 111455.88it/s] 64%|██████▍   | 354337/552076 [00:02<00:01, 118050.76it/s] 67%|██████▋   | 370268/552076 [00:03<00:01, 127994.66it/s] 70%|██████▉   | 386358/552076 [00:03<00:01, 136359.60it/s] 74%|███████▎  | 406390/552076 [00:03<00:00, 150803.52it/s] 77%|███████▋  | 427004/552076 [00:03<00:00, 164011.35it/s] 81%|████████  | 447655/552076 [00:03<00:00, 174802.73it/s] 85%|████████▍ | 468046/552076 [00:03<00:00, 182621.05it/s] 88%|████████▊ | 487817/552076 [00:03<00:00, 186899.78it/s] 92%|█████████▏| 508525/552076 [00:03<00:00, 192528.22it/s] 96%|█████████▌| 529316/552076 [00:03<00:00, 196896.67it/s]100%|█████████▉| 550117/552076 [00:03<00:00, 200102.36it/s]100%|██████████| 552076/552076 [00:03<00:00, 140088.13it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21462/552076 [00:00<00:02, 214613.04it/s]  8%|▊         | 44173/552076 [00:00<00:02, 218213.11it/s] 12%|█▏        | 66439/552076 [00:00<00:02, 219528.01it/s] 16%|█▋        | 90200/552076 [00:00<00:02, 224654.52it/s] 21%|██        | 114007/552076 [00:00<00:01, 228515.86it/s] 25%|██▍       | 137196/552076 [00:00<00:01, 229514.56it/s] 29%|██▉       | 158960/552076 [00:00<00:01, 225816.22it/s] 33%|███▎      | 179810/552076 [00:00<00:02, 185517.37it/s] 36%|███▋      | 200187/552076 [00:00<00:01, 190638.72it/s] 40%|████      | 222889/552076 [00:01<00:01, 200265.06it/s] 44%|████▍     | 245641/552076 [00:01<00:01, 207728.78it/s] 49%|████▊     | 268970/552076 [00:01<00:01, 214788.64it/s] 53%|█████▎    | 290628/552076 [00:01<00:01, 186518.56it/s] 56%|█████▋    | 310640/552076 [00:01<00:01, 190398.93it/s] 60%|█████▉    | 330821/552076 [00:01<00:01, 193683.67it/s] 64%|██████▍   | 352955/552076 [00:01<00:00, 201224.32it/s] 68%|██████▊   | 376267/552076 [00:01<00:00, 209835.93it/s] 72%|███████▏  | 398774/552076 [00:01<00:00, 214183.58it/s] 76%|███████▌  | 420461/552076 [00:02<00:00, 211421.42it/s] 80%|████████  | 441799/552076 [00:02<00:00, 211184.94it/s] 84%|████████▍ | 463094/552076 [00:02<00:00, 211710.99it/s] 88%|████████▊ | 484362/552076 [00:02<00:00, 211331.08it/s] 92%|█████████▏| 505668/552076 [00:02<00:00, 211845.06it/s] 95%|█████████▌| 526901/552076 [00:02<00:00, 208468.12it/s] 99%|█████████▉| 547794/552076 [00:02<00:00, 206039.04it/s]100%|██████████| 552076/552076 [00:02<00:00, 208272.19it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21002/552076 [00:00<00:02, 210015.69it/s]  6%|▌         | 30507/552076 [00:00<00:03, 154098.58it/s]  9%|▉         | 51514/552076 [00:00<00:02, 167484.21it/s] 13%|█▎        | 72691/552076 [00:00<00:02, 178694.65it/s] 17%|█▋        | 94825/552076 [00:00<00:02, 189655.83it/s] 21%|██        | 116414/552076 [00:00<00:02, 196830.97it/s] 25%|██▌       | 138547/552076 [00:00<00:02, 203588.08it/s] 29%|██▊       | 157887/552076 [00:00<00:02, 178049.46it/s] 32%|███▏      | 177418/552076 [00:00<00:02, 182897.26it/s] 35%|███▌      | 195646/552076 [00:01<00:02, 139322.87it/s] 38%|███▊      | 211092/552076 [00:01<00:02, 123419.92it/s] 41%|████▏     | 228745/552076 [00:01<00:02, 135664.52it/s] 45%|████▌     | 249306/552076 [00:01<00:02, 151082.66it/s] 49%|████▊     | 268696/552076 [00:01<00:01, 161800.23it/s] 52%|█████▏    | 286137/552076 [00:01<00:02, 125237.60it/s] 54%|█████▍    | 300806/552076 [00:01<00:02, 110422.26it/s] 57%|█████▋    | 315253/552076 [00:02<00:01, 118822.01it/s] 60%|█████▉    | 330185/552076 [00:02<00:01, 126577.10it/s] 64%|██████▎   | 351077/552076 [00:02<00:01, 143549.54it/s] 66%|██████▋   | 367017/552076 [00:02<00:01, 111640.52it/s] 69%|██████▉   | 380380/552076 [00:02<00:01, 93414.91it/s]  71%|███████   | 391764/552076 [00:02<00:01, 93268.45it/s] 73%|███████▎  | 402521/552076 [00:02<00:01, 94056.01it/s] 75%|███████▌  | 416653/552076 [00:03<00:01, 104544.72it/s] 78%|███████▊  | 428644/552076 [00:03<00:01, 108723.41it/s] 81%|████████  | 446439/552076 [00:03<00:00, 123088.06it/s] 84%|████████▍ | 463232/552076 [00:03<00:00, 133806.23it/s] 87%|████████▋ | 477723/552076 [00:03<00:00, 95236.45it/s]  90%|████████▉ | 495923/552076 [00:03<00:00, 111129.67it/s] 93%|█████████▎| 515618/552076 [00:03<00:00, 127840.90it/s] 96%|█████████▌| 531156/552076 [00:03<00:00, 127488.94it/s]100%|█████████▉| 550769/552076 [00:04<00:00, 142443.51it/s]100%|██████████| 552076/552076 [00:04<00:00, 137400.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19650/552076 [00:00<00:02, 196498.78it/s]  7%|▋         | 40403/552076 [00:00<00:02, 199680.87it/s] 11%|█▏        | 62215/552076 [00:00<00:02, 204874.74it/s] 15%|█▌        | 84766/552076 [00:00<00:02, 210655.68it/s] 19%|█▉        | 106753/552076 [00:00<00:02, 213334.80it/s] 23%|██▎       | 128419/552076 [00:00<00:01, 214319.53it/s] 27%|██▋       | 151118/552076 [00:00<00:01, 217967.28it/s] 31%|███       | 171341/552076 [00:00<00:01, 212918.34it/s] 35%|███▌      | 193356/552076 [00:00<00:01, 215037.22it/s] 39%|███▉      | 214661/552076 [00:01<00:01, 214436.31it/s] 43%|████▎     | 235582/552076 [00:01<00:01, 212206.92it/s] 46%|████▋     | 256442/552076 [00:01<00:01, 171960.55it/s] 50%|████▉     | 274620/552076 [00:01<00:02, 137078.75it/s] 53%|█████▎    | 294633/552076 [00:01<00:01, 151387.12it/s] 57%|█████▋    | 315672/552076 [00:01<00:01, 165292.81it/s] 60%|██████    | 333789/552076 [00:01<00:01, 163801.42it/s] 64%|██████▎   | 351284/552076 [00:01<00:01, 152870.22it/s] 67%|██████▋   | 367499/552076 [00:02<00:01, 140536.36it/s] 69%|██████▉   | 382398/552076 [00:02<00:01, 139756.42it/s] 72%|███████▏  | 399981/552076 [00:02<00:01, 148920.24it/s] 76%|███████▌  | 417740/552076 [00:02<00:00, 156499.38it/s] 79%|███████▉  | 435304/552076 [00:02<00:00, 161786.53it/s] 82%|████████▏ | 453126/552076 [00:02<00:00, 166388.13it/s] 85%|████████▌ | 471311/552076 [00:02<00:00, 170740.79it/s] 89%|████████▊ | 488641/552076 [00:02<00:00, 171498.81it/s] 92%|█████████▏| 506221/552076 [00:02<00:00, 172765.38it/s] 95%|█████████▍| 524047/552076 [00:02<00:00, 174377.43it/s] 98%|█████████▊| 541576/552076 [00:03<00:00, 149979.22it/s]100%|██████████| 552076/552076 [00:03<00:00, 173777.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15821/552076 [00:00<00:03, 158202.98it/s]  6%|▋         | 35155/552076 [00:00<00:03, 167323.53it/s] 10%|▉         | 54232/552076 [00:00<00:02, 173727.50it/s] 13%|█▎        | 73310/552076 [00:00<00:02, 178511.05it/s] 17%|█▋        | 93146/552076 [00:00<00:02, 184033.58it/s] 20%|██        | 112358/552076 [00:00<00:02, 186386.00it/s] 23%|██▎       | 129245/552076 [00:00<00:03, 139942.78it/s] 26%|██▌       | 143721/552076 [00:00<00:03, 131505.68it/s] 30%|██▉       | 163774/552076 [00:01<00:02, 146647.73it/s] 33%|███▎      | 183501/552076 [00:01<00:02, 158877.47it/s] 37%|███▋      | 203402/552076 [00:01<00:02, 169106.52it/s] 40%|████      | 222852/552076 [00:01<00:01, 175999.78it/s] 44%|████▍     | 242144/552076 [00:01<00:01, 180754.26it/s] 47%|████▋     | 261206/552076 [00:01<00:01, 183604.61it/s] 51%|█████     | 281302/552076 [00:01<00:01, 188486.63it/s] 55%|█████▍    | 300948/552076 [00:01<00:01, 190809.10it/s] 58%|█████▊    | 320229/552076 [00:01<00:01, 184534.24it/s] 61%|██████▏   | 338867/552076 [00:01<00:01, 184869.48it/s] 65%|██████▍   | 357484/552076 [00:02<00:01, 164901.56it/s] 68%|██████▊   | 374467/552076 [00:02<00:01, 150854.91it/s] 71%|███████   | 390131/552076 [00:02<00:01, 116376.84it/s] 74%|███████▍  | 409211/552076 [00:02<00:01, 131797.92it/s] 77%|███████▋  | 424204/552076 [00:02<00:01, 107753.60it/s] 79%|███████▉  | 436967/552076 [00:02<00:01, 111840.46it/s] 81%|████████▏ | 449582/552076 [00:02<00:01, 96964.51it/s]  83%|████████▎ | 460633/552076 [00:03<00:01, 77438.96it/s] 85%|████████▌ | 469949/552076 [00:03<00:01, 79123.95it/s] 88%|████████▊ | 483334/552076 [00:03<00:00, 90185.82it/s] 90%|█████████ | 497558/552076 [00:03<00:00, 101307.50it/s] 92%|█████████▏| 509057/552076 [00:03<00:00, 81518.68it/s]  95%|█████████▍| 522149/552076 [00:03<00:00, 91924.67it/s] 97%|█████████▋| 534416/552076 [00:03<00:00, 99396.83it/s]100%|█████████▉| 550712/552076 [00:04<00:00, 112568.99it/s]100%|██████████| 552076/552076 [00:04<00:00, 137396.56it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21512/552076 [00:00<00:02, 215115.08it/s]  8%|▊         | 42578/552076 [00:00<00:02, 213758.64it/s] 12%|█▏        | 64795/552076 [00:00<00:02, 216213.72it/s] 16%|█▌        | 85897/552076 [00:00<00:02, 214627.77it/s] 20%|█▉        | 108108/552076 [00:00<00:02, 216817.81it/s] 24%|██▍       | 131268/552076 [00:00<00:01, 221049.02it/s] 28%|██▊       | 153738/552076 [00:00<00:01, 222129.03it/s] 32%|███▏      | 174201/552076 [00:00<00:01, 214901.13it/s] 35%|███▌      | 194517/552076 [00:00<00:01, 210197.67it/s] 39%|███▉      | 214738/552076 [00:01<00:01, 206037.13it/s] 43%|████▎     | 234801/552076 [00:01<00:01, 186652.52it/s] 46%|████▌     | 253437/552076 [00:01<00:01, 182848.61it/s] 50%|████▉     | 274239/552076 [00:01<00:01, 189733.75it/s] 53%|█████▎    | 293277/552076 [00:01<00:01, 188350.46it/s] 57%|█████▋    | 312167/552076 [00:01<00:01, 188513.96it/s] 60%|██████    | 332356/552076 [00:01<00:01, 192333.67it/s] 64%|██████▎   | 351632/552076 [00:01<00:01, 174441.94it/s] 67%|██████▋   | 369949/552076 [00:01<00:01, 176970.95it/s] 70%|███████   | 389209/552076 [00:01<00:00, 181385.51it/s] 74%|███████▍  | 409990/552076 [00:02<00:00, 188577.72it/s] 78%|███████▊  | 429914/552076 [00:02<00:00, 191652.70it/s] 82%|████████▏ | 450369/552076 [00:02<00:00, 195346.41it/s] 85%|████████▌ | 470520/552076 [00:02<00:00, 197154.89it/s] 89%|████████▉ | 490759/552076 [00:02<00:00, 198696.26it/s] 93%|█████████▎| 511035/552076 [00:02<00:00, 199898.09it/s] 96%|█████████▌| 531076/552076 [00:02<00:00, 199877.06it/s]100%|█████████▉| 551100/552076 [00:02<00:00, 199427.70it/s]100%|██████████| 552076/552076 [00:02<00:00, 197995.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13681/552076 [00:00<00:03, 136805.24it/s]  5%|▍         | 25776/552076 [00:00<00:03, 131627.42it/s]  7%|▋         | 36958/552076 [00:00<00:04, 124983.10it/s]  9%|▊         | 47555/552076 [00:00<00:04, 118598.66it/s] 10%|█         | 57600/552076 [00:00<00:04, 112499.48it/s] 12%|█▏        | 67734/552076 [00:00<00:04, 108899.51it/s] 14%|█▍        | 78107/552076 [00:00<00:04, 107289.99it/s] 16%|█▌        | 87812/552076 [00:00<00:05, 92034.91it/s]  18%|█▊        | 98070/552076 [00:00<00:04, 94962.13it/s] 20%|█▉        | 108758/552076 [00:01<00:04, 98247.04it/s] 22%|██▏       | 120031/552076 [00:01<00:04, 102183.16it/s] 24%|██▎       | 130751/552076 [00:01<00:04, 103635.58it/s] 26%|██▌       | 141525/552076 [00:01<00:03, 104833.14it/s] 28%|██▊       | 152776/552076 [00:01<00:03, 107022.11it/s] 30%|██▉       | 163945/552076 [00:01<00:03, 108380.94it/s] 32%|███▏      | 174789/552076 [00:01<00:03, 107122.30it/s] 34%|███▎      | 185518/552076 [00:01<00:03, 107169.68it/s] 36%|███▌      | 196240/552076 [00:01<00:03, 106399.75it/s] 37%|███▋      | 206885/552076 [00:01<00:03, 105991.36it/s] 39%|███▉      | 217488/552076 [00:02<00:03, 105717.30it/s] 41%|████▏     | 228063/552076 [00:02<00:03, 105569.96it/s] 43%|████▎     | 238622/552076 [00:02<00:02, 105539.92it/s] 45%|████▌     | 249762/552076 [00:02<00:02, 107231.54it/s] 47%|████▋     | 260935/552076 [00:02<00:02, 108541.85it/s] 49%|████▉     | 271799/552076 [00:02<00:02, 102931.50it/s] 51%|█████     | 282159/552076 [00:02<00:02, 95685.53it/s]  53%|█████▎    | 292717/552076 [00:02<00:02, 98451.96it/s] 55%|█████▌    | 303763/552076 [00:02<00:02, 101770.89it/s] 57%|█████▋    | 314884/552076 [00:02<00:02, 104429.10it/s] 59%|█████▉    | 327442/552076 [00:03<00:02, 109986.01it/s] 61%|██████▏   | 338588/552076 [00:03<00:02, 89512.24it/s]  63%|██████▎   | 348263/552076 [00:03<00:03, 67036.66it/s] 65%|██████▍   | 356304/552076 [00:03<00:03, 61365.22it/s] 67%|██████▋   | 368861/552076 [00:03<00:02, 72483.58it/s] 69%|██████▉   | 379977/552076 [00:03<00:02, 77729.42it/s] 70%|███████   | 388931/552076 [00:04<00:02, 64935.68it/s] 73%|███████▎  | 404471/552076 [00:04<00:01, 78675.29it/s] 76%|███████▌  | 418737/552076 [00:04<00:01, 90905.99it/s] 78%|███████▊  | 430041/552076 [00:04<00:01, 74050.04it/s] 80%|████████  | 443878/552076 [00:04<00:01, 86049.28it/s] 82%|████████▏ | 454654/552076 [00:04<00:01, 74329.88it/s] 84%|████████▍ | 463889/552076 [00:04<00:01, 64249.72it/s] 86%|████████▌ | 472905/552076 [00:05<00:01, 70310.62it/s] 88%|████████▊ | 488060/552076 [00:05<00:00, 83784.23it/s] 92%|█████████▏| 507972/552076 [00:05<00:00, 101404.51it/s] 95%|█████████▌| 527171/552076 [00:05<00:00, 118124.03it/s] 99%|█████████▉| 547055/552076 [00:05<00:00, 134503.27it/s]100%|██████████| 552076/552076 [00:05<00:00, 100503.04it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15716/552076 [00:00<00:03, 157158.28it/s]  7%|▋         | 37583/552076 [00:00<00:02, 171642.09it/s] 11%|█         | 60791/552076 [00:00<00:02, 186186.15it/s] 15%|█▌        | 84526/552076 [00:00<00:02, 199058.89it/s] 20%|█▉        | 107891/552076 [00:00<00:02, 208310.73it/s] 24%|██▍       | 131138/552076 [00:00<00:01, 215013.20it/s] 28%|██▊       | 152219/552076 [00:00<00:01, 213730.78it/s] 31%|███▏      | 172631/552076 [00:00<00:01, 202894.89it/s] 35%|███▌      | 193451/552076 [00:00<00:01, 204455.00it/s] 39%|███▊      | 213509/552076 [00:01<00:01, 201887.12it/s] 42%|████▏     | 233729/552076 [00:01<00:01, 201977.91it/s] 46%|████▌     | 253846/552076 [00:01<00:01, 201733.90it/s] 50%|████▉     | 273890/552076 [00:01<00:01, 195345.12it/s] 53%|█████▎    | 293378/552076 [00:01<00:01, 174560.60it/s] 56%|█████▋    | 311215/552076 [00:01<00:01, 163028.80it/s] 60%|█████▉    | 329816/552076 [00:01<00:01, 169301.47it/s] 64%|██████▍   | 352414/552076 [00:01<00:01, 183076.03it/s] 68%|██████▊   | 373538/552076 [00:01<00:00, 190701.89it/s] 71%|███████▏  | 393626/552076 [00:01<00:00, 193644.21it/s] 75%|███████▌  | 414099/552076 [00:02<00:00, 196840.37it/s] 79%|███████▊  | 434041/552076 [00:02<00:00, 175192.96it/s] 82%|████████▏ | 453705/552076 [00:02<00:00, 181117.25it/s] 86%|████████▌ | 473819/552076 [00:02<00:00, 186692.30it/s] 89%|████████▉ | 493862/552076 [00:02<00:00, 190611.64it/s] 93%|█████████▎| 514229/552076 [00:02<00:00, 194349.80it/s] 97%|█████████▋| 534261/552076 [00:02<00:00, 196101.02it/s]100%|██████████| 552076/552076 [00:02<00:00, 195601.81it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21082/552076 [00:00<00:02, 210813.16it/s]  8%|▊         | 43532/552076 [00:00<00:02, 214739.02it/s] 12%|█▏        | 66479/552076 [00:00<00:02, 218952.74it/s] 16%|█▌        | 88028/552076 [00:00<00:02, 217899.52it/s] 19%|█▉        | 106166/552076 [00:00<00:02, 205482.41it/s] 22%|██▏       | 123334/552076 [00:00<00:02, 184978.06it/s] 26%|██▋       | 145502/552076 [00:00<00:02, 194645.81it/s] 30%|███       | 167637/552076 [00:00<00:01, 201952.53it/s] 34%|███▍      | 188007/552076 [00:00<00:01, 202472.81it/s] 38%|███▊      | 209286/552076 [00:01<00:01, 205460.57it/s] 42%|████▏     | 229449/552076 [00:01<00:01, 193371.45it/s] 45%|████▌     | 248664/552076 [00:01<00:01, 183624.46it/s] 49%|████▉     | 269497/552076 [00:01<00:01, 190395.48it/s] 52%|█████▏    | 289523/552076 [00:01<00:01, 193247.99it/s] 56%|█████▌    | 309790/552076 [00:01<00:01, 195979.60it/s] 60%|█████▉    | 329463/552076 [00:01<00:01, 196203.19it/s] 63%|██████▎   | 349121/552076 [00:01<00:01, 195538.16it/s] 67%|██████▋   | 368702/552076 [00:01<00:00, 193875.25it/s] 70%|███████   | 388112/552076 [00:01<00:00, 192247.64it/s] 74%|███████▍  | 407356/552076 [00:02<00:00, 191139.87it/s] 77%|███████▋  | 427162/552076 [00:02<00:00, 193163.30it/s] 81%|████████▏ | 448728/552076 [00:02<00:00, 199401.38it/s] 85%|████████▍ | 468759/552076 [00:02<00:00, 199668.46it/s] 89%|████████▊ | 488769/552076 [00:02<00:00, 172213.45it/s] 92%|█████████▏| 506688/552076 [00:02<00:00, 129058.84it/s] 95%|█████████▌| 526911/552076 [00:02<00:00, 144771.59it/s] 98%|█████████▊| 543468/552076 [00:03<00:00, 99841.79it/s] 100%|██████████| 552076/552076 [00:03<00:00, 174325.03it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9673/552076 [00:00<00:05, 94175.81it/s]  3%|▎         | 14062/552076 [00:00<00:07, 70085.99it/s]  3%|▎         | 17438/552076 [00:00<00:10, 52332.18it/s]  5%|▌         | 29083/552076 [00:00<00:08, 62686.58it/s]  9%|▉         | 49894/552076 [00:00<00:06, 79313.37it/s] 11%|█         | 60197/552076 [00:00<00:06, 71118.06it/s] 13%|█▎        | 69128/552076 [00:00<00:07, 63959.30it/s] 16%|█▌        | 86593/552076 [00:00<00:05, 78974.99it/s] 19%|█▉        | 106690/552076 [00:01<00:04, 96558.92it/s] 23%|██▎       | 126723/552076 [00:01<00:03, 114324.80it/s] 26%|██▋       | 145909/552076 [00:01<00:03, 130096.90it/s] 30%|███       | 165724/552076 [00:01<00:02, 145039.82it/s] 34%|███▍      | 188534/552076 [00:01<00:02, 162827.33it/s] 38%|███▊      | 209279/552076 [00:01<00:01, 174058.42it/s] 41%|████▏     | 228895/552076 [00:01<00:01, 176701.24it/s] 45%|████▍     | 248122/552076 [00:01<00:01, 177017.92it/s] 49%|████▊     | 268539/552076 [00:01<00:01, 184370.82it/s] 52%|█████▏    | 289823/552076 [00:01<00:01, 192076.77it/s] 56%|█████▌    | 309704/552076 [00:02<00:01, 190171.20it/s] 60%|█████▉    | 329197/552076 [00:02<00:01, 188535.67it/s] 63%|██████▎   | 348387/552076 [00:02<00:01, 185173.51it/s] 67%|██████▋   | 368113/552076 [00:02<00:00, 188639.53it/s] 70%|███████   | 387167/552076 [00:02<00:01, 164496.15it/s] 73%|███████▎  | 404305/552076 [00:02<00:00, 159308.41it/s] 77%|███████▋  | 426803/552076 [00:02<00:00, 174596.71it/s] 81%|████████  | 445992/552076 [00:02<00:00, 179447.89it/s] 85%|████████▍ | 466664/552076 [00:02<00:00, 186840.33it/s] 88%|████████▊ | 485844/552076 [00:03<00:00, 186867.69it/s] 91%|█████████▏| 504878/552076 [00:03<00:00, 171952.62it/s] 95%|█████████▌| 527103/552076 [00:03<00:00, 184476.83it/s]100%|█████████▉| 550265/552076 [00:03<00:00, 196473.29it/s]100%|██████████| 552076/552076 [00:03<00:00, 162330.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 23308/552076 [00:00<00:02, 233071.33it/s]  8%|▊         | 45990/552076 [00:00<00:02, 231157.42it/s] 12%|█▏        | 68649/552076 [00:00<00:02, 229764.88it/s] 17%|█▋        | 91850/552076 [00:00<00:01, 230431.61it/s] 21%|██        | 115180/552076 [00:00<00:01, 231281.97it/s] 25%|██▍       | 137733/552076 [00:00<00:01, 229524.04it/s] 29%|██▊       | 157949/552076 [00:00<00:01, 197305.11it/s] 32%|███▏      | 179302/552076 [00:00<00:01, 201906.74it/s] 37%|███▋      | 201648/552076 [00:00<00:01, 207921.68it/s] 41%|████      | 223940/552076 [00:01<00:01, 212203.22it/s] 45%|████▍     | 246269/552076 [00:01<00:01, 215410.63it/s] 48%|████▊     | 267599/552076 [00:01<00:01, 200134.26it/s] 52%|█████▏    | 287682/552076 [00:01<00:01, 169493.36it/s] 56%|█████▌    | 307911/552076 [00:01<00:01, 178158.14it/s] 60%|█████▉    | 329321/552076 [00:01<00:01, 187605.41it/s] 63%|██████▎   | 349119/552076 [00:01<00:01, 190599.35it/s] 67%|██████▋   | 368983/552076 [00:01<00:00, 192940.53it/s] 71%|███████   | 390295/552076 [00:01<00:00, 198580.12it/s] 75%|███████▍  | 411771/552076 [00:02<00:00, 203169.35it/s] 78%|███████▊  | 433175/552076 [00:02<00:00, 206312.44it/s] 82%|████████▏ | 455071/552076 [00:02<00:00, 209947.05it/s] 86%|████████▋ | 476195/552076 [00:02<00:00, 203976.92it/s] 90%|████████▉ | 496721/552076 [00:02<00:00, 197698.40it/s] 94%|█████████▎| 516623/552076 [00:02<00:00, 163493.98it/s] 97%|█████████▋| 534049/552076 [00:02<00:00, 140805.69it/s]100%|██████████| 552076/552076 [00:02<00:00, 192444.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19614/552076 [00:00<00:02, 196139.72it/s]  7%|▋         | 39679/552076 [00:00<00:02, 197468.64it/s] 11%|█         | 58705/552076 [00:00<00:02, 195244.81it/s] 13%|█▎        | 72589/552076 [00:00<00:02, 174031.58it/s] 16%|█▌        | 85717/552076 [00:00<00:02, 158133.62it/s] 18%|█▊        | 98818/552076 [00:00<00:03, 127307.02it/s] 20%|██        | 110614/552076 [00:00<00:04, 103885.40it/s] 24%|██▍       | 131679/552076 [00:00<00:03, 122512.73it/s] 27%|██▋       | 151375/552076 [00:01<00:02, 138181.67it/s] 30%|███       | 166822/552076 [00:01<00:03, 112751.11it/s] 33%|███▎      | 180001/552076 [00:01<00:03, 93687.12it/s]  35%|███▍      | 191242/552076 [00:01<00:04, 86501.43it/s] 37%|███▋      | 201908/552076 [00:01<00:03, 91699.49it/s] 39%|███▊      | 213844/552076 [00:01<00:03, 98550.57it/s] 41%|████      | 226861/552076 [00:01<00:03, 106296.53it/s] 43%|████▎     | 238883/552076 [00:01<00:02, 110121.04it/s] 45%|████▌     | 250493/552076 [00:02<00:03, 88394.22it/s]  47%|████▋     | 260723/552076 [00:02<00:03, 92151.91it/s] 50%|█████     | 277865/552076 [00:02<00:02, 106994.63it/s] 53%|█████▎    | 292131/552076 [00:02<00:02, 115668.58it/s] 56%|█████▋    | 310718/552076 [00:02<00:01, 130449.42it/s] 59%|█████▉    | 325250/552076 [00:02<00:02, 111917.82it/s] 61%|██████▏   | 338203/552076 [00:02<00:01, 116675.50it/s] 64%|██████▍   | 354447/552076 [00:02<00:01, 127446.66it/s] 68%|██████▊   | 374457/552076 [00:03<00:01, 143024.10it/s] 72%|███████▏  | 396462/552076 [00:03<00:00, 159804.30it/s] 76%|███████▌  | 417411/552076 [00:03<00:00, 172043.99it/s] 80%|███████▉  | 439243/552076 [00:03<00:00, 183726.21it/s] 84%|████████▎ | 462139/552076 [00:03<00:00, 195300.31it/s] 87%|████████▋ | 482699/552076 [00:03<00:00, 195509.81it/s] 91%|█████████ | 502971/552076 [00:03<00:00, 196980.11it/s] 95%|█████████▍| 523177/552076 [00:03<00:00, 198208.62it/s] 98%|█████████▊| 543355/552076 [00:03<00:00, 198583.50it/s]100%|██████████| 552076/552076 [00:03<00:00, 142544.26it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19378/552076 [00:00<00:02, 193779.72it/s]  7%|▋         | 38743/552076 [00:00<00:02, 193740.15it/s]  9%|▉         | 52258/552076 [00:00<00:02, 170085.47it/s] 12%|█▏        | 64418/552076 [00:00<00:03, 151911.35it/s] 15%|█▌        | 83593/552076 [00:00<00:02, 162008.68it/s] 19%|█▉        | 103983/552076 [00:00<00:02, 172649.18it/s] 23%|██▎       | 126021/552076 [00:00<00:02, 184645.91it/s] 27%|██▋       | 148352/552076 [00:00<00:02, 194760.17it/s] 30%|███       | 167355/552076 [00:00<00:02, 179971.33it/s] 34%|███▎      | 185244/552076 [00:01<00:02, 175519.17it/s] 37%|███▋      | 206415/552076 [00:01<00:01, 185004.61it/s] 41%|████      | 227523/552076 [00:01<00:01, 192123.04it/s] 45%|████▍     | 247993/552076 [00:01<00:01, 195727.92it/s] 48%|████▊     | 267681/552076 [00:01<00:01, 194761.02it/s] 52%|█████▏    | 289241/552076 [00:01<00:01, 200576.89it/s] 56%|█████▌    | 309400/552076 [00:01<00:01, 197355.10it/s] 60%|█████▉    | 329218/552076 [00:01<00:01, 197495.00it/s] 63%|██████▎   | 349367/552076 [00:01<00:01, 198676.40it/s] 67%|██████▋   | 370389/552076 [00:01<00:00, 202001.69it/s] 71%|███████   | 391165/552076 [00:02<00:00, 203694.45it/s] 75%|███████▍  | 411568/552076 [00:02<00:00, 200708.25it/s] 78%|███████▊  | 431673/552076 [00:02<00:00, 199952.06it/s] 82%|████████▏ | 451693/552076 [00:02<00:00, 199991.99it/s] 85%|████████▌ | 471723/552076 [00:02<00:00, 200082.20it/s] 89%|████████▉ | 491743/552076 [00:02<00:00, 197937.09it/s] 93%|█████████▎| 511551/552076 [00:02<00:00, 186434.15it/s] 96%|█████████▌| 530342/552076 [00:02<00:00, 178914.14it/s] 99%|█████████▉| 548401/552076 [00:02<00:00, 167475.22it/s]100%|██████████| 552076/552076 [00:02<00:00, 188318.48it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19652/552076 [00:00<00:02, 196516.44it/s]  6%|▋         | 35133/552076 [00:00<00:02, 181821.02it/s]  9%|▉         | 51498/552076 [00:00<00:02, 175955.80it/s] 12%|█▏        | 63559/552076 [00:00<00:03, 154659.25it/s] 14%|█▍        | 79779/552076 [00:00<00:03, 156846.43it/s] 17%|█▋        | 93742/552076 [00:00<00:03, 151248.14it/s] 19%|█▉        | 106900/552076 [00:00<00:03, 126588.95it/s] 22%|██▏       | 118862/552076 [00:00<00:03, 117408.13it/s] 25%|██▌       | 140183/552076 [00:00<00:03, 135699.31it/s] 29%|██▉       | 161824/552076 [00:01<00:02, 152794.30it/s] 32%|███▏      | 178373/552076 [00:01<00:03, 103308.23it/s] 35%|███▍      | 191722/552076 [00:01<00:03, 94998.21it/s]  37%|███▋      | 203466/552076 [00:01<00:03, 93265.46it/s] 39%|███▉      | 214371/552076 [00:01<00:03, 90184.87it/s] 41%|████      | 224517/552076 [00:01<00:03, 92576.88it/s] 42%|████▏     | 234580/552076 [00:02<00:04, 65104.46it/s] 45%|████▍     | 246734/552076 [00:02<00:04, 74039.53it/s] 46%|████▋     | 256619/552076 [00:02<00:03, 80067.66it/s] 48%|████▊     | 266362/552076 [00:02<00:03, 84589.41it/s] 51%|█████     | 278928/552076 [00:02<00:02, 93784.48it/s] 54%|█████▍    | 298178/552076 [00:02<00:02, 110834.77it/s] 56%|█████▋    | 311204/552076 [00:02<00:02, 104243.91it/s] 60%|█████▉    | 331006/552076 [00:02<00:01, 121505.89it/s] 64%|██████▎   | 351061/552076 [00:02<00:01, 137798.58it/s] 67%|██████▋   | 371676/552076 [00:03<00:01, 153017.81it/s] 71%|███████   | 392706/552076 [00:03<00:00, 166633.61it/s] 75%|███████▌  | 415984/552076 [00:03<00:00, 182162.25it/s] 80%|███████▉  | 439796/552076 [00:03<00:00, 195977.75it/s] 84%|████████▍ | 463043/552076 [00:03<00:00, 205661.76it/s] 88%|████████▊ | 486078/552076 [00:03<00:00, 212492.90it/s] 92%|█████████▏| 508686/552076 [00:03<00:00, 216393.72it/s] 96%|█████████▋| 532037/552076 [00:03<00:00, 221258.97it/s]100%|██████████| 552076/552076 [00:03<00:00, 141825.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22468/552076 [00:00<00:02, 224678.07it/s]  8%|▊         | 45327/552076 [00:00<00:02, 225836.78it/s] 12%|█▏        | 67516/552076 [00:00<00:02, 224636.52it/s] 16%|█▌        | 87003/552076 [00:00<00:02, 213771.81it/s] 19%|█▉        | 105860/552076 [00:00<00:02, 205529.04it/s] 22%|██▏       | 122784/552076 [00:00<00:02, 180254.11it/s] 26%|██▌       | 143572/552076 [00:00<00:02, 187738.70it/s] 30%|██▉       | 164218/552076 [00:00<00:02, 192986.74it/s] 33%|███▎      | 184554/552076 [00:00<00:01, 195983.36it/s] 37%|███▋      | 204638/552076 [00:01<00:01, 197414.04it/s] 41%|████      | 224657/552076 [00:01<00:01, 198238.48it/s] 44%|████▍     | 244189/552076 [00:01<00:01, 176815.36it/s] 47%|████▋     | 262098/552076 [00:01<00:01, 176070.11it/s] 51%|█████     | 282295/552076 [00:01<00:01, 183112.25it/s] 55%|█████▍    | 301202/552076 [00:01<00:01, 184857.63it/s] 58%|█████▊    | 320517/552076 [00:01<00:01, 187268.23it/s] 62%|██████▏   | 339959/552076 [00:01<00:01, 189355.31it/s] 65%|██████▌   | 359766/552076 [00:01<00:01, 191887.64it/s] 69%|██████▊   | 379017/552076 [00:01<00:00, 189020.04it/s] 72%|███████▏  | 397972/552076 [00:02<00:00, 187792.76it/s] 76%|███████▌  | 417495/552076 [00:02<00:00, 189963.14it/s] 79%|███████▉  | 437650/552076 [00:02<00:00, 193295.72it/s] 83%|████████▎ | 457662/552076 [00:02<00:00, 195293.27it/s] 87%|████████▋ | 477657/552076 [00:02<00:00, 196666.86it/s] 90%|█████████ | 497743/552076 [00:02<00:00, 197903.15it/s] 94%|█████████▎| 517552/552076 [00:02<00:00, 196816.33it/s] 97%|█████████▋| 537587/552076 [00:02<00:00, 197863.05it/s]100%|██████████| 552076/552076 [00:02<00:00, 192260.00it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10714/552076 [00:00<00:05, 107133.46it/s]  4%|▎         | 20382/552076 [00:00<00:05, 103767.47it/s]  6%|▌         | 30949/552076 [00:00<00:04, 104330.29it/s]  7%|▋         | 39194/552076 [00:00<00:05, 96633.30it/s]   9%|▊         | 47390/552076 [00:00<00:05, 91704.94it/s] 10%|█         | 57902/552076 [00:00<00:05, 95354.85it/s] 14%|█▎        | 75901/552076 [00:00<00:04, 111015.22it/s] 17%|█▋        | 95067/552076 [00:00<00:03, 127053.00it/s] 20%|██        | 112708/552076 [00:00<00:03, 138692.11it/s] 23%|██▎       | 127556/552076 [00:01<00:03, 135361.78it/s] 27%|██▋       | 147986/552076 [00:01<00:02, 150607.19it/s] 30%|███       | 167742/552076 [00:01<00:02, 162169.40it/s] 34%|███▍      | 188567/552076 [00:01<00:02, 173698.97it/s] 37%|███▋      | 206851/552076 [00:01<00:02, 169474.22it/s] 41%|████      | 224461/552076 [00:01<00:02, 136977.92it/s] 43%|████▎     | 239627/552076 [00:01<00:02, 107113.93it/s] 46%|████▌     | 254891/552076 [00:01<00:02, 117638.98it/s] 49%|████▊     | 268393/552076 [00:02<00:02, 102409.03it/s] 51%|█████     | 280204/552076 [00:02<00:02, 103584.76it/s] 53%|█████▎    | 291665/552076 [00:02<00:03, 83986.24it/s]  55%|█████▌    | 305713/552076 [00:02<00:02, 92552.94it/s] 57%|█████▋    | 316196/552076 [00:02<00:02, 91318.84it/s] 60%|██████    | 332158/552076 [00:02<00:02, 104766.87it/s] 62%|██████▏   | 343943/552076 [00:02<00:02, 85260.81it/s]  65%|██████▌   | 360012/552076 [00:03<00:01, 99234.95it/s] 67%|██████▋   | 371856/552076 [00:03<00:02, 82637.76it/s] 71%|███████   | 389565/552076 [00:03<00:01, 98378.55it/s] 74%|███████▍  | 409439/552076 [00:03<00:01, 115943.01it/s] 77%|███████▋  | 426766/552076 [00:03<00:00, 128717.69it/s] 80%|████████  | 442196/552076 [00:03<00:00, 128150.34it/s] 84%|████████▎ | 461759/552076 [00:03<00:00, 142941.87it/s] 87%|████████▋ | 480989/552076 [00:03<00:00, 154865.23it/s] 91%|█████████ | 501772/552076 [00:03<00:00, 167683.75it/s] 94%|█████████▍| 521118/552076 [00:04<00:00, 174663.73it/s] 98%|█████████▊| 541405/552076 [00:04<00:00, 182266.14it/s]100%|██████████| 552076/552076 [00:04<00:00, 130992.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22103/552076 [00:00<00:02, 221026.52it/s]  7%|▋         | 39180/552076 [00:00<00:02, 203092.21it/s] 11%|█         | 58989/552076 [00:00<00:02, 201563.08it/s] 13%|█▎        | 71767/552076 [00:00<00:03, 155742.47it/s] 15%|█▌        | 83765/552076 [00:00<00:03, 138547.42it/s] 18%|█▊        | 99808/552076 [00:00<00:03, 144457.85it/s] 21%|██        | 114100/552076 [00:00<00:03, 143992.45it/s] 23%|██▎       | 128363/552076 [00:00<00:02, 142895.59it/s] 27%|██▋       | 146653/552076 [00:00<00:02, 152928.42it/s] 30%|███       | 166385/552076 [00:01<00:02, 163996.12it/s] 34%|███▍      | 186705/552076 [00:01<00:02, 174068.59it/s] 38%|███▊      | 207442/552076 [00:01<00:01, 182877.90it/s] 41%|████      | 225975/552076 [00:01<00:02, 146844.59it/s] 44%|████▍     | 241966/552076 [00:01<00:02, 136965.34it/s] 46%|████▋     | 256711/552076 [00:01<00:02, 130929.74it/s] 49%|████▉     | 270595/552076 [00:01<00:02, 127768.87it/s] 51%|█████▏    | 283942/552076 [00:01<00:02, 124898.16it/s] 54%|█████▍    | 296846/552076 [00:02<00:02, 122479.41it/s] 56%|█████▌    | 309394/552076 [00:02<00:02, 119226.62it/s] 58%|█████▊    | 321546/552076 [00:02<00:01, 116362.96it/s] 60%|██████    | 333358/552076 [00:02<00:01, 114732.35it/s] 63%|██████▎   | 345682/552076 [00:02<00:01, 117157.70it/s] 65%|██████▍   | 357500/552076 [00:02<00:01, 103054.21it/s] 67%|██████▋   | 371152/552076 [00:02<00:01, 111234.27it/s] 70%|██████▉   | 385660/552076 [00:02<00:01, 119604.68it/s] 72%|███████▏  | 399029/552076 [00:02<00:01, 123507.27it/s] 76%|███████▌  | 419404/552076 [00:02<00:00, 140053.13it/s] 79%|███████▉  | 438293/552076 [00:03<00:00, 151826.97it/s] 82%|████████▏ | 454476/552076 [00:03<00:00, 144283.14it/s] 86%|████████▌ | 474562/552076 [00:03<00:00, 157600.30it/s] 89%|████████▉ | 493668/552076 [00:03<00:00, 166338.97it/s] 93%|█████████▎| 513959/552076 [00:03<00:00, 175846.81it/s] 97%|█████████▋| 534081/552076 [00:03<00:00, 182757.66it/s]100%|██████████| 552076/552076 [00:03<00:00, 148882.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18573/552076 [00:00<00:02, 185726.19it/s]  6%|▋         | 35001/552076 [00:00<00:02, 178724.10it/s] 10%|▉         | 54351/552076 [00:00<00:02, 182914.30it/s] 13%|█▎        | 74343/552076 [00:00<00:02, 187703.32it/s] 17%|█▋        | 94320/552076 [00:00<00:02, 191165.92it/s] 21%|██        | 115307/552076 [00:00<00:02, 196417.26it/s] 24%|██▍       | 132848/552076 [00:00<00:03, 107758.30it/s] 27%|██▋       | 146701/552076 [00:01<00:03, 114412.54it/s] 29%|██▉       | 161977/552076 [00:01<00:03, 123476.54it/s] 32%|███▏      | 176117/552076 [00:01<00:03, 103929.38it/s] 34%|███▍      | 188292/552076 [00:01<00:04, 90578.11it/s]  36%|███▋      | 200670/552076 [00:01<00:03, 98503.12it/s] 38%|███▊      | 211813/552076 [00:01<00:03, 101868.35it/s] 40%|████      | 222934/552076 [00:01<00:03, 91605.12it/s]  43%|████▎     | 240125/552076 [00:01<00:02, 106534.47it/s] 46%|████▌     | 254577/552076 [00:02<00:02, 115653.89it/s] 48%|████▊     | 267428/552076 [00:02<00:03, 82946.22it/s]  51%|█████     | 281295/552076 [00:02<00:02, 94316.21it/s] 53%|█████▎    | 294554/552076 [00:02<00:02, 103258.16it/s] 57%|█████▋    | 314062/552076 [00:02<00:01, 120235.95it/s] 61%|██████    | 334323/552076 [00:02<00:01, 136936.99it/s] 64%|██████▍   | 353836/552076 [00:02<00:01, 150392.25it/s] 68%|██████▊   | 373460/552076 [00:02<00:01, 161727.00it/s] 71%|███████▏  | 393792/552076 [00:03<00:00, 172301.19it/s] 75%|███████▌  | 415875/552076 [00:03<00:00, 184460.83it/s] 79%|███████▉  | 435521/552076 [00:03<00:00, 179065.74it/s] 82%|████████▏ | 454302/552076 [00:03<00:00, 176658.01it/s] 86%|████████▋ | 477520/552076 [00:03<00:00, 190310.29it/s] 90%|█████████ | 499546/552076 [00:03<00:00, 198402.41it/s] 94%|█████████▍| 521391/552076 [00:03<00:00, 204018.22it/s] 98%|█████████▊| 542255/552076 [00:03<00:00, 187871.59it/s]100%|██████████| 552076/552076 [00:03<00:00, 144350.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22286/552076 [00:00<00:02, 222853.31it/s]  8%|▊         | 43443/552076 [00:00<00:02, 219342.70it/s] 12%|█▏        | 65794/552076 [00:00<00:02, 220575.92it/s] 16%|█▌        | 87073/552076 [00:00<00:02, 218179.75it/s] 19%|█▉        | 104924/552076 [00:00<00:02, 204542.64it/s] 22%|██▏       | 123653/552076 [00:00<00:02, 199041.98it/s] 26%|██▌       | 142955/552076 [00:00<00:02, 197193.91it/s] 30%|██▉       | 165062/552076 [00:00<00:01, 203794.98it/s] 34%|███▎      | 186303/552076 [00:00<00:01, 206304.26it/s] 37%|███▋      | 206681/552076 [00:01<00:01, 205538.28it/s] 41%|████      | 226679/552076 [00:01<00:01, 202459.90it/s] 45%|████▍     | 246546/552076 [00:01<00:01, 201007.79it/s] 48%|████▊     | 267013/552076 [00:01<00:01, 202091.96it/s] 52%|█████▏    | 287040/552076 [00:01<00:01, 187182.20it/s] 55%|█████▌    | 305850/552076 [00:01<00:01, 177395.23it/s] 59%|█████▉    | 324509/552076 [00:01<00:01, 180056.51it/s] 62%|██████▏   | 344766/552076 [00:01<00:01, 186266.42it/s] 66%|██████▌   | 364823/552076 [00:01<00:00, 190338.01it/s] 70%|██████▉   | 384984/552076 [00:01<00:00, 193583.33it/s] 73%|███████▎  | 404442/552076 [00:02<00:00, 188381.21it/s] 77%|███████▋  | 423381/552076 [00:02<00:00, 169330.90it/s] 80%|████████  | 442949/552076 [00:02<00:00, 176456.61it/s] 84%|████████▎ | 461580/552076 [00:02<00:00, 179301.23it/s] 87%|████████▋ | 480212/552076 [00:02<00:00, 181350.50it/s] 91%|█████████ | 499854/552076 [00:02<00:00, 185622.26it/s] 94%|█████████▍| 519180/552076 [00:02<00:00, 187848.83it/s] 98%|█████████▊| 539326/552076 [00:02<00:00, 191734.47it/s]100%|██████████| 552076/552076 [00:02<00:00, 193249.43it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19717/552076 [00:00<00:02, 197165.96it/s]  7%|▋         | 37832/552076 [00:00<00:02, 192068.34it/s] 10%|█         | 56288/552076 [00:00<00:02, 189750.01it/s] 13%|█▎        | 74501/552076 [00:00<00:02, 187395.60it/s] 16%|█▌        | 88532/552076 [00:00<00:02, 155986.30it/s] 18%|█▊        | 101718/552076 [00:00<00:03, 128548.94it/s] 21%|██        | 113683/552076 [00:00<00:03, 121614.12it/s] 23%|██▎       | 125299/552076 [00:00<00:03, 118900.69it/s] 26%|██▌       | 141968/552076 [00:00<00:03, 130089.26it/s] 29%|██▉       | 161554/552076 [00:01<00:02, 144662.61it/s] 33%|███▎      | 180814/552076 [00:01<00:02, 156333.71it/s] 36%|███▌      | 197107/552076 [00:01<00:02, 149957.35it/s] 39%|███▊      | 213059/552076 [00:01<00:02, 152701.40it/s] 41%|████▏     | 228704/552076 [00:01<00:02, 146855.55it/s] 45%|████▍     | 245813/552076 [00:01<00:01, 153371.28it/s] 48%|████▊     | 265863/552076 [00:01<00:01, 165005.44it/s] 51%|█████     | 282819/552076 [00:01<00:01, 163413.80it/s] 54%|█████▍    | 299483/552076 [00:02<00:02, 125221.74it/s] 57%|█████▋    | 317397/552076 [00:02<00:01, 137650.91it/s] 60%|██████    | 332638/552076 [00:02<00:01, 118800.56it/s] 63%|██████▎   | 346855/552076 [00:02<00:01, 124962.34it/s] 65%|██████▌   | 360479/552076 [00:02<00:02, 95503.90it/s]  69%|██████▊   | 378843/552076 [00:02<00:01, 111565.89it/s] 71%|███████   | 392322/552076 [00:02<00:01, 91376.03it/s]  74%|███████▍  | 407367/552076 [00:03<00:01, 103575.46it/s] 76%|███████▌  | 419834/552076 [00:03<00:01, 84169.39it/s]  79%|███████▉  | 438443/552076 [00:03<00:01, 100718.08it/s] 82%|████████▏ | 451365/552076 [00:03<00:01, 79985.51it/s]  86%|████████▌ | 472238/552076 [00:03<00:00, 98146.01it/s] 89%|████████▉ | 493101/552076 [00:03<00:00, 116680.97it/s] 92%|█████████▏| 508969/552076 [00:04<00:00, 97797.77it/s]  96%|█████████▌| 530359/552076 [00:04<00:00, 116819.69it/s]100%|█████████▉| 551642/552076 [00:04<00:00, 135102.90it/s]100%|██████████| 552076/552076 [00:04<00:00, 131181.60it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18535/552076 [00:00<00:02, 185347.97it/s]  6%|▌         | 33631/552076 [00:00<00:02, 173489.85it/s] 10%|▉         | 53186/552076 [00:00<00:02, 179565.25it/s] 13%|█▎        | 73244/552076 [00:00<00:02, 185390.16it/s] 16%|█▋        | 91024/552076 [00:00<00:02, 183045.58it/s] 20%|██        | 113171/552076 [00:00<00:02, 193095.15it/s] 25%|██▍       | 135876/552076 [00:00<00:02, 202164.70it/s] 29%|██▊       | 158644/552076 [00:00<00:01, 209195.91it/s] 33%|███▎      | 182572/552076 [00:00<00:01, 217395.05it/s] 37%|███▋      | 205977/552076 [00:01<00:01, 222136.38it/s] 42%|████▏     | 229791/552076 [00:01<00:01, 226704.10it/s] 46%|████▌     | 252264/552076 [00:01<00:01, 225892.74it/s] 50%|████▉     | 274716/552076 [00:01<00:01, 223069.00it/s] 54%|█████▍    | 296935/552076 [00:01<00:01, 217932.95it/s] 58%|█████▊    | 318693/552076 [00:01<00:01, 211967.28it/s] 62%|██████▏   | 339901/552076 [00:01<00:01, 209043.11it/s] 65%|██████▌   | 360822/552076 [00:01<00:01, 178302.09it/s] 69%|██████▊   | 379543/552076 [00:01<00:00, 180882.21it/s] 72%|███████▏  | 398349/552076 [00:01<00:00, 182974.86it/s] 76%|███████▌  | 418168/552076 [00:02<00:00, 187285.71it/s] 79%|███████▉  | 438232/552076 [00:02<00:00, 191099.90it/s] 83%|████████▎ | 458481/552076 [00:02<00:00, 194378.13it/s] 87%|████████▋ | 478240/552076 [00:02<00:00, 195329.76it/s] 90%|█████████ | 497899/552076 [00:02<00:00, 166689.54it/s] 93%|█████████▎| 515386/552076 [00:02<00:00, 165646.38it/s] 97%|█████████▋| 535338/552076 [00:02<00:00, 174535.90it/s]100%|██████████| 552076/552076 [00:02<00:00, 194920.51it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18830/552076 [00:00<00:02, 188299.73it/s]  7%|▋         | 39283/552076 [00:00<00:02, 192888.94it/s] 11%|█         | 60364/552076 [00:00<00:02, 197934.61it/s] 15%|█▍        | 80460/552076 [00:00<00:02, 198832.40it/s] 18%|█▊        | 100281/552076 [00:00<00:02, 198641.91it/s] 22%|██▏       | 119456/552076 [00:00<00:02, 196519.76it/s] 25%|██▌       | 138904/552076 [00:00<00:02, 195902.28it/s] 29%|██▉       | 158743/552076 [00:00<00:02, 196641.38it/s] 32%|███▏      | 177335/552076 [00:00<00:02, 172792.43it/s] 36%|███▌      | 196746/552076 [00:01<00:01, 178677.60it/s] 39%|███▉      | 217333/552076 [00:01<00:01, 186048.18it/s] 43%|████▎     | 238357/552076 [00:01<00:01, 192698.78it/s] 47%|████▋     | 259502/552076 [00:01<00:01, 197964.00it/s] 51%|█████     | 279536/552076 [00:01<00:01, 198669.09it/s] 54%|█████▍    | 299460/552076 [00:01<00:01, 187303.42it/s] 58%|█████▊    | 318364/552076 [00:01<00:01, 178147.50it/s] 61%|██████▏   | 338390/552076 [00:01<00:01, 184250.75it/s] 65%|██████▍   | 358664/552076 [00:01<00:01, 189431.87it/s] 69%|██████▊   | 379100/552076 [00:01<00:00, 193673.74it/s] 72%|███████▏  | 399332/552076 [00:02<00:00, 196186.21it/s] 76%|███████▌  | 419763/552076 [00:02<00:00, 198553.09it/s] 80%|███████▉  | 441305/552076 [00:02<00:00, 203327.16it/s] 84%|████████▎ | 461726/552076 [00:02<00:00, 151491.44it/s] 87%|████████▋ | 478871/552076 [00:02<00:00, 148261.24it/s] 90%|████████▉ | 496312/552076 [00:02<00:00, 155240.59it/s] 93%|█████████▎| 512911/552076 [00:02<00:00, 148222.29it/s] 96%|█████████▋| 532692/552076 [00:02<00:00, 160274.12it/s]100%|█████████▉| 549575/552076 [00:03<00:00, 132316.30it/s]100%|██████████| 552076/552076 [00:03<00:00, 176471.20it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5572/552076 [00:00<00:11, 49677.25it/s]  2%|▏         | 11945/552076 [00:00<00:10, 53195.06it/s]  4%|▎         | 19538/552076 [00:00<00:09, 57074.37it/s]  5%|▌         | 28173/552076 [00:00<00:08, 63535.96it/s]  8%|▊         | 42057/552076 [00:00<00:06, 75882.81it/s]  9%|▉         | 50467/552076 [00:00<00:06, 78172.84it/s] 11%|█▏        | 62642/552076 [00:00<00:05, 87575.98it/s] 13%|█▎        | 71982/552076 [00:00<00:06, 79904.65it/s] 15%|█▌        | 83059/552076 [00:00<00:05, 86513.27it/s] 17%|█▋        | 92245/552076 [00:01<00:05, 83199.88it/s] 18%|█▊        | 100967/552076 [00:01<00:05, 80665.20it/s] 21%|██        | 115956/552076 [00:01<00:04, 93638.97it/s] 24%|██▍       | 134978/552076 [00:01<00:03, 110464.87it/s] 28%|██▊       | 155239/552076 [00:01<00:03, 127916.46it/s] 32%|███▏      | 174933/552076 [00:01<00:02, 142945.93it/s] 35%|███▌      | 193931/552076 [00:01<00:02, 154413.59it/s] 39%|███▊      | 213704/552076 [00:01<00:02, 165274.35it/s] 42%|████▏     | 234038/552076 [00:01<00:01, 175108.48it/s] 46%|████▌     | 254340/552076 [00:02<00:01, 182641.13it/s] 50%|████▉     | 274106/552076 [00:02<00:01, 186899.71it/s] 53%|█████▎    | 294245/552076 [00:02<00:01, 191022.03it/s] 57%|█████▋    | 314684/552076 [00:02<00:01, 194844.00it/s] 61%|██████    | 336556/552076 [00:02<00:01, 201438.60it/s] 65%|██████▌   | 359729/552076 [00:02<00:00, 209658.03it/s] 69%|██████▉   | 380999/552076 [00:02<00:00, 201158.63it/s] 73%|███████▎  | 401401/552076 [00:02<00:00, 199055.41it/s] 77%|███████▋  | 423318/552076 [00:02<00:00, 204690.93it/s] 80%|████████  | 443971/552076 [00:03<00:00, 163878.81it/s] 84%|████████▍ | 463310/552076 [00:03<00:00, 171739.82it/s] 88%|████████▊ | 483860/552076 [00:03<00:00, 180642.15it/s] 91%|█████████▏| 504130/552076 [00:03<00:00, 186737.24it/s] 95%|█████████▍| 524205/552076 [00:03<00:00, 190730.55it/s] 98%|█████████▊| 543772/552076 [00:03<00:00, 181490.88it/s]100%|██████████| 552076/552076 [00:03<00:00, 153626.60it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17107/552076 [00:00<00:03, 171061.19it/s]  7%|▋         | 37913/552076 [00:00<00:02, 180700.44it/s] 11%|█         | 59940/552076 [00:00<00:02, 190992.99it/s] 15%|█▍        | 80375/552076 [00:00<00:02, 194810.61it/s] 18%|█▊        | 101816/552076 [00:00<00:02, 200296.54it/s] 22%|██▏       | 123017/552076 [00:00<00:02, 203670.20it/s] 26%|██▌       | 143799/552076 [00:00<00:01, 204894.80it/s] 30%|██▉       | 165443/552076 [00:00<00:01, 208224.41it/s] 34%|███▍      | 187482/552076 [00:00<00:01, 211730.31it/s] 38%|███▊      | 208037/552076 [00:01<00:01, 207582.07it/s] 41%|████▏     | 228427/552076 [00:01<00:01, 206461.38it/s] 45%|████▌     | 248785/552076 [00:01<00:01, 200885.73it/s] 49%|████▊     | 268705/552076 [00:01<00:01, 180373.02it/s] 52%|█████▏    | 287019/552076 [00:01<00:01, 181075.94it/s] 55%|█████▌    | 305871/552076 [00:01<00:01, 183243.69it/s] 59%|█████▊    | 324338/552076 [00:01<00:01, 183522.44it/s] 62%|██████▏   | 343760/552076 [00:01<00:01, 186604.02it/s] 66%|██████▌   | 363050/552076 [00:01<00:01, 188448.76it/s] 69%|██████▉   | 381957/552076 [00:01<00:00, 179485.08it/s] 72%|███████▏  | 400039/552076 [00:02<00:00, 171329.37it/s] 76%|███████▌  | 419979/552076 [00:02<00:00, 178883.94it/s] 80%|███████▉  | 439737/552076 [00:02<00:00, 184109.82it/s] 83%|████████▎ | 459565/552076 [00:02<00:00, 188142.84it/s] 87%|████████▋ | 478529/552076 [00:02<00:00, 146647.62it/s] 90%|████████▉ | 494709/552076 [00:02<00:00, 121713.21it/s] 92%|█████████▏| 509664/552076 [00:02<00:00, 128910.71it/s] 95%|█████████▍| 523909/552076 [00:02<00:00, 121741.82it/s] 97%|█████████▋| 537113/552076 [00:03<00:00, 106690.87it/s]100%|█████████▉| 550005/552076 [00:03<00:00, 112509.91it/s]100%|██████████| 552076/552076 [00:03<00:00, 167746.66it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7967/552076 [00:00<00:06, 79666.85it/s]  3%|▎         | 14825/552076 [00:00<00:07, 74141.95it/s]  5%|▍         | 25635/552076 [00:00<00:06, 81856.01it/s]  7%|▋         | 40037/552076 [00:00<00:05, 93554.42it/s]  9%|▊         | 48276/552076 [00:00<00:07, 70412.11it/s] 10%|█         | 55626/552076 [00:00<00:07, 68890.91it/s] 11%|█▏        | 62569/552076 [00:00<00:08, 57363.93it/s] 13%|█▎        | 71173/552076 [00:00<00:07, 63735.87it/s] 14%|█▍        | 78023/552076 [00:01<00:10, 44716.02it/s] 16%|█▌        | 87935/552076 [00:01<00:08, 53530.06it/s] 18%|█▊        | 99276/552076 [00:01<00:07, 63604.76it/s] 20%|█▉        | 109798/552076 [00:01<00:06, 72165.48it/s] 22%|██▏       | 118709/552076 [00:01<00:06, 71897.37it/s] 23%|██▎       | 129372/552076 [00:01<00:05, 79683.69it/s] 25%|██▌       | 139803/552076 [00:01<00:04, 85756.30it/s] 27%|██▋       | 151480/552076 [00:01<00:04, 93179.06it/s] 30%|██▉       | 163234/552076 [00:02<00:03, 99356.43it/s] 32%|███▏      | 174021/552076 [00:02<00:03, 101763.18it/s] 33%|███▎      | 184691/552076 [00:02<00:03, 102830.34it/s] 36%|███▌      | 196408/552076 [00:02<00:03, 106748.57it/s] 38%|███▊      | 208172/552076 [00:02<00:03, 109795.95it/s] 40%|████      | 220835/552076 [00:02<00:02, 114354.57it/s] 42%|████▏     | 233062/552076 [00:02<00:02, 116617.98it/s] 45%|████▍     | 246001/552076 [00:02<00:02, 120174.39it/s] 47%|████▋     | 259430/552076 [00:02<00:02, 124086.15it/s] 49%|████▉     | 272495/552076 [00:02<00:02, 125981.73it/s] 52%|█████▏    | 285189/552076 [00:03<00:02, 124609.33it/s] 54%|█████▍    | 297720/552076 [00:03<00:02, 124702.36it/s] 56%|█████▌    | 310240/552076 [00:03<00:01, 122672.49it/s] 58%|█████▊    | 322549/552076 [00:03<00:02, 88517.88it/s]  61%|██████    | 336815/552076 [00:03<00:02, 99890.25it/s] 65%|██████▍   | 356796/552076 [00:03<00:01, 117520.53it/s] 68%|██████▊   | 373004/552076 [00:03<00:01, 128083.77it/s] 71%|███████   | 390651/552076 [00:03<00:01, 139562.38it/s] 74%|███████▍  | 408727/552076 [00:04<00:00, 149803.07it/s] 77%|███████▋  | 425040/552076 [00:04<00:00, 144918.62it/s] 80%|████████  | 444404/552076 [00:04<00:00, 156748.75it/s] 84%|████████▍ | 464298/552076 [00:04<00:00, 167398.32it/s] 88%|████████▊ | 484154/552076 [00:04<00:00, 175666.90it/s] 91%|█████████▏| 504299/552076 [00:04<00:00, 182679.45it/s] 95%|█████████▍| 523141/552076 [00:04<00:00, 183165.38it/s] 98%|█████████▊| 541860/552076 [00:04<00:00, 183354.19it/s]100%|██████████| 552076/552076 [00:04<00:00, 115503.77it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7615/552076 [00:00<00:07, 76143.72it/s]  4%|▍         | 21570/552076 [00:00<00:06, 88159.83it/s]  7%|▋         | 36297/552076 [00:00<00:05, 100228.21it/s]  9%|▉         | 51016/552076 [00:00<00:04, 110836.96it/s] 13%|█▎        | 70768/552076 [00:00<00:03, 127640.95it/s] 17%|█▋        | 91186/552076 [00:00<00:03, 143813.39it/s] 19%|█▉        | 106528/552076 [00:00<00:03, 144047.59it/s] 22%|██▏       | 123761/552076 [00:00<00:02, 151505.32it/s] 26%|██▌       | 143780/552076 [00:00<00:02, 163427.60it/s] 30%|██▉       | 164479/552076 [00:01<00:02, 174440.70it/s] 34%|███▎      | 185135/552076 [00:01<00:02, 182973.72it/s] 37%|███▋      | 204375/552076 [00:01<00:01, 185702.59it/s] 41%|████      | 224024/552076 [00:01<00:01, 188811.50it/s] 44%|████▍     | 243210/552076 [00:01<00:01, 168297.95it/s] 47%|████▋     | 260668/552076 [00:01<00:01, 161482.57it/s] 50%|█████     | 277315/552076 [00:01<00:01, 154174.22it/s] 53%|█████▎    | 293152/552076 [00:01<00:01, 154059.86it/s] 57%|█████▋    | 312499/552076 [00:01<00:01, 164087.26it/s] 60%|██████    | 332980/552076 [00:01<00:01, 174495.79it/s] 64%|██████▍   | 353709/552076 [00:02<00:01, 183188.21it/s] 67%|██████▋   | 372458/552076 [00:02<00:01, 160569.10it/s] 71%|███████   | 389322/552076 [00:02<00:01, 133458.50it/s] 73%|███████▎  | 403999/552076 [00:02<00:01, 135733.40it/s] 76%|███████▌  | 418514/552076 [00:02<00:01, 119723.41it/s] 80%|███████▉  | 439559/552076 [00:02<00:00, 137507.41it/s] 83%|████████▎ | 455628/552076 [00:02<00:00, 143337.91it/s] 85%|████████▌ | 471179/552076 [00:03<00:00, 90457.81it/s]  88%|████████▊ | 483523/552076 [00:03<00:00, 86286.49it/s] 90%|█████████ | 497653/552076 [00:03<00:00, 97697.61it/s] 92%|█████████▏| 509577/552076 [00:03<00:00, 95129.69it/s] 96%|█████████▌| 529465/552076 [00:03<00:00, 112779.16it/s] 99%|█████████▊| 545066/552076 [00:03<00:00, 123004.12it/s]100%|██████████| 552076/552076 [00:03<00:00, 139872.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10956/552076 [00:00<00:04, 109552.27it/s]  4%|▍         | 24836/552076 [00:00<00:04, 116943.91it/s]  8%|▊         | 44587/552076 [00:00<00:03, 133248.69it/s] 12%|█▏        | 64483/552076 [00:00<00:03, 147902.28it/s] 15%|█▌        | 83835/552076 [00:00<00:02, 159157.41it/s] 19%|█▊        | 103121/552076 [00:00<00:02, 167961.42it/s] 22%|██▏       | 123315/552076 [00:00<00:02, 176890.47it/s] 26%|██▌       | 143927/552076 [00:00<00:02, 184749.19it/s] 30%|███       | 166730/552076 [00:00<00:01, 195903.12it/s] 34%|███▍      | 189647/552076 [00:01<00:01, 204821.25it/s] 38%|███▊      | 211946/552076 [00:01<00:01, 209952.14it/s] 43%|████▎     | 235355/552076 [00:01<00:01, 216651.04it/s] 47%|████▋     | 257203/552076 [00:01<00:01, 212371.12it/s] 50%|█████     | 278587/552076 [00:01<00:01, 211380.63it/s] 54%|█████▍    | 299829/552076 [00:01<00:01, 209314.67it/s] 58%|█████▊    | 320838/552076 [00:01<00:01, 180715.33it/s] 62%|██████▏   | 341154/552076 [00:01<00:01, 186909.71it/s] 66%|██████▌   | 361624/552076 [00:01<00:00, 191913.34it/s] 69%|██████▉   | 381252/552076 [00:01<00:00, 183107.12it/s] 73%|███████▎  | 401540/552076 [00:02<00:00, 188619.65it/s] 76%|███████▌  | 420718/552076 [00:02<00:00, 170315.00it/s] 80%|███████▉  | 441096/552076 [00:02<00:00, 179139.52it/s] 84%|████████▍ | 462784/552076 [00:02<00:00, 189005.65it/s] 88%|████████▊ | 484684/552076 [00:02<00:00, 197104.22it/s] 92%|█████████▏| 506190/552076 [00:02<00:00, 202165.79it/s] 96%|█████████▌| 527834/552076 [00:02<00:00, 206245.58it/s]100%|█████████▉| 549543/552076 [00:02<00:00, 209382.46it/s]100%|██████████| 552076/552076 [00:02<00:00, 194694.33it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15603/552076 [00:00<00:03, 156027.17it/s]  6%|▋         | 35385/552076 [00:00<00:03, 166584.71it/s]  9%|▉         | 48623/552076 [00:00<00:03, 154599.48it/s] 12%|█▏        | 64868/552076 [00:00<00:03, 156872.54it/s] 15%|█▌        | 83114/552076 [00:00<00:02, 163761.55it/s] 19%|█▊        | 103180/552076 [00:00<00:02, 173320.82it/s] 22%|██▏       | 123554/552076 [00:00<00:02, 181447.56it/s] 26%|██▌       | 144105/552076 [00:00<00:02, 188052.78it/s] 29%|██▉       | 162298/552076 [00:00<00:02, 168210.84it/s] 33%|███▎      | 180980/552076 [00:01<00:02, 173390.42it/s] 36%|███▌      | 199201/552076 [00:01<00:02, 175944.88it/s] 40%|███▉      | 218303/552076 [00:01<00:01, 180210.47it/s] 43%|████▎     | 236363/552076 [00:01<00:01, 180050.10it/s] 46%|████▌     | 254709/552076 [00:01<00:01, 181059.61it/s] 49%|████▉     | 272836/552076 [00:01<00:01, 176191.22it/s] 53%|█████▎    | 290505/552076 [00:01<00:01, 176337.97it/s] 56%|█████▌    | 308169/552076 [00:01<00:01, 172706.47it/s] 59%|█████▉    | 326878/552076 [00:01<00:01, 176781.49it/s] 62%|██████▏   | 344607/552076 [00:01<00:01, 172023.51it/s] 66%|██████▌   | 363838/552076 [00:02<00:01, 177644.01it/s] 69%|██████▉   | 383686/552076 [00:02<00:00, 183418.16it/s] 73%|███████▎  | 403531/552076 [00:02<00:00, 187682.59it/s] 77%|███████▋  | 422402/552076 [00:02<00:00, 152494.08it/s] 80%|████████  | 442521/552076 [00:02<00:00, 164432.33it/s] 84%|████████▍ | 463844/552076 [00:02<00:00, 176553.14it/s] 88%|████████▊ | 483852/552076 [00:02<00:00, 183007.01it/s] 91%|█████████ | 502912/552076 [00:02<00:00, 178176.97it/s] 94%|█████████▍| 521290/552076 [00:02<00:00, 158405.34it/s] 97%|█████████▋| 537929/552076 [00:03<00:00, 139510.19it/s]100%|██████████| 552076/552076 [00:03<00:00, 165792.82it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13204/552076 [00:00<00:04, 132039.18it/s]  5%|▍         | 25392/552076 [00:00<00:04, 128814.86it/s]  6%|▌         | 31821/552076 [00:00<00:05, 97399.44it/s]   7%|▋         | 38817/552076 [00:00<00:05, 87123.00it/s]  9%|▊         | 47860/552076 [00:00<00:05, 87944.35it/s] 10%|▉         | 55144/552076 [00:00<00:07, 68562.33it/s] 13%|█▎        | 69451/552076 [00:00<00:05, 81257.37it/s] 14%|█▍        | 78263/552076 [00:00<00:05, 80104.58it/s] 17%|█▋        | 91145/552076 [00:00<00:05, 90353.78it/s] 19%|█▉        | 105436/552076 [00:01<00:04, 101557.79it/s] 21%|██        | 116591/552076 [00:01<00:05, 86544.56it/s]  23%|██▎       | 126330/552076 [00:01<00:05, 77123.84it/s] 25%|██▌       | 139214/552076 [00:01<00:04, 87681.26it/s] 27%|██▋       | 149143/552076 [00:01<00:04, 87767.95it/s] 30%|██▉       | 164057/552076 [00:01<00:03, 100129.05it/s] 33%|███▎      | 183325/552076 [00:01<00:03, 116985.93it/s] 37%|███▋      | 202850/552076 [00:01<00:02, 132976.15it/s] 40%|████      | 221407/552076 [00:02<00:02, 145332.54it/s] 43%|████▎     | 237744/552076 [00:02<00:02, 142274.76it/s] 46%|████▌     | 255211/552076 [00:02<00:01, 150654.06it/s] 50%|████▉     | 273767/552076 [00:02<00:01, 159663.92it/s] 53%|█████▎    | 293082/552076 [00:02<00:01, 168419.66it/s] 56%|█████▋    | 310658/552076 [00:02<00:01, 162361.65it/s] 60%|█████▉    | 329925/552076 [00:02<00:01, 170402.09it/s] 63%|██████▎   | 350349/552076 [00:02<00:01, 179312.27it/s] 67%|██████▋   | 369896/552076 [00:02<00:00, 183870.18it/s] 71%|███████   | 389796/552076 [00:02<00:00, 188159.81it/s] 74%|███████▍  | 409538/552076 [00:03<00:00, 190845.27it/s] 78%|███████▊  | 432074/552076 [00:03<00:00, 200033.92it/s] 82%|████████▏ | 453735/552076 [00:03<00:00, 204732.77it/s] 86%|████████▌ | 474417/552076 [00:03<00:00, 199681.54it/s] 90%|████████▉ | 494559/552076 [00:03<00:00, 175354.63it/s] 93%|█████████▎| 514064/552076 [00:03<00:00, 180831.76it/s] 97%|█████████▋| 535679/552076 [00:03<00:00, 190152.45it/s]100%|██████████| 552076/552076 [00:03<00:00, 145680.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14292/552076 [00:00<00:03, 142910.26it/s]  5%|▍         | 26790/552076 [00:00<00:03, 137011.81it/s]  9%|▊         | 48159/552076 [00:00<00:03, 153538.99it/s] 13%|█▎        | 69702/552076 [00:00<00:02, 168020.02it/s] 17%|█▋        | 91191/552076 [00:00<00:02, 179782.55it/s] 20%|██        | 112440/552076 [00:00<00:02, 188486.05it/s] 24%|██▍       | 134721/552076 [00:00<00:02, 197616.70it/s] 28%|██▊       | 156776/552076 [00:00<00:01, 203978.22it/s] 32%|███▏      | 178128/552076 [00:00<00:01, 206748.05it/s] 36%|███▌      | 199659/552076 [00:01<00:01, 209242.73it/s] 40%|████      | 222050/552076 [00:01<00:01, 213435.12it/s] 44%|████▍     | 243735/552076 [00:01<00:01, 214446.48it/s] 48%|████▊     | 265120/552076 [00:01<00:01, 212244.85it/s] 52%|█████▏    | 286619/552076 [00:01<00:01, 213058.95it/s] 56%|█████▌    | 307900/552076 [00:01<00:01, 185970.12it/s] 60%|█████▉    | 330523/552076 [00:01<00:01, 196456.38it/s] 64%|██████▍   | 353141/552076 [00:01<00:00, 204519.43it/s] 68%|██████▊   | 376270/552076 [00:01<00:00, 211874.75it/s] 72%|███████▏  | 399167/552076 [00:01<00:00, 216728.91it/s] 77%|███████▋  | 422371/552076 [00:02<00:00, 221103.59it/s] 81%|████████  | 444724/552076 [00:02<00:00, 191633.13it/s] 85%|████████▍ | 466624/552076 [00:02<00:00, 199095.55it/s] 88%|████████▊ | 488256/552076 [00:02<00:00, 203967.74it/s] 92%|█████████▏| 509963/552076 [00:02<00:00, 207727.91it/s] 96%|█████████▌| 531108/552076 [00:02<00:00, 188437.67it/s]100%|█████████▉| 551009/552076 [00:02<00:00, 191489.43it/s]100%|██████████| 552076/552076 [00:02<00:00, 201009.41it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9831/552076 [00:00<00:05, 98306.34it/s]  3%|▎         | 15098/552076 [00:00<00:06, 77510.94it/s]  5%|▍         | 25928/552076 [00:00<00:06, 84738.03it/s]  8%|▊         | 46365/552076 [00:00<00:04, 102787.81it/s] 10%|█         | 56545/552076 [00:00<00:05, 83032.30it/s]  12%|█▏        | 65728/552076 [00:00<00:05, 85489.34it/s] 14%|█▎        | 74675/552076 [00:00<00:06, 77484.65it/s] 16%|█▌        | 88207/552076 [00:00<00:05, 88880.22it/s] 18%|█▊        | 101160/552076 [00:01<00:04, 98117.31it/s] 20%|██        | 111891/552076 [00:01<00:06, 71156.78it/s] 23%|██▎       | 128591/552076 [00:01<00:04, 85955.91it/s] 25%|██▌       | 139770/552076 [00:01<00:04, 85276.97it/s] 27%|██▋       | 150108/552076 [00:01<00:05, 76946.54it/s] 30%|███       | 167033/552076 [00:01<00:04, 91998.05it/s] 33%|███▎      | 182254/552076 [00:01<00:03, 104385.99it/s] 35%|███▌      | 195035/552076 [00:01<00:03, 110457.67it/s] 39%|███▉      | 214717/552076 [00:02<00:02, 127201.26it/s] 43%|████▎     | 236744/552076 [00:02<00:02, 145664.11it/s] 47%|████▋     | 258037/552076 [00:02<00:01, 160914.20it/s] 51%|█████     | 279347/552076 [00:02<00:01, 173673.24it/s] 55%|█████▍    | 302290/552076 [00:02<00:01, 187330.34it/s] 59%|█████▊    | 324117/552076 [00:02<00:01, 195647.88it/s] 63%|██████▎   | 346838/552076 [00:02<00:01, 204154.25it/s] 67%|██████▋   | 370131/552076 [00:02<00:00, 212010.11it/s] 71%|███████   | 392061/552076 [00:02<00:00, 214076.66it/s] 75%|███████▌  | 415433/552076 [00:02<00:00, 219611.84it/s] 79%|███████▉  | 438617/552076 [00:03<00:00, 223142.57it/s] 84%|████████▎ | 461223/552076 [00:03<00:00, 220253.79it/s] 88%|████████▊ | 483461/552076 [00:03<00:00, 215245.07it/s] 92%|█████████▏| 505160/552076 [00:03<00:00, 206999.04it/s] 95%|█████████▌| 526050/552076 [00:03<00:00, 202782.99it/s] 99%|█████████▉| 546480/552076 [00:03<00:00, 200955.30it/s]100%|██████████| 552076/552076 [00:03<00:00, 151912.54it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8539/552076 [00:00<00:06, 85386.82it/s]  5%|▌         | 27926/552076 [00:00<00:05, 102611.48it/s]  9%|▊         | 48178/552076 [00:00<00:04, 120435.65it/s] 12%|█▏        | 68224/552076 [00:00<00:03, 136821.30it/s] 16%|█▌        | 89516/552076 [00:00<00:03, 153252.60it/s] 19%|█▉        | 105700/552076 [00:00<00:02, 151250.66it/s] 22%|██▏       | 122469/552076 [00:00<00:02, 155831.53it/s] 26%|██▌       | 142703/552076 [00:00<00:02, 167371.53it/s] 29%|██▉       | 162751/552076 [00:00<00:02, 176095.05it/s] 33%|███▎      | 181623/552076 [00:01<00:02, 179700.00it/s] 36%|███▌      | 199972/552076 [00:01<00:01, 180492.28it/s] 40%|███▉      | 219007/552076 [00:01<00:01, 183340.49it/s] 43%|████▎     | 239161/552076 [00:01<00:01, 188445.16it/s] 47%|████▋     | 259295/552076 [00:01<00:01, 192136.57it/s] 51%|█████     | 281271/552076 [00:01<00:01, 199664.10it/s] 55%|█████▍    | 301738/552076 [00:01<00:01, 201138.61it/s] 58%|█████▊    | 321976/552076 [00:01<00:01, 195835.70it/s] 62%|██████▏   | 341677/552076 [00:01<00:01, 163678.15it/s] 66%|██████▌   | 361688/552076 [00:01<00:01, 173134.18it/s] 69%|██████▉   | 381849/552076 [00:02<00:00, 180793.94it/s] 73%|███████▎  | 402929/552076 [00:02<00:00, 188856.79it/s] 77%|███████▋  | 422650/552076 [00:02<00:00, 191286.09it/s] 80%|████████  | 442180/552076 [00:02<00:00, 164578.46it/s] 83%|████████▎ | 459575/552076 [00:02<00:00, 157001.70it/s] 87%|████████▋ | 480107/552076 [00:02<00:00, 168926.77it/s] 91%|█████████ | 501159/552076 [00:02<00:00, 179568.91it/s] 95%|█████████▍| 521893/552076 [00:02<00:00, 187084.52it/s] 98%|█████████▊| 542802/552076 [00:02<00:00, 193183.25it/s]100%|██████████| 552076/552076 [00:03<00:00, 183135.31it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17655/552076 [00:00<00:03, 176548.48it/s]  6%|▋         | 35780/552076 [00:00<00:02, 177933.05it/s] 10%|▉         | 53912/552076 [00:00<00:02, 178934.44it/s] 13%|█▎        | 72185/552076 [00:00<00:02, 180055.23it/s] 16%|█▋        | 90754/552076 [00:00<00:02, 181706.93it/s] 20%|██        | 110517/552076 [00:00<00:02, 186205.68it/s] 23%|██▎       | 128343/552076 [00:00<00:02, 183747.28it/s] 26%|██▋       | 145294/552076 [00:00<00:02, 149940.69it/s] 29%|██▉       | 160307/552076 [00:01<00:03, 104680.94it/s] 31%|███▏      | 173327/552076 [00:01<00:03, 111220.50it/s] 35%|███▍      | 191567/552076 [00:01<00:02, 125966.89it/s] 37%|███▋      | 205826/552076 [00:01<00:02, 126011.02it/s] 40%|███▉      | 219591/552076 [00:01<00:03, 102499.84it/s] 42%|████▏     | 231369/552076 [00:01<00:03, 89990.18it/s]  44%|████▍     | 243273/552076 [00:01<00:03, 97094.86it/s] 46%|████▌     | 254086/552076 [00:02<00:03, 82763.85it/s] 48%|████▊     | 264264/552076 [00:02<00:03, 87677.06it/s] 50%|████▉     | 274008/552076 [00:02<00:03, 90392.98it/s] 51%|█████▏    | 283682/552076 [00:02<00:03, 67381.86it/s] 53%|█████▎    | 291722/552076 [00:02<00:04, 61847.86it/s] 56%|█████▋    | 311456/552076 [00:02<00:03, 77891.41it/s] 60%|██████    | 331718/552076 [00:02<00:02, 95533.85it/s] 64%|██████▎   | 351779/552076 [00:02<00:01, 113343.93it/s] 67%|██████▋   | 371587/552076 [00:03<00:01, 130030.86it/s] 71%|███████   | 391439/552076 [00:03<00:01, 145041.62it/s] 74%|███████▍  | 409250/552076 [00:03<00:00, 153593.79it/s] 77%|███████▋  | 427038/552076 [00:03<00:00, 150741.69it/s] 81%|████████  | 446733/552076 [00:03<00:00, 162153.91it/s] 85%|████████▍ | 467118/552076 [00:03<00:00, 172753.74it/s] 88%|████████▊ | 485595/552076 [00:03<00:00, 173222.06it/s] 91%|█████████▏| 503797/552076 [00:03<00:00, 175768.44it/s] 95%|█████████▍| 522956/552076 [00:03<00:00, 180232.76it/s] 98%|█████████▊| 541426/552076 [00:03<00:00, 166265.51it/s]100%|██████████| 552076/552076 [00:04<00:00, 136235.10it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20795/552076 [00:00<00:02, 207933.34it/s]  7%|▋         | 40640/552076 [00:00<00:02, 204993.82it/s] 11%|█         | 62010/552076 [00:00<00:02, 205549.03it/s] 15%|█▌        | 83998/552076 [00:00<00:02, 209646.60it/s] 19%|█▉        | 107164/552076 [00:00<00:02, 215797.64it/s] 24%|██▎       | 130247/552076 [00:00<00:01, 220096.38it/s] 28%|██▊       | 153043/552076 [00:00<00:01, 222397.35it/s] 31%|███▏      | 173622/552076 [00:00<00:01, 212972.64it/s] 35%|███▌      | 193955/552076 [00:00<00:01, 209983.68it/s] 39%|███▉      | 214209/552076 [00:01<00:01, 206531.19it/s] 42%|████▏     | 234354/552076 [00:01<00:01, 204771.09it/s] 46%|████▌     | 254479/552076 [00:01<00:01, 178854.04it/s] 50%|████▉     | 274339/552076 [00:01<00:01, 184350.96it/s] 53%|█████▎    | 293058/552076 [00:01<00:01, 184947.08it/s] 57%|█████▋    | 312528/552076 [00:01<00:01, 187768.72it/s] 60%|██████    | 332622/552076 [00:01<00:01, 191535.08it/s] 64%|██████▎   | 351899/552076 [00:01<00:01, 185126.27it/s] 67%|██████▋   | 370545/552076 [00:01<00:01, 162575.63it/s] 71%|███████   | 389713/552076 [00:02<00:00, 170334.24it/s] 74%|███████▍  | 409000/552076 [00:02<00:00, 176521.50it/s] 78%|███████▊  | 429117/552076 [00:02<00:00, 183256.01it/s] 81%|████████▏ | 449041/552076 [00:02<00:00, 187773.43it/s] 85%|████████▍ | 468680/552076 [00:02<00:00, 190277.74it/s] 89%|████████▊ | 488848/552076 [00:02<00:00, 193560.36it/s] 92%|█████████▏| 508360/552076 [00:02<00:00, 190182.10it/s] 96%|█████████▌| 528660/552076 [00:02<00:00, 193851.50it/s]100%|█████████▉| 549742/552076 [00:02<00:00, 198647.39it/s]100%|██████████| 552076/552076 [00:02<00:00, 194680.18it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21856/552076 [00:00<00:02, 218552.39it/s]  8%|▊         | 44290/552076 [00:00<00:02, 220255.44it/s] 12%|█▏        | 66332/552076 [00:00<00:02, 220304.21it/s] 15%|█▌        | 85107/552076 [00:00<00:02, 209408.42it/s] 18%|█▊        | 100915/552076 [00:00<00:02, 180522.56it/s] 22%|██▏       | 120529/552076 [00:00<00:02, 184938.82it/s] 26%|██▌       | 140966/552076 [00:00<00:02, 190367.46it/s] 30%|██▉       | 163486/552076 [00:00<00:01, 199629.04it/s] 34%|███▎      | 185265/552076 [00:00<00:01, 204748.99it/s] 37%|███▋      | 206797/552076 [00:01<00:01, 207809.59it/s] 41%|████      | 227205/552076 [00:01<00:02, 127969.30it/s] 44%|████▍     | 243515/552076 [00:01<00:02, 106598.27it/s] 47%|████▋     | 259771/552076 [00:01<00:02, 118873.61it/s] 50%|████▉     | 274251/552076 [00:01<00:02, 123355.43it/s] 52%|█████▏    | 288444/552076 [00:01<00:02, 97304.14it/s]  55%|█████▍    | 302029/552076 [00:02<00:02, 104389.96it/s] 57%|█████▋    | 314126/552076 [00:02<00:02, 95252.48it/s]  60%|██████    | 331640/552076 [00:02<00:01, 110352.91it/s] 62%|██████▏   | 344483/552076 [00:02<00:02, 97779.78it/s]  65%|██████▌   | 359385/552076 [00:02<00:01, 107198.60it/s] 67%|██████▋   | 371449/552076 [00:02<00:01, 90378.42it/s]  70%|██████▉   | 384735/552076 [00:02<00:01, 99967.38it/s] 72%|███████▏  | 396535/552076 [00:02<00:01, 104768.29it/s] 74%|███████▍  | 409020/552076 [00:03<00:01, 110078.04it/s] 78%|███████▊  | 428703/552076 [00:03<00:00, 126850.61it/s] 82%|████████▏ | 450492/552076 [00:03<00:00, 145029.02it/s] 86%|████████▌ | 472063/552076 [00:03<00:00, 160838.04it/s] 89%|████████▉ | 492250/552076 [00:03<00:00, 171280.64it/s] 93%|█████████▎| 510886/552076 [00:03<00:00, 166879.83it/s] 96%|█████████▌| 528655/552076 [00:03<00:00, 160858.59it/s] 99%|█████████▉| 548507/552076 [00:03<00:00, 170565.89it/s]100%|██████████| 552076/552076 [00:03<00:00, 144188.82it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21442/552076 [00:00<00:02, 214417.65it/s]  7%|▋         | 41033/552076 [00:00<00:02, 208506.15it/s] 11%|█         | 61268/552076 [00:00<00:02, 206620.09it/s] 15%|█▍        | 81565/552076 [00:00<00:02, 205508.58it/s] 19%|█▊        | 102136/552076 [00:00<00:02, 205566.67it/s] 22%|██▏       | 122999/552076 [00:00<00:02, 206474.63it/s] 26%|██▌       | 142926/552076 [00:00<00:02, 204256.04it/s] 30%|██▉       | 164267/552076 [00:00<00:01, 206917.18it/s] 34%|███▍      | 186346/552076 [00:00<00:01, 210889.35it/s] 38%|███▊      | 207455/552076 [00:01<00:01, 210949.41it/s] 41%|████▏     | 227967/552076 [00:01<00:01, 181746.61it/s] 45%|████▍     | 247428/552076 [00:01<00:01, 185421.36it/s] 49%|████▊     | 267766/552076 [00:01<00:01, 190466.68it/s] 52%|█████▏    | 287986/552076 [00:01<00:01, 193840.41it/s] 56%|█████▌    | 308326/552076 [00:01<00:01, 196611.96it/s] 60%|█████▉    | 328828/552076 [00:01<00:01, 199060.29it/s] 63%|██████▎   | 348823/552076 [00:01<00:01, 182011.12it/s] 67%|██████▋   | 367370/552076 [00:01<00:01, 180535.85it/s] 70%|███████   | 387486/552076 [00:01<00:00, 186263.65it/s] 74%|███████▍  | 407762/552076 [00:02<00:00, 190922.55it/s] 77%|███████▋  | 427758/552076 [00:02<00:00, 193546.35it/s] 81%|████████  | 447976/552076 [00:02<00:00, 196057.52it/s] 85%|████████▍ | 467685/552076 [00:02<00:00, 195447.62it/s] 88%|████████▊ | 487302/552076 [00:02<00:00, 194545.60it/s] 92%|█████████▏| 507285/552076 [00:02<00:00, 196101.12it/s] 95%|█████████▌| 526935/552076 [00:02<00:00, 195244.65it/s] 99%|█████████▉| 546488/552076 [00:02<00:00, 193530.20it/s]100%|██████████| 552076/552076 [00:02<00:00, 195594.02it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21403/552076 [00:00<00:02, 214028.67it/s]  8%|▊         | 42286/552076 [00:00<00:02, 212439.37it/s] 10%|█         | 55769/552076 [00:00<00:02, 181151.93it/s] 13%|█▎        | 71517/552076 [00:00<00:02, 173334.18it/s] 16%|█▋        | 90794/552076 [00:00<00:02, 178738.84it/s] 20%|█▉        | 110312/552076 [00:00<00:02, 183372.25it/s] 24%|██▎       | 130508/552076 [00:00<00:02, 188578.41it/s] 27%|██▋       | 150318/552076 [00:00<00:02, 191336.10it/s] 31%|███       | 169680/552076 [00:00<00:01, 192014.42it/s] 34%|███▍      | 188171/552076 [00:01<00:01, 188631.31it/s] 37%|███▋      | 206550/552076 [00:01<00:02, 138284.71it/s] 40%|████      | 221972/552076 [00:01<00:02, 121065.04it/s] 43%|████▎     | 239616/552076 [00:01<00:02, 133647.06it/s] 47%|████▋     | 258528/552076 [00:01<00:02, 146541.72it/s] 50%|████▉     | 274576/552076 [00:01<00:01, 141858.72it/s] 53%|█████▎    | 293700/552076 [00:01<00:01, 153767.92it/s] 56%|█████▌    | 310073/552076 [00:01<00:01, 145562.34it/s] 59%|█████▉    | 325417/552076 [00:02<00:01, 133379.81it/s] 61%|██████▏   | 339506/552076 [00:02<00:01, 127412.47it/s] 65%|██████▌   | 360362/552076 [00:02<00:01, 144248.80it/s] 68%|██████▊   | 375945/552076 [00:02<00:01, 137980.62it/s] 71%|███████   | 390612/552076 [00:02<00:01, 117649.61it/s] 73%|███████▎  | 403505/552076 [00:02<00:01, 90740.96it/s]  75%|███████▌  | 414305/552076 [00:02<00:01, 94905.55it/s] 78%|███████▊  | 429391/552076 [00:03<00:01, 106787.53it/s] 81%|████████  | 445459/552076 [00:03<00:00, 118734.54it/s] 84%|████████▍ | 464500/552076 [00:03<00:00, 133849.72it/s] 87%|████████▋ | 479491/552076 [00:03<00:00, 109988.56it/s] 89%|████████▉ | 492315/552076 [00:03<00:00, 99975.25it/s]  92%|█████████▏| 507383/552076 [00:03<00:00, 111200.95it/s] 96%|█████████▌| 529270/552076 [00:03<00:00, 130453.06it/s]100%|██████████| 552076/552076 [00:03<00:00, 143400.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18618/552076 [00:00<00:02, 180905.65it/s]  5%|▍         | 26799/552076 [00:00<00:03, 132685.23it/s]  9%|▊         | 47484/552076 [00:00<00:03, 148677.01it/s] 13%|█▎        | 69597/552076 [00:00<00:02, 164882.88it/s] 17%|█▋        | 91849/552076 [00:00<00:02, 178773.35it/s] 20%|█▉        | 108354/552076 [00:00<00:03, 139447.99it/s] 23%|██▎       | 128452/552076 [00:00<00:02, 153551.15it/s] 27%|██▋       | 148390/552076 [00:00<00:02, 164922.68it/s] 31%|███       | 168530/552076 [00:00<00:02, 174396.74it/s] 34%|███▍      | 188208/552076 [00:01<00:02, 180557.61it/s] 38%|███▊      | 207716/552076 [00:01<00:01, 184680.16it/s] 41%|████      | 226847/552076 [00:01<00:01, 186618.72it/s] 45%|████▌     | 248553/552076 [00:01<00:01, 194814.49it/s] 49%|████▊     | 268319/552076 [00:01<00:01, 173794.86it/s] 52%|█████▏    | 288362/552076 [00:01<00:01, 181011.16it/s] 56%|█████▌    | 308587/552076 [00:01<00:01, 186897.90it/s] 59%|█████▉    | 328437/552076 [00:01<00:01, 190231.81it/s] 63%|██████▎   | 348752/552076 [00:01<00:01, 193930.53it/s] 67%|██████▋   | 368373/552076 [00:02<00:01, 179626.94it/s] 70%|███████   | 386705/552076 [00:02<00:00, 177732.79it/s] 74%|███████▎  | 406612/552076 [00:02<00:00, 183637.53it/s] 77%|███████▋  | 425673/552076 [00:02<00:00, 185673.62it/s] 81%|████████  | 445605/552076 [00:02<00:00, 189564.30it/s] 84%|████████▍ | 465104/552076 [00:02<00:00, 191159.69it/s] 88%|████████▊ | 484788/552076 [00:02<00:00, 192827.36it/s] 91%|█████████▏| 504283/552076 [00:02<00:00, 193456.18it/s] 95%|█████████▍| 523681/552076 [00:02<00:00, 193441.43it/s] 98%|█████████▊| 543452/552076 [00:02<00:00, 194702.02it/s]100%|██████████| 552076/552076 [00:03<00:00, 183916.50it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14623/552076 [00:00<00:03, 146220.38it/s]  6%|▌         | 33647/552076 [00:00<00:03, 157126.26it/s] 10%|▉         | 53849/552076 [00:00<00:02, 168347.31it/s] 13%|█▎        | 70313/552076 [00:00<00:02, 167216.54it/s] 16%|█▋        | 90819/552076 [00:00<00:02, 177015.94it/s] 20%|██        | 113108/552076 [00:00<00:02, 188663.63it/s] 24%|██▎       | 131029/552076 [00:00<00:02, 185722.57it/s] 27%|██▋       | 148725/552076 [00:00<00:02, 172917.03it/s] 31%|███       | 168759/552076 [00:00<00:02, 180321.47it/s] 34%|███▍      | 188727/552076 [00:01<00:01, 185721.54it/s] 38%|███▊      | 208473/552076 [00:01<00:01, 189093.28it/s] 41%|████▏     | 228337/552076 [00:01<00:01, 191859.46it/s] 45%|████▍     | 248219/552076 [00:01<00:01, 193894.33it/s] 49%|████▊     | 268320/552076 [00:01<00:01, 195975.08it/s] 52%|█████▏    | 289074/552076 [00:01<00:01, 199304.92it/s] 56%|█████▌    | 309012/552076 [00:01<00:01, 199058.62it/s] 60%|█████▉    | 328924/552076 [00:01<00:01, 198908.96it/s] 63%|██████▎   | 349592/552076 [00:01<00:01, 201176.73it/s] 67%|██████▋   | 369719/552076 [00:01<00:00, 191634.90it/s] 70%|███████   | 388984/552076 [00:02<00:00, 181959.58it/s] 75%|███████▍  | 412596/552076 [00:02<00:00, 195404.49it/s] 78%|███████▊  | 432538/552076 [00:02<00:00, 128919.63it/s] 81%|████████▏ | 448654/552076 [00:02<00:01, 95159.66it/s]  84%|████████▍ | 463571/552076 [00:02<00:00, 106753.42it/s] 87%|████████▋ | 478277/552076 [00:02<00:00, 116316.72it/s] 90%|█████████ | 498216/552076 [00:03<00:00, 132930.68it/s] 93%|█████████▎| 513956/552076 [00:03<00:00, 105597.00it/s] 95%|█████████▌| 527115/552076 [00:03<00:00, 89734.94it/s]  98%|█████████▊| 538320/552076 [00:03<00:00, 78984.18it/s]100%|██████████| 552076/552076 [00:03<00:00, 150722.70it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 23018/552076 [00:00<00:02, 230177.48it/s]  8%|▊         | 44954/552076 [00:00<00:02, 226820.73it/s] 12%|█▏        | 64424/552076 [00:00<00:02, 216120.81it/s] 14%|█▍        | 78255/552076 [00:00<00:02, 178420.93it/s] 18%|█▊        | 96871/552076 [00:00<00:02, 180671.40it/s] 21%|██▏       | 118278/552076 [00:00<00:02, 189542.31it/s] 26%|██▌       | 141601/552076 [00:00<00:02, 200826.10it/s] 30%|██▉       | 163049/552076 [00:00<00:01, 204733.44it/s] 33%|███▎      | 182681/552076 [00:00<00:02, 169740.27it/s] 37%|███▋      | 202504/552076 [00:01<00:01, 177386.48it/s] 40%|████      | 222167/552076 [00:01<00:01, 182751.88it/s] 44%|████▍     | 241735/552076 [00:01<00:01, 186446.10it/s] 47%|████▋     | 260611/552076 [00:01<00:01, 185635.31it/s] 51%|█████     | 279338/552076 [00:01<00:01, 185511.52it/s] 54%|█████▍    | 298886/552076 [00:01<00:01, 188387.86it/s] 58%|█████▊    | 317816/552076 [00:01<00:01, 182802.97it/s] 61%|██████    | 336777/552076 [00:01<00:01, 184792.35it/s] 65%|██████▍   | 357091/552076 [00:01<00:01, 189938.24it/s] 68%|██████▊   | 377578/552076 [00:01<00:00, 194181.93it/s] 72%|███████▏  | 397736/552076 [00:02<00:00, 196343.62it/s] 76%|███████▌  | 418101/552076 [00:02<00:00, 198478.84it/s] 79%|███████▉  | 438400/552076 [00:02<00:00, 199809.92it/s] 83%|████████▎ | 458723/552076 [00:02<00:00, 200820.59it/s] 87%|████████▋ | 479165/552076 [00:02<00:00, 201884.52it/s] 91%|█████████ | 499783/552076 [00:02<00:00, 203153.88it/s] 94%|█████████▍| 520348/552076 [00:02<00:00, 203894.08it/s] 98%|█████████▊| 540876/552076 [00:02<00:00, 204305.32it/s]100%|██████████| 552076/552076 [00:02<00:00, 194360.13it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11148/552076 [00:00<00:04, 111475.85it/s]  4%|▍         | 23447/552076 [00:00<00:04, 114696.07it/s]  7%|▋         | 36287/552076 [00:00<00:04, 118489.59it/s]  9%|▉         | 48911/552076 [00:00<00:04, 120710.14it/s] 11%|█         | 60441/552076 [00:00<00:04, 119032.80it/s] 13%|█▎        | 72116/552076 [00:00<00:04, 118336.53it/s] 15%|█▌        | 83952/552076 [00:00<00:03, 118343.10it/s] 18%|█▊        | 96728/552076 [00:00<00:03, 121017.34it/s] 20%|█▉        | 109872/552076 [00:00<00:03, 123964.71it/s] 22%|██▏       | 121856/552076 [00:01<00:03, 110307.89it/s] 24%|██▍       | 133468/552076 [00:01<00:03, 111989.38it/s] 26%|██▋       | 145815/552076 [00:01<00:03, 115201.83it/s] 29%|██▊       | 157358/552076 [00:01<00:03, 112806.91it/s] 31%|███       | 168666/552076 [00:01<00:03, 112026.18it/s] 33%|███▎      | 179889/552076 [00:01<00:03, 109039.22it/s] 35%|███▍      | 190825/552076 [00:01<00:03, 100174.84it/s] 36%|███▋      | 201006/552076 [00:01<00:04, 86878.88it/s]  38%|███▊      | 210123/552076 [00:01<00:03, 86373.82it/s] 40%|████      | 222898/552076 [00:02<00:03, 95669.23it/s] 42%|████▏     | 234297/552076 [00:02<00:03, 100514.79it/s] 45%|████▍     | 247460/552076 [00:02<00:02, 108185.06it/s] 47%|████▋     | 260406/552076 [00:02<00:02, 113793.64it/s] 49%|████▉     | 272246/552076 [00:02<00:02, 115134.54it/s] 52%|█████▏    | 284642/552076 [00:02<00:02, 117645.62it/s] 54%|█████▎    | 296621/552076 [00:02<00:02, 117373.91it/s] 56%|█████▌    | 308856/552076 [00:02<00:02, 118822.92it/s] 58%|█████▊    | 321137/552076 [00:02<00:01, 119988.11it/s] 60%|██████    | 333279/552076 [00:02<00:01, 120413.04it/s] 63%|██████▎   | 345377/552076 [00:03<00:01, 116291.13it/s] 65%|██████▍   | 357076/552076 [00:03<00:01, 104267.12it/s] 67%|██████▋   | 367786/552076 [00:03<00:02, 75477.40it/s]  68%|██████▊   | 376660/552076 [00:03<00:02, 58581.70it/s] 70%|███████   | 387256/552076 [00:03<00:02, 67656.47it/s] 72%|███████▏  | 398836/552076 [00:03<00:01, 77296.62it/s] 74%|███████▍  | 408145/552076 [00:04<00:02, 53696.55it/s] 75%|███████▌  | 415602/552076 [00:04<00:02, 46287.30it/s] 76%|███████▋  | 421872/552076 [00:04<00:02, 44251.10it/s] 78%|███████▊  | 433145/552076 [00:04<00:02, 54112.05it/s] 80%|███████▉  | 440442/552076 [00:04<00:01, 56733.45it/s] 81%|████████  | 447469/552076 [00:04<00:01, 54678.41it/s] 83%|████████▎ | 458353/552076 [00:04<00:01, 64054.17it/s] 85%|████████▌ | 469690/552076 [00:05<00:01, 73667.16it/s] 87%|████████▋ | 480847/552076 [00:05<00:00, 81719.42it/s] 89%|████████▉ | 490958/552076 [00:05<00:00, 86706.27it/s] 91%|█████████ | 502654/552076 [00:05<00:00, 93999.25it/s] 93%|█████████▎| 514940/552076 [00:05<00:00, 101124.12it/s] 95%|█████████▌| 526516/552076 [00:05<00:00, 105110.31it/s] 98%|█████████▊| 538576/552076 [00:05<00:00, 109320.80it/s]100%|██████████| 552076/552076 [00:05<00:00, 95525.59it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12084/552076 [00:00<00:04, 120838.39it/s]  4%|▍         | 24212/552076 [00:00<00:04, 120969.70it/s]  7%|▋         | 36531/552076 [00:00<00:04, 121624.97it/s]  9%|▉         | 48914/552076 [00:00<00:04, 122275.55it/s] 11%|█         | 61375/552076 [00:00<00:03, 122964.77it/s] 13%|█▎        | 73679/552076 [00:00<00:03, 122986.58it/s] 16%|█▌        | 86064/552076 [00:00<00:03, 123243.06it/s] 18%|█▊        | 98530/552076 [00:00<00:03, 123662.67it/s] 20%|██        | 110992/552076 [00:00<00:03, 123945.98it/s] 22%|██▏       | 123513/552076 [00:01<00:03, 124320.33it/s] 25%|██▍       | 135791/552076 [00:01<00:03, 123852.08it/s] 27%|██▋       | 147939/552076 [00:01<00:03, 122949.16it/s] 29%|██▉       | 160069/552076 [00:01<00:03, 121372.63it/s] 31%|███▏      | 172747/552076 [00:01<00:03, 122943.09it/s] 34%|███▎      | 185225/552076 [00:01<00:02, 123485.61it/s] 36%|███▌      | 197524/552076 [00:01<00:02, 123219.79it/s] 38%|███▊      | 210116/552076 [00:01<00:02, 124015.38it/s] 40%|████      | 222578/552076 [00:01<00:02, 124193.35it/s] 43%|████▎     | 234982/552076 [00:01<00:02, 123494.63it/s] 45%|████▍     | 247522/552076 [00:02<00:02, 124059.82it/s] 47%|████▋     | 259922/552076 [00:02<00:02, 123236.95it/s] 49%|████▉     | 272243/552076 [00:02<00:02, 121256.71it/s] 52%|█████▏    | 284625/552076 [00:02<00:02, 122012.54it/s] 54%|█████▍    | 297209/552076 [00:02<00:02, 123135.88it/s] 56%|█████▌    | 309589/552076 [00:02<00:01, 123331.77it/s] 58%|█████▊    | 322054/552076 [00:02<00:01, 123723.46it/s] 61%|██████    | 334615/552076 [00:02<00:01, 124282.42it/s] 63%|██████▎   | 347125/552076 [00:02<00:01, 124525.63it/s] 65%|██████▌   | 359670/552076 [00:02<00:01, 124794.97it/s] 67%|██████▋   | 372152/552076 [00:03<00:01, 124481.32it/s] 70%|██████▉   | 384758/552076 [00:03<00:01, 124947.69it/s] 72%|███████▏  | 397255/552076 [00:03<00:01, 124937.89it/s] 74%|███████▍  | 409799/552076 [00:03<00:01, 125085.73it/s] 76%|███████▋  | 422338/552076 [00:03<00:01, 125174.65it/s] 79%|███████▉  | 434894/552076 [00:03<00:00, 125289.78it/s] 81%|████████  | 447424/552076 [00:03<00:00, 125154.58it/s] 83%|████████▎ | 459969/552076 [00:03<00:00, 125240.86it/s] 86%|████████▌ | 472515/552076 [00:03<00:00, 125305.75it/s] 88%|████████▊ | 485046/552076 [00:03<00:00, 123959.16it/s] 90%|█████████ | 497446/552076 [00:04<00:00, 123758.43it/s] 92%|█████████▏| 509923/552076 [00:04<00:00, 124059.86it/s] 95%|█████████▍| 522456/552076 [00:04<00:00, 124437.43it/s] 97%|█████████▋| 535056/552076 [00:04<00:00, 124899.94it/s] 99%|█████████▉| 547751/552076 [00:04<00:00, 125507.74it/s]100%|██████████| 552076/552076 [00:04<00:00, 123966.94it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10778/552076 [00:00<00:05, 107771.88it/s]  4%|▎         | 20665/552076 [00:00<00:05, 104936.19it/s]  5%|▌         | 29552/552076 [00:00<00:05, 99535.64it/s]   7%|▋         | 40211/552076 [00:00<00:05, 101550.91it/s]  9%|▉         | 51085/552076 [00:00<00:04, 103604.99it/s] 11%|█▏        | 63054/552076 [00:00<00:04, 107957.43it/s] 14%|█▎        | 74888/552076 [00:00<00:04, 110874.80it/s] 16%|█▌        | 86924/552076 [00:00<00:04, 113557.40it/s] 18%|█▊        | 98857/552076 [00:00<00:03, 115228.67it/s] 20%|█▉        | 110001/552076 [00:01<00:04, 104780.17it/s] 22%|██▏       | 120396/552076 [00:01<00:04, 86953.68it/s]  23%|██▎       | 129540/552076 [00:01<00:05, 76493.84it/s] 25%|██▍       | 137733/552076 [00:01<00:05, 72112.37it/s] 26%|██▋       | 145377/552076 [00:01<00:05, 69144.01it/s] 28%|██▊       | 156933/552076 [00:01<00:05, 78616.21it/s] 31%|███       | 168955/552076 [00:01<00:04, 87722.06it/s] 33%|███▎      | 181401/552076 [00:01<00:03, 96243.85it/s] 35%|███▍      | 191842/552076 [00:02<00:04, 88890.76it/s] 36%|███▋      | 201414/552076 [00:02<00:04, 87384.89it/s] 39%|███▊      | 213557/552076 [00:02<00:03, 95409.08it/s] 41%|████      | 223656/552076 [00:02<00:03, 96517.67it/s] 42%|████▏     | 233702/552076 [00:02<00:03, 90720.81it/s] 44%|████▍     | 243121/552076 [00:02<00:03, 85978.86it/s] 46%|████▌     | 255023/552076 [00:02<00:03, 93648.00it/s] 48%|████▊     | 264796/552076 [00:02<00:03, 92642.23it/s] 50%|█████     | 276991/552076 [00:02<00:02, 99839.78it/s] 52%|█████▏    | 289506/552076 [00:03<00:02, 106288.44it/s] 54%|█████▍    | 300502/552076 [00:03<00:02, 106918.54it/s] 56%|█████▋    | 311452/552076 [00:03<00:02, 90892.79it/s]  59%|█████▊    | 324339/552076 [00:03<00:02, 99706.63it/s] 61%|██████    | 336844/552076 [00:03<00:02, 106160.27it/s] 63%|██████▎   | 349342/552076 [00:03<00:01, 111182.37it/s] 65%|██████▌   | 360934/552076 [00:03<00:01, 110290.46it/s] 68%|██████▊   | 372784/552076 [00:03<00:01, 112631.08it/s] 70%|██████▉   | 385371/552076 [00:03<00:01, 116298.92it/s] 72%|███████▏  | 397962/552076 [00:03<00:01, 119023.47it/s] 74%|███████▍  | 410022/552076 [00:04<00:01, 89066.10it/s]  77%|███████▋  | 422477/552076 [00:04<00:01, 94245.33it/s] 78%|███████▊  | 432836/552076 [00:04<00:01, 85364.11it/s] 80%|████████  | 442187/552076 [00:04<00:01, 86540.44it/s] 82%|████████▏ | 451415/552076 [00:04<00:01, 77439.58it/s] 83%|████████▎ | 459740/552076 [00:04<00:01, 67167.29it/s] 85%|████████▍ | 467107/552076 [00:04<00:01, 66013.67it/s] 86%|████████▌ | 474168/552076 [00:05<00:01, 63611.53it/s] 88%|████████▊ | 485902/552076 [00:05<00:00, 73740.57it/s] 90%|████████▉ | 494323/552076 [00:05<00:00, 76595.70it/s] 91%|█████████ | 502597/552076 [00:05<00:00, 67525.19it/s] 92%|█████████▏| 509976/552076 [00:05<00:00, 66703.56it/s] 94%|█████████▎| 517088/552076 [00:05<00:00, 56226.32it/s] 95%|█████████▍| 523301/552076 [00:05<00:00, 56686.48it/s] 96%|█████████▋| 531874/552076 [00:05<00:00, 63099.13it/s] 98%|█████████▊| 538704/552076 [00:06<00:00, 55626.95it/s] 99%|█████████▉| 547724/552076 [00:06<00:00, 62853.56it/s]100%|██████████| 552076/552076 [00:06<00:00, 87751.21it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9856/552076 [00:00<00:05, 98554.69it/s]  4%|▍         | 21627/552076 [00:00<00:05, 103612.12it/s]  5%|▌         | 28802/552076 [00:00<00:05, 91431.35it/s]   7%|▋         | 38548/552076 [00:00<00:05, 93159.61it/s]  8%|▊         | 45723/552076 [00:00<00:06, 79482.50it/s] 10%|▉         | 54127/552076 [00:00<00:06, 75867.85it/s] 11%|█         | 60944/552076 [00:00<00:07, 68541.17it/s] 13%|█▎        | 70004/552076 [00:00<00:06, 73940.85it/s] 15%|█▍        | 81786/552076 [00:00<00:05, 83241.12it/s] 17%|█▋        | 93667/552076 [00:01<00:05, 91454.92it/s] 19%|█▉        | 104260/552076 [00:01<00:04, 95363.11it/s] 21%|██        | 115178/552076 [00:01<00:04, 99124.52it/s] 23%|██▎       | 125374/552076 [00:01<00:05, 84722.99it/s] 25%|██▍       | 135801/552076 [00:01<00:04, 89770.24it/s] 26%|██▋       | 145933/552076 [00:01<00:04, 92946.97it/s] 29%|██▊       | 157391/552076 [00:01<00:04, 98525.62it/s] 31%|███       | 169520/552076 [00:01<00:03, 104402.84it/s] 33%|███▎      | 181756/552076 [00:01<00:03, 109210.62it/s] 35%|███▌      | 193303/552076 [00:02<00:03, 111013.67it/s] 37%|███▋      | 205258/552076 [00:02<00:03, 113443.72it/s] 39%|███▉      | 216764/552076 [00:02<00:03, 100303.90it/s] 42%|████▏     | 229347/552076 [00:02<00:03, 106803.46it/s] 44%|████▎     | 240419/552076 [00:02<00:02, 107560.96it/s] 46%|████▌     | 252458/552076 [00:02<00:02, 111110.93it/s] 48%|████▊     | 264794/552076 [00:02<00:02, 114520.29it/s] 50%|█████     | 277365/552076 [00:02<00:02, 117661.47it/s] 52%|█████▏    | 289778/552076 [00:02<00:02, 119529.24it/s] 55%|█████▍    | 302331/552076 [00:02<00:02, 121265.45it/s] 57%|█████▋    | 314928/552076 [00:03<00:01, 122638.68it/s] 59%|█████▉    | 327415/552076 [00:03<00:01, 123299.43it/s] 62%|██████▏   | 339904/552076 [00:03<00:01, 123771.75it/s] 64%|██████▍   | 352424/552076 [00:03<00:01, 124195.95it/s] 66%|██████▌   | 364909/552076 [00:03<00:01, 124389.88it/s] 68%|██████▊   | 377437/552076 [00:03<00:01, 124652.70it/s] 71%|███████   | 389985/552076 [00:03<00:01, 124899.69it/s] 73%|███████▎  | 402483/552076 [00:03<00:01, 122838.40it/s] 75%|███████▌  | 414933/552076 [00:03<00:01, 123329.70it/s] 77%|███████▋  | 427366/552076 [00:03<00:01, 123625.76it/s] 80%|███████▉  | 439864/552076 [00:04<00:00, 124026.25it/s] 82%|████████▏ | 452272/552076 [00:04<00:00, 123836.00it/s] 84%|████████▍ | 464660/552076 [00:04<00:00, 123789.57it/s] 86%|████████▋ | 477042/552076 [00:04<00:00, 115395.33it/s] 89%|████████▊ | 488699/552076 [00:04<00:00, 94098.89it/s]  90%|█████████ | 498832/552076 [00:04<00:00, 81137.58it/s] 92%|█████████▏| 507767/552076 [00:04<00:00, 74023.10it/s] 93%|█████████▎| 515865/552076 [00:05<00:00, 62059.73it/s] 95%|█████████▍| 522886/552076 [00:05<00:00, 53001.81it/s] 96%|█████████▌| 530243/552076 [00:05<00:00, 57780.10it/s] 97%|█████████▋| 536979/552076 [00:05<00:00, 59161.98it/s] 98%|█████████▊| 543443/552076 [00:05<00:00, 60704.10it/s]100%|█████████▉| 549866/552076 [00:05<00:00, 61399.92it/s]100%|██████████| 552076/552076 [00:05<00:00, 96760.19it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9577/552076 [00:00<00:05, 93916.09it/s]  4%|▎         | 19747/552076 [00:00<00:05, 96122.07it/s]  5%|▌         | 27634/552076 [00:00<00:05, 87786.67it/s]  7%|▋         | 39553/552076 [00:00<00:05, 94018.59it/s]  9%|▉         | 49549/552076 [00:00<00:05, 95724.55it/s] 11%|█         | 61373/552076 [00:00<00:04, 100099.98it/s] 13%|█▎        | 70448/552076 [00:00<00:05, 89309.24it/s]  14%|█▍        | 79749/552076 [00:00<00:05, 90388.07it/s] 17%|█▋        | 91917/552076 [00:00<00:04, 97942.85it/s] 19%|█▉        | 103939/552076 [00:01<00:04, 103705.93it/s] 21%|██        | 114381/552076 [00:01<00:04, 99188.89it/s]  23%|██▎       | 126214/552076 [00:01<00:04, 104247.21it/s] 25%|██▌       | 138345/552076 [00:01<00:03, 108838.00it/s] 27%|██▋       | 149375/552076 [00:01<00:03, 101104.57it/s] 29%|██▉       | 161637/552076 [00:01<00:03, 106721.79it/s] 31%|███▏      | 172541/552076 [00:01<00:03, 106780.71it/s] 33%|███▎      | 183382/552076 [00:01<00:04, 86336.78it/s]  35%|███▍      | 192761/552076 [00:01<00:04, 87680.32it/s] 37%|███▋      | 202770/552076 [00:02<00:03, 91066.59it/s] 38%|███▊      | 212279/552076 [00:02<00:04, 80162.30it/s] 40%|███▉      | 220815/552076 [00:02<00:05, 55296.60it/s] 41%|████▏     | 227753/552076 [00:02<00:06, 48617.03it/s] 42%|████▏     | 234455/552076 [00:02<00:05, 52981.40it/s] 44%|████▎     | 240749/552076 [00:02<00:05, 55208.92it/s] 45%|████▍     | 246930/552076 [00:02<00:05, 55311.78it/s] 46%|████▌     | 252924/552076 [00:03<00:06, 46819.24it/s] 47%|████▋     | 258154/552076 [00:03<00:06, 45315.56it/s] 48%|████▊     | 263080/552076 [00:03<00:07, 36724.00it/s] 48%|████▊     | 267417/552076 [00:03<00:07, 38493.51it/s] 50%|████▉     | 274119/552076 [00:03<00:06, 44127.59it/s] 51%|█████     | 279104/552076 [00:03<00:06, 39075.49it/s] 52%|█████▏    | 285864/552076 [00:03<00:05, 44738.66it/s] 53%|█████▎    | 292601/552076 [00:04<00:05, 49751.24it/s] 54%|█████▍    | 298205/552076 [00:04<00:05, 43848.80it/s] 55%|█████▌    | 304882/552076 [00:04<00:05, 48881.50it/s] 56%|█████▋    | 311618/552076 [00:04<00:04, 53264.82it/s] 58%|█████▊    | 318397/552076 [00:04<00:04, 56922.68it/s] 59%|█████▉    | 325101/552076 [00:04<00:03, 59621.18it/s] 60%|██████    | 331886/552076 [00:04<00:03, 61871.58it/s] 61%|██████▏   | 338566/552076 [00:04<00:03, 63271.14it/s] 63%|██████▎   | 345196/552076 [00:04<00:03, 64148.53it/s] 64%|██████▍   | 351977/552076 [00:05<00:03, 65203.94it/s] 65%|██████▍   | 358597/552076 [00:05<00:03, 61435.21it/s] 66%|██████▌   | 364855/552076 [00:05<00:03, 53614.68it/s] 67%|██████▋   | 370476/552076 [00:05<00:04, 43223.56it/s] 68%|██████▊   | 375304/552076 [00:05<00:04, 42442.20it/s] 69%|██████▉   | 379975/552076 [00:05<00:03, 43636.46it/s] 70%|██████▉   | 385761/552076 [00:05<00:03, 47109.81it/s] 71%|███████   | 390763/552076 [00:05<00:03, 47945.51it/s] 72%|███████▏  | 395744/552076 [00:05<00:03, 48465.72it/s] 73%|███████▎  | 400722/552076 [00:06<00:03, 46889.05it/s] 74%|███████▎  | 406478/552076 [00:06<00:02, 49650.20it/s] 75%|███████▍  | 411560/552076 [00:06<00:03, 45165.63it/s] 75%|███████▌  | 416236/552076 [00:06<00:03, 44564.36it/s] 77%|███████▋  | 423030/552076 [00:06<00:02, 49692.52it/s] 78%|███████▊  | 429842/552076 [00:06<00:02, 54080.20it/s] 79%|███████▉  | 435552/552076 [00:06<00:02, 52032.66it/s] 80%|███████▉  | 441433/552076 [00:06<00:02, 53893.94it/s] 81%|████████  | 447978/552076 [00:06<00:01, 56908.29it/s] 82%|████████▏ | 454755/552076 [00:07<00:01, 59782.21it/s] 84%|████████▎ | 461520/552076 [00:07<00:01, 61942.65it/s] 85%|████████▍ | 468328/552076 [00:07<00:01, 63663.90it/s] 86%|████████▌ | 475146/552076 [00:07<00:01, 64953.64it/s] 87%|████████▋ | 481966/552076 [00:07<00:01, 65893.19it/s] 89%|████████▊ | 488784/552076 [00:07<00:00, 66562.23it/s] 90%|████████▉ | 495614/552076 [00:07<00:00, 67073.14it/s] 91%|█████████ | 502398/552076 [00:07<00:00, 67300.44it/s] 92%|█████████▏| 509150/552076 [00:07<00:00, 66427.38it/s] 93%|█████████▎| 515965/552076 [00:07<00:00, 66934.22it/s] 95%|█████████▍| 522815/552076 [00:08<00:00, 67394.84it/s] 96%|█████████▌| 529652/552076 [00:08<00:00, 67684.43it/s] 97%|█████████▋| 536428/552076 [00:08<00:00, 61250.86it/s] 98%|█████████▊| 542833/552076 [00:08<00:00, 61180.36it/s] 99%|█████████▉| 549037/552076 [00:08<00:00, 55078.03it/s]100%|██████████| 552076/552076 [00:08<00:00, 64134.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7130/552076 [00:00<00:07, 71297.18it/s]  3%|▎         | 14513/552076 [00:00<00:07, 72038.56it/s]  4%|▍         | 21720/552076 [00:00<00:07, 70816.13it/s]  6%|▌         | 31620/552076 [00:00<00:06, 77428.68it/s]  7%|▋         | 40533/552076 [00:00<00:06, 80602.43it/s]  9%|▊         | 47561/552076 [00:00<00:06, 73773.09it/s] 10%|█         | 56265/552076 [00:00<00:06, 77307.64it/s] 12%|█▏        | 65574/552076 [00:00<00:05, 81449.74it/s] 13%|█▎        | 74476/552076 [00:00<00:05, 80433.25it/s] 15%|█▍        | 82377/552076 [00:01<00:06, 77800.38it/s] 16%|█▋        | 90852/552076 [00:01<00:05, 79761.04it/s] 18%|█▊        | 100670/552076 [00:01<00:05, 84516.89it/s] 20%|██        | 111452/552076 [00:01<00:04, 90376.03it/s] 22%|██▏       | 122290/552076 [00:01<00:04, 95115.52it/s] 24%|██▍       | 134245/552076 [00:01<00:04, 101327.39it/s] 26%|██▌       | 144745/552076 [00:01<00:03, 102399.87it/s] 28%|██▊       | 155148/552076 [00:01<00:04, 92673.46it/s]  30%|███       | 167030/552076 [00:01<00:03, 99222.73it/s] 32%|███▏      | 177285/552076 [00:01<00:03, 97455.71it/s] 34%|███▍      | 188006/552076 [00:02<00:03, 100189.82it/s] 36%|███▌      | 199043/552076 [00:02<00:03, 103038.77it/s] 38%|███▊      | 210159/552076 [00:02<00:03, 105346.06it/s] 40%|████      | 222293/552076 [00:02<00:03, 109682.76it/s] 42%|████▏     | 234027/552076 [00:02<00:02, 111870.87it/s] 44%|████▍     | 245399/552076 [00:02<00:02, 112418.03it/s] 47%|████▋     | 257639/552076 [00:02<00:02, 115235.70it/s] 49%|████▉     | 269231/552076 [00:02<00:02, 96538.21it/s]  51%|█████     | 279446/552076 [00:02<00:02, 95799.01it/s] 53%|█████▎    | 291902/552076 [00:03<00:02, 102927.12it/s] 55%|█████▌    | 304235/552076 [00:03<00:02, 108301.84it/s] 57%|█████▋    | 316673/552076 [00:03<00:02, 112669.86it/s] 59%|█████▉    | 328247/552076 [00:03<00:02, 106517.78it/s] 62%|██████▏   | 339779/552076 [00:03<00:01, 109013.57it/s] 64%|██████▍   | 352261/552076 [00:03<00:01, 113318.07it/s] 66%|██████▌   | 364825/552076 [00:03<00:01, 116750.96it/s] 68%|██████▊   | 377278/552076 [00:03<00:01, 118978.43it/s] 71%|███████   | 389812/552076 [00:03<00:01, 120816.75it/s] 73%|███████▎  | 402263/552076 [00:03<00:01, 121899.41it/s] 75%|███████▌  | 414775/552076 [00:04<00:01, 122846.79it/s] 77%|███████▋  | 427244/552076 [00:04<00:01, 123391.59it/s] 80%|███████▉  | 439710/552076 [00:04<00:00, 123766.71it/s] 82%|████████▏ | 452166/552076 [00:04<00:00, 124002.61it/s] 84%|████████▍ | 464584/552076 [00:04<00:00, 121944.71it/s] 86%|████████▋ | 476959/552076 [00:04<00:00, 122480.52it/s] 89%|████████▊ | 489506/552076 [00:04<00:00, 123361.03it/s] 91%|█████████ | 501985/552076 [00:04<00:00, 123783.24it/s] 93%|█████████▎| 514533/552076 [00:04<00:00, 124284.91it/s] 95%|█████████▌| 527088/552076 [00:04<00:00, 124661.34it/s] 98%|█████████▊| 539624/552076 [00:05<00:00, 124867.31it/s]100%|██████████| 552076/552076 [00:05<00:00, 106333.31it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9004/552076 [00:00<00:06, 90034.93it/s]  4%|▍         | 21199/552076 [00:00<00:05, 97705.48it/s]  6%|▌         | 33202/552076 [00:00<00:05, 103478.61it/s]  7%|▋         | 40717/552076 [00:00<00:05, 89899.85it/s]   9%|▉         | 52413/552076 [00:00<00:05, 96604.77it/s] 12%|█▏        | 64415/552076 [00:00<00:04, 102608.71it/s] 14%|█▍        | 76256/552076 [00:00<00:04, 106886.06it/s] 16%|█▌        | 86993/552076 [00:00<00:04, 107030.66it/s] 18%|█▊        | 97423/552076 [00:00<00:04, 100922.59it/s] 20%|█▉        | 108463/552076 [00:01<00:04, 103588.59it/s] 22%|██▏       | 118987/552076 [00:01<00:04, 104078.14it/s] 23%|██▎       | 129349/552076 [00:01<00:04, 101627.96it/s] 25%|██▌       | 139884/552076 [00:01<00:04, 102715.61it/s] 28%|██▊       | 152001/552076 [00:01<00:03, 107631.07it/s] 29%|██▉       | 162819/552076 [00:01<00:04, 96971.52it/s]  31%|███▏      | 172755/552076 [00:01<00:03, 96045.64it/s] 33%|███▎      | 182529/552076 [00:01<00:04, 76761.37it/s] 35%|███▍      | 190939/552076 [00:01<00:04, 75087.77it/s] 36%|███▌      | 198970/552076 [00:02<00:04, 72850.20it/s] 37%|███▋      | 206635/552076 [00:02<00:05, 59605.10it/s] 39%|███▊      | 213256/552076 [00:02<00:06, 55955.11it/s] 40%|███▉      | 219360/552076 [00:02<00:05, 55673.04it/s] 41%|████      | 225284/552076 [00:02<00:06, 48347.98it/s] 42%|████▏     | 233677/552076 [00:02<00:05, 55392.49it/s] 43%|████▎     | 239931/552076 [00:02<00:05, 57358.60it/s] 45%|████▌     | 251008/552076 [00:02<00:04, 66565.19it/s] 47%|████▋     | 260180/552076 [00:03<00:04, 72532.67it/s] 49%|████▉     | 272649/552076 [00:03<00:03, 82940.12it/s] 51%|█████     | 282012/552076 [00:03<00:03, 69869.75it/s] 53%|█████▎    | 290099/552076 [00:03<00:04, 55655.29it/s] 54%|█████▍    | 296892/552076 [00:03<00:04, 58678.72it/s] 55%|█████▌    | 303663/552076 [00:03<00:04, 60959.41it/s] 56%|█████▌    | 310414/552076 [00:03<00:04, 50715.18it/s] 57%|█████▋    | 316233/552076 [00:04<00:05, 44119.96it/s] 58%|█████▊    | 321763/552076 [00:04<00:04, 46967.05it/s] 59%|█████▉    | 328442/552076 [00:04<00:04, 51556.60it/s] 61%|██████    | 334100/552076 [00:04<00:04, 52229.16it/s] 62%|██████▏   | 340822/552076 [00:04<00:03, 55973.76it/s] 63%|██████▎   | 346743/552076 [00:04<00:03, 56169.68it/s] 64%|██████▍   | 352587/552076 [00:04<00:03, 55357.42it/s] 65%|██████▍   | 358284/552076 [00:04<00:03, 52639.26it/s] 66%|██████▌   | 364967/552076 [00:04<00:03, 56218.42it/s] 67%|██████▋   | 371659/552076 [00:05<00:03, 59050.26it/s] 69%|██████▊   | 378292/552076 [00:05<00:02, 61060.34it/s] 70%|██████▉   | 384524/552076 [00:05<00:02, 60701.06it/s] 71%|███████   | 390683/552076 [00:05<00:02, 59694.15it/s] 72%|███████▏  | 396718/552076 [00:05<00:02, 57953.40it/s] 73%|███████▎  | 403425/552076 [00:05<00:02, 60414.77it/s] 74%|███████▍  | 409988/552076 [00:05<00:02, 61888.19it/s] 75%|███████▌  | 416233/552076 [00:05<00:02, 61061.94it/s] 77%|███████▋  | 422381/552076 [00:05<00:02, 56489.37it/s] 78%|███████▊  | 428257/552076 [00:06<00:02, 57150.26it/s] 79%|███████▊  | 434191/552076 [00:06<00:02, 57787.83it/s] 80%|███████▉  | 440170/552076 [00:06<00:01, 58373.21it/s] 81%|████████  | 446045/552076 [00:06<00:01, 56424.31it/s] 82%|████████▏ | 452735/552076 [00:06<00:01, 59203.93it/s] 83%|████████▎ | 459181/552076 [00:06<00:01, 60687.98it/s] 84%|████████▍ | 465304/552076 [00:06<00:01, 59537.75it/s] 85%|████████▌ | 471301/552076 [00:06<00:01, 59598.63it/s] 87%|████████▋ | 477925/552076 [00:06<00:01, 61445.99it/s] 88%|████████▊ | 484105/552076 [00:06<00:01, 58808.23it/s] 89%|████████▉ | 490807/552076 [00:07<00:01, 61050.75it/s] 90%|█████████ | 496969/552076 [00:07<00:00, 57617.52it/s] 91%|█████████ | 502810/552076 [00:07<00:00, 54567.33it/s] 92%|█████████▏| 508356/552076 [00:07<00:00, 52053.40it/s] 93%|█████████▎| 515031/552076 [00:07<00:00, 55732.89it/s] 94%|█████████▍| 521700/552076 [00:07<00:00, 58620.39it/s] 96%|█████████▌| 527696/552076 [00:07<00:00, 55947.24it/s] 97%|█████████▋| 534008/552076 [00:07<00:00, 56929.37it/s] 98%|█████████▊| 539789/552076 [00:07<00:00, 56638.72it/s] 99%|█████████▉| 546517/552076 [00:08<00:00, 59459.80it/s]100%|██████████| 552076/552076 [00:08<00:00, 67719.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4290/552076 [00:00<00:13, 41353.58it/s]  2%|▏         | 8483/552076 [00:00<00:13, 41524.35it/s]  2%|▏         | 13737/552076 [00:00<00:12, 44310.69it/s]  4%|▎         | 19675/552076 [00:00<00:11, 47961.69it/s]  5%|▍         | 26333/552076 [00:00<00:10, 52353.71it/s]  6%|▌         | 32887/552076 [00:00<00:09, 55715.64it/s]  7%|▋         | 38755/552076 [00:00<00:09, 56572.05it/s]  9%|▉         | 49323/552076 [00:00<00:07, 65734.95it/s] 11%|█         | 61452/552076 [00:00<00:06, 76205.45it/s] 13%|█▎        | 72826/552076 [00:01<00:05, 84577.99it/s] 15%|█▍        | 82212/552076 [00:01<00:05, 82492.04it/s] 17%|█▋        | 94421/552076 [00:01<00:05, 91383.18it/s] 19%|█▉        | 104321/552076 [00:01<00:04, 93430.96it/s] 21%|██        | 116368/552076 [00:01<00:04, 100174.51it/s] 23%|██▎       | 126904/552076 [00:01<00:04, 100211.92it/s] 25%|██▍       | 137288/552076 [00:01<00:04, 100810.26it/s] 27%|██▋       | 149359/552076 [00:01<00:03, 106053.44it/s] 29%|██▉       | 161334/552076 [00:01<00:03, 109819.39it/s] 31%|███▏      | 173716/552076 [00:01<00:03, 113675.26it/s] 34%|███▎      | 185265/552076 [00:02<00:03, 106909.75it/s] 36%|███▌      | 197132/552076 [00:02<00:03, 109583.97it/s] 38%|███▊      | 209193/552076 [00:02<00:03, 112671.75it/s] 40%|███▉      | 220597/552076 [00:02<00:02, 113016.20it/s] 42%|████▏     | 232945/552076 [00:02<00:02, 115962.59it/s] 44%|████▍     | 244838/552076 [00:02<00:02, 116837.02it/s] 46%|████▋     | 256584/552076 [00:02<00:02, 116976.99it/s] 49%|████▊     | 269022/552076 [00:02<00:02, 119101.83it/s] 51%|█████     | 281519/552076 [00:02<00:02, 120802.96it/s] 53%|█████▎    | 294002/552076 [00:02<00:02, 121983.21it/s] 56%|█████▌    | 306533/552076 [00:03<00:01, 122960.86it/s] 58%|█████▊    | 319160/552076 [00:03<00:01, 123933.98it/s] 60%|██████    | 331694/552076 [00:03<00:01, 124352.05it/s] 62%|██████▏   | 344198/552076 [00:03<00:01, 124555.55it/s] 65%|██████▍   | 356668/552076 [00:03<00:01, 124597.90it/s] 67%|██████▋   | 369134/552076 [00:03<00:01, 124377.78it/s] 69%|██████▉   | 381576/552076 [00:03<00:01, 124075.33it/s] 71%|███████▏  | 393987/552076 [00:03<00:01, 124001.17it/s] 74%|███████▎  | 406468/552076 [00:03<00:01, 124240.27it/s] 76%|███████▌  | 418894/552076 [00:03<00:01, 121233.54it/s] 78%|███████▊  | 431445/552076 [00:04<00:00, 122484.83it/s] 80%|████████  | 443922/552076 [00:04<00:00, 123161.49it/s] 83%|████████▎ | 456250/552076 [00:04<00:00, 123188.78it/s] 85%|████████▍ | 468577/552076 [00:04<00:00, 111336.81it/s] 87%|████████▋ | 479934/552076 [00:04<00:00, 94717.91it/s]  89%|████████▉ | 489992/552076 [00:04<00:00, 73109.10it/s] 90%|█████████ | 498464/552076 [00:04<00:00, 75365.77it/s] 92%|█████████▏| 506831/552076 [00:05<00:00, 71538.45it/s] 93%|█████████▎| 514607/552076 [00:05<00:00, 72387.67it/s] 95%|█████████▍| 522284/552076 [00:05<00:00, 61245.24it/s] 97%|█████████▋| 534640/552076 [00:05<00:00, 72162.53it/s] 99%|█████████▊| 544257/552076 [00:05<00:00, 77704.29it/s]100%|██████████| 552076/552076 [00:05<00:00, 98532.89it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6572/552076 [00:00<00:08, 65715.52it/s]  2%|▏         | 9817/552076 [00:00<00:10, 49370.03it/s]  2%|▏         | 13559/552076 [00:00<00:12, 44573.31it/s]  3%|▎         | 18815/552076 [00:00<00:11, 46540.38it/s]  4%|▍         | 22270/552076 [00:00<00:12, 41629.02it/s]  5%|▍         | 26682/552076 [00:00<00:12, 40880.34it/s]  6%|▌         | 33745/552076 [00:00<00:11, 46792.44it/s]  7%|▋         | 40135/552076 [00:00<00:10, 50878.12it/s]  9%|▉         | 49661/552076 [00:00<00:08, 59144.35it/s] 11%|█         | 60034/552076 [00:01<00:07, 67899.32it/s] 12%|█▏        | 68548/552076 [00:01<00:06, 72289.70it/s] 15%|█▍        | 80835/552076 [00:01<00:05, 82473.93it/s] 16%|█▋        | 90051/552076 [00:01<00:05, 81579.23it/s] 18%|█▊        | 98889/552076 [00:01<00:06, 72965.79it/s] 19%|█▉        | 106832/552076 [00:01<00:06, 69226.20it/s] 21%|██        | 116176/552076 [00:01<00:05, 75060.26it/s] 23%|██▎       | 124557/552076 [00:01<00:05, 77486.55it/s] 24%|██▍       | 134361/552076 [00:01<00:05, 82685.71it/s] 27%|██▋       | 146588/552076 [00:02<00:04, 91579.45it/s] 29%|██▊       | 157477/552076 [00:02<00:04, 96164.16it/s] 30%|███       | 167534/552076 [00:02<00:04, 87871.58it/s] 32%|███▏      | 176769/552076 [00:02<00:04, 77742.10it/s] 34%|███▎      | 185071/552076 [00:02<00:05, 71964.37it/s] 35%|███▌      | 193925/552076 [00:02<00:04, 76246.08it/s] 37%|███▋      | 205586/552076 [00:02<00:04, 85081.03it/s] 39%|███▉      | 215396/552076 [00:02<00:03, 88606.87it/s] 41%|████▏     | 227763/552076 [00:02<00:03, 96842.76it/s] 43%|████▎     | 239497/552076 [00:03<00:03, 102197.96it/s] 46%|████▌     | 251663/552076 [00:03<00:02, 107348.48it/s] 48%|████▊     | 262791/552076 [00:03<00:02, 106339.79it/s] 50%|████▉     | 274275/552076 [00:03<00:02, 108752.40it/s] 52%|█████▏    | 286239/552076 [00:03<00:02, 111409.38it/s] 54%|█████▍    | 297542/552076 [00:03<00:02, 103636.19it/s] 56%|█████▌    | 308779/552076 [00:03<00:02, 106108.04it/s] 58%|█████▊    | 320313/552076 [00:03<00:02, 108715.95it/s] 60%|██████    | 331320/552076 [00:03<00:02, 108756.39it/s] 62%|██████▏   | 342612/552076 [00:03<00:01, 109971.91it/s] 64%|██████▍   | 353918/552076 [00:04<00:01, 110878.10it/s] 66%|██████▌   | 365217/552076 [00:04<00:01, 111502.18it/s] 68%|██████▊   | 376545/552076 [00:04<00:01, 112027.61it/s] 70%|███████   | 387774/552076 [00:04<00:01, 112059.34it/s] 72%|███████▏  | 399099/552076 [00:04<00:01, 112411.86it/s] 74%|███████▍  | 410427/552076 [00:04<00:01, 112669.49it/s] 76%|███████▋  | 421704/552076 [00:04<00:01, 112603.39it/s] 78%|███████▊  | 432971/552076 [00:04<00:01, 112583.47it/s] 81%|████████  | 444503/552076 [00:04<00:00, 113389.61it/s] 83%|████████▎ | 456459/552076 [00:04<00:00, 115170.14it/s] 85%|████████▍ | 468561/552076 [00:05<00:00, 116864.31it/s] 87%|████████▋ | 480655/552076 [00:05<00:00, 118056.76it/s] 89%|████████▉ | 492473/552076 [00:05<00:00, 115555.05it/s] 91%|█████████▏| 504049/552076 [00:05<00:00, 102765.36it/s] 93%|█████████▎| 514603/552076 [00:05<00:00, 98637.00it/s]  95%|█████████▌| 525831/552076 [00:05<00:00, 102367.77it/s] 97%|█████████▋| 538069/552076 [00:05<00:00, 107646.96it/s]100%|█████████▉| 550354/552076 [00:05<00:00, 111796.11it/s]100%|██████████| 552076/552076 [00:05<00:00, 94205.10it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12084/552076 [00:00<00:04, 120837.81it/s]  4%|▎         | 20167/552076 [00:00<00:05, 105213.00it/s]  6%|▌         | 31386/552076 [00:00<00:04, 107212.40it/s]  8%|▊         | 43405/552076 [00:00<00:04, 110799.47it/s]  9%|▉         | 51798/552076 [00:00<00:05, 96868.76it/s]  11%|█▏        | 62833/552076 [00:00<00:04, 100553.61it/s] 13%|█▎        | 72709/552076 [00:00<00:04, 100006.58it/s] 15%|█▌        | 84809/552076 [00:00<00:04, 105495.44it/s] 18%|█▊        | 96857/552076 [00:00<00:04, 109583.94it/s] 20%|█▉        | 107656/552076 [00:01<00:04, 109100.16it/s] 22%|██▏       | 120037/552076 [00:01<00:03, 113130.57it/s] 24%|██▍       | 131875/552076 [00:01<00:03, 114654.46it/s] 26%|██▌       | 144295/552076 [00:01<00:03, 117360.13it/s] 28%|██▊       | 156155/552076 [00:01<00:03, 117196.44it/s] 31%|███       | 168495/552076 [00:01<00:03, 118988.25it/s] 33%|███▎      | 180388/552076 [00:01<00:03, 114925.93it/s] 35%|███▍      | 192199/552076 [00:01<00:03, 115862.69it/s] 37%|███▋      | 203806/552076 [00:01<00:03, 115781.00it/s] 39%|███▉      | 216244/552076 [00:01<00:02, 118231.40it/s] 41%|████▏     | 228278/552076 [00:02<00:02, 118854.70it/s] 44%|████▎     | 240788/552076 [00:02<00:02, 120660.69it/s] 46%|████▌     | 253296/552076 [00:02<00:02, 121951.84it/s] 48%|████▊     | 265773/552076 [00:02<00:02, 122782.14it/s] 50%|█████     | 278268/552076 [00:02<00:02, 123422.67it/s] 53%|█████▎    | 290620/552076 [00:02<00:02, 114798.62it/s] 55%|█████▍    | 303074/552076 [00:02<00:02, 117556.73it/s] 57%|█████▋    | 315095/552076 [00:02<00:02, 118339.70it/s] 59%|█████▉    | 327482/552076 [00:02<00:01, 119945.60it/s] 62%|██████▏   | 339535/552076 [00:02<00:01, 119463.80it/s] 64%|██████▍   | 351987/552076 [00:03<00:01, 120934.19it/s] 66%|██████▌   | 364401/552076 [00:03<00:01, 121875.88it/s] 68%|██████▊   | 376937/552076 [00:03<00:01, 122898.75it/s] 71%|███████   | 389543/552076 [00:03<00:01, 123829.78it/s] 73%|███████▎  | 401942/552076 [00:03<00:01, 123333.86it/s] 75%|███████▌  | 414308/552076 [00:03<00:01, 123429.97it/s] 77%|███████▋  | 426659/552076 [00:03<00:01, 122314.49it/s] 79%|███████▉  | 438899/552076 [00:03<00:00, 116954.10it/s] 82%|████████▏ | 450971/552076 [00:03<00:00, 118058.83it/s] 84%|████████▍ | 462818/552076 [00:03<00:00, 111301.97it/s] 86%|████████▌ | 474837/552076 [00:04<00:00, 113823.55it/s] 88%|████████▊ | 486310/552076 [00:04<00:00, 108300.06it/s] 90%|█████████ | 498641/552076 [00:04<00:00, 112404.18it/s] 92%|█████████▏| 510005/552076 [00:04<00:00, 106970.76it/s] 94%|█████████▍| 520844/552076 [00:04<00:00, 104655.96it/s] 96%|█████████▋| 531420/552076 [00:04<00:00, 85131.29it/s]  98%|█████████▊| 540603/552076 [00:04<00:00, 81192.11it/s]100%|█████████▉| 550914/552076 [00:04<00:00, 85062.54it/s]100%|██████████| 552076/552076 [00:04<00:00, 111003.46it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12131/552076 [00:00<00:04, 121304.33it/s]  4%|▎         | 19865/552076 [00:00<00:05, 103629.94it/s]  6%|▌         | 31214/552076 [00:00<00:04, 106403.20it/s]  8%|▊         | 42889/552076 [00:00<00:04, 109309.16it/s] 10%|▉         | 55200/552076 [00:00<00:04, 113111.76it/s] 12%|█▏        | 64683/552076 [00:00<00:04, 103220.10it/s] 13%|█▎        | 73893/552076 [00:00<00:05, 92507.42it/s]  15%|█▍        | 82791/552076 [00:00<00:05, 88223.36it/s] 17%|█▋        | 91257/552076 [00:00<00:05, 77017.23it/s] 19%|█▉        | 103647/552076 [00:01<00:05, 86878.44it/s] 21%|██        | 114325/552076 [00:01<00:04, 92023.80it/s] 22%|██▏       | 123908/552076 [00:01<00:05, 75366.79it/s] 24%|██▍       | 132206/552076 [00:01<00:06, 67336.81it/s] 26%|██▌       | 144577/552076 [00:01<00:05, 77999.14it/s] 28%|██▊       | 157052/552076 [00:01<00:04, 87878.34it/s] 31%|███       | 169421/552076 [00:01<00:03, 96235.98it/s] 33%|███▎      | 180117/552076 [00:01<00:04, 91561.30it/s] 35%|███▍      | 192068/552076 [00:02<00:03, 97622.63it/s] 37%|███▋      | 202500/552076 [00:02<00:04, 87009.32it/s] 39%|███▉      | 217417/552076 [00:02<00:03, 99440.59it/s] 41%|████▏     | 228462/552076 [00:02<00:03, 95317.23it/s] 43%|████▎     | 238801/552076 [00:02<00:03, 94142.92it/s] 46%|████▌     | 251681/552076 [00:02<00:02, 102408.19it/s] 49%|████▉     | 270821/552076 [00:02<00:02, 119007.18it/s] 51%|█████▏    | 284159/552076 [00:02<00:02, 113279.92it/s] 54%|█████▎    | 296551/552076 [00:03<00:02, 96420.20it/s]  56%|█████▌    | 308297/552076 [00:03<00:02, 101895.35it/s] 59%|█████▉    | 326996/552076 [00:03<00:01, 118005.37it/s] 63%|██████▎   | 346215/552076 [00:03<00:01, 133459.11it/s] 65%|██████▌   | 361346/552076 [00:03<00:01, 135334.59it/s] 69%|██████▉   | 382331/552076 [00:03<00:01, 151467.42it/s] 72%|███████▏  | 398979/552076 [00:03<00:01, 146330.57it/s] 76%|███████▌  | 420827/552076 [00:03<00:00, 162420.44it/s] 80%|████████  | 444065/552076 [00:03<00:00, 178544.47it/s] 84%|████████▍ | 465506/552076 [00:03<00:00, 187976.08it/s] 88%|████████▊ | 486390/552076 [00:04<00:00, 193782.65it/s] 92%|█████████▏| 506597/552076 [00:04<00:00, 194525.70it/s] 95%|█████████▌| 526630/552076 [00:04<00:00, 188179.52it/s] 99%|█████████▉| 547049/552076 [00:04<00:00, 192711.04it/s]100%|██████████| 552076/552076 [00:04<00:00, 124830.04it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15559/552076 [00:00<00:03, 155586.44it/s]  7%|▋         | 36081/552076 [00:00<00:03, 167756.60it/s] 11%|█         | 59566/552076 [00:00<00:02, 183481.62it/s] 15%|█▌        | 82924/552076 [00:00<00:02, 196098.11it/s] 19%|█▉        | 104099/552076 [00:00<00:02, 200542.82it/s] 23%|██▎       | 124559/552076 [00:00<00:02, 201742.04it/s] 26%|██▌       | 144566/552076 [00:00<00:02, 201235.10it/s] 30%|██▉       | 164413/552076 [00:00<00:01, 200394.96it/s] 33%|███▎      | 184703/552076 [00:00<00:01, 201139.30it/s] 37%|███▋      | 204868/552076 [00:01<00:01, 201290.14it/s] 41%|████      | 224644/552076 [00:01<00:01, 195470.30it/s] 44%|████▍     | 243981/552076 [00:01<00:01, 187550.20it/s] 48%|████▊     | 263480/552076 [00:01<00:01, 189719.25it/s] 51%|█████▏    | 283016/552076 [00:01<00:01, 191376.49it/s] 55%|█████▍    | 302772/552076 [00:01<00:01, 193188.41it/s] 58%|█████▊    | 322074/552076 [00:01<00:01, 191924.48it/s] 62%|██████▏   | 341823/552076 [00:01<00:01, 193560.16it/s] 66%|██████▌   | 361930/552076 [00:01<00:00, 195751.96it/s] 69%|██████▉   | 382583/552076 [00:01<00:00, 198863.24it/s] 73%|███████▎  | 402484/552076 [00:02<00:00, 197701.72it/s] 77%|███████▋  | 422769/552076 [00:02<00:00, 199217.49it/s] 80%|████████  | 443439/552076 [00:02<00:00, 201402.13it/s] 84%|████████▍ | 464283/552076 [00:02<00:00, 203461.43it/s] 88%|████████▊ | 485210/552076 [00:02<00:00, 205169.77it/s] 92%|█████████▏| 505741/552076 [00:02<00:00, 204952.53it/s] 95%|█████████▌| 526452/552076 [00:02<00:00, 205593.34it/s] 99%|█████████▉| 547019/552076 [00:02<00:00, 203509.51it/s]100%|██████████| 552076/552076 [00:02<00:00, 200445.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19645/552076 [00:00<00:02, 196447.38it/s]  7%|▋         | 40440/552076 [00:00<00:02, 199760.29it/s] 11%|█         | 60631/552076 [00:00<00:02, 200397.31it/s] 15%|█▍        | 80326/552076 [00:00<00:02, 199350.14it/s] 18%|█▊        | 100601/552076 [00:00<00:02, 200356.70it/s] 22%|██▏       | 120759/552076 [00:00<00:02, 200721.33it/s] 26%|██▌       | 140793/552076 [00:00<00:02, 200604.25it/s] 29%|██▉       | 161276/552076 [00:00<00:01, 201852.76it/s] 33%|███▎      | 182366/552076 [00:00<00:01, 204482.01it/s] 37%|███▋      | 203563/552076 [00:01<00:01, 206670.73it/s] 41%|████      | 225249/552076 [00:01<00:01, 209622.70it/s] 45%|████▍     | 247282/552076 [00:01<00:01, 212721.86it/s] 49%|████▉     | 271501/552076 [00:01<00:01, 220778.86it/s] 53%|█████▎    | 295033/552076 [00:01<00:01, 224947.62it/s] 58%|█████▊    | 317481/552076 [00:01<00:01, 161905.16it/s] 61%|██████    | 336132/552076 [00:01<00:01, 117965.90it/s] 64%|██████▎   | 351354/552076 [00:02<00:02, 98687.20it/s]  66%|██████▌   | 364153/552076 [00:02<00:02, 89473.07it/s] 68%|██████▊   | 375317/552076 [00:02<00:02, 82208.75it/s] 70%|██████▉   | 385205/552076 [00:02<00:02, 65930.08it/s] 72%|███████▏  | 395960/552076 [00:02<00:02, 74589.39it/s] 73%|███████▎  | 404979/552076 [00:02<00:02, 63279.20it/s] 75%|███████▍  | 412695/552076 [00:03<00:02, 63713.17it/s] 76%|███████▌  | 420039/552076 [00:03<00:02, 64548.05it/s] 78%|███████▊  | 431117/552076 [00:03<00:01, 73785.36it/s] 82%|████████▏ | 450192/552076 [00:03<00:01, 90418.18it/s] 85%|████████▌ | 469633/552076 [00:03<00:00, 107700.46it/s] 88%|████████▊ | 487921/552076 [00:03<00:00, 122851.17it/s] 92%|█████████▏| 508201/552076 [00:03<00:00, 139328.57it/s] 96%|█████████▌| 530245/552076 [00:03<00:00, 156616.47it/s]100%|█████████▉| 551330/552076 [00:03<00:00, 169711.22it/s]100%|██████████| 552076/552076 [00:03<00:00, 142226.55it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21200/552076 [00:00<00:02, 211994.64it/s]  8%|▊         | 44723/552076 [00:00<00:02, 218467.02it/s] 12%|█▏        | 68002/552076 [00:00<00:02, 222570.25it/s] 16%|█▋        | 89992/552076 [00:00<00:02, 221760.86it/s] 20%|██        | 110688/552076 [00:00<00:02, 217101.10it/s] 24%|██▎       | 131034/552076 [00:00<00:01, 212820.24it/s] 27%|██▋       | 151650/552076 [00:00<00:01, 210775.47it/s] 31%|███       | 171024/552076 [00:00<00:01, 192218.64it/s] 35%|███▍      | 190513/552076 [00:00<00:01, 193009.64it/s] 38%|███▊      | 211353/552076 [00:01<00:01, 197380.98it/s] 42%|████▏     | 232672/552076 [00:01<00:01, 201870.86it/s] 46%|████▌     | 253132/552076 [00:01<00:01, 202680.40it/s] 50%|████▉     | 273759/552076 [00:01<00:01, 203741.71it/s] 53%|█████▎    | 294320/552076 [00:01<00:01, 204296.79it/s] 57%|█████▋    | 314663/552076 [00:01<00:01, 203786.63it/s] 61%|██████    | 335935/552076 [00:01<00:01, 206379.60it/s] 65%|██████▍   | 357421/552076 [00:01<00:00, 208849.45it/s] 69%|██████▊   | 378914/552076 [00:01<00:00, 210634.29it/s] 73%|███████▎  | 400406/552076 [00:01<00:00, 211900.51it/s] 76%|███████▋  | 421597/552076 [00:02<00:00, 211901.75it/s] 80%|████████  | 442785/552076 [00:02<00:00, 209403.27it/s] 84%|████████▍ | 463947/552076 [00:02<00:00, 210060.77it/s] 88%|████████▊ | 484957/552076 [00:02<00:00, 207476.85it/s] 92%|█████████▏| 505715/552076 [00:02<00:00, 203927.49it/s] 95%|█████████▌| 526129/552076 [00:02<00:00, 201615.59it/s] 99%|█████████▉| 546311/552076 [00:02<00:00, 201486.83it/s]100%|██████████| 552076/552076 [00:02<00:00, 206992.57it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20732/552076 [00:00<00:02, 207310.81it/s]  8%|▊         | 43411/552076 [00:00<00:02, 212792.84it/s] 12%|█▏        | 66716/552076 [00:00<00:02, 218489.06it/s] 16%|█▌        | 89708/552076 [00:00<00:02, 221796.64it/s] 20%|██        | 112435/552076 [00:00<00:01, 223408.79it/s] 24%|██▍       | 134716/552076 [00:00<00:01, 223227.12it/s] 28%|██▊       | 156522/552076 [00:00<00:01, 221649.58it/s] 32%|███▏      | 177003/552076 [00:00<00:02, 178341.13it/s] 35%|███▌      | 195015/552076 [00:01<00:02, 143033.73it/s] 38%|███▊      | 210559/552076 [00:01<00:02, 118813.81it/s] 42%|████▏     | 230746/552076 [00:01<00:02, 135543.55it/s] 45%|████▌     | 250790/552076 [00:01<00:02, 150124.68it/s] 49%|████▉     | 271339/552076 [00:01<00:01, 163325.41it/s] 53%|█████▎    | 291490/552076 [00:01<00:01, 173168.79it/s] 57%|█████▋    | 314554/552076 [00:01<00:01, 187158.34it/s] 61%|██████    | 337402/552076 [00:01<00:01, 197893.64it/s] 65%|██████▌   | 358926/552076 [00:01<00:00, 202795.94it/s] 69%|██████▉   | 379955/552076 [00:02<00:00, 204348.66it/s] 73%|███████▎  | 400917/552076 [00:02<00:00, 203923.08it/s] 76%|███████▋  | 422266/552076 [00:02<00:00, 206698.81it/s] 80%|████████  | 443519/552076 [00:02<00:00, 208411.57it/s] 85%|████████▍ | 467127/552076 [00:02<00:00, 216006.09it/s] 89%|████████▉ | 490381/552076 [00:02<00:00, 220711.67it/s] 93%|█████████▎| 512621/552076 [00:02<00:00, 191854.54it/s] 97%|█████████▋| 534550/552076 [00:02<00:00, 199333.97it/s]100%|██████████| 552076/552076 [00:02<00:00, 188482.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14722/552076 [00:00<00:03, 147214.88it/s]  5%|▍         | 26997/552076 [00:00<00:03, 138909.15it/s]  7%|▋         | 40670/552076 [00:00<00:03, 138245.09it/s]  9%|▉         | 49514/552076 [00:00<00:04, 114482.98it/s] 12%|█▏        | 65469/552076 [00:00<00:03, 125080.04it/s] 14%|█▍        | 78734/552076 [00:00<00:03, 127256.58it/s] 16%|█▋        | 90299/552076 [00:00<00:03, 120989.89it/s] 18%|█▊        | 101650/552076 [00:00<00:03, 118142.60it/s] 20%|██        | 112956/552076 [00:01<00:04, 90353.03it/s]  23%|██▎       | 125381/552076 [00:01<00:04, 98406.83it/s] 25%|██▍       | 135874/552076 [00:01<00:04, 99114.67it/s] 28%|██▊       | 155176/552076 [00:01<00:03, 116052.14it/s] 30%|███       | 168225/552076 [00:01<00:03, 119005.17it/s] 34%|███▍      | 190321/552076 [00:01<00:02, 138124.97it/s] 38%|███▊      | 212510/552076 [00:01<00:02, 155765.33it/s] 42%|████▏     | 234442/552076 [00:01<00:01, 170594.18it/s] 46%|████▌     | 255231/552076 [00:01<00:01, 180296.27it/s] 50%|█████     | 276148/552076 [00:01<00:01, 188082.86it/s] 54%|█████▍    | 296943/552076 [00:02<00:01, 193631.80it/s] 58%|█████▊    | 317713/552076 [00:02<00:01, 197646.17it/s] 61%|██████▏   | 338339/552076 [00:02<00:01, 200150.96it/s] 65%|██████▌   | 359077/552076 [00:02<00:00, 202265.68it/s] 69%|██████▉   | 379912/552076 [00:02<00:00, 204051.96it/s] 73%|███████▎  | 400570/552076 [00:02<00:00, 204803.33it/s] 76%|███████▋  | 421201/552076 [00:02<00:00, 194338.56it/s] 80%|███████▉  | 440852/552076 [00:02<00:00, 190901.51it/s] 83%|████████▎ | 460925/552076 [00:02<00:00, 193745.00it/s] 87%|████████▋ | 481371/552076 [00:02<00:00, 196839.21it/s] 91%|█████████ | 501814/552076 [00:03<00:00, 199056.09it/s] 95%|█████████▍| 522369/552076 [00:03<00:00, 200959.14it/s] 98%|█████████▊| 542910/552076 [00:03<00:00, 202273.64it/s]100%|██████████| 552076/552076 [00:03<00:00, 167915.43it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19335/552076 [00:00<00:02, 193346.50it/s]  7%|▋         | 39113/552076 [00:00<00:02, 194653.81it/s] 11%|█         | 58894/552076 [00:00<00:02, 195586.78it/s] 14%|█▍        | 79092/552076 [00:00<00:02, 197459.41it/s] 18%|█▊        | 99275/552076 [00:00<00:02, 198748.68it/s] 22%|██▏       | 119263/552076 [00:00<00:02, 199085.93it/s] 25%|██▌       | 139165/552076 [00:00<00:02, 199065.92it/s] 29%|██▊       | 158428/552076 [00:00<00:01, 197089.05it/s] 32%|███▏      | 178494/552076 [00:00<00:01, 198145.30it/s] 36%|███▌      | 198314/552076 [00:01<00:01, 198161.62it/s] 39%|███▉      | 217589/552076 [00:01<00:01, 194479.75it/s] 43%|████▎     | 236953/552076 [00:01<00:01, 193774.19it/s] 47%|████▋     | 256966/552076 [00:01<00:01, 195636.96it/s] 50%|█████     | 277027/552076 [00:01<00:01, 197101.74it/s] 54%|█████▍    | 297035/552076 [00:01<00:01, 197983.96it/s] 58%|█████▊    | 317522/552076 [00:01<00:01, 200000.45it/s] 61%|██████▏   | 338527/552076 [00:01<00:01, 202910.97it/s] 65%|██████▌   | 359262/552076 [00:01<00:00, 204221.79it/s] 69%|██████▉   | 379922/552076 [00:01<00:00, 204928.38it/s] 73%|███████▎  | 400521/552076 [00:02<00:00, 205242.11it/s] 76%|███████▋  | 421188/552076 [00:02<00:00, 205667.44it/s] 80%|████████  | 441750/552076 [00:02<00:00, 205140.95it/s] 84%|████████▍ | 462587/552076 [00:02<00:00, 206096.98it/s] 88%|████████▊ | 484599/552076 [00:02<00:00, 210110.25it/s] 92%|█████████▏| 506973/552076 [00:02<00:00, 214020.60it/s] 96%|█████████▌| 528558/552076 [00:02<00:00, 214566.06it/s]100%|█████████▉| 550037/552076 [00:02<00:00, 211489.46it/s]100%|██████████| 552076/552076 [00:02<00:00, 202950.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14616/552076 [00:00<00:03, 146159.79it/s]  5%|▌         | 29465/552076 [00:00<00:03, 146849.83it/s]  8%|▊         | 44240/552076 [00:00<00:03, 147116.57it/s] 11%|█         | 61035/552076 [00:00<00:03, 152802.56it/s] 14%|█▍        | 79624/552076 [00:00<00:02, 161421.29it/s] 18%|█▊        | 99070/552076 [00:00<00:02, 170088.94it/s] 21%|██▏       | 117737/552076 [00:00<00:02, 174742.97it/s] 24%|██▍       | 134210/552076 [00:00<00:02, 166655.74it/s] 27%|██▋       | 150254/552076 [00:00<00:02, 164134.97it/s] 31%|███       | 168567/552076 [00:01<00:02, 169405.14it/s] 34%|███▎      | 185252/552076 [00:01<00:02, 124344.10it/s] 36%|███▋      | 200850/552076 [00:01<00:02, 132399.03it/s] 39%|███▉      | 215992/552076 [00:01<00:02, 137581.44it/s] 42%|████▏     | 230661/552076 [00:01<00:02, 111365.46it/s] 45%|████▍     | 248036/552076 [00:01<00:02, 124808.39it/s] 47%|████▋     | 262055/552076 [00:01<00:02, 111743.33it/s] 50%|████▉     | 274865/552076 [00:01<00:02, 116192.72it/s] 52%|█████▏    | 287501/552076 [00:02<00:02, 119064.24it/s] 55%|█████▌    | 305182/552076 [00:02<00:01, 131996.99it/s] 58%|█████▊    | 319313/552076 [00:02<00:02, 112808.84it/s] 60%|██████    | 332012/552076 [00:02<00:01, 116719.05it/s] 63%|██████▎   | 347735/552076 [00:02<00:01, 126496.73it/s] 67%|██████▋   | 367143/552076 [00:02<00:01, 141252.54it/s] 70%|███████   | 386992/552076 [00:02<00:01, 154628.52it/s] 74%|███████▎  | 406829/552076 [00:02<00:00, 165580.05it/s] 77%|███████▋  | 427408/552076 [00:02<00:00, 175890.21it/s] 81%|████████  | 448185/552076 [00:03<00:00, 184375.53it/s] 85%|████████▍ | 469009/552076 [00:03<00:00, 190940.02it/s] 89%|████████▉ | 490118/552076 [00:03<00:00, 196568.71it/s] 93%|█████████▎| 511201/552076 [00:03<00:00, 200637.64it/s] 96%|█████████▋| 531597/552076 [00:03<00:00, 198682.72it/s]100%|█████████▉| 551702/552076 [00:03<00:00, 199008.77it/s]100%|██████████| 552076/552076 [00:03<00:00, 155505.48it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15584/552076 [00:00<00:03, 155836.43it/s]  6%|▌         | 33338/552076 [00:00<00:03, 161767.48it/s]  9%|▉         | 50607/552076 [00:00<00:03, 164895.95it/s] 12%|█▏        | 68781/552076 [00:00<00:02, 169609.39it/s] 16%|█▌        | 86826/552076 [00:00<00:02, 172721.05it/s] 19%|█▉        | 105551/552076 [00:00<00:02, 176836.68it/s] 23%|██▎       | 124347/552076 [00:00<00:02, 180030.03it/s] 26%|██▌       | 143381/552076 [00:00<00:02, 183001.34it/s] 29%|██▉       | 161732/552076 [00:00<00:02, 183153.57it/s] 33%|███▎      | 180223/552076 [00:01<00:02, 183675.86it/s] 36%|███▌      | 198179/552076 [00:01<00:02, 172907.47it/s] 39%|███▉      | 215311/552076 [00:01<00:02, 149743.28it/s] 42%|████▏     | 230726/552076 [00:01<00:02, 136906.22it/s] 44%|████▍     | 244939/552076 [00:01<00:02, 110008.16it/s] 47%|████▋     | 257151/552076 [00:01<00:02, 111761.71it/s] 49%|████▉     | 269182/552076 [00:01<00:02, 112841.08it/s] 51%|█████     | 281951/552076 [00:01<00:02, 116919.44it/s] 53%|█████▎    | 294101/552076 [00:02<00:02, 117729.07it/s] 55%|█████▌    | 306196/552076 [00:02<00:02, 116859.71it/s] 58%|█████▊    | 318109/552076 [00:02<00:02, 100273.69it/s] 60%|█████▉    | 329235/552076 [00:02<00:02, 103333.47it/s] 62%|██████▏   | 340935/552076 [00:02<00:01, 107084.86it/s] 64%|██████▍   | 353079/552076 [00:02<00:01, 111019.51it/s] 66%|██████▌   | 365038/552076 [00:02<00:01, 113456.25it/s] 68%|██████▊   | 376779/552076 [00:02<00:01, 114611.76it/s] 70%|███████   | 388384/552076 [00:02<00:01, 114813.53it/s] 72%|███████▏  | 399967/552076 [00:02<00:01, 113645.13it/s] 75%|███████▍  | 411902/552076 [00:03<00:01, 115296.21it/s] 77%|███████▋  | 423584/552076 [00:03<00:01, 115747.88it/s] 79%|███████▉  | 435200/552076 [00:03<00:01, 115465.18it/s] 81%|████████  | 446775/552076 [00:03<00:00, 114750.59it/s] 83%|████████▎ | 458733/552076 [00:03<00:00, 116155.08it/s] 85%|████████▌ | 470368/552076 [00:03<00:00, 114260.61it/s] 87%|████████▋ | 481815/552076 [00:03<00:00, 104304.34it/s] 89%|████████▉ | 493680/552076 [00:03<00:00, 108228.98it/s] 92%|█████████▏| 505378/552076 [00:03<00:00, 110712.64it/s] 94%|█████████▎| 517569/552076 [00:04<00:00, 113848.79it/s] 96%|█████████▌| 530147/552076 [00:04<00:00, 117182.54it/s] 98%|█████████▊| 542332/552076 [00:04<00:00, 118543.42it/s]100%|██████████| 552076/552076 [00:04<00:00, 128384.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12457/552076 [00:00<00:04, 124559.13it/s]  4%|▎         | 20402/552076 [00:00<00:04, 106429.16it/s]  7%|▋         | 40032/552076 [00:00<00:04, 123373.29it/s] 11%|█         | 60635/552076 [00:00<00:03, 140251.42it/s] 13%|█▎        | 73388/552076 [00:00<00:04, 111047.14it/s] 15%|█▌        | 84557/552076 [00:00<00:04, 96365.71it/s]  18%|█▊        | 101247/552076 [00:00<00:04, 109543.76it/s] 20%|██        | 113093/552076 [00:00<00:04, 97471.94it/s]  24%|██▍       | 133094/552076 [00:01<00:03, 115187.06it/s] 28%|██▊       | 153733/552076 [00:01<00:02, 132790.54it/s] 31%|███       | 169328/552076 [00:01<00:03, 103893.55it/s] 33%|███▎      | 183544/552076 [00:01<00:03, 113019.67it/s] 36%|███▌      | 196897/552076 [00:01<00:03, 117304.94it/s] 38%|███▊      | 211247/552076 [00:01<00:02, 124098.38it/s] 41%|████      | 226805/552076 [00:01<00:02, 132118.60it/s] 45%|████▌     | 249541/552076 [00:01<00:02, 151107.27it/s] 49%|████▉     | 271499/552076 [00:02<00:01, 166700.40it/s] 53%|█████▎    | 293046/552076 [00:02<00:01, 178842.77it/s] 57%|█████▋    | 312917/552076 [00:02<00:01, 184372.59it/s] 60%|██████    | 332369/552076 [00:02<00:01, 164648.95it/s] 63%|██████▎   | 349938/552076 [00:02<00:01, 144076.18it/s] 67%|██████▋   | 368442/552076 [00:02<00:01, 154323.76it/s] 70%|███████   | 387754/552076 [00:02<00:01, 164220.40it/s] 74%|███████▍  | 409357/552076 [00:02<00:00, 176950.06it/s] 78%|███████▊  | 431272/552076 [00:02<00:00, 187798.18it/s] 82%|████████▏ | 453479/552076 [00:03<00:00, 196913.26it/s] 86%|████████▋ | 476908/552076 [00:03<00:00, 206810.56it/s] 91%|█████████ | 500613/552076 [00:03<00:00, 215037.62it/s] 95%|█████████▍| 524315/552076 [00:03<00:00, 221189.64it/s] 99%|█████████▉| 547606/552076 [00:03<00:00, 224577.42it/s]100%|██████████| 552076/552076 [00:03<00:00, 160777.53it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21551/552076 [00:00<00:02, 215505.58it/s]  8%|▊         | 43731/552076 [00:00<00:02, 217355.98it/s] 12%|█▏        | 65486/552076 [00:00<00:02, 217412.97it/s] 16%|█▌        | 87403/552076 [00:00<00:02, 217934.39it/s] 20%|██        | 110479/552076 [00:00<00:01, 221627.76it/s] 24%|██▍       | 132757/552076 [00:00<00:01, 221970.50it/s] 28%|██▊       | 154275/552076 [00:00<00:01, 219887.07it/s] 32%|███▏      | 176721/552076 [00:00<00:01, 221238.86it/s] 36%|███▌      | 198504/552076 [00:00<00:01, 220204.96it/s] 40%|███▉      | 219664/552076 [00:01<00:01, 213532.18it/s] 44%|████▍     | 241621/552076 [00:01<00:01, 215306.17it/s] 48%|████▊     | 263853/552076 [00:01<00:01, 217362.86it/s] 52%|█████▏    | 285323/552076 [00:01<00:01, 215379.19it/s] 56%|█████▌    | 306679/552076 [00:01<00:01, 210361.58it/s] 59%|█████▉    | 328008/552076 [00:01<00:01, 211229.44it/s] 64%|██████▎   | 350918/552076 [00:01<00:00, 216289.02it/s] 68%|██████▊   | 373824/552076 [00:01<00:00, 219966.79it/s] 72%|███████▏  | 396456/552076 [00:01<00:00, 221834.89it/s] 76%|███████▌  | 418645/552076 [00:01<00:00, 217593.12it/s] 80%|███████▉  | 440862/552076 [00:02<00:00, 218944.94it/s] 84%|████████▍ | 463839/552076 [00:02<00:00, 222082.50it/s] 88%|████████▊ | 486071/552076 [00:02<00:00, 168076.36it/s] 91%|█████████▏| 504850/552076 [00:02<00:00, 141568.22it/s] 95%|█████████▌| 525909/552076 [00:02<00:00, 157005.82it/s] 99%|█████████▉| 548413/552076 [00:02<00:00, 172665.42it/s]100%|██████████| 552076/552076 [00:02<00:00, 202461.76it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15780/552076 [00:00<00:03, 157796.01it/s]  6%|▌         | 31646/552076 [00:00<00:03, 158053.03it/s] 10%|▉         | 53121/552076 [00:00<00:02, 171646.06it/s] 13%|█▎        | 70580/552076 [00:00<00:02, 172516.50it/s] 16%|█▌        | 89084/552076 [00:00<00:02, 176090.12it/s] 20%|██        | 110441/552076 [00:00<00:02, 185875.64it/s] 24%|██▍       | 131965/552076 [00:00<00:02, 193806.83it/s] 28%|██▊       | 153217/552076 [00:00<00:02, 199063.15it/s] 32%|███▏      | 174571/552076 [00:00<00:01, 203193.94it/s] 35%|███▌      | 194438/552076 [00:01<00:01, 178964.20it/s] 39%|███▉      | 215818/552076 [00:01<00:01, 188161.65it/s] 43%|████▎     | 237564/552076 [00:01<00:01, 196086.71it/s] 47%|████▋     | 258374/552076 [00:01<00:01, 199542.27it/s] 50%|█████     | 278551/552076 [00:01<00:01, 200203.05it/s] 54%|█████▍    | 299403/552076 [00:01<00:01, 202624.87it/s] 58%|█████▊    | 319776/552076 [00:01<00:01, 178915.26it/s] 62%|██████▏   | 340506/552076 [00:01<00:01, 186578.62it/s] 66%|██████▌   | 362713/552076 [00:01<00:00, 195972.32it/s] 70%|██████▉   | 384221/552076 [00:01<00:00, 201337.23it/s] 73%|███████▎  | 405207/552076 [00:02<00:00, 203818.41it/s] 77%|███████▋  | 425853/552076 [00:02<00:00, 182331.78it/s] 81%|████████  | 447546/552076 [00:02<00:00, 191492.46it/s] 85%|████████▌ | 469600/552076 [00:02<00:00, 199368.61it/s] 89%|████████▉ | 490943/552076 [00:02<00:00, 203388.47it/s] 93%|█████████▎| 511629/552076 [00:02<00:00, 181153.83it/s] 96%|█████████▌| 530440/552076 [00:03<00:00, 109503.67it/s] 99%|█████████▉| 545316/552076 [00:03<00:00, 90673.56it/s] 100%|██████████| 552076/552076 [00:03<00:00, 162195.53it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5905/552076 [00:00<00:09, 58420.49it/s]  2%|▏         | 12363/552076 [00:00<00:08, 60141.23it/s]  3%|▎         | 18054/552076 [00:00<00:09, 59132.59it/s]  5%|▌         | 30080/552076 [00:00<00:07, 69771.31it/s]  8%|▊         | 42435/552076 [00:00<00:06, 80250.27it/s]  9%|▉         | 51027/552076 [00:00<00:06, 81346.03it/s] 11%|█         | 59256/552076 [00:00<00:06, 75052.30it/s] 12%|█▏        | 66923/552076 [00:00<00:08, 59480.55it/s] 14%|█▍        | 79086/552076 [00:01<00:06, 70248.92it/s] 16%|█▌        | 87334/552076 [00:01<00:07, 65554.68it/s] 18%|█▊        | 99580/552076 [00:01<00:05, 76172.88it/s] 20%|██        | 111642/552076 [00:01<00:05, 85639.47it/s] 22%|██▏       | 123339/552076 [00:01<00:04, 93122.21it/s] 24%|██▍       | 133745/552076 [00:01<00:05, 82248.65it/s] 26%|██▋       | 145782/552076 [00:01<00:04, 90881.78it/s] 29%|██▉       | 158922/552076 [00:01<00:03, 100145.45it/s] 31%|███       | 170409/552076 [00:01<00:03, 104148.73it/s] 33%|███▎      | 182636/552076 [00:02<00:03, 108994.00it/s] 35%|███▌      | 195133/552076 [00:02<00:03, 113338.03it/s] 38%|███▊      | 207458/552076 [00:02<00:02, 116138.16it/s] 40%|███▉      | 219513/552076 [00:02<00:02, 117425.42it/s] 42%|████▏     | 231860/552076 [00:02<00:02, 119174.77it/s] 44%|████▍     | 243946/552076 [00:02<00:02, 118960.95it/s] 46%|████▋     | 256213/552076 [00:02<00:02, 120048.92it/s] 49%|████▊     | 268562/552076 [00:02<00:02, 121058.34it/s] 51%|█████     | 281042/552076 [00:02<00:02, 122154.96it/s] 53%|█████▎    | 293492/552076 [00:02<00:02, 122847.01it/s] 55%|█████▌    | 305964/552076 [00:03<00:01, 123401.35it/s] 58%|█████▊    | 318517/552076 [00:03<00:01, 124029.47it/s] 60%|█████▉    | 330997/552076 [00:03<00:01, 124258.07it/s] 62%|██████▏   | 343477/552076 [00:03<00:01, 124419.30it/s] 64%|██████▍   | 355956/552076 [00:03<00:01, 124527.83it/s] 67%|██████▋   | 368469/552076 [00:03<00:01, 124705.24it/s] 69%|██████▉   | 380961/552076 [00:03<00:01, 124769.18it/s] 71%|███████▏  | 393525/552076 [00:03<00:01, 125025.99it/s] 74%|███████▎  | 406030/552076 [00:03<00:01, 124781.13it/s] 76%|███████▌  | 418510/552076 [00:03<00:01, 124725.01it/s] 78%|███████▊  | 430996/552076 [00:04<00:00, 124762.57it/s] 80%|████████  | 443525/552076 [00:04<00:00, 124918.50it/s] 83%|████████▎ | 456042/552076 [00:04<00:00, 124992.18it/s] 85%|████████▍ | 468542/552076 [00:04<00:00, 124810.94it/s] 87%|████████▋ | 481055/552076 [00:04<00:00, 124905.90it/s] 89%|████████▉ | 493596/552076 [00:04<00:00, 125053.97it/s] 92%|█████████▏| 506102/552076 [00:04<00:00, 122953.34it/s] 94%|█████████▍| 518591/552076 [00:04<00:00, 123526.73it/s] 96%|█████████▌| 531013/552076 [00:04<00:00, 123733.67it/s] 98%|█████████▊| 543495/552076 [00:04<00:00, 124057.52it/s]100%|██████████| 552076/552076 [00:05<00:00, 110226.11it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12041/552076 [00:00<00:04, 120408.11it/s]  4%|▍         | 24274/552076 [00:00<00:04, 120977.48it/s]  7%|▋         | 36629/552076 [00:00<00:04, 121737.01it/s]  9%|▉         | 48906/552076 [00:00<00:04, 122044.33it/s] 11%|█         | 61329/552076 [00:00<00:03, 122691.69it/s] 13%|█▎        | 73826/552076 [00:00<00:03, 123365.75it/s] 16%|█▌        | 86333/552076 [00:00<00:03, 123869.62it/s] 18%|█▊        | 98865/552076 [00:00<00:03, 124298.14it/s] 20%|██        | 110664/552076 [00:00<00:03, 122333.13it/s] 22%|██▏       | 123091/552076 [00:01<00:03, 122905.51it/s] 25%|██▍       | 135587/552076 [00:01<00:03, 123512.32it/s] 27%|██▋       | 147971/552076 [00:01<00:03, 123609.06it/s] 29%|██▉       | 160437/552076 [00:01<00:03, 123919.78it/s] 31%|███▏      | 172791/552076 [00:01<00:03, 123805.19it/s] 34%|███▎      | 185322/552076 [00:01<00:02, 124250.48it/s] 36%|███▌      | 197692/552076 [00:01<00:02, 124077.47it/s] 38%|███▊      | 210061/552076 [00:01<00:02, 119761.01it/s] 40%|████      | 222867/552076 [00:01<00:02, 122134.23it/s] 43%|████▎     | 235164/552076 [00:01<00:02, 122382.06it/s] 45%|████▍     | 247413/552076 [00:02<00:02, 108365.33it/s] 47%|████▋     | 258553/552076 [00:02<00:03, 88204.11it/s]  49%|████▉     | 270935/552076 [00:02<00:02, 96532.89it/s] 51%|█████     | 281960/552076 [00:02<00:02, 100274.25it/s] 53%|█████▎    | 292593/552076 [00:02<00:02, 93085.09it/s]  55%|█████▌    | 304740/552076 [00:02<00:02, 100101.65it/s] 57%|█████▋    | 315269/552076 [00:02<00:02, 97641.36it/s]  59%|█████▉    | 327698/552076 [00:02<00:02, 104351.69it/s] 61%|██████▏   | 338525/552076 [00:03<00:02, 95046.52it/s]  63%|██████▎   | 348464/552076 [00:03<00:02, 87857.25it/s] 65%|██████▍   | 357662/552076 [00:03<00:02, 80430.33it/s] 67%|██████▋   | 369490/552076 [00:03<00:02, 88971.06it/s] 69%|██████▊   | 378956/552076 [00:03<00:02, 85137.74it/s] 71%|███████   | 391291/552076 [00:03<00:01, 93859.34it/s] 73%|███████▎  | 401693/552076 [00:03<00:01, 96691.37it/s] 75%|███████▌  | 414134/552076 [00:03<00:01, 103615.21it/s] 77%|███████▋  | 425878/552076 [00:03<00:01, 107407.91it/s] 79%|███████▉  | 436960/552076 [00:04<00:01, 95752.32it/s]  81%|████████  | 447010/552076 [00:04<00:01, 81116.30it/s] 83%|████████▎ | 455839/552076 [00:04<00:01, 67560.91it/s] 84%|████████▍ | 463478/552076 [00:04<00:01, 60252.75it/s] 85%|████████▌ | 470268/552076 [00:04<00:01, 59550.09it/s] 87%|████████▋ | 482403/552076 [00:04<00:00, 70288.65it/s] 89%|████████▉ | 493527/552076 [00:04<00:00, 79014.49it/s] 92%|█████████▏| 505853/552076 [00:04<00:00, 88549.07it/s] 94%|█████████▍| 517717/552076 [00:05<00:00, 95840.21it/s] 96%|█████████▌| 530187/552076 [00:05<00:00, 102990.35it/s] 98%|█████████▊| 542535/552076 [00:05<00:00, 108384.45it/s]100%|██████████| 552076/552076 [00:05<00:00, 102983.70it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10471/552076 [00:00<00:05, 104704.86it/s]  4%|▍         | 21229/552076 [00:00<00:05, 104302.58it/s]  5%|▍         | 26530/552076 [00:00<00:06, 77927.45it/s]   6%|▌         | 33433/552076 [00:00<00:06, 74377.69it/s]  8%|▊         | 41626/552076 [00:00<00:06, 76492.59it/s]  9%|▊         | 48103/552076 [00:00<00:07, 70526.53it/s] 10%|█         | 56817/552076 [00:00<00:06, 74804.11it/s] 12%|█▏        | 67141/552076 [00:00<00:05, 81540.97it/s] 14%|█▍        | 77651/552076 [00:00<00:05, 86250.77it/s] 16%|█▌        | 86723/552076 [00:01<00:05, 87001.36it/s] 17%|█▋        | 96341/552076 [00:01<00:05, 87529.18it/s] 20%|█▉        | 108134/552076 [00:01<00:04, 94864.27it/s] 22%|██▏       | 120137/552076 [00:01<00:04, 100583.12it/s] 24%|██▎       | 130472/552076 [00:01<00:04, 101012.06it/s] 25%|██▌       | 140722/552076 [00:01<00:04, 90958.15it/s]  27%|██▋       | 150112/552076 [00:01<00:05, 78178.97it/s] 29%|██▉       | 158911/552076 [00:01<00:04, 80884.30it/s] 30%|███       | 167388/552076 [00:02<00:06, 61575.15it/s] 32%|███▏      | 176985/552076 [00:02<00:05, 66767.37it/s] 33%|███▎      | 184463/552076 [00:02<00:05, 66395.66it/s] 35%|███▍      | 191664/552076 [00:02<00:05, 64683.28it/s] 37%|███▋      | 201703/552076 [00:02<00:04, 72408.95it/s] 39%|███▉      | 214006/552076 [00:02<00:04, 82605.00it/s] 40%|████      | 223172/552076 [00:02<00:05, 62509.13it/s] 42%|████▏     | 230785/552076 [00:02<00:05, 61129.98it/s] 43%|████▎     | 237858/552076 [00:03<00:06, 51494.76it/s] 44%|████▍     | 243942/552076 [00:03<00:05, 53981.41it/s] 46%|████▌     | 252095/552076 [00:03<00:05, 59139.45it/s] 48%|████▊     | 262251/552076 [00:03<00:04, 67610.67it/s] 49%|████▉     | 271594/552076 [00:03<00:03, 73721.11it/s] 51%|█████     | 281211/552076 [00:03<00:03, 79271.36it/s] 52%|█████▏    | 289794/552076 [00:03<00:03, 69068.77it/s] 55%|█████▍    | 301253/552076 [00:03<00:03, 78412.52it/s] 56%|█████▌    | 310012/552076 [00:04<00:03, 76077.35it/s] 58%|█████▊    | 321990/552076 [00:04<00:02, 85427.61it/s] 60%|██████    | 331369/552076 [00:04<00:02, 86553.68it/s] 62%|██████▏   | 343085/552076 [00:04<00:02, 93913.51it/s] 64%|██████▍   | 354894/552076 [00:04<00:01, 100057.22it/s] 66%|██████▋   | 366545/552076 [00:04<00:01, 104481.98it/s] 68%|██████▊   | 377888/552076 [00:04<00:01, 107013.65it/s] 71%|███████   | 390120/552076 [00:04<00:01, 111186.30it/s] 73%|███████▎  | 402573/552076 [00:04<00:01, 114876.71it/s] 75%|███████▌  | 414825/552076 [00:04<00:01, 117066.25it/s] 77%|███████▋  | 427303/552076 [00:05<00:01, 119277.31it/s] 80%|███████▉  | 439352/552076 [00:05<00:00, 118991.59it/s] 82%|████████▏ | 451849/552076 [00:05<00:00, 120723.04it/s] 84%|████████▍ | 463987/552076 [00:05<00:00, 117401.21it/s] 86%|████████▌ | 475794/552076 [00:05<00:00, 115576.71it/s] 88%|████████▊ | 487405/552076 [00:05<00:00, 102766.32it/s] 90%|█████████ | 497982/552076 [00:05<00:00, 100293.53it/s] 92%|█████████▏| 508235/552076 [00:05<00:00, 93187.76it/s]  94%|█████████▍| 517811/552076 [00:05<00:00, 83078.20it/s] 95%|█████████▌| 527200/552076 [00:06<00:00, 86049.43it/s] 97%|█████████▋| 537703/552076 [00:06<00:00, 90981.06it/s] 99%|█████████▉| 547085/552076 [00:06<00:00, 90944.42it/s]100%|██████████| 552076/552076 [00:06<00:00, 86797.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9620/552076 [00:00<00:05, 96197.11it/s]  4%|▎         | 19396/552076 [00:00<00:05, 96658.82it/s]  5%|▌         | 27928/552076 [00:00<00:05, 92952.16it/s]  7%|▋         | 39595/552076 [00:00<00:05, 98987.98it/s]  9%|▉         | 51254/552076 [00:00<00:04, 103683.68it/s] 11%|█▏        | 62823/552076 [00:00<00:04, 107013.76it/s] 14%|█▎        | 74941/552076 [00:00<00:04, 110902.52it/s] 16%|█▌        | 87009/552076 [00:00<00:04, 113664.53it/s] 18%|█▊        | 98997/552076 [00:00<00:03, 115460.30it/s] 20%|██        | 110683/552076 [00:01<00:03, 115875.56it/s] 22%|██▏       | 122380/552076 [00:01<00:03, 116200.61it/s] 24%|██▍       | 134201/552076 [00:01<00:03, 116795.01it/s] 26%|██▋       | 146015/552076 [00:01<00:03, 117194.73it/s] 29%|██▊       | 157738/552076 [00:01<00:03, 117203.17it/s] 31%|███       | 169408/552076 [00:01<00:03, 116963.19it/s] 33%|███▎      | 181069/552076 [00:01<00:03, 116451.21it/s] 35%|███▍      | 192690/552076 [00:01<00:03, 113997.29it/s] 37%|███▋      | 204085/552076 [00:01<00:03, 98600.13it/s]  39%|███▉      | 214311/552076 [00:02<00:03, 85006.70it/s] 40%|████      | 223399/552076 [00:02<00:03, 86544.36it/s] 43%|████▎     | 235902/552076 [00:02<00:03, 95348.57it/s] 45%|████▍     | 246016/552076 [00:02<00:03, 97013.04it/s] 46%|████▋     | 256121/552076 [00:02<00:03, 92811.15it/s] 48%|████▊     | 265724/552076 [00:02<00:03, 80346.95it/s] 50%|████▉     | 274281/552076 [00:02<00:03, 73047.44it/s] 52%|█████▏    | 286642/552076 [00:02<00:03, 83263.97it/s] 54%|█████▍    | 298992/552076 [00:02<00:02, 92282.36it/s] 56%|█████▌    | 309114/552076 [00:03<00:02, 91161.42it/s] 58%|█████▊    | 318859/552076 [00:03<00:02, 87574.52it/s] 60%|██████    | 331387/552076 [00:03<00:02, 96266.26it/s] 62%|██████▏   | 341605/552076 [00:03<00:02, 96184.50it/s] 64%|██████▍   | 353943/552076 [00:03<00:01, 102993.85it/s] 66%|██████▌   | 364667/552076 [00:03<00:01, 100417.19it/s] 68%|██████▊   | 377066/552076 [00:03<00:01, 106489.49it/s] 70%|███████   | 388094/552076 [00:03<00:01, 107598.27it/s] 72%|███████▏  | 399079/552076 [00:03<00:01, 90482.65it/s]  75%|███████▍  | 411355/552076 [00:04<00:01, 98230.38it/s] 76%|███████▋  | 421807/552076 [00:04<00:01, 95105.93it/s] 78%|███████▊  | 431779/552076 [00:04<00:01, 79395.45it/s] 80%|████████  | 443784/552076 [00:04<00:01, 88373.48it/s] 82%|████████▏ | 454738/552076 [00:04<00:01, 93716.57it/s] 84%|████████▍ | 464796/552076 [00:04<00:00, 95366.50it/s] 86%|████████▋ | 477056/552076 [00:04<00:00, 102174.99it/s] 88%|████████▊ | 487751/552076 [00:04<00:00, 95989.00it/s]  90%|█████████ | 497911/552076 [00:04<00:00, 97604.88it/s] 92%|█████████▏| 508177/552076 [00:05<00:00, 99067.36it/s] 94%|█████████▍| 519200/552076 [00:05<00:00, 102169.39it/s] 96%|█████████▋| 531435/552076 [00:05<00:00, 107487.12it/s] 98%|█████████▊| 542378/552076 [00:05<00:00, 94640.80it/s] 100%|██████████| 552076/552076 [00:05<00:00, 100198.95it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7526/552076 [00:00<00:07, 75255.95it/s]  3%|▎         | 17711/552076 [00:00<00:06, 81649.72it/s]  4%|▍         | 23836/552076 [00:00<00:07, 74230.78it/s]  5%|▌         | 28985/552076 [00:00<00:07, 65544.75it/s]  7%|▋         | 40641/552076 [00:00<00:06, 74843.92it/s]  9%|▊         | 47569/552076 [00:00<00:07, 65029.92it/s] 10%|▉         | 53913/552076 [00:00<00:07, 64504.06it/s] 11%|█         | 60253/552076 [00:00<00:07, 63600.86it/s] 13%|█▎        | 71063/552076 [00:00<00:06, 72560.98it/s] 14%|█▍        | 78706/552076 [00:01<00:06, 68679.10it/s] 16%|█▌        | 85888/552076 [00:01<00:06, 69145.47it/s] 17%|█▋        | 93087/552076 [00:01<00:06, 69974.28it/s] 18%|█▊        | 100242/552076 [00:01<00:06, 67868.48it/s] 20%|█▉        | 110382/552076 [00:01<00:05, 74000.60it/s] 22%|██▏       | 120003/552076 [00:01<00:05, 79506.03it/s] 23%|██▎       | 128871/552076 [00:01<00:05, 82051.09it/s] 25%|██▍       | 137301/552076 [00:01<00:06, 68139.74it/s] 27%|██▋       | 149419/552076 [00:01<00:05, 78438.60it/s] 29%|██▊       | 158210/552076 [00:02<00:05, 72373.06it/s] 30%|███       | 167941/552076 [00:02<00:04, 78399.82it/s] 32%|███▏      | 178751/552076 [00:02<00:04, 85440.81it/s] 34%|███▍      | 187954/552076 [00:02<00:04, 82423.59it/s] 36%|███▌      | 200106/552076 [00:02<00:03, 91228.15it/s] 38%|███▊      | 212039/552076 [00:02<00:03, 98162.05it/s] 41%|████      | 223877/552076 [00:02<00:03, 103461.68it/s] 43%|████▎     | 236252/552076 [00:02<00:02, 108812.14it/s] 45%|████▌     | 248722/552076 [00:02<00:02, 113134.85it/s] 47%|████▋     | 260545/552076 [00:03<00:02, 114614.88it/s] 49%|████▉     | 272940/552076 [00:03<00:02, 117263.76it/s] 52%|█████▏    | 285552/552076 [00:03<00:02, 119784.90it/s] 54%|█████▍    | 298140/552076 [00:03<00:02, 121547.80it/s] 56%|█████▌    | 310400/552076 [00:03<00:02, 120789.36it/s] 58%|█████▊    | 322894/552076 [00:03<00:01, 122002.70it/s] 61%|██████    | 335401/552076 [00:03<00:01, 122905.54it/s] 63%|██████▎   | 347732/552076 [00:03<00:01, 121711.82it/s] 65%|██████▌   | 360239/552076 [00:03<00:01, 122699.10it/s] 68%|██████▊   | 372837/552076 [00:03<00:01, 123662.98it/s] 70%|██████▉   | 385222/552076 [00:04<00:01, 122459.54it/s] 72%|███████▏  | 397748/552076 [00:04<00:01, 123285.52it/s] 74%|███████▍  | 410368/552076 [00:04<00:01, 124143.48it/s] 77%|███████▋  | 422941/552076 [00:04<00:01, 124613.93it/s] 79%|███████▉  | 435414/552076 [00:04<00:00, 124648.58it/s] 81%|████████  | 447942/552076 [00:04<00:00, 124834.53it/s] 83%|████████▎ | 460430/552076 [00:04<00:00, 123055.85it/s] 86%|████████▌ | 472898/552076 [00:04<00:00, 123535.61it/s] 88%|████████▊ | 485408/552076 [00:04<00:00, 124000.22it/s] 90%|█████████ | 497940/552076 [00:04<00:00, 124391.05it/s] 92%|█████████▏| 510476/552076 [00:05<00:00, 124677.45it/s] 95%|█████████▍| 522958/552076 [00:05<00:00, 124718.43it/s] 97%|█████████▋| 535591/552076 [00:05<00:00, 125196.81it/s] 99%|█████████▉| 548141/552076 [00:05<00:00, 125287.11it/s]100%|██████████| 552076/552076 [00:05<00:00, 102640.19it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7128/552076 [00:00<00:07, 71275.48it/s]  3%|▎         | 19198/552076 [00:00<00:06, 81256.42it/s]  6%|▌         | 31404/552076 [00:00<00:05, 90313.19it/s]  8%|▊         | 43654/552076 [00:00<00:05, 98039.67it/s] 10%|▉         | 53280/552076 [00:00<00:05, 97093.42it/s] 12%|█▏        | 65521/552076 [00:00<00:04, 103515.45it/s] 14%|█▍        | 78129/552076 [00:00<00:04, 109386.42it/s] 16%|█▋        | 90715/552076 [00:00<00:04, 113855.75it/s] 19%|█▊        | 103273/552076 [00:00<00:03, 117134.77it/s] 21%|██        | 115802/552076 [00:01<00:03, 119466.54it/s] 23%|██▎       | 127735/552076 [00:01<00:03, 117293.53it/s] 25%|██▌       | 139464/552076 [00:01<00:03, 111740.15it/s] 28%|██▊       | 151957/552076 [00:01<00:03, 115392.92it/s] 30%|██▉       | 164537/552076 [00:01<00:03, 118328.72it/s] 32%|███▏      | 177170/552076 [00:01<00:03, 120618.27it/s] 34%|███▍      | 189868/552076 [00:01<00:02, 122456.92it/s] 37%|███▋      | 202431/552076 [00:01<00:02, 123391.75it/s] 39%|███▉      | 214805/552076 [00:01<00:02, 123451.64it/s] 41%|████      | 227286/552076 [00:01<00:02, 123855.72it/s] 43%|████▎     | 239689/552076 [00:02<00:02, 112986.00it/s] 46%|████▌     | 252140/552076 [00:02<00:02, 116211.45it/s] 48%|████▊     | 264648/552076 [00:02<00:02, 118734.79it/s] 50%|█████     | 276648/552076 [00:02<00:02, 106454.66it/s] 52%|█████▏    | 287621/552076 [00:02<00:03, 83349.80it/s]  54%|█████▍    | 296962/552076 [00:02<00:03, 72175.69it/s] 55%|█████▌    | 305932/552076 [00:02<00:03, 76668.33it/s] 57%|█████▋    | 317352/552076 [00:02<00:02, 85054.06it/s] 60%|█████▉    | 329483/552076 [00:03<00:02, 93431.16it/s] 62%|██████▏   | 339648/552076 [00:03<00:02, 82115.36it/s] 63%|██████▎   | 348684/552076 [00:03<00:02, 74902.57it/s] 65%|██████▌   | 359535/552076 [00:03<00:02, 82574.75it/s] 67%|██████▋   | 371907/552076 [00:03<00:01, 91724.86it/s] 69%|██████▉   | 381911/552076 [00:03<00:02, 78903.25it/s] 71%|███████▏  | 394198/552076 [00:03<00:01, 88391.38it/s] 73%|███████▎  | 404035/552076 [00:03<00:01, 85392.29it/s] 75%|███████▌  | 415113/552076 [00:04<00:01, 91696.12it/s] 77%|███████▋  | 426515/552076 [00:04<00:01, 97417.03it/s] 79%|███████▉  | 438338/552076 [00:04<00:01, 102848.13it/s] 81%|████████▏ | 449627/552076 [00:04<00:00, 105665.16it/s] 83%|████████▎ | 460536/552076 [00:04<00:00, 101338.70it/s] 86%|████████▌ | 472130/552076 [00:04<00:00, 105315.88it/s] 88%|████████▊ | 483859/552076 [00:04<00:00, 108642.96it/s] 90%|████████▉ | 495815/552076 [00:04<00:00, 111700.48it/s] 92%|█████████▏| 507887/552076 [00:04<00:00, 114260.14it/s] 94%|█████████▍| 520171/552076 [00:04<00:00, 116703.21it/s] 96%|█████████▋| 532345/552076 [00:05<00:00, 118168.65it/s] 99%|█████████▊| 544236/552076 [00:05<00:00, 112994.66it/s]100%|██████████| 552076/552076 [00:05<00:00, 104622.27it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11988/552076 [00:00<00:04, 119872.11it/s]  4%|▍         | 24080/552076 [00:00<00:04, 120182.98it/s]  7%|▋         | 36314/552076 [00:00<00:04, 120821.15it/s]  9%|▉         | 48501/552076 [00:00<00:04, 121133.34it/s] 11%|█         | 60040/552076 [00:00<00:04, 113467.08it/s] 13%|█▎        | 69472/552076 [00:00<00:05, 95944.62it/s]  15%|█▍        | 81883/552076 [00:00<00:04, 102953.43it/s] 17%|█▋        | 94185/552076 [00:00<00:04, 108250.21it/s] 19%|█▉        | 105669/552076 [00:00<00:04, 110143.73it/s] 21%|██        | 116512/552076 [00:01<00:04, 102323.99it/s] 23%|██▎       | 126736/552076 [00:01<00:04, 85967.01it/s]  25%|██▌       | 138907/552076 [00:01<00:04, 94271.49it/s] 27%|██▋       | 149463/552076 [00:01<00:04, 97394.49it/s] 29%|██▉       | 160065/552076 [00:01<00:03, 98716.74it/s] 31%|███       | 170737/552076 [00:01<00:03, 100986.96it/s] 33%|███▎      | 183333/552076 [00:01<00:03, 107372.74it/s] 35%|███▌      | 195930/552076 [00:01<00:03, 112348.37it/s] 38%|███▊      | 208572/552076 [00:01<00:02, 116229.45it/s] 40%|████      | 221187/552076 [00:02<00:02, 119036.73it/s] 42%|████▏     | 233774/552076 [00:02<00:02, 121006.64it/s] 45%|████▍     | 246314/552076 [00:02<00:02, 122290.31it/s] 47%|████▋     | 258631/552076 [00:02<00:03, 95586.18it/s]  49%|████▉     | 269153/552076 [00:02<00:02, 97744.90it/s] 51%|█████     | 280914/552076 [00:02<00:02, 102960.61it/s] 53%|█████▎    | 291765/552076 [00:02<00:03, 76402.38it/s]  54%|█████▍    | 300792/552076 [00:03<00:03, 64405.61it/s] 56%|█████▌    | 308525/552076 [00:03<00:04, 58649.73it/s] 57%|█████▋    | 315394/552076 [00:03<00:03, 60903.97it/s] 58%|█████▊    | 322210/552076 [00:03<00:04, 56315.96it/s] 59%|█████▉    | 328418/552076 [00:03<00:04, 50790.50it/s] 60%|██████    | 334004/552076 [00:03<00:04, 44424.26it/s] 61%|██████▏   | 338945/552076 [00:03<00:05, 41948.69it/s] 63%|██████▎   | 346337/552076 [00:04<00:04, 48203.04it/s] 64%|██████▎   | 351756/552076 [00:04<00:04, 47582.04it/s] 65%|██████▍   | 356935/552076 [00:04<00:04, 42940.30it/s] 67%|██████▋   | 367540/552076 [00:04<00:03, 52272.32it/s] 69%|██████▊   | 378415/552076 [00:04<00:02, 61919.18it/s] 70%|██████▉   | 386195/552076 [00:04<00:02, 60616.75it/s] 71%|███████▏  | 393375/552076 [00:04<00:02, 62947.64it/s] 73%|███████▎  | 400476/552076 [00:04<00:02, 62406.43it/s] 75%|███████▍  | 411409/552076 [00:04<00:01, 71628.89it/s] 78%|███████▊  | 429192/552076 [00:05<00:01, 87262.86it/s] 82%|████████▏ | 452492/552076 [00:05<00:00, 107418.91it/s] 86%|████████▌ | 472026/552076 [00:05<00:00, 124187.50it/s] 89%|████████▉ | 493440/552076 [00:05<00:00, 142093.90it/s] 94%|█████████▎| 517191/552076 [00:05<00:00, 161565.24it/s] 98%|█████████▊| 540388/552076 [00:05<00:00, 177749.73it/s]100%|██████████| 552076/552076 [00:05<00:00, 98941.24it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16118/552076 [00:00<00:03, 161173.24it/s]  5%|▍         | 27384/552076 [00:00<00:03, 142731.09it/s]  9%|▊         | 47401/552076 [00:00<00:03, 156173.95it/s] 12%|█▏        | 66508/552076 [00:00<00:02, 165224.60it/s] 15%|█▍        | 80733/552076 [00:00<00:02, 157583.06it/s] 17%|█▋        | 96491/552076 [00:00<00:02, 157581.40it/s] 21%|██        | 115498/552076 [00:00<00:02, 166098.70it/s] 24%|██▍       | 131217/552076 [00:00<00:02, 163319.45it/s] 27%|██▋       | 146886/552076 [00:00<00:02, 160685.89it/s] 31%|███       | 168822/552076 [00:01<00:02, 174704.57it/s] 34%|███▍      | 190347/552076 [00:01<00:01, 185167.89it/s] 39%|███▊      | 213281/552076 [00:01<00:01, 196522.77it/s] 42%|████▏     | 234290/552076 [00:01<00:01, 200403.59it/s] 46%|████▋     | 256169/552076 [00:01<00:01, 205585.46it/s] 50%|█████     | 278193/552076 [00:01<00:01, 209771.36it/s] 54%|█████▍    | 299337/552076 [00:01<00:01, 209862.92it/s] 58%|█████▊    | 321869/552076 [00:01<00:01, 214270.70it/s] 62%|██████▏   | 343686/552076 [00:01<00:00, 215423.86it/s] 66%|██████▋   | 366425/552076 [00:01<00:00, 218876.39it/s] 70%|███████   | 388582/552076 [00:02<00:00, 219676.23it/s] 74%|███████▍  | 411290/552076 [00:02<00:00, 221844.37it/s] 79%|███████▊  | 433804/552076 [00:02<00:00, 222822.32it/s] 83%|████████▎ | 456114/552076 [00:02<00:00, 222096.79it/s] 87%|████████▋ | 478998/552076 [00:02<00:00, 224075.52it/s] 91%|█████████ | 501779/552076 [00:02<00:00, 225181.26it/s] 95%|█████████▍| 524312/552076 [00:02<00:00, 220776.14it/s] 99%|█████████▉| 546618/552076 [00:02<00:00, 221455.18it/s]100%|██████████| 552076/552076 [00:02<00:00, 201941.94it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19925/552076 [00:00<00:02, 199248.29it/s]  7%|▋         | 39949/552076 [00:00<00:02, 199544.26it/s] 10%|█         | 55356/552076 [00:00<00:02, 183310.70it/s] 13%|█▎        | 71904/552076 [00:00<00:02, 177567.84it/s] 17%|█▋        | 91142/552076 [00:00<00:02, 181766.14it/s] 20%|██        | 111191/552076 [00:00<00:02, 186613.25it/s] 24%|██▍       | 131539/552076 [00:00<00:02, 191371.21it/s] 28%|██▊       | 151867/552076 [00:00<00:02, 194793.70it/s] 31%|███       | 170373/552076 [00:00<00:01, 191765.25it/s] 34%|███▍      | 190333/552076 [00:01<00:01, 194048.35it/s] 38%|███▊      | 210558/552076 [00:01<00:01, 196437.24it/s] 42%|████▏     | 231663/552076 [00:01<00:01, 200602.65it/s] 46%|████▌     | 252372/552076 [00:01<00:01, 202504.55it/s] 50%|████▉     | 273678/552076 [00:01<00:01, 205556.65it/s] 54%|█████▎    | 295872/552076 [00:01<00:01, 210209.85it/s] 58%|█████▊    | 318149/552076 [00:01<00:01, 213825.65it/s] 61%|██████▏   | 339521/552076 [00:01<00:00, 212985.11it/s] 65%|██████▌   | 360813/552076 [00:01<00:00, 210295.65it/s] 69%|██████▉   | 382731/552076 [00:01<00:00, 212882.24it/s] 73%|███████▎  | 404029/552076 [00:02<00:00, 211671.75it/s] 77%|███████▋  | 425205/552076 [00:02<00:00, 161018.22it/s] 80%|████████  | 443128/552076 [00:02<00:00, 127261.86it/s] 83%|████████▎ | 458238/552076 [00:02<00:00, 126711.52it/s] 86%|████████▌ | 472579/552076 [00:02<00:00, 114691.91it/s] 89%|████████▊ | 489943/552076 [00:02<00:00, 127696.11it/s] 91%|█████████▏| 504151/552076 [00:02<00:00, 125447.35it/s] 94%|█████████▍| 517712/552076 [00:03<00:00, 123865.75it/s] 96%|█████████▌| 531355/552076 [00:03<00:00, 127381.17it/s] 99%|█████████▊| 544619/552076 [00:03<00:00, 100959.98it/s]100%|██████████| 552076/552076 [00:03<00:00, 163288.19it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18691/552076 [00:00<00:02, 186904.83it/s]  7%|▋         | 39958/552076 [00:00<00:02, 193954.07it/s] 11%|█         | 61132/552076 [00:00<00:02, 198966.32it/s] 15%|█▍        | 82310/552076 [00:00<00:02, 202643.55it/s] 19%|█▊        | 103097/552076 [00:00<00:02, 204182.73it/s] 23%|██▎       | 124676/552076 [00:00<00:02, 207529.56it/s] 26%|██▋       | 145992/552076 [00:00<00:01, 209185.66it/s] 30%|███       | 167197/552076 [00:00<00:01, 210033.88it/s] 34%|███▍      | 189741/552076 [00:00<00:01, 214427.72it/s] 38%|███▊      | 212035/552076 [00:01<00:01, 216910.16it/s] 42%|████▏     | 233235/552076 [00:01<00:01, 212622.37it/s] 46%|████▌     | 255286/552076 [00:01<00:01, 214927.48it/s] 50%|█████     | 277601/552076 [00:01<00:01, 217329.35it/s] 54%|█████▍    | 299463/552076 [00:01<00:01, 217713.15it/s] 58%|█████▊    | 322433/552076 [00:01<00:01, 221175.20it/s] 62%|██████▏   | 344492/552076 [00:01<00:00, 219384.39it/s] 66%|██████▋   | 366393/552076 [00:01<00:00, 217756.60it/s] 70%|███████   | 388747/552076 [00:01<00:00, 219459.86it/s] 74%|███████▍  | 410680/552076 [00:01<00:00, 219122.26it/s] 78%|███████▊  | 432883/552076 [00:02<00:00, 219984.59it/s] 83%|████████▎ | 455551/552076 [00:02<00:00, 221949.51it/s] 87%|████████▋ | 478138/552076 [00:02<00:00, 223109.62it/s] 91%|█████████ | 500744/552076 [00:02<00:00, 223985.41it/s] 95%|█████████▍| 523298/552076 [00:02<00:00, 224446.56it/s] 99%|█████████▉| 546435/552076 [00:02<00:00, 226477.85it/s]100%|██████████| 552076/552076 [00:02<00:00, 217712.65it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22323/552076 [00:00<00:02, 223225.42it/s]  8%|▊         | 43831/552076 [00:00<00:02, 220714.89it/s] 12%|█▏        | 66525/552076 [00:00<00:02, 222546.17it/s] 16%|█▌        | 88204/552076 [00:00<00:02, 220787.38it/s] 20%|█▉        | 109092/552076 [00:00<00:02, 217074.12it/s] 24%|██▎       | 130957/552076 [00:00<00:01, 217542.08it/s] 28%|██▊       | 153045/552076 [00:00<00:01, 218529.94it/s] 32%|███▏      | 175752/552076 [00:00<00:01, 221021.18it/s] 36%|███▌      | 197628/552076 [00:00<00:01, 220336.57it/s] 40%|███▉      | 219151/552076 [00:01<00:01, 218778.92it/s] 44%|████▎     | 240409/552076 [00:01<00:01, 169572.50it/s] 47%|████▋     | 258626/552076 [00:01<00:02, 131187.01it/s] 50%|████▉     | 273953/552076 [00:01<00:02, 127371.43it/s] 53%|█████▎    | 293413/552076 [00:01<00:01, 142097.48it/s] 57%|█████▋    | 315036/552076 [00:01<00:01, 158387.43it/s] 61%|██████    | 335672/552076 [00:01<00:01, 170261.30it/s] 65%|██████▍   | 357257/552076 [00:01<00:01, 181778.07it/s] 68%|██████▊   | 378040/552076 [00:02<00:00, 188878.66it/s] 73%|███████▎  | 400601/552076 [00:02<00:00, 198577.16it/s] 77%|███████▋  | 423008/552076 [00:02<00:00, 205592.03it/s] 81%|████████  | 445576/552076 [00:02<00:00, 211231.27it/s] 85%|████████▍ | 467171/552076 [00:02<00:00, 208710.56it/s] 88%|████████▊ | 488379/552076 [00:02<00:00, 197266.30it/s] 92%|█████████▏| 508472/552076 [00:02<00:00, 143794.47it/s] 95%|█████████▌| 525179/552076 [00:03<00:00, 114683.37it/s] 98%|█████████▊| 539213/552076 [00:03<00:00, 121337.55it/s]100%|██████████| 552076/552076 [00:03<00:00, 174564.25it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14498/552076 [00:00<00:03, 144979.45it/s]  4%|▍         | 22948/552076 [00:00<00:04, 115819.15it/s]  6%|▌         | 31125/552076 [00:00<00:05, 102955.91it/s]  8%|▊         | 43623/552076 [00:00<00:04, 108701.42it/s]  9%|▉         | 51740/552076 [00:00<00:05, 85601.41it/s]  13%|█▎        | 71848/552076 [00:00<00:04, 103419.05it/s] 17%|█▋        | 92391/552076 [00:00<00:03, 121521.47it/s] 20%|██        | 111656/552076 [00:00<00:03, 136658.08it/s] 24%|██▍       | 131459/552076 [00:00<00:02, 150665.92it/s] 27%|██▋       | 149834/552076 [00:01<00:02, 159267.46it/s] 31%|███       | 170355/552076 [00:01<00:02, 170732.93it/s] 35%|███▍      | 190655/552076 [00:01<00:02, 179280.17it/s] 38%|███▊      | 210371/552076 [00:01<00:01, 184292.41it/s] 42%|████▏     | 229502/552076 [00:01<00:01, 185535.98it/s] 45%|████▌     | 248549/552076 [00:01<00:01, 186237.50it/s] 48%|████▊     | 267519/552076 [00:01<00:01, 166453.04it/s] 52%|█████▏    | 284800/552076 [00:01<00:01, 143685.59it/s] 54%|█████▍    | 300164/552076 [00:02<00:02, 124271.76it/s] 57%|█████▋    | 313754/552076 [00:02<00:01, 124314.28it/s] 59%|█████▉    | 326999/552076 [00:02<00:01, 123408.84it/s] 62%|██████▏   | 339911/552076 [00:02<00:01, 123935.15it/s] 64%|██████▍   | 352705/552076 [00:02<00:01, 124144.07it/s] 66%|██████▌   | 365400/552076 [00:02<00:01, 124502.63it/s] 68%|██████▊   | 378047/552076 [00:02<00:01, 123340.11it/s] 71%|███████   | 390521/552076 [00:02<00:01, 123037.11it/s] 73%|███████▎  | 403500/552076 [00:02<00:01, 124986.68it/s] 75%|███████▌  | 416075/552076 [00:02<00:01, 124650.47it/s] 78%|███████▊  | 428684/552076 [00:03<00:00, 125077.12it/s] 80%|███████▉  | 441230/552076 [00:03<00:00, 125094.19it/s] 82%|████████▏ | 453768/552076 [00:03<00:00, 125179.21it/s] 84%|████████▍ | 466305/552076 [00:03<00:00, 124146.63it/s] 87%|████████▋ | 478735/552076 [00:03<00:00, 124063.99it/s] 89%|████████▉ | 491245/552076 [00:03<00:00, 124372.67it/s] 91%|█████████▏| 504033/552076 [00:03<00:00, 125402.60it/s] 94%|█████████▎| 516581/552076 [00:03<00:00, 100125.25it/s] 96%|█████████▌| 527408/552076 [00:03<00:00, 101890.97it/s] 97%|█████████▋| 538175/552076 [00:04<00:00, 98002.09it/s] 100%|█████████▉| 550335/552076 [00:04<00:00, 104059.66it/s]100%|██████████| 552076/552076 [00:04<00:00, 132223.46it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11198/552076 [00:00<00:04, 111978.24it/s]  4%|▎         | 19511/552076 [00:00<00:05, 100491.58it/s]  5%|▍         | 25999/552076 [00:00<00:06, 84916.44it/s]   6%|▌         | 32452/552076 [00:00<00:06, 77563.85it/s]  7%|▋         | 38920/552076 [00:00<00:07, 71261.24it/s]  9%|▉         | 50519/552076 [00:00<00:06, 80583.10it/s] 11%|█         | 59475/552076 [00:00<00:06, 81347.26it/s] 12%|█▏        | 67421/552076 [00:00<00:06, 80769.71it/s] 14%|█▍        | 79905/552076 [00:00<00:05, 90335.84it/s] 17%|█▋        | 92409/552076 [00:01<00:04, 98539.41it/s] 19%|█▉        | 104873/552076 [00:01<00:04, 105144.56it/s] 21%|██▏       | 117361/552076 [00:01<00:03, 110375.77it/s] 23%|██▎       | 129658/552076 [00:01<00:03, 113874.01it/s] 26%|██▌       | 142076/552076 [00:01<00:03, 116779.28it/s] 28%|██▊       | 154535/552076 [00:01<00:03, 119016.75it/s] 30%|███       | 167309/552076 [00:01<00:03, 121505.80it/s] 33%|███▎      | 180045/552076 [00:01<00:03, 123204.54it/s] 35%|███▍      | 192453/552076 [00:01<00:02, 122178.78it/s] 37%|███▋      | 204762/552076 [00:01<00:02, 122449.72it/s] 39%|███▉      | 217267/552076 [00:02<00:02, 123217.11it/s] 42%|████▏     | 229621/552076 [00:02<00:02, 122508.03it/s] 44%|████▍     | 242157/552076 [00:02<00:02, 123347.85it/s] 46%|████▌     | 254510/552076 [00:02<00:02, 118854.23it/s] 48%|████▊     | 266985/552076 [00:02<00:02, 120562.22it/s] 51%|█████     | 279081/552076 [00:02<00:02, 120440.92it/s] 53%|█████▎    | 291153/552076 [00:02<00:02, 117910.48it/s] 55%|█████▍    | 302976/552076 [00:02<00:02, 113562.45it/s] 57%|█████▋    | 315020/552076 [00:02<00:02, 115539.53it/s] 59%|█████▉    | 326622/552076 [00:02<00:01, 114531.34it/s] 61%|██████▏   | 339106/552076 [00:03<00:01, 117439.16it/s] 64%|██████▎   | 351653/552076 [00:03<00:01, 119738.31it/s] 66%|██████▌   | 364252/552076 [00:03<00:01, 121546.13it/s] 68%|██████▊   | 376848/552076 [00:03<00:01, 122836.04it/s] 70%|███████   | 389196/552076 [00:03<00:01, 123024.96it/s] 73%|███████▎  | 401673/552076 [00:03<00:01, 123541.79it/s] 75%|███████▌  | 414226/552076 [00:03<00:01, 124129.01it/s] 77%|███████▋  | 426839/552076 [00:03<00:01, 124719.55it/s] 80%|███████▉  | 439376/552076 [00:03<00:00, 124912.14it/s] 82%|████████▏ | 451873/552076 [00:03<00:00, 123152.28it/s] 84%|████████▍ | 464198/552076 [00:04<00:00, 122197.40it/s] 86%|████████▋ | 476563/552076 [00:04<00:00, 122626.66it/s] 89%|████████▊ | 488900/552076 [00:04<00:00, 122846.65it/s] 91%|█████████ | 501310/552076 [00:04<00:00, 123217.75it/s] 93%|█████████▎| 513688/552076 [00:04<00:00, 123385.48it/s] 95%|█████████▌| 526149/552076 [00:04<00:00, 123748.58it/s] 98%|█████████▊| 538526/552076 [00:04<00:00, 98146.38it/s]  99%|█████████▉| 549176/552076 [00:04<00:00, 78222.66it/s]100%|██████████| 552076/552076 [00:05<00:00, 109203.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7112/552076 [00:00<00:07, 71116.51it/s]  3%|▎         | 15075/552076 [00:00<00:07, 73472.18it/s]  5%|▍         | 27294/552076 [00:00<00:06, 83453.69it/s]  7%|▋         | 39605/552076 [00:00<00:05, 92380.27it/s]  9%|▉         | 49082/552076 [00:00<00:05, 92767.47it/s] 10%|█         | 57606/552076 [00:00<00:05, 82793.74it/s] 13%|█▎        | 69557/552076 [00:00<00:05, 91198.08it/s] 14%|█▍        | 78709/552076 [00:00<00:06, 71178.63it/s] 16%|█▌        | 86528/552076 [00:01<00:07, 61720.19it/s] 18%|█▊        | 98895/552076 [00:01<00:06, 72635.40it/s] 19%|█▉        | 107426/552076 [00:01<00:06, 70779.28it/s] 21%|██        | 115402/552076 [00:01<00:05, 72927.49it/s] 23%|██▎       | 127799/552076 [00:01<00:05, 83203.85it/s] 25%|██▌       | 140174/552076 [00:01<00:04, 92272.62it/s] 28%|██▊       | 152365/552076 [00:01<00:04, 99531.17it/s] 30%|██▉       | 164736/552076 [00:01<00:03, 105728.57it/s] 32%|███▏      | 177168/552076 [00:01<00:03, 110693.27it/s] 34%|███▍      | 189709/552076 [00:02<00:03, 114732.19it/s] 37%|███▋      | 202115/552076 [00:02<00:02, 117378.93it/s] 39%|███▉      | 214399/552076 [00:02<00:02, 118963.47it/s] 41%|████      | 226861/552076 [00:02<00:02, 120603.46it/s] 43%|████▎     | 239163/552076 [00:02<00:02, 121316.21it/s] 46%|████▌     | 251562/552076 [00:02<00:02, 122104.13it/s] 48%|████▊     | 264042/552076 [00:02<00:02, 122898.28it/s] 50%|█████     | 276428/552076 [00:02<00:02, 123183.59it/s] 52%|█████▏    | 288788/552076 [00:02<00:02, 115314.39it/s] 55%|█████▍    | 300891/552076 [00:02<00:02, 116969.99it/s] 57%|█████▋    | 312686/552076 [00:03<00:02, 114911.46it/s] 59%|█████▊    | 324254/552076 [00:03<00:01, 115010.06it/s] 61%|██████    | 336295/552076 [00:03<00:01, 116576.43it/s] 63%|██████▎   | 348174/552076 [00:03<00:01, 117230.33it/s] 65%|██████▌   | 359928/552076 [00:03<00:01, 116667.58it/s] 67%|██████▋   | 371617/552076 [00:03<00:01, 116454.92it/s] 69%|██████▉   | 383279/552076 [00:03<00:01, 112753.67it/s] 72%|███████▏  | 395547/552076 [00:03<00:01, 115556.56it/s] 74%|███████▎  | 407146/552076 [00:03<00:01, 115317.82it/s] 76%|███████▌  | 418708/552076 [00:03<00:01, 106075.06it/s] 78%|███████▊  | 430901/552076 [00:04<00:01, 110380.12it/s] 80%|████████  | 442101/552076 [00:04<00:01, 108307.95it/s] 82%|████████▏ | 453489/552076 [00:04<00:00, 109918.99it/s] 84%|████████▍ | 465413/552076 [00:04<00:00, 112558.26it/s] 86%|████████▋ | 477294/552076 [00:04<00:00, 114362.20it/s] 89%|████████▊ | 489064/552076 [00:04<00:00, 115343.36it/s] 91%|█████████ | 500645/552076 [00:04<00:00, 114295.25it/s] 93%|█████████▎| 512109/552076 [00:04<00:00, 113668.96it/s] 95%|█████████▍| 523501/552076 [00:04<00:00, 113197.31it/s] 97%|█████████▋| 534839/552076 [00:05<00:00, 113059.76it/s] 99%|█████████▉| 546158/552076 [00:05<00:00, 112774.75it/s]100%|██████████| 552076/552076 [00:05<00:00, 106899.76it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12051/552076 [00:00<00:04, 120507.82it/s]  4%|▍         | 24154/552076 [00:00<00:04, 120663.52it/s]  6%|▌         | 33322/552076 [00:00<00:04, 107225.34it/s]  8%|▊         | 45594/552076 [00:00<00:04, 111445.82it/s] 10%|█         | 57809/552076 [00:00<00:04, 114453.80it/s] 13%|█▎        | 70060/552076 [00:00<00:04, 116757.04it/s] 15%|█▍        | 82336/552076 [00:00<00:03, 118493.03it/s] 17%|█▋        | 94608/552076 [00:00<00:03, 119728.17it/s] 19%|█▉        | 106972/552076 [00:00<00:03, 120875.18it/s] 21%|██▏       | 118630/552076 [00:01<00:04, 97878.83it/s]  24%|██▎       | 130947/552076 [00:01<00:04, 104301.90it/s] 26%|██▌       | 142748/552076 [00:01<00:03, 108065.91it/s] 28%|██▊       | 155090/552076 [00:01<00:03, 112255.27it/s] 30%|███       | 167490/552076 [00:01<00:03, 115537.67it/s] 33%|███▎      | 179853/552076 [00:01<00:03, 117850.01it/s] 35%|███▍      | 192256/552076 [00:01<00:03, 119637.32it/s] 37%|███▋      | 204336/552076 [00:01<00:02, 118104.93it/s] 39%|███▉      | 216671/552076 [00:01<00:02, 119630.88it/s] 41%|████▏     | 228699/552076 [00:02<00:02, 108597.74it/s] 44%|████▎     | 240874/552076 [00:02<00:02, 112233.31it/s] 46%|████▌     | 253140/552076 [00:02<00:02, 115169.58it/s] 48%|████▊     | 264816/552076 [00:02<00:03, 90596.87it/s]  50%|████▉     | 274843/552076 [00:02<00:03, 92130.95it/s] 52%|█████▏    | 286770/552076 [00:02<00:02, 98880.80it/s] 54%|█████▍    | 298169/552076 [00:02<00:02, 102973.28it/s] 56%|█████▌    | 310523/552076 [00:02<00:02, 108385.69it/s] 58%|█████▊    | 322881/552076 [00:02<00:02, 112535.86it/s] 61%|██████    | 334455/552076 [00:03<00:01, 109851.70it/s] 63%|██████▎   | 346885/552076 [00:03<00:01, 113820.57it/s] 65%|██████▍   | 358471/552076 [00:03<00:02, 89428.48it/s]  67%|██████▋   | 368904/552076 [00:03<00:02, 90347.50it/s] 69%|██████▊   | 378610/552076 [00:03<00:02, 73824.61it/s] 70%|███████   | 386957/552076 [00:03<00:02, 66336.43it/s] 71%|███████▏  | 394409/552076 [00:03<00:02, 58940.21it/s] 73%|███████▎  | 401656/552076 [00:04<00:02, 62436.05it/s] 75%|███████▍  | 413182/552076 [00:04<00:01, 72388.67it/s] 77%|███████▋  | 425463/552076 [00:04<00:01, 82556.10it/s] 79%|███████▉  | 437815/552076 [00:04<00:01, 91675.55it/s] 81%|████████▏ | 448720/552076 [00:04<00:01, 96277.35it/s] 83%|████████▎ | 460947/552076 [00:04<00:00, 102834.07it/s] 86%|████████▌ | 472572/552076 [00:04<00:00, 106520.34it/s] 88%|████████▊ | 484929/552076 [00:04<00:00, 111119.63it/s] 90%|█████████ | 497286/552076 [00:04<00:00, 114581.76it/s] 92%|█████████▏| 510114/552076 [00:04<00:00, 118371.26it/s] 95%|█████████▍| 522501/552076 [00:05<00:00, 119968.63it/s] 97%|█████████▋| 534799/552076 [00:05<00:00, 120854.86it/s] 99%|█████████▉| 547245/552076 [00:05<00:00, 121912.35it/s]100%|██████████| 552076/552076 [00:05<00:00, 104613.84it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9007/552076 [00:00<00:06, 90069.66it/s]  4%|▎         | 20254/552076 [00:00<00:05, 95792.94it/s]  6%|▌         | 31879/552076 [00:00<00:05, 101129.45it/s]  8%|▊         | 41842/552076 [00:00<00:05, 100673.47it/s] 10%|▉         | 53291/552076 [00:00<00:04, 104453.11it/s] 11%|█▏        | 62333/552076 [00:00<00:05, 91605.43it/s]  13%|█▎        | 71613/552076 [00:00<00:05, 91958.63it/s] 15%|█▌        | 83150/552076 [00:00<00:05, 93722.30it/s] 17%|█▋        | 92190/552076 [00:00<00:05, 85661.37it/s] 18%|█▊        | 100658/552076 [00:01<00:05, 84412.02it/s] 20%|█▉        | 109035/552076 [00:01<00:05, 82344.33it/s] 21%|██        | 117236/552076 [00:01<00:05, 75516.18it/s] 23%|██▎       | 126627/552076 [00:01<00:05, 80230.49it/s] 25%|██▌       | 138897/552076 [00:01<00:04, 89525.47it/s] 27%|██▋       | 148293/552076 [00:01<00:04, 89959.67it/s] 29%|██▉       | 159263/552076 [00:01<00:04, 95092.37it/s] 31%|███       | 169069/552076 [00:01<00:04, 78708.11it/s] 32%|███▏      | 177835/552076 [00:01<00:04, 81195.17it/s] 34%|███▍      | 188979/552076 [00:02<00:04, 88391.17it/s] 36%|███▌      | 198352/552076 [00:02<00:05, 69105.64it/s] 37%|███▋      | 206287/552076 [00:02<00:05, 58617.18it/s] 39%|███▊      | 213371/552076 [00:02<00:05, 61816.14it/s] 40%|████      | 221885/552076 [00:02<00:04, 67350.22it/s] 42%|████▏     | 234161/552076 [00:02<00:04, 77897.80it/s] 45%|████▍     | 246385/552076 [00:02<00:03, 87409.03it/s] 47%|████▋     | 258645/552076 [00:02<00:03, 95645.00it/s] 49%|████▉     | 270990/552076 [00:03<00:02, 102575.53it/s] 51%|█████▏    | 283296/552076 [00:03<00:02, 107966.92it/s] 54%|█████▎    | 295590/552076 [00:03<00:02, 112061.32it/s] 56%|█████▌    | 307309/552076 [00:03<00:02, 89950.19it/s]  57%|█████▋    | 317360/552076 [00:03<00:02, 84802.54it/s] 60%|█████▉    | 331084/552076 [00:03<00:02, 95780.92it/s] 62%|██████▏   | 343221/552076 [00:03<00:02, 102248.08it/s] 64%|██████▍   | 355523/552076 [00:03<00:01, 107702.43it/s] 67%|██████▋   | 367941/552076 [00:04<00:01, 112166.53it/s] 69%|██████▉   | 379677/552076 [00:04<00:01, 113675.61it/s] 71%|███████   | 391411/552076 [00:04<00:01, 112781.35it/s] 73%|███████▎  | 402948/552076 [00:04<00:01, 110143.31it/s] 75%|███████▌  | 414157/552076 [00:04<00:01, 84645.95it/s]  77%|███████▋  | 423652/552076 [00:04<00:01, 66204.89it/s] 79%|███████▉  | 435654/552076 [00:04<00:01, 76494.29it/s] 81%|████████  | 447039/552076 [00:04<00:01, 84845.54it/s] 83%|████████▎ | 456877/552076 [00:05<00:01, 76905.55it/s] 84%|████████▍ | 465658/552076 [00:05<00:01, 70838.86it/s] 86%|████████▌ | 473599/552076 [00:05<00:01, 68607.43it/s] 88%|████████▊ | 486005/552076 [00:05<00:00, 79231.23it/s] 90%|████████▉ | 494960/552076 [00:05<00:00, 81118.42it/s] 92%|█████████▏| 507319/552076 [00:05<00:00, 90442.02it/s] 94%|█████████▍| 519644/552076 [00:05<00:00, 98291.25it/s] 96%|█████████▋| 531986/552076 [00:05<00:00, 104685.26it/s] 99%|█████████▊| 544300/552076 [00:05<00:00, 109613.07it/s]100%|██████████| 552076/552076 [00:06<00:00, 91502.17it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11636/552076 [00:00<00:04, 116357.89it/s]  4%|▍         | 23529/552076 [00:00<00:04, 117115.98it/s]  6%|▋         | 35688/552076 [00:00<00:04, 118421.94it/s]  9%|▊         | 47941/552076 [00:00<00:04, 119624.59it/s] 11%|█         | 60232/552076 [00:00<00:04, 120589.71it/s] 13%|█▎        | 72343/552076 [00:00<00:03, 120742.61it/s] 15%|█▌        | 84566/552076 [00:00<00:03, 121182.98it/s] 18%|█▊        | 96975/552076 [00:00<00:03, 122039.26it/s] 20%|█▉        | 109473/552076 [00:00<00:03, 122904.38it/s] 22%|██▏       | 121888/552076 [00:01<00:03, 123273.45it/s] 24%|██▍       | 134269/552076 [00:01<00:03, 123433.17it/s] 27%|██▋       | 146664/552076 [00:01<00:03, 123585.77it/s] 29%|██▉       | 159152/552076 [00:01<00:03, 123970.37it/s] 31%|███       | 171545/552076 [00:01<00:03, 123957.58it/s] 33%|███▎      | 183958/552076 [00:01<00:02, 124008.41it/s] 36%|███▌      | 196372/552076 [00:01<00:02, 124045.14it/s] 38%|███▊      | 208809/552076 [00:01<00:02, 124139.62it/s] 40%|████      | 221202/552076 [00:01<00:02, 124076.61it/s] 42%|████▏     | 233743/552076 [00:01<00:02, 124472.61it/s] 45%|████▍     | 246229/552076 [00:02<00:02, 124588.17it/s] 47%|████▋     | 258714/552076 [00:02<00:02, 124665.48it/s] 49%|████▉     | 271207/552076 [00:02<00:02, 124743.33it/s] 51%|█████▏    | 283677/552076 [00:02<00:02, 124674.97it/s] 54%|█████▎    | 296142/552076 [00:02<00:02, 124656.72it/s] 56%|█████▌    | 308626/552076 [00:02<00:01, 124711.33it/s] 58%|█████▊    | 321096/552076 [00:02<00:01, 124562.02it/s] 60%|██████    | 333623/552076 [00:02<00:01, 124770.76it/s] 63%|██████▎   | 346105/552076 [00:02<00:01, 124784.76it/s] 65%|██████▍   | 358584/552076 [00:02<00:01, 123549.15it/s] 67%|██████▋   | 370942/552076 [00:03<00:01, 111728.31it/s] 69%|██████▉   | 383397/552076 [00:03<00:01, 115287.15it/s] 72%|███████▏  | 395107/552076 [00:03<00:01, 92336.48it/s]  74%|███████▍  | 407243/552076 [00:03<00:01, 98962.72it/s] 76%|███████▌  | 417871/552076 [00:03<00:01, 95371.33it/s] 78%|███████▊  | 429792/552076 [00:03<00:01, 101457.73it/s] 80%|███████▉  | 441113/552076 [00:03<00:01, 104718.10it/s] 82%|████████▏ | 452018/552076 [00:03<00:00, 105978.92it/s] 84%|████████▍ | 464311/552076 [00:03<00:00, 110550.60it/s] 86%|████████▌ | 476123/552076 [00:04<00:00, 112716.66it/s] 88%|████████▊ | 487569/552076 [00:04<00:00, 97838.33it/s]  90%|█████████ | 499482/552076 [00:04<00:00, 103379.59it/s] 93%|█████████▎| 511766/552076 [00:04<00:00, 108536.51it/s] 95%|█████████▍| 522978/552076 [00:04<00:00, 91586.31it/s]  97%|█████████▋| 532841/552076 [00:04<00:00, 89414.64it/s] 98%|█████████▊| 543507/552076 [00:04<00:00, 92835.52it/s]100%|██████████| 552076/552076 [00:04<00:00, 112024.81it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6848/552076 [00:00<00:07, 68479.74it/s]  3%|▎         | 18093/552076 [00:00<00:06, 77579.72it/s]  5%|▍         | 24844/552076 [00:00<00:07, 73079.83it/s]  5%|▌         | 30144/552076 [00:00<00:08, 61864.97it/s]  7%|▋         | 36250/552076 [00:00<00:08, 61619.94it/s]  8%|▊         | 42087/552076 [00:00<00:08, 60607.56it/s] 10%|▉         | 52700/552076 [00:00<00:07, 69557.53it/s] 12%|█▏        | 64602/552076 [00:00<00:06, 79380.64it/s] 13%|█▎        | 73088/552076 [00:00<00:06, 71811.64it/s] 15%|█▌        | 85350/552076 [00:01<00:05, 82005.10it/s] 18%|█▊        | 97670/552076 [00:01<00:04, 91147.65it/s] 20%|█▉        | 110017/552076 [00:01<00:04, 98915.30it/s] 22%|██▏       | 122386/552076 [00:01<00:04, 105237.05it/s] 24%|██▍       | 134747/552076 [00:01<00:03, 110146.81it/s] 27%|██▋       | 146313/552076 [00:01<00:04, 88555.93it/s]  29%|██▊       | 157649/552076 [00:01<00:04, 92389.31it/s] 30%|███       | 167676/552076 [00:01<00:04, 86004.19it/s] 33%|███▎      | 180002/552076 [00:02<00:03, 94579.10it/s] 35%|███▍      | 192341/552076 [00:02<00:03, 101702.01it/s] 37%|███▋      | 204680/552076 [00:02<00:03, 107362.94it/s] 39%|███▉      | 217066/552076 [00:02<00:02, 111829.94it/s] 42%|████▏     | 229517/552076 [00:02<00:02, 115354.19it/s] 44%|████▍     | 241955/552076 [00:02<00:02, 117921.28it/s] 46%|████▌     | 254435/552076 [00:02<00:02, 119903.14it/s] 48%|████▊     | 266730/552076 [00:02<00:02, 120800.67it/s] 51%|█████     | 279119/552076 [00:02<00:02, 121710.00it/s] 53%|█████▎    | 291480/552076 [00:02<00:02, 122272.84it/s] 55%|█████▌    | 303771/552076 [00:03<00:02, 108899.90it/s] 57%|█████▋    | 316245/552076 [00:03<00:02, 113211.20it/s] 59%|█████▉    | 328255/552076 [00:03<00:01, 115192.42it/s] 62%|██████▏   | 340714/552076 [00:03<00:01, 117857.03it/s] 64%|██████▍   | 353261/552076 [00:03<00:01, 120039.44it/s] 66%|██████▋   | 365758/552076 [00:03<00:01, 121474.51it/s] 68%|██████▊   | 377991/552076 [00:03<00:01, 121072.18it/s] 71%|███████   | 390431/552076 [00:03<00:01, 122049.32it/s] 73%|███████▎  | 402909/552076 [00:03<00:01, 122853.67it/s] 75%|███████▌  | 415403/552076 [00:03<00:01, 123469.64it/s] 77%|███████▋  | 427820/552076 [00:04<00:01, 123678.16it/s] 80%|███████▉  | 440329/552076 [00:04<00:00, 124097.95it/s] 82%|████████▏ | 452844/552076 [00:04<00:00, 124409.61it/s] 84%|████████▍ | 465369/552076 [00:04<00:00, 124658.18it/s] 87%|████████▋ | 477873/552076 [00:04<00:00, 124769.94it/s] 89%|████████▉ | 490355/552076 [00:04<00:00, 124528.45it/s] 91%|█████████ | 502819/552076 [00:04<00:00, 124561.04it/s] 93%|█████████▎| 515302/552076 [00:04<00:00, 124640.75it/s] 96%|█████████▌| 527768/552076 [00:04<00:00, 124642.64it/s] 98%|█████████▊| 540266/552076 [00:04<00:00, 124742.89it/s]100%|██████████| 552076/552076 [00:05<00:00, 109358.84it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11936/552076 [00:00<00:04, 119353.28it/s]  4%|▍         | 23970/552076 [00:00<00:04, 119645.76it/s]  7%|▋         | 36259/552076 [00:00<00:04, 120598.14it/s]  8%|▊         | 44227/552076 [00:00<00:04, 102937.17it/s]  9%|▉         | 52107/552076 [00:00<00:05, 88148.81it/s]  12%|█▏        | 64537/552076 [00:00<00:05, 96573.33it/s] 14%|█▍        | 76907/552076 [00:00<00:04, 103372.67it/s] 16%|█▌        | 89427/552076 [00:00<00:04, 109076.51it/s] 18%|█▊        | 101992/552076 [00:00<00:03, 113568.91it/s] 21%|██        | 114504/552076 [00:01<00:03, 116803.16it/s] 23%|██▎       | 126870/552076 [00:01<00:03, 118777.26it/s] 25%|██▌       | 139322/552076 [00:01<00:03, 120443.63it/s] 28%|██▊       | 151833/552076 [00:01<00:03, 121806.10it/s] 30%|██▉       | 164236/552076 [00:01<00:03, 122462.12it/s] 32%|███▏      | 176745/552076 [00:01<00:03, 123236.85it/s] 34%|███▍      | 189105/552076 [00:01<00:02, 123345.43it/s] 37%|███▋      | 201611/552076 [00:01<00:02, 123853.65it/s] 39%|███▉      | 213999/552076 [00:01<00:02, 122475.07it/s] 41%|████      | 226494/552076 [00:01<00:02, 123206.71it/s] 43%|████▎     | 238820/552076 [00:02<00:03, 93717.83it/s]  45%|████▌     | 249513/552076 [00:02<00:03, 97324.29it/s] 47%|████▋     | 261469/552076 [00:02<00:02, 103074.71it/s] 50%|████▉     | 273831/552076 [00:02<00:02, 108482.55it/s] 52%|█████▏    | 286135/552076 [00:02<00:02, 112473.63it/s] 54%|█████▍    | 297785/552076 [00:02<00:02, 92517.03it/s]  56%|█████▌    | 307903/552076 [00:02<00:03, 80076.96it/s] 57%|█████▋    | 316814/552076 [00:02<00:02, 79082.87it/s] 59%|█████▉    | 325358/552076 [00:03<00:02, 77067.65it/s] 61%|██████    | 335029/552076 [00:03<00:02, 82067.08it/s] 63%|██████▎   | 347188/552076 [00:03<00:02, 90934.51it/s] 65%|██████▌   | 359485/552076 [00:03<00:01, 98642.74it/s] 67%|██████▋   | 371683/552076 [00:03<00:01, 103793.60it/s] 69%|██████▉   | 382554/552076 [00:03<00:01, 92018.46it/s]  72%|███████▏  | 394821/552076 [00:03<00:01, 99473.28it/s] 74%|███████▎  | 407119/552076 [00:03<00:01, 105524.17it/s] 76%|███████▌  | 419550/552076 [00:03<00:01, 110533.28it/s] 78%|███████▊  | 431147/552076 [00:04<00:01, 112109.57it/s] 80%|████████  | 443316/552076 [00:04<00:00, 114818.56it/s] 82%|████████▏ | 455024/552076 [00:04<00:01, 94744.04it/s]  85%|████████▍ | 467271/552076 [00:04<00:00, 101647.60it/s] 87%|████████▋ | 479587/552076 [00:04<00:00, 107266.81it/s] 89%|████████▉ | 492017/552076 [00:04<00:00, 111863.46it/s] 91%|█████████▏| 504337/552076 [00:04<00:00, 115038.86it/s] 94%|█████████▎| 516645/552076 [00:04<00:00, 117338.63it/s] 96%|█████████▌| 529031/552076 [00:04<00:00, 119220.00it/s] 98%|█████████▊| 541128/552076 [00:05<00:00, 119063.15it/s]100%|██████████| 552076/552076 [00:05<00:00, 107627.10it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7065/552076 [00:00<00:07, 70647.88it/s]  3%|▎         | 14963/552076 [00:00<00:07, 72956.52it/s]  4%|▍         | 23793/552076 [00:00<00:06, 76967.41it/s]  6%|▌         | 31165/552076 [00:00<00:06, 75962.33it/s]  7%|▋         | 40865/552076 [00:00<00:06, 81247.19it/s]  9%|▉         | 50487/552076 [00:00<00:05, 85225.06it/s] 11%|█         | 62020/552076 [00:00<00:05, 92465.88it/s] 13%|█▎        | 74298/552076 [00:00<00:04, 99861.79it/s] 15%|█▌        | 84803/552076 [00:00<00:04, 101361.98it/s] 17%|█▋        | 96153/552076 [00:01<00:04, 104721.44it/s] 20%|█▉        | 108517/552076 [00:01<00:04, 109757.93it/s] 22%|██▏       | 120880/552076 [00:01<00:03, 113579.83it/s] 24%|██▍       | 133275/552076 [00:01<00:03, 116502.53it/s] 26%|██▋       | 145665/552076 [00:01<00:03, 118624.93it/s] 29%|██▊       | 158049/552076 [00:01<00:03, 120141.61it/s] 31%|███       | 170370/552076 [00:01<00:03, 121044.97it/s] 33%|███▎      | 182742/552076 [00:01<00:03, 121832.71it/s] 35%|███▌      | 195086/552076 [00:01<00:02, 122309.83it/s] 38%|███▊      | 207337/552076 [00:01<00:02, 120961.98it/s] 40%|███▉      | 219709/552076 [00:02<00:02, 121775.39it/s] 42%|████▏     | 231900/552076 [00:02<00:03, 105941.08it/s] 44%|████▍     | 242872/552076 [00:02<00:03, 100439.91it/s] 46%|████▌     | 253240/552076 [00:02<00:02, 101267.11it/s] 48%|████▊     | 265582/552076 [00:02<00:02, 107028.61it/s] 50%|█████     | 277937/552076 [00:02<00:02, 111500.06it/s] 53%|█████▎    | 290249/552076 [00:02<00:02, 114747.61it/s] 55%|█████▍    | 302591/552076 [00:02<00:02, 117218.15it/s] 57%|█████▋    | 314452/552076 [00:02<00:02, 117274.75it/s] 59%|█████▉    | 326780/552076 [00:02<00:01, 119012.53it/s] 61%|██████▏   | 338756/552076 [00:03<00:01, 112793.66it/s] 63%|██████▎   | 350155/552076 [00:03<00:02, 97036.63it/s]  65%|██████▌   | 360330/552076 [00:03<00:02, 83701.01it/s] 68%|██████▊   | 372663/552076 [00:03<00:01, 92629.26it/s] 69%|██████▉   | 382680/552076 [00:03<00:02, 80753.49it/s] 71%|███████   | 391557/552076 [00:03<00:02, 75656.94it/s] 73%|███████▎  | 403725/552076 [00:03<00:01, 85339.13it/s] 75%|███████▌  | 415928/552076 [00:04<00:01, 93799.57it/s] 78%|███████▊  | 428298/552076 [00:04<00:01, 101132.76it/s] 80%|███████▉  | 440661/552076 [00:04<00:01, 106971.61it/s] 82%|████████▏ | 451981/552076 [00:04<00:01, 91316.07it/s]  84%|████████▍ | 463484/552076 [00:04<00:00, 97334.31it/s] 86%|████████▌ | 474626/552076 [00:04<00:00, 101169.25it/s] 88%|████████▊ | 485267/552076 [00:04<00:00, 86557.89it/s]  90%|█████████ | 497584/552076 [00:04<00:00, 95031.12it/s] 92%|█████████▏| 507853/552076 [00:04<00:00, 84018.66it/s] 94%|█████████▍| 519409/552076 [00:05<00:00, 91511.75it/s] 96%|█████████▋| 531459/552076 [00:05<00:00, 98628.26it/s] 98%|█████████▊| 543731/552076 [00:05<00:00, 104798.46it/s]100%|██████████| 552076/552076 [00:05<00:00, 102934.77it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11872/552076 [00:00<00:04, 118717.57it/s]  4%|▍         | 24600/552076 [00:00<00:04, 121160.40it/s]  7%|▋         | 36792/552076 [00:00<00:04, 121384.73it/s]  9%|▉         | 48810/552076 [00:00<00:04, 121019.07it/s] 11%|█         | 61216/552076 [00:00<00:04, 121915.27it/s] 13%|█▎        | 73546/552076 [00:00<00:03, 122325.10it/s] 15%|█▌        | 85539/552076 [00:00<00:03, 120616.17it/s] 18%|█▊        | 96632/552076 [00:00<00:03, 115859.15it/s] 19%|█▉        | 107580/552076 [00:00<00:03, 111392.54it/s] 21%|██▏       | 118310/552076 [00:01<00:04, 95062.36it/s]  24%|██▎       | 130720/552076 [00:01<00:04, 102237.69it/s] 26%|██▌       | 143136/552076 [00:01<00:03, 107954.82it/s] 28%|██▊       | 154877/552076 [00:01<00:03, 110624.93it/s] 30%|███       | 166136/552076 [00:01<00:03, 98475.80it/s]  32%|███▏      | 176773/552076 [00:01<00:03, 100716.82it/s] 34%|███▍      | 187127/552076 [00:01<00:03, 98374.61it/s]  36%|███▌      | 199599/552076 [00:01<00:03, 105030.13it/s] 38%|███▊      | 211569/552076 [00:01<00:03, 109038.73it/s] 40%|████      | 222703/552076 [00:02<00:03, 102281.06it/s] 42%|████▏     | 233177/552076 [00:02<00:03, 91539.56it/s]  44%|████▍     | 245582/552076 [00:02<00:03, 99350.23it/s] 47%|████▋     | 257927/552076 [00:02<00:02, 105528.73it/s] 49%|████▉     | 270363/552076 [00:02<00:02, 110549.13it/s] 51%|█████     | 282733/552076 [00:02<00:02, 114188.36it/s] 53%|█████▎    | 295120/552076 [00:02<00:02, 116928.82it/s] 56%|█████▌    | 307572/552076 [00:02<00:02, 119105.01it/s] 58%|█████▊    | 319644/552076 [00:02<00:02, 105000.65it/s] 60%|█████▉    | 330562/552076 [00:03<00:02, 95482.01it/s]  62%|██████▏   | 342371/552076 [00:03<00:02, 101298.56it/s] 64%|██████▍   | 352919/552076 [00:03<00:02, 92551.09it/s]  66%|██████▌   | 362613/552076 [00:03<00:02, 87575.11it/s] 68%|██████▊   | 373873/552076 [00:03<00:01, 93830.71it/s] 70%|██████▉   | 385252/552076 [00:03<00:01, 99041.50it/s] 72%|███████▏  | 396652/552076 [00:03<00:01, 103099.27it/s] 74%|███████▍  | 408088/552076 [00:03<00:01, 106236.66it/s] 76%|███████▌  | 419533/552076 [00:03<00:01, 108573.90it/s] 78%|███████▊  | 430559/552076 [00:04<00:01, 91874.81it/s]  80%|████████  | 442940/552076 [00:04<00:01, 99579.68it/s] 82%|████████▏ | 455245/552076 [00:04<00:00, 105622.47it/s] 85%|████████▍ | 467625/552076 [00:04<00:00, 110486.90it/s] 87%|████████▋ | 479842/552076 [00:04<00:00, 113747.35it/s] 89%|████████▉ | 491530/552076 [00:04<00:00, 110279.67it/s] 91%|█████████ | 502800/552076 [00:04<00:00, 102455.31it/s] 93%|█████████▎| 513326/552076 [00:04<00:00, 93214.38it/s]  95%|█████████▌| 525888/552076 [00:04<00:00, 101032.11it/s] 98%|█████████▊| 538283/552076 [00:05<00:00, 106963.34it/s]100%|█████████▉| 550936/552076 [00:05<00:00, 112165.69it/s]100%|██████████| 552076/552076 [00:05<00:00, 106466.58it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11439/552076 [00:00<00:04, 114389.02it/s]  4%|▎         | 20001/552076 [00:00<00:05, 103116.68it/s]  5%|▍         | 24919/552076 [00:00<00:07, 73385.36it/s]   6%|▌         | 33090/552076 [00:00<00:06, 75698.45it/s]  7%|▋         | 38993/552076 [00:00<00:07, 69784.95it/s]  9%|▊         | 47858/552076 [00:00<00:06, 73533.06it/s] 10%|▉         | 54922/552076 [00:00<00:06, 72639.41it/s] 12%|█▏        | 67309/552076 [00:00<00:05, 82928.78it/s] 14%|█▍        | 78858/552076 [00:00<00:05, 90590.46it/s] 17%|█▋        | 91277/552076 [00:01<00:04, 98591.40it/s] 19%|█▉        | 103729/552076 [00:01<00:04, 105160.47it/s] 21%|██        | 114662/552076 [00:01<00:05, 85047.05it/s]  23%|██▎       | 127023/552076 [00:01<00:04, 93828.15it/s] 25%|██▍       | 137324/552076 [00:01<00:04, 84488.21it/s] 27%|██▋       | 146592/552076 [00:01<00:04, 83105.31it/s] 28%|██▊       | 155481/552076 [00:01<00:04, 79683.28it/s] 30%|███       | 167802/552076 [00:01<00:04, 89128.09it/s] 33%|███▎      | 179525/552076 [00:01<00:03, 96032.89it/s] 35%|███▍      | 191368/552076 [00:02<00:03, 101808.62it/s] 37%|███▋      | 202076/552076 [00:02<00:03, 100918.46it/s] 39%|███▉      | 214542/552076 [00:02<00:03, 107031.77it/s] 41%|████      | 226429/552076 [00:02<00:02, 110327.84it/s] 43%|████▎     | 238853/552076 [00:02<00:02, 114162.47it/s] 46%|████▌     | 251295/552076 [00:02<00:02, 117056.96it/s] 48%|████▊     | 264719/552076 [00:02<00:02, 121729.75it/s] 50%|█████     | 277555/552076 [00:02<00:02, 123645.55it/s] 53%|█████▎    | 290088/552076 [00:02<00:02, 124145.27it/s] 55%|█████▍    | 302593/552076 [00:03<00:02, 124409.06it/s] 57%|█████▋    | 315179/552076 [00:03<00:01, 124839.17it/s] 59%|█████▉    | 327813/552076 [00:03<00:01, 125284.28it/s] 62%|██████▏   | 340400/552076 [00:03<00:01, 125457.85it/s] 64%|██████▍   | 352968/552076 [00:03<00:01, 119839.93it/s] 66%|██████▋   | 366921/552076 [00:03<00:01, 125135.60it/s] 69%|██████▊   | 379544/552076 [00:03<00:01, 123115.80it/s] 71%|███████   | 391940/552076 [00:03<00:01, 110641.33it/s] 73%|███████▎  | 403302/552076 [00:03<00:01, 104240.03it/s] 75%|███████▌  | 414350/552076 [00:03<00:01, 103549.06it/s] 77%|███████▋  | 424905/552076 [00:04<00:01, 93651.43it/s]  79%|███████▉  | 434775/552076 [00:04<00:01, 94714.43it/s] 81%|████████  | 444474/552076 [00:04<00:01, 86384.36it/s] 83%|████████▎ | 456339/552076 [00:04<00:01, 94056.83it/s] 85%|████████▍ | 468641/552076 [00:04<00:00, 101203.87it/s] 87%|████████▋ | 481105/552076 [00:04<00:00, 107252.02it/s] 89%|████████▉ | 493620/552076 [00:04<00:00, 112058.39it/s] 92%|█████████▏| 506082/552076 [00:04<00:00, 115552.25it/s] 94%|█████████▍| 518584/552076 [00:04<00:00, 118237.74it/s] 96%|█████████▌| 530953/552076 [00:05<00:00, 119819.32it/s] 98%|█████████▊| 543425/552076 [00:05<00:00, 121245.94it/s]100%|██████████| 552076/552076 [00:05<00:00, 105373.84it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5420/552076 [00:00<00:10, 54196.18it/s]  2%|▏         | 11985/552076 [00:00<00:09, 57189.08it/s]  4%|▍         | 23228/552076 [00:00<00:07, 67076.06it/s]  6%|▋         | 34831/552076 [00:00<00:06, 76795.24it/s]  8%|▊         | 42196/552076 [00:00<00:07, 71924.81it/s] 10%|▉         | 54440/552076 [00:00<00:06, 82083.58it/s] 12%|█▏        | 65409/552076 [00:00<00:05, 88785.56it/s] 14%|█▍        | 76249/552076 [00:00<00:05, 93880.95it/s] 16%|█▌        | 86017/552076 [00:00<00:05, 91263.54it/s] 18%|█▊        | 98377/552076 [00:01<00:04, 99036.15it/s] 20%|█▉        | 108671/552076 [00:01<00:04, 99732.58it/s] 22%|██▏       | 120907/552076 [00:01<00:04, 105589.32it/s] 24%|██▍       | 131751/552076 [00:01<00:04, 104608.70it/s] 26%|██▌       | 143675/552076 [00:01<00:03, 108606.20it/s] 28%|██▊       | 154716/552076 [00:01<00:03, 106872.83it/s] 30%|███       | 165935/552076 [00:01<00:03, 108414.10it/s] 32%|███▏      | 176875/552076 [00:01<00:03, 97218.87it/s]  34%|███▍      | 187880/552076 [00:01<00:03, 100741.89it/s] 36%|███▌      | 198187/552076 [00:02<00:03, 96138.79it/s]  38%|███▊      | 208803/552076 [00:02<00:03, 98940.01it/s] 40%|███▉      | 218863/552076 [00:02<00:03, 98007.92it/s] 41%|████▏     | 228782/552076 [00:02<00:03, 93140.41it/s] 43%|████▎     | 238230/552076 [00:02<00:03, 82768.97it/s] 45%|████▍     | 248086/552076 [00:02<00:03, 86947.51it/s] 47%|████▋     | 258918/552076 [00:02<00:03, 92417.38it/s] 49%|████▊     | 268444/552076 [00:02<00:03, 81966.65it/s] 51%|█████     | 280253/552076 [00:02<00:03, 90248.21it/s] 52%|█████▏    | 289825/552076 [00:03<00:02, 89408.59it/s] 54%|█████▍    | 299151/552076 [00:03<00:03, 77732.70it/s] 56%|█████▌    | 308328/552076 [00:03<00:02, 81471.11it/s] 57%|█████▋    | 316902/552076 [00:03<00:02, 79299.74it/s] 59%|█████▉    | 326628/552076 [00:03<00:02, 81537.29it/s] 61%|██████    | 335762/552076 [00:03<00:02, 84249.30it/s] 63%|██████▎   | 347617/552076 [00:03<00:02, 92256.84it/s] 65%|██████▌   | 359956/552076 [00:03<00:01, 99810.42it/s] 67%|██████▋   | 372339/552076 [00:03<00:01, 105976.54it/s] 69%|██████▉   | 383342/552076 [00:04<00:01, 97782.14it/s]  71%|███████▏  | 393529/552076 [00:04<00:01, 97804.16it/s] 73%|███████▎  | 403596/552076 [00:04<00:01, 93591.85it/s] 75%|███████▍  | 413194/552076 [00:04<00:01, 83572.74it/s] 77%|███████▋  | 425232/552076 [00:04<00:01, 92011.58it/s] 79%|███████▉  | 436877/552076 [00:04<00:01, 98192.91it/s] 81%|████████  | 448093/552076 [00:04<00:01, 102003.44it/s] 83%|████████▎ | 458903/552076 [00:04<00:00, 103755.78it/s] 85%|████████▌ | 469547/552076 [00:04<00:00, 103664.44it/s] 87%|████████▋ | 480101/552076 [00:05<00:00, 82242.01it/s]  89%|████████▉ | 490022/552076 [00:05<00:00, 86689.93it/s] 91%|█████████ | 502263/552076 [00:05<00:00, 95005.32it/s] 93%|█████████▎| 514520/552076 [00:05<00:00, 101878.11it/s] 95%|█████████▌| 525331/552076 [00:05<00:00, 100546.88it/s] 97%|█████████▋| 537097/552076 [00:05<00:00, 105134.16it/s] 99%|█████████▉| 548973/552076 [00:05<00:00, 108879.58it/s]100%|██████████| 552076/552076 [00:05<00:00, 96194.64it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6270/552076 [00:00<00:08, 62696.17it/s]  2%|▏         | 12417/552076 [00:00<00:08, 62321.47it/s]  4%|▎         | 20385/552076 [00:00<00:07, 66679.06it/s]  6%|▌         | 32433/552076 [00:00<00:06, 76992.83it/s]  8%|▊         | 44548/552076 [00:00<00:05, 86444.89it/s] 10%|█         | 56094/552076 [00:00<00:05, 93493.16it/s] 12%|█▏        | 68114/552076 [00:00<00:04, 100169.59it/s] 15%|█▍        | 80396/552076 [00:00<00:04, 106035.96it/s] 17%|█▋        | 92697/552076 [00:00<00:04, 110612.95it/s] 19%|█▉        | 104982/552076 [00:01<00:03, 114019.25it/s] 21%|██        | 117206/552076 [00:01<00:03, 116365.20it/s] 23%|██▎       | 129560/552076 [00:01<00:03, 118426.83it/s] 26%|██▌       | 141873/552076 [00:01<00:03, 119799.15it/s] 28%|██▊       | 154124/552076 [00:01<00:03, 120599.33it/s] 30%|███       | 166407/552076 [00:01<00:03, 121257.70it/s] 32%|███▏      | 178722/552076 [00:01<00:03, 121817.14it/s] 35%|███▍      | 191114/552076 [00:01<00:02, 122439.20it/s] 37%|███▋      | 203515/552076 [00:01<00:02, 122903.84it/s] 39%|███▉      | 215884/552076 [00:01<00:02, 123138.41it/s] 41%|████▏     | 228280/552076 [00:02<00:02, 123380.97it/s] 44%|████▎     | 240679/552076 [00:02<00:02, 123560.18it/s] 46%|████▌     | 253180/552076 [00:02<00:02, 123988.71it/s] 48%|████▊     | 265583/552076 [00:02<00:02, 121521.39it/s] 50%|█████     | 277871/552076 [00:02<00:02, 121922.81it/s] 53%|█████▎    | 290123/552076 [00:02<00:02, 122098.17it/s] 55%|█████▍    | 302534/552076 [00:02<00:02, 122694.18it/s] 57%|█████▋    | 314971/552076 [00:02<00:01, 123190.02it/s] 59%|█████▉    | 327459/552076 [00:02<00:01, 123691.96it/s] 62%|██████▏   | 339938/552076 [00:02<00:01, 124017.43it/s] 64%|██████▍   | 352430/552076 [00:03<00:01, 124286.25it/s] 66%|██████▌   | 364901/552076 [00:03<00:01, 124410.89it/s] 68%|██████▊   | 377360/552076 [00:03<00:01, 124463.09it/s] 71%|███████   | 389808/552076 [00:03<00:01, 124427.98it/s] 73%|███████▎  | 402252/552076 [00:03<00:01, 124148.90it/s] 75%|███████▌  | 414682/552076 [00:03<00:01, 124193.70it/s] 77%|███████▋  | 427526/552076 [00:03<00:00, 125435.57it/s] 80%|███████▉  | 440073/552076 [00:03<00:01, 105791.15it/s] 82%|████████▏ | 451181/552076 [00:03<00:01, 99558.75it/s]  84%|████████▍ | 462433/552076 [00:03<00:00, 103120.30it/s] 86%|████████▌ | 474279/552076 [00:04<00:00, 107287.41it/s] 88%|████████▊ | 486704/552076 [00:04<00:00, 111867.20it/s] 90%|█████████ | 498255/552076 [00:04<00:00, 112934.14it/s] 92%|█████████▏| 510280/552076 [00:04<00:00, 115033.64it/s] 95%|█████████▍| 521917/552076 [00:04<00:00, 113856.31it/s] 97%|█████████▋| 533399/552076 [00:04<00:00, 111149.54it/s] 99%|█████████▉| 545623/552076 [00:04<00:00, 111897.29it/s]100%|██████████| 552076/552076 [00:04<00:00, 115326.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11731/552076 [00:00<00:04, 117309.55it/s]  4%|▍         | 23533/552076 [00:00<00:04, 117521.07it/s]  6%|▋         | 35876/552076 [00:00<00:04, 119231.04it/s]  8%|▊         | 45283/552076 [00:00<00:04, 110372.99it/s] 10%|▉         | 54248/552076 [00:00<00:04, 103214.99it/s] 12%|█▏        | 66933/552076 [00:00<00:04, 109323.69it/s] 14%|█▍        | 79444/552076 [00:00<00:04, 113624.64it/s] 17%|█▋        | 91526/552076 [00:00<00:03, 115689.75it/s] 19%|█▊        | 102571/552076 [00:01<00:05, 76826.49it/s] 20%|██        | 111595/552076 [00:01<00:06, 70313.40it/s] 22%|██▏       | 122392/552076 [00:01<00:05, 78528.97it/s] 24%|██▍       | 134581/552076 [00:01<00:04, 87909.82it/s] 27%|██▋       | 146972/552076 [00:01<00:04, 96302.49it/s] 29%|██▉       | 159379/552076 [00:01<00:03, 103232.31it/s] 31%|███       | 171899/552076 [00:01<00:03, 108965.93it/s] 33%|███▎      | 184396/552076 [00:01<00:03, 113317.52it/s] 36%|███▌      | 196800/552076 [00:01<00:03, 116332.28it/s] 38%|███▊      | 208816/552076 [00:02<00:03, 103566.29it/s] 40%|███▉      | 219701/552076 [00:02<00:04, 78820.86it/s]  42%|████▏     | 231871/552076 [00:02<00:03, 88135.62it/s] 44%|████▍     | 241918/552076 [00:02<00:04, 73574.85it/s] 46%|████▌     | 254147/552076 [00:02<00:03, 83560.61it/s] 48%|████▊     | 266548/552076 [00:02<00:03, 92623.00it/s] 51%|█████     | 278986/552076 [00:02<00:02, 100305.68it/s] 53%|█████▎    | 291476/552076 [00:02<00:02, 106601.25it/s] 55%|█████▌    | 304020/552076 [00:03<00:02, 111628.39it/s] 57%|█████▋    | 316525/552076 [00:03<00:02, 115341.56it/s] 60%|█████▉    | 329059/552076 [00:03<00:01, 118166.90it/s] 62%|██████▏   | 341237/552076 [00:03<00:01, 118363.15it/s] 64%|██████▍   | 353734/552076 [00:03<00:01, 120269.38it/s] 66%|██████▋   | 366271/552076 [00:03<00:01, 121752.61it/s] 69%|██████▊   | 378750/552076 [00:03<00:01, 122647.96it/s] 71%|███████   | 391246/552076 [00:03<00:01, 123331.79it/s] 73%|███████▎  | 403797/552076 [00:03<00:01, 123977.05it/s] 75%|███████▌  | 416351/552076 [00:03<00:01, 124439.66it/s] 78%|███████▊  | 428955/552076 [00:04<00:00, 124914.36it/s] 80%|███████▉  | 441471/552076 [00:04<00:00, 113545.78it/s] 82%|████████▏ | 453042/552076 [00:04<00:00, 109138.34it/s] 84%|████████▍ | 464144/552076 [00:04<00:00, 105724.05it/s] 86%|████████▌ | 476122/552076 [00:04<00:00, 109579.33it/s] 89%|████████▊ | 488622/552076 [00:04<00:00, 113790.64it/s] 91%|█████████ | 500144/552076 [00:04<00:00, 99104.19it/s]  93%|█████████▎| 512586/552076 [00:04<00:00, 105546.22it/s] 95%|█████████▍| 523564/552076 [00:04<00:00, 101299.36it/s] 97%|█████████▋| 536114/552076 [00:05<00:00, 107518.54it/s] 99%|█████████▉| 548617/552076 [00:05<00:00, 112232.13it/s]100%|██████████| 552076/552076 [00:05<00:00, 105610.03it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10413/552076 [00:00<00:05, 104129.85it/s]  4%|▍         | 22255/552076 [00:00<00:04, 108040.41it/s]  6%|▋         | 34564/552076 [00:00<00:04, 112151.79it/s]  8%|▊         | 46879/552076 [00:00<00:04, 115236.94it/s] 11%|█         | 59265/552076 [00:00<00:04, 117694.09it/s] 13%|█▎        | 71673/552076 [00:00<00:04, 119539.55it/s] 15%|█▌        | 84107/552076 [00:00<00:03, 120937.57it/s] 17%|█▋        | 96525/552076 [00:00<00:03, 121889.59it/s] 20%|█▉        | 109052/552076 [00:00<00:03, 122881.33it/s] 22%|██▏       | 121525/552076 [00:01<00:03, 123429.14it/s] 24%|██▍       | 134013/552076 [00:01<00:03, 123858.24it/s] 27%|██▋       | 146516/552076 [00:01<00:03, 124205.55it/s] 29%|██▉       | 158984/552076 [00:01<00:03, 124347.45it/s] 31%|███       | 171418/552076 [00:01<00:03, 124343.12it/s] 33%|███▎      | 183956/552076 [00:01<00:02, 124651.62it/s] 36%|███▌      | 196398/552076 [00:01<00:02, 124579.76it/s] 38%|███▊      | 208824/552076 [00:01<00:02, 124401.95it/s] 40%|████      | 221266/552076 [00:01<00:02, 124405.71it/s] 42%|████▏     | 233691/552076 [00:01<00:02, 122048.77it/s] 45%|████▍     | 246116/552076 [00:02<00:02, 122700.25it/s] 47%|████▋     | 258387/552076 [00:02<00:02, 118892.50it/s] 49%|████▉     | 270302/552076 [00:02<00:02, 104210.18it/s] 51%|█████     | 282284/552076 [00:02<00:02, 108446.69it/s] 53%|█████▎    | 293416/552076 [00:02<00:02, 97876.12it/s]  55%|█████▌    | 305772/552076 [00:02<00:02, 104384.91it/s] 57%|█████▋    | 316608/552076 [00:02<00:02, 102040.14it/s] 60%|█████▉    | 328875/552076 [00:02<00:02, 107460.09it/s] 62%|██████▏   | 340559/552076 [00:02<00:01, 107325.90it/s] 64%|██████▎   | 351488/552076 [00:03<00:01, 106729.55it/s] 66%|██████▌   | 362299/552076 [00:03<00:01, 98796.60it/s]  67%|██████▋   | 372393/552076 [00:03<00:01, 91025.46it/s] 70%|██████▉   | 384170/552076 [00:03<00:01, 97679.65it/s] 71%|███████▏  | 394264/552076 [00:03<00:01, 88503.35it/s] 74%|███████▎  | 406065/552076 [00:03<00:01, 95680.30it/s] 75%|███████▌  | 416076/552076 [00:03<00:01, 95261.68it/s] 77%|███████▋  | 426369/552076 [00:03<00:01, 97436.98it/s] 79%|███████▉  | 436343/552076 [00:03<00:01, 91848.96it/s] 81%|████████  | 445874/552076 [00:04<00:01, 92858.02it/s] 82%|████████▏ | 455322/552076 [00:04<00:01, 91031.14it/s] 84%|████████▍ | 464803/552076 [00:04<00:00, 92132.23it/s] 87%|████████▋ | 482351/552076 [00:04<00:00, 107440.84it/s] 91%|█████████ | 501800/552076 [00:04<00:00, 124104.32it/s] 95%|█████████▍| 523448/552076 [00:04<00:00, 142323.22it/s] 98%|█████████▊| 543568/552076 [00:04<00:00, 156018.97it/s]100%|██████████| 552076/552076 [00:04<00:00, 117295.96it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20199/552076 [00:00<00:02, 201981.52it/s]  6%|▋         | 34545/552076 [00:00<00:02, 179956.72it/s]  9%|▉         | 49622/552076 [00:00<00:02, 170076.76it/s] 13%|█▎        | 69876/552076 [00:00<00:02, 178665.99it/s] 16%|█▋        | 89860/552076 [00:00<00:02, 184530.06it/s] 20%|█▉        | 109378/552076 [00:00<00:02, 187600.64it/s] 24%|██▎       | 129757/552076 [00:00<00:02, 192178.10it/s] 27%|██▋       | 147513/552076 [00:00<00:02, 174897.99it/s] 30%|██▉       | 164781/552076 [00:00<00:02, 174224.92it/s] 34%|███▎      | 185305/552076 [00:01<00:02, 182497.00it/s] 37%|███▋      | 206871/552076 [00:01<00:01, 191320.68it/s] 42%|████▏     | 229576/552076 [00:01<00:01, 200797.89it/s] 46%|████▌     | 252264/552076 [00:01<00:01, 207967.97it/s] 49%|████▉     | 273182/552076 [00:01<00:01, 198938.77it/s] 53%|█████▎    | 293244/552076 [00:01<00:01, 186445.77it/s] 57%|█████▋    | 314341/552076 [00:01<00:01, 193182.03it/s] 61%|██████    | 335549/552076 [00:01<00:01, 198485.60it/s] 65%|██████▍   | 357887/552076 [00:01<00:00, 205348.51it/s] 69%|██████▊   | 378633/552076 [00:01<00:00, 200385.84it/s] 72%|███████▏  | 398846/552076 [00:02<00:00, 169355.44it/s] 75%|███████▌  | 416728/552076 [00:02<00:00, 157118.60it/s] 78%|███████▊  | 433279/552076 [00:02<00:00, 154612.74it/s] 83%|████████▎ | 455486/552076 [00:02<00:00, 170113.57it/s] 86%|████████▋ | 476505/552076 [00:02<00:00, 180431.86it/s] 90%|████████▉ | 495342/552076 [00:02<00:00, 181353.82it/s] 93%|█████████▎| 514034/552076 [00:02<00:00, 164290.63it/s] 96%|█████████▌| 531160/552076 [00:03<00:00, 114324.22it/s] 99%|█████████▊| 545155/552076 [00:03<00:00, 102756.43it/s]100%|██████████| 552076/552076 [00:03<00:00, 166901.95it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10523/552076 [00:00<00:05, 105224.58it/s]  4%|▎         | 20282/552076 [00:00<00:05, 102809.52it/s]  6%|▌         | 31123/552076 [00:00<00:04, 104425.32it/s]  8%|▊         | 41840/552076 [00:00<00:04, 105232.62it/s] 10%|▉         | 53401/552076 [00:00<00:04, 108142.23it/s] 12%|█▏        | 65539/552076 [00:00<00:04, 111797.95it/s] 14%|█▍        | 78024/552076 [00:00<00:04, 115415.71it/s] 16%|█▋        | 90063/552076 [00:00<00:03, 116863.19it/s] 19%|█▊        | 102447/552076 [00:00<00:03, 118872.06it/s] 21%|██        | 114638/552076 [00:01<00:03, 119767.04it/s] 23%|██▎       | 126555/552076 [00:01<00:03, 119586.82it/s] 25%|██▌       | 138329/552076 [00:01<00:03, 118564.49it/s] 27%|██▋       | 150185/552076 [00:01<00:03, 118560.47it/s] 29%|██▉       | 162065/552076 [00:01<00:03, 118629.55it/s] 31%|███▏      | 173866/552076 [00:01<00:03, 118022.45it/s] 34%|███▎      | 185626/552076 [00:01<00:03, 116683.50it/s] 36%|███▌      | 197268/552076 [00:01<00:03, 115176.42it/s] 38%|███▊      | 208772/552076 [00:01<00:03, 110016.33it/s] 40%|███▉      | 220202/552076 [00:01<00:02, 111267.21it/s] 42%|████▏     | 231360/552076 [00:02<00:02, 110092.69it/s] 44%|████▍     | 242394/552076 [00:02<00:02, 109564.32it/s] 46%|████▌     | 253368/552076 [00:02<00:02, 108908.62it/s] 48%|████▊     | 264273/552076 [00:02<00:02, 107982.45it/s] 50%|████▉     | 275083/552076 [00:02<00:02, 107866.77it/s] 52%|█████▏    | 285913/552076 [00:02<00:02, 107994.71it/s] 54%|█████▎    | 296718/552076 [00:02<00:02, 107718.04it/s] 56%|█████▌    | 307494/552076 [00:02<00:02, 107201.42it/s] 58%|█████▊    | 318252/552076 [00:02<00:02, 107312.14it/s] 60%|█████▉    | 328986/552076 [00:02<00:02, 106868.40it/s] 62%|██████▏   | 339675/552076 [00:03<00:01, 106805.40it/s] 64%|██████▎   | 350626/552076 [00:03<00:01, 107599.96it/s] 65%|██████▌   | 361389/552076 [00:03<00:01, 107027.01it/s] 67%|██████▋   | 372095/552076 [00:03<00:01, 103564.02it/s] 69%|██████▉   | 382478/552076 [00:03<00:01, 101757.87it/s] 71%|███████   | 392680/552076 [00:03<00:01, 88842.21it/s]  73%|███████▎  | 401878/552076 [00:03<00:01, 89106.61it/s] 74%|███████▍  | 411008/552076 [00:03<00:01, 82731.63it/s] 76%|███████▌  | 419526/552076 [00:03<00:01, 77252.55it/s] 77%|███████▋  | 427496/552076 [00:04<00:01, 74355.46it/s] 79%|███████▉  | 435127/552076 [00:04<00:01, 72240.57it/s] 80%|████████  | 442501/552076 [00:04<00:01, 70121.63it/s] 81%|████████▏ | 449632/552076 [00:04<00:01, 69251.02it/s] 83%|████████▎ | 456643/552076 [00:04<00:01, 68407.53it/s] 84%|████████▍ | 463546/552076 [00:04<00:01, 66857.34it/s] 85%|████████▌ | 470283/552076 [00:04<00:01, 66974.36it/s] 86%|████████▋ | 477063/552076 [00:04<00:01, 67217.81it/s] 88%|████████▊ | 483821/552076 [00:04<00:01, 67322.96it/s] 89%|████████▉ | 490583/552076 [00:05<00:00, 67410.61it/s] 90%|█████████ | 497511/552076 [00:05<00:00, 67959.67it/s] 91%|█████████▏| 504317/552076 [00:05<00:00, 66846.79it/s] 93%|█████████▎| 511013/552076 [00:05<00:00, 66307.31it/s] 94%|█████████▍| 517653/552076 [00:05<00:00, 65829.49it/s] 95%|█████████▍| 524243/552076 [00:05<00:00, 65407.15it/s] 96%|█████████▌| 530954/552076 [00:05<00:00, 65907.12it/s] 97%|█████████▋| 537851/552076 [00:05<00:00, 66794.55it/s] 99%|█████████▊| 544537/552076 [00:05<00:00, 58287.50it/s]100%|█████████▉| 550565/552076 [00:06<00:00, 53615.12it/s]100%|██████████| 552076/552076 [00:06<00:00, 90880.46it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5886/552076 [00:00<00:09, 58852.90it/s]  2%|▏         | 11985/552076 [00:00<00:09, 59475.46it/s]  3%|▎         | 18588/552076 [00:00<00:08, 61300.52it/s]  5%|▍         | 25266/552076 [00:00<00:08, 62845.17it/s]  6%|▌         | 31945/552076 [00:00<00:08, 63978.17it/s]  7%|▋         | 38564/552076 [00:00<00:07, 64623.48it/s]  8%|▊         | 45331/552076 [00:00<00:07, 65506.54it/s]  9%|▉         | 52162/552076 [00:00<00:07, 66321.98it/s] 11%|█         | 58629/552076 [00:00<00:07, 65816.32it/s] 12%|█▏        | 65346/552076 [00:01<00:07, 66214.30it/s] 13%|█▎        | 72167/552076 [00:01<00:07, 66799.58it/s] 14%|█▍        | 79448/552076 [00:01<00:06, 68493.30it/s] 16%|█▌        | 86231/552076 [00:01<00:06, 68215.95it/s] 17%|█▋        | 93007/552076 [00:01<00:06, 67928.97it/s] 18%|█▊        | 99768/552076 [00:01<00:06, 67664.01it/s] 19%|█▉        | 106513/552076 [00:01<00:07, 57160.32it/s] 20%|██        | 112493/552076 [00:01<00:07, 56552.13it/s] 21%|██▏       | 118335/552076 [00:01<00:08, 53586.06it/s] 22%|██▏       | 123857/552076 [00:02<00:09, 45289.99it/s] 23%|██▎       | 129316/552076 [00:02<00:08, 47723.76it/s] 24%|██▍       | 134654/552076 [00:02<00:08, 49288.86it/s] 25%|██▌       | 140159/552076 [00:02<00:08, 50886.23it/s] 26%|██▋       | 145772/552076 [00:02<00:07, 52351.54it/s] 27%|██▋       | 151126/552076 [00:02<00:07, 52449.23it/s] 28%|██▊       | 156482/552076 [00:02<00:07, 52769.87it/s] 29%|██▉       | 161818/552076 [00:02<00:07, 52158.13it/s] 30%|███       | 167087/552076 [00:02<00:07, 52316.35it/s] 31%|███       | 172349/552076 [00:02<00:07, 52100.42it/s] 32%|███▏      | 177775/552076 [00:03<00:07, 52727.80it/s] 33%|███▎      | 183119/552076 [00:03<00:06, 52937.75it/s] 34%|███▍      | 189105/552076 [00:03<00:06, 54839.43it/s] 36%|███▋      | 200708/552076 [00:03<00:05, 64346.83it/s] 38%|███▊      | 207807/552076 [00:03<00:05, 64562.37it/s] 39%|███▉      | 214729/552076 [00:03<00:05, 63781.73it/s] 40%|████      | 221435/552076 [00:03<00:05, 63706.42it/s] 41%|████▏     | 228035/552076 [00:03<00:05, 62728.65it/s] 42%|████▏     | 234472/552076 [00:03<00:05, 62534.35it/s] 44%|████▎     | 241092/552076 [00:04<00:05, 61987.40it/s] 45%|████▍     | 247575/552076 [00:04<00:04, 62812.50it/s] 46%|████▌     | 254078/552076 [00:04<00:04, 63461.63it/s] 48%|████▊     | 266115/552076 [00:04<00:03, 73949.63it/s] 50%|█████     | 277004/552076 [00:04<00:03, 81826.05it/s] 52%|█████▏    | 288513/552076 [00:04<00:02, 88746.21it/s] 54%|█████▍    | 298078/552076 [00:04<00:03, 79645.03it/s] 56%|█████▌    | 306702/552076 [00:04<00:03, 72996.92it/s] 57%|█████▋    | 314572/552076 [00:04<00:03, 70010.61it/s] 58%|█████▊    | 321998/552076 [00:05<00:03, 67565.18it/s] 60%|██████    | 333230/552076 [00:05<00:02, 76737.47it/s] 62%|██████▏   | 343672/552076 [00:05<00:02, 82580.11it/s] 64%|██████▍   | 356029/552076 [00:05<00:02, 91705.51it/s] 66%|██████▋   | 365922/552076 [00:05<00:02, 81846.24it/s] 68%|██████▊   | 374810/552076 [00:05<00:02, 73678.80it/s] 69%|██████▉   | 382825/552076 [00:05<00:02, 68536.37it/s] 71%|███████   | 392233/552076 [00:05<00:02, 74613.82it/s] 73%|███████▎  | 404633/552076 [00:05<00:01, 84738.22it/s] 75%|███████▌  | 416587/552076 [00:06<00:01, 92846.33it/s] 78%|███████▊  | 429033/552076 [00:06<00:01, 100503.12it/s] 80%|███████▉  | 441456/552076 [00:06<00:01, 106610.62it/s] 82%|████████▏ | 453319/552076 [00:06<00:00, 109950.52it/s] 84%|████████▍ | 465783/552076 [00:06<00:00, 113977.68it/s] 87%|████████▋ | 477647/552076 [00:06<00:00, 115334.83it/s] 89%|████████▉ | 490135/552076 [00:06<00:00, 118041.04it/s] 91%|█████████ | 502640/552076 [00:06<00:00, 120058.21it/s] 93%|█████████▎| 514793/552076 [00:06<00:00, 119517.15it/s] 96%|█████████▌| 527241/552076 [00:07<00:00, 120961.21it/s] 98%|█████████▊| 539626/552076 [00:07<00:00, 121810.98it/s]100%|█████████▉| 551980/552076 [00:07<00:00, 122324.27it/s]100%|██████████| 552076/552076 [00:07<00:00, 76638.44it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12064/552076 [00:00<00:04, 120633.21it/s]  4%|▍         | 23577/552076 [00:00<00:04, 118926.86it/s]  6%|▋         | 35587/552076 [00:00<00:04, 119276.00it/s]  9%|▊         | 47775/552076 [00:00<00:04, 120042.94it/s] 11%|█         | 60125/552076 [00:00<00:04, 121056.96it/s] 13%|█▎        | 72509/552076 [00:00<00:03, 121876.63it/s] 15%|█▌        | 84913/552076 [00:00<00:03, 122514.59it/s] 18%|█▊        | 97373/552076 [00:00<00:03, 123131.14it/s] 20%|█▉        | 109789/552076 [00:00<00:03, 123435.14it/s] 22%|██▏       | 122253/552076 [00:01<00:03, 123791.81it/s] 24%|██▍       | 134745/552076 [00:01<00:03, 124126.92it/s] 27%|██▋       | 147223/552076 [00:01<00:03, 124321.54it/s] 29%|██▉       | 159674/552076 [00:01<00:03, 124375.57it/s] 31%|███       | 172122/552076 [00:01<00:03, 124405.13it/s] 34%|███▎      | 185179/552076 [00:01<00:02, 126191.06it/s] 36%|███▌      | 197748/552076 [00:01<00:02, 125802.41it/s] 38%|███▊      | 210294/552076 [00:01<00:02, 124187.41it/s] 40%|████      | 222860/552076 [00:01<00:02, 124622.76it/s] 43%|████▎     | 235321/552076 [00:01<00:02, 124618.07it/s] 45%|████▍     | 247774/552076 [00:02<00:02, 124507.48it/s] 47%|████▋     | 260308/552076 [00:02<00:02, 124755.04it/s] 49%|████▉     | 272779/552076 [00:02<00:02, 124562.35it/s] 52%|█████▏    | 285233/552076 [00:02<00:02, 122205.59it/s] 54%|█████▍    | 298055/552076 [00:02<00:02, 123948.91it/s] 56%|█████▌    | 310541/552076 [00:02<00:01, 124219.72it/s] 59%|█████▊    | 322972/552076 [00:02<00:01, 124193.38it/s] 61%|██████    | 335398/552076 [00:02<00:01, 123224.34it/s] 63%|██████▎   | 347908/552076 [00:02<00:01, 123778.34it/s] 65%|██████▌   | 360437/552076 [00:02<00:01, 124227.85it/s] 68%|██████▊   | 372981/552076 [00:03<00:01, 124587.47it/s] 70%|██████▉   | 386319/552076 [00:03<00:01, 127098.58it/s] 72%|███████▏  | 399044/552076 [00:03<00:01, 126279.35it/s] 75%|███████▍  | 411684/552076 [00:03<00:01, 125655.77it/s] 77%|███████▋  | 424259/552076 [00:03<00:01, 125193.70it/s] 79%|███████▉  | 436785/552076 [00:03<00:00, 125105.02it/s] 81%|████████▏ | 449300/552076 [00:03<00:00, 125047.91it/s] 84%|████████▎ | 461808/552076 [00:03<00:00, 125042.91it/s] 86%|████████▌ | 474315/552076 [00:03<00:00, 117615.61it/s] 88%|████████▊ | 486672/552076 [00:03<00:00, 119338.35it/s] 90%|█████████ | 498677/552076 [00:04<00:00, 119435.80it/s] 92%|█████████▏| 510670/552076 [00:04<00:00, 92980.35it/s]  95%|█████████▍| 523426/552076 [00:04<00:00, 101209.62it/s] 97%|█████████▋| 534937/552076 [00:04<00:00, 105012.36it/s] 99%|█████████▉| 546084/552076 [00:04<00:00, 99740.49it/s] 100%|██████████| 552076/552076 [00:04<00:00, 119050.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8704/552076 [00:00<00:06, 87035.93it/s]  4%|▎         | 20451/552076 [00:00<00:05, 94370.22it/s]  6%|▌         | 31476/552076 [00:00<00:05, 98631.22it/s]  8%|▊         | 43044/552076 [00:00<00:04, 103192.50it/s]  9%|▉         | 51452/552076 [00:00<00:05, 85957.22it/s]  11%|█         | 59194/552076 [00:00<00:06, 79864.63it/s] 13%|█▎        | 70972/552076 [00:00<00:05, 88400.94it/s] 14%|█▍        | 79738/552076 [00:00<00:05, 81822.26it/s] 16%|█▌        | 87966/552076 [00:01<00:06, 72725.11it/s] 17%|█▋        | 95458/552076 [00:01<00:06, 71775.73it/s] 19%|█▊        | 102792/552076 [00:01<00:06, 68430.19it/s] 20%|██        | 112822/552076 [00:01<00:05, 75640.24it/s] 22%|██▏       | 121047/552076 [00:01<00:05, 75527.06it/s] 23%|██▎       | 128834/552076 [00:01<00:05, 75233.05it/s] 25%|██▌       | 140257/552076 [00:01<00:04, 83816.06it/s] 27%|██▋       | 151570/552076 [00:01<00:04, 90878.88it/s] 29%|██▉       | 161130/552076 [00:01<00:04, 87860.07it/s] 31%|███       | 170268/552076 [00:01<00:04, 84920.38it/s] 33%|███▎      | 181682/552076 [00:02<00:04, 91983.88it/s] 35%|███▌      | 193290/552076 [00:02<00:03, 98091.27it/s] 37%|███▋      | 206562/552076 [00:02<00:03, 106419.93it/s] 40%|███▉      | 218551/552076 [00:02<00:03, 110130.20it/s] 42%|████▏     | 231034/552076 [00:02<00:02, 114163.04it/s] 44%|████▍     | 243140/552076 [00:02<00:02, 116146.14it/s] 46%|████▌     | 254963/552076 [00:02<00:02, 111617.23it/s] 48%|████▊     | 266309/552076 [00:02<00:02, 109380.50it/s] 50%|█████     | 278201/552076 [00:02<00:02, 112076.51it/s] 53%|█████▎    | 290551/552076 [00:03<00:02, 115274.43it/s] 55%|█████▍    | 302571/552076 [00:03<00:02, 116705.82it/s] 57%|█████▋    | 314318/552076 [00:03<00:02, 92402.83it/s]  59%|█████▉    | 324407/552076 [00:03<00:03, 70763.02it/s] 60%|██████    | 332842/552076 [00:03<00:03, 70333.98it/s] 62%|██████▏   | 340827/552076 [00:03<00:03, 61379.17it/s] 64%|██████▍   | 352966/552076 [00:03<00:02, 72066.86it/s] 66%|██████▌   | 365329/552076 [00:04<00:02, 82373.40it/s] 68%|██████▊   | 377583/552076 [00:04<00:01, 91355.65it/s] 71%|███████   | 389963/552076 [00:04<00:01, 99149.91it/s] 73%|███████▎  | 402354/552076 [00:04<00:01, 105470.71it/s] 75%|███████▌  | 414782/552076 [00:04<00:01, 110485.17it/s] 77%|███████▋  | 426520/552076 [00:04<00:01, 89374.18it/s]  79%|███████▉  | 436591/552076 [00:04<00:01, 71173.69it/s] 81%|████████  | 448308/552076 [00:04<00:01, 80673.77it/s] 83%|████████▎ | 460590/552076 [00:05<00:01, 89931.81it/s] 86%|████████▌ | 473051/552076 [00:05<00:00, 98123.19it/s] 88%|████████▊ | 485422/552076 [00:05<00:00, 104612.70it/s] 90%|█████████ | 497586/552076 [00:05<00:00, 109197.67it/s] 92%|█████████▏| 509742/552076 [00:05<00:00, 112632.65it/s] 94%|█████████▍| 521582/552076 [00:05<00:00, 114175.38it/s] 97%|█████████▋| 533367/552076 [00:05<00:00, 115252.22it/s] 99%|█████████▊| 545167/552076 [00:05<00:00, 116061.91it/s]100%|██████████| 552076/552076 [00:05<00:00, 95683.93it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12093/552076 [00:00<00:04, 120928.67it/s]  4%|▍         | 24358/552076 [00:00<00:04, 121437.43it/s]  7%|▋         | 36643/552076 [00:00<00:04, 121857.64it/s]  9%|▉         | 49017/552076 [00:00<00:04, 122415.74it/s] 11%|█         | 61401/552076 [00:00<00:03, 122837.77it/s] 13%|█▎        | 73780/552076 [00:00<00:03, 123119.65it/s] 16%|█▌        | 86025/552076 [00:00<00:03, 122915.91it/s] 18%|█▊        | 97322/552076 [00:00<00:04, 109806.72it/s] 20%|█▉        | 109737/552076 [00:00<00:03, 113746.86it/s] 22%|██▏       | 121792/552076 [00:01<00:03, 114764.94it/s] 24%|██▍       | 134196/552076 [00:01<00:03, 117396.60it/s] 27%|██▋       | 146716/552076 [00:01<00:03, 119633.32it/s] 29%|██▉       | 159215/552076 [00:01<00:03, 121189.59it/s] 31%|███       | 171703/552076 [00:01<00:03, 122272.01it/s] 33%|███▎      | 183902/552076 [00:01<00:03, 120772.65it/s] 35%|███▌      | 195964/552076 [00:01<00:02, 120295.14it/s] 38%|███▊      | 208406/552076 [00:01<00:02, 121502.35it/s] 40%|███▉      | 220552/552076 [00:01<00:02, 119974.21it/s] 42%|████▏     | 232970/552076 [00:01<00:02, 121203.98it/s] 44%|████▍     | 245456/552076 [00:02<00:02, 122276.86it/s] 47%|████▋     | 257914/552076 [00:02<00:02, 122958.24it/s] 49%|████▉     | 270386/552076 [00:02<00:02, 123479.02it/s] 51%|█████     | 282805/552076 [00:02<00:02, 123691.05it/s] 53%|█████▎    | 295278/552076 [00:02<00:02, 123998.21it/s] 56%|█████▌    | 307793/552076 [00:02<00:01, 124339.34it/s] 58%|█████▊    | 320283/552076 [00:02<00:01, 124504.74it/s] 60%|██████    | 332758/552076 [00:02<00:01, 124577.27it/s] 63%|██████▎   | 345217/552076 [00:02<00:01, 124539.17it/s] 65%|██████▍   | 357707/552076 [00:02<00:01, 124644.30it/s] 67%|██████▋   | 370194/552076 [00:03<00:01, 124710.54it/s] 69%|██████▉   | 382666/552076 [00:03<00:01, 124567.30it/s] 72%|███████▏  | 395123/552076 [00:03<00:01, 124456.70it/s] 74%|███████▍  | 407569/552076 [00:03<00:01, 124365.75it/s] 76%|███████▌  | 420042/552076 [00:03<00:01, 124472.79it/s] 78%|███████▊  | 432614/552076 [00:03<00:00, 124843.85it/s] 81%|████████  | 445121/552076 [00:03<00:00, 124909.41it/s] 83%|████████▎ | 457621/552076 [00:03<00:00, 124936.43it/s] 85%|████████▌ | 470135/552076 [00:03<00:00, 124995.86it/s] 87%|████████▋ | 482635/552076 [00:03<00:00, 112674.12it/s] 90%|████████▉ | 495184/552076 [00:04<00:00, 116233.98it/s] 92%|█████████▏| 506998/552076 [00:04<00:00, 110670.15it/s] 94%|█████████▍| 518834/552076 [00:04<00:00, 109474.57it/s] 96%|█████████▌| 529917/552076 [00:04<00:00, 93454.66it/s]  98%|█████████▊| 539765/552076 [00:04<00:00, 83620.36it/s]100%|█████████▉| 551898/552076 [00:04<00:00, 92218.43it/s]100%|██████████| 552076/552076 [00:04<00:00, 117080.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11443/552076 [00:00<00:04, 114427.11it/s]  4%|▍         | 21757/552076 [00:00<00:04, 110788.84it/s]  5%|▌         | 28111/552076 [00:00<00:05, 89184.18it/s]   7%|▋         | 37263/552076 [00:00<00:05, 89870.32it/s]  9%|▉         | 49370/552076 [00:00<00:05, 97399.90it/s] 11%|█         | 60161/552076 [00:00<00:04, 100261.31it/s] 13%|█▎        | 69229/552076 [00:00<00:05, 96558.56it/s]  15%|█▍        | 80232/552076 [00:00<00:04, 100238.61it/s] 16%|█▋        | 89870/552076 [00:00<00:04, 99046.60it/s]  18%|█▊        | 101852/552076 [00:01<00:04, 102456.89it/s] 20%|██        | 112513/552076 [00:01<00:04, 103666.74it/s] 23%|██▎       | 124820/552076 [00:01<00:03, 108811.17it/s] 25%|██▍       | 136116/552076 [00:01<00:03, 110022.42it/s] 27%|██▋       | 148455/552076 [00:01<00:03, 113717.71it/s] 29%|██▉       | 160488/552076 [00:01<00:03, 115621.06it/s] 31%|███       | 172077/552076 [00:01<00:04, 92248.72it/s]  33%|███▎      | 183823/552076 [00:01<00:03, 98596.96it/s] 36%|███▌      | 196216/552076 [00:01<00:03, 105036.47it/s] 38%|███▊      | 208707/552076 [00:01<00:03, 110299.74it/s] 40%|████      | 221026/552076 [00:02<00:02, 113872.39it/s] 42%|████▏     | 233489/552076 [00:02<00:02, 116898.66it/s] 44%|████▍     | 245452/552076 [00:02<00:02, 117255.93it/s] 47%|████▋     | 257562/552076 [00:02<00:02, 117736.01it/s] 49%|████▉     | 269470/552076 [00:02<00:02, 114625.47it/s] 51%|█████     | 281045/552076 [00:02<00:02, 111160.87it/s] 53%|█████▎    | 292807/552076 [00:02<00:02, 113022.75it/s] 55%|█████▌    | 305235/552076 [00:02<00:02, 116179.69it/s] 58%|█████▊    | 317892/552076 [00:02<00:01, 119112.93it/s] 60%|█████▉    | 330489/552076 [00:03<00:01, 121089.73it/s] 62%|██████▏   | 342657/552076 [00:03<00:01, 119965.91it/s] 64%|██████▍   | 355130/552076 [00:03<00:01, 121355.25it/s] 67%|██████▋   | 367300/552076 [00:03<00:01, 113486.63it/s] 69%|██████▊   | 379342/552076 [00:03<00:01, 115479.46it/s] 71%|███████   | 391665/552076 [00:03<00:01, 117697.51it/s] 73%|███████▎  | 404096/552076 [00:03<00:01, 119605.32it/s] 75%|███████▌  | 416628/552076 [00:03<00:01, 121261.59it/s] 78%|███████▊  | 428804/552076 [00:03<00:01, 120734.17it/s] 80%|███████▉  | 440913/552076 [00:03<00:00, 120775.73it/s] 82%|████████▏ | 453360/552076 [00:04<00:00, 121858.68it/s] 84%|████████▍ | 465566/552076 [00:04<00:00, 98618.65it/s]  86%|████████▌ | 476158/552076 [00:04<00:00, 78109.23it/s] 88%|████████▊ | 485150/552076 [00:04<00:01, 66402.81it/s] 90%|█████████ | 497429/552076 [00:04<00:00, 77012.06it/s] 92%|█████████▏| 509792/552076 [00:04<00:00, 86833.93it/s] 95%|█████████▍| 522224/552076 [00:04<00:00, 95468.16it/s] 97%|█████████▋| 534165/552076 [00:05<00:00, 101577.21it/s] 99%|█████████▉| 546503/552076 [00:05<00:00, 107261.49it/s]100%|██████████| 552076/552076 [00:05<00:00, 106968.01it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6619/552076 [00:00<00:08, 66187.85it/s]  3%|▎         | 14715/552076 [00:00<00:07, 70019.15it/s]  3%|▎         | 18534/552076 [00:00<00:10, 53279.05it/s]  4%|▍         | 24821/552076 [00:00<00:09, 55832.62it/s]  6%|▋         | 35566/552076 [00:00<00:07, 65233.25it/s]  8%|▊         | 46357/552076 [00:00<00:06, 74014.12it/s] 10%|█         | 57180/552076 [00:00<00:06, 81768.65it/s] 12%|█▏        | 68098/552076 [00:00<00:05, 88427.89it/s] 14%|█▍        | 78800/552076 [00:00<00:05, 93289.74it/s] 16%|█▋        | 90332/552076 [00:01<00:04, 98961.01it/s] 18%|█▊        | 102021/552076 [00:01<00:04, 103733.06it/s] 21%|██        | 113543/552076 [00:01<00:04, 106929.20it/s] 23%|██▎       | 124487/552076 [00:01<00:04, 94744.09it/s]  25%|██▍       | 136276/552076 [00:01<00:04, 100673.36it/s] 27%|██▋       | 148206/552076 [00:01<00:03, 105618.56it/s] 29%|██▉       | 160373/552076 [00:01<00:03, 109970.08it/s] 31%|███       | 172205/552076 [00:01<00:03, 112345.46it/s] 33%|███▎      | 183655/552076 [00:01<00:03, 111609.12it/s] 35%|███▌      | 195260/552076 [00:01<00:03, 112903.11it/s] 38%|███▊      | 207179/552076 [00:02<00:03, 114717.19it/s] 40%|███▉      | 219370/552076 [00:02<00:02, 116783.06it/s] 42%|████▏     | 231117/552076 [00:02<00:02, 116572.48it/s] 44%|████▍     | 242822/552076 [00:02<00:02, 116509.61it/s] 46%|████▌     | 254507/552076 [00:02<00:02, 115844.94it/s] 48%|████▊     | 266376/552076 [00:02<00:02, 116682.51it/s] 50%|█████     | 278541/552076 [00:02<00:02, 118128.68it/s] 53%|█████▎    | 290926/552076 [00:02<00:02, 119786.92it/s] 55%|█████▍    | 302923/552076 [00:02<00:02, 117192.42it/s] 57%|█████▋    | 315497/552076 [00:02<00:01, 119631.19it/s] 59%|█████▉    | 327490/552076 [00:03<00:02, 109195.34it/s] 61%|██████▏   | 338607/552076 [00:03<00:02, 84780.51it/s]  63%|██████▎   | 348061/552076 [00:03<00:02, 76731.73it/s] 65%|██████▍   | 356563/552076 [00:03<00:02, 71006.61it/s] 66%|██████▌   | 364329/552076 [00:03<00:02, 66062.36it/s] 67%|██████▋   | 371470/552076 [00:03<00:02, 65803.27it/s] 69%|██████▊   | 378425/552076 [00:03<00:02, 60760.89it/s] 71%|███████   | 390326/552076 [00:04<00:02, 71218.00it/s] 73%|███████▎  | 402594/552076 [00:04<00:01, 81470.34it/s] 75%|███████▌  | 415209/552076 [00:04<00:01, 91155.03it/s] 78%|███████▊  | 428110/552076 [00:04<00:01, 99953.61it/s] 80%|███████▉  | 440524/552076 [00:04<00:01, 106157.44it/s] 82%|████████▏ | 452850/552076 [00:04<00:00, 110767.62it/s] 84%|████████▍ | 465241/552076 [00:04<00:00, 114406.88it/s] 86%|████████▋ | 477175/552076 [00:04<00:00, 111193.41it/s] 89%|████████▊ | 489597/552076 [00:04<00:00, 114804.70it/s] 91%|█████████ | 502024/552076 [00:04<00:00, 117429.74it/s] 93%|█████████▎| 513982/552076 [00:05<00:00, 116846.10it/s] 95%|█████████▌| 526546/552076 [00:05<00:00, 119350.65it/s] 98%|█████████▊| 538600/552076 [00:05<00:00, 119568.36it/s]100%|█████████▉| 550640/552076 [00:05<00:00, 114431.53it/s]100%|██████████| 552076/552076 [00:05<00:00, 101773.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 6930/552076 [00:00<00:08, 64747.53it/s]  3%|▎         | 18530/552076 [00:00<00:07, 73786.00it/s]  5%|▍         | 24933/552076 [00:00<00:07, 70560.26it/s]  6%|▌         | 32860/552076 [00:00<00:07, 72964.43it/s]  8%|▊         | 45247/552076 [00:00<00:06, 83224.85it/s] 10%|▉         | 54152/552076 [00:00<00:05, 84889.17it/s] 13%|█▎        | 69996/552076 [00:00<00:04, 98624.06it/s] 16%|█▌        | 89244/552076 [00:00<00:04, 115134.87it/s] 19%|█▊        | 102263/552076 [00:00<00:04, 104208.82it/s] 23%|██▎       | 124253/552076 [00:01<00:03, 123738.69it/s] 27%|██▋       | 146446/552076 [00:01<00:02, 142675.66it/s] 31%|███       | 168723/552076 [00:01<00:02, 159924.01it/s] 34%|███▍      | 187303/552076 [00:01<00:02, 159635.56it/s] 37%|███▋      | 205078/552076 [00:01<00:02, 141110.06it/s] 41%|████      | 225847/552076 [00:01<00:02, 156123.70it/s] 45%|████▍     | 246057/552076 [00:01<00:01, 167557.51it/s] 48%|████▊     | 266564/552076 [00:01<00:01, 177285.85it/s] 52%|█████▏    | 285424/552076 [00:02<00:01, 154367.73it/s] 55%|█████▌    | 305981/552076 [00:02<00:01, 166833.22it/s] 59%|█████▉    | 326017/552076 [00:02<00:01, 175650.35it/s] 62%|██████▏   | 344575/552076 [00:02<00:01, 178513.33it/s] 66%|██████▌   | 364763/552076 [00:02<00:01, 184934.74it/s] 70%|██████▉   | 383801/552076 [00:02<00:00, 186457.50it/s] 73%|███████▎  | 405283/552076 [00:02<00:00, 194145.98it/s] 77%|███████▋  | 425049/552076 [00:02<00:00, 188475.08it/s] 81%|████████  | 444966/552076 [00:02<00:00, 191560.77it/s] 84%|████████▍ | 466182/552076 [00:02<00:00, 197305.75it/s] 88%|████████▊ | 488316/552076 [00:03<00:00, 203948.50it/s] 93%|█████████▎| 511154/552076 [00:03<00:00, 210709.56it/s] 96%|█████████▋| 532415/552076 [00:03<00:00, 208234.78it/s]100%|██████████| 552076/552076 [00:03<00:00, 166272.28it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21336/552076 [00:00<00:02, 213355.63it/s]  8%|▊         | 41725/552076 [00:00<00:02, 210423.59it/s] 12%|█▏        | 63662/552076 [00:00<00:02, 213029.71it/s] 16%|█▌        | 85888/552076 [00:00<00:02, 215715.84it/s] 20%|█▉        | 108104/552076 [00:00<00:02, 217607.87it/s] 23%|██▎       | 129071/552076 [00:00<00:01, 215161.81it/s] 27%|██▋       | 150247/552076 [00:00<00:01, 214127.27it/s] 31%|███       | 172088/552076 [00:00<00:01, 215392.59it/s] 35%|███▍      | 192409/552076 [00:00<00:01, 208202.77it/s] 38%|███▊      | 212429/552076 [00:01<00:01, 182884.40it/s] 42%|████▏     | 230717/552076 [00:01<00:01, 171622.13it/s] 45%|████▍     | 248020/552076 [00:01<00:02, 128660.66it/s] 48%|████▊     | 266328/552076 [00:01<00:02, 141256.07it/s] 52%|█████▏    | 286369/552076 [00:01<00:01, 154978.41it/s] 55%|█████▍    | 303355/552076 [00:01<00:01, 157302.57it/s] 58%|█████▊    | 320136/552076 [00:01<00:01, 130047.48it/s] 61%|██████    | 334661/552076 [00:02<00:02, 102668.24it/s] 63%|██████▎   | 346894/552076 [00:02<00:02, 89567.48it/s]  66%|██████▌   | 362069/552076 [00:02<00:01, 102120.92it/s] 69%|██████▉   | 381239/552076 [00:02<00:01, 118770.28it/s] 72%|███████▏  | 399578/552076 [00:02<00:01, 132808.04it/s] 76%|███████▌  | 418834/552076 [00:02<00:00, 146439.38it/s] 79%|███████▉  | 436184/552076 [00:02<00:00, 153626.21it/s] 83%|████████▎ | 455699/552076 [00:02<00:00, 164100.55it/s] 86%|████████▌ | 474032/552076 [00:02<00:00, 169430.09it/s] 89%|████████▉ | 493596/552076 [00:03<00:00, 176524.51it/s] 93%|█████████▎| 513460/552076 [00:03<00:00, 182623.07it/s] 97%|█████████▋| 536005/552076 [00:03<00:00, 193657.47it/s]100%|██████████| 552076/552076 [00:03<00:00, 165288.18it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19976/552076 [00:00<00:02, 199757.81it/s]  7%|▋         | 39185/552076 [00:00<00:02, 197390.96it/s] 11%|█         | 60541/552076 [00:00<00:02, 201976.49it/s] 15%|█▍        | 81339/552076 [00:00<00:02, 203740.60it/s] 19%|█▉        | 104185/552076 [00:00<00:02, 210574.43it/s] 23%|██▎       | 127261/552076 [00:00<00:01, 216246.90it/s] 27%|██▋       | 149081/552076 [00:00<00:01, 216826.90it/s] 31%|███       | 171074/552076 [00:00<00:01, 217746.96it/s] 35%|███▍      | 191743/552076 [00:00<00:01, 211533.01it/s] 39%|███▉      | 214674/552076 [00:01<00:01, 216569.57it/s] 43%|████▎     | 236577/552076 [00:01<00:01, 217300.71it/s] 47%|████▋     | 258018/552076 [00:01<00:01, 216422.75it/s] 51%|█████     | 281117/552076 [00:01<00:01, 220595.29it/s] 55%|█████▌    | 304162/552076 [00:01<00:01, 223460.72it/s] 59%|█████▉    | 326415/552076 [00:01<00:01, 217559.73it/s] 63%|██████▎   | 349638/552076 [00:01<00:00, 221761.28it/s] 68%|██████▊   | 372679/552076 [00:01<00:00, 224284.35it/s] 72%|███████▏  | 395629/552076 [00:01<00:00, 225822.78it/s] 76%|███████▌  | 418218/552076 [00:01<00:00, 185383.80it/s] 79%|███████▉  | 437953/552076 [00:02<00:00, 183646.58it/s] 83%|████████▎ | 458298/552076 [00:02<00:00, 189170.56it/s] 87%|████████▋ | 477955/552076 [00:02<00:00, 191330.08it/s] 90%|█████████ | 498471/552076 [00:02<00:00, 195278.23it/s] 94%|█████████▍| 518332/552076 [00:02<00:00, 189026.80it/s] 98%|█████████▊| 539118/552076 [00:02<00:00, 194306.38it/s]100%|██████████| 552076/552076 [00:02<00:00, 206261.16it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20968/552076 [00:00<00:02, 209679.70it/s]  8%|▊         | 42843/552076 [00:00<00:02, 212319.40it/s] 11%|█▏        | 63157/552076 [00:00<00:02, 209479.08it/s] 15%|█▌        | 84492/552076 [00:00<00:02, 210624.84it/s] 19%|█▉        | 105560/552076 [00:00<00:02, 210639.94it/s] 23%|██▎       | 126138/552076 [00:00<00:02, 209144.71it/s] 27%|██▋       | 146426/552076 [00:00<00:01, 207224.95it/s] 30%|███       | 167541/552076 [00:00<00:01, 208384.47it/s] 34%|███▍      | 188772/552076 [00:00<00:01, 209544.79it/s] 38%|███▊      | 209027/552076 [00:01<00:01, 207394.69it/s] 42%|████▏     | 229900/552076 [00:01<00:01, 207793.10it/s] 46%|████▌     | 252250/552076 [00:01<00:01, 212267.28it/s] 50%|████▉     | 275006/552076 [00:01<00:01, 216634.74it/s] 54%|█████▎    | 296678/552076 [00:01<00:01, 216657.90it/s] 58%|█████▊    | 319605/552076 [00:01<00:01, 220292.54it/s] 62%|██████▏   | 341571/552076 [00:01<00:01, 178105.51it/s] 65%|██████▌   | 360640/552076 [00:01<00:01, 174706.62it/s] 69%|██████▊   | 379006/552076 [00:01<00:01, 138121.11it/s] 71%|███████▏  | 394646/552076 [00:02<00:01, 110533.25it/s] 75%|███████▍  | 412622/552076 [00:02<00:01, 124971.10it/s] 77%|███████▋  | 427262/552076 [00:02<00:01, 113801.93it/s] 81%|████████  | 445838/552076 [00:02<00:00, 128765.83it/s] 83%|████████▎ | 460705/552076 [00:02<00:00, 134151.41it/s] 86%|████████▌ | 475472/552076 [00:02<00:00, 112590.81it/s] 88%|████████▊ | 488265/552076 [00:03<00:00, 95765.98it/s]  92%|█████████▏| 506527/552076 [00:03<00:00, 111702.97it/s] 95%|█████████▌| 526811/552076 [00:03<00:00, 129104.82it/s] 99%|█████████▉| 547334/552076 [00:03<00:00, 145269.98it/s]100%|██████████| 552076/552076 [00:03<00:00, 165401.82it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20888/552076 [00:00<00:02, 208877.71it/s]  8%|▊         | 43154/552076 [00:00<00:02, 212827.44it/s] 12%|█▏        | 66126/552076 [00:00<00:02, 217627.78it/s] 16%|█▌        | 89075/552076 [00:00<00:02, 221053.13it/s] 20%|██        | 112684/552076 [00:00<00:01, 225356.91it/s] 24%|██▍       | 134649/552076 [00:00<00:01, 223612.21it/s] 29%|██▊       | 158404/552076 [00:00<00:01, 227616.93it/s] 33%|███▎      | 180021/552076 [00:00<00:01, 224056.78it/s] 37%|███▋      | 203094/552076 [00:00<00:01, 226016.50it/s] 41%|████      | 224887/552076 [00:01<00:01, 222936.40it/s] 45%|████▍     | 246625/552076 [00:01<00:01, 220360.08it/s] 49%|████▊     | 268279/552076 [00:01<00:01, 218895.43it/s] 53%|█████▎    | 291396/552076 [00:01<00:01, 222436.33it/s] 57%|█████▋    | 313984/552076 [00:01<00:01, 223455.73it/s] 61%|██████    | 337503/552076 [00:01<00:00, 226850.95it/s] 65%|██████▌   | 361129/552076 [00:01<00:00, 229592.81it/s] 70%|██████▉   | 384891/552076 [00:01<00:00, 231942.85it/s] 74%|███████▍  | 408324/552076 [00:01<00:00, 232651.30it/s] 78%|███████▊  | 431850/552076 [00:01<00:00, 233427.05it/s] 82%|████████▏ | 455183/552076 [00:02<00:00, 231870.43it/s] 87%|████████▋ | 478366/552076 [00:02<00:00, 231720.29it/s] 91%|█████████ | 501659/552076 [00:02<00:00, 232078.64it/s] 95%|█████████▌| 524865/552076 [00:02<00:00, 229643.17it/s] 99%|█████████▉| 547834/552076 [00:02<00:00, 223116.34it/s]100%|██████████| 552076/552076 [00:02<00:00, 226519.11it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19714/552076 [00:00<00:02, 197134.08it/s]  8%|▊         | 41843/552076 [00:00<00:02, 203806.27it/s] 12%|█▏        | 64408/552076 [00:00<00:02, 209899.74it/s] 16%|█▌        | 86341/552076 [00:00<00:02, 212642.02it/s] 20%|█▉        | 107928/552076 [00:00<00:02, 213599.99it/s] 24%|██▎       | 130287/552076 [00:00<00:01, 216500.10it/s] 28%|██▊       | 152853/552076 [00:00<00:01, 219166.95it/s] 32%|███▏      | 174316/552076 [00:00<00:01, 217784.81it/s] 35%|███▌      | 194988/552076 [00:00<00:01, 213826.05it/s] 39%|███▉      | 215612/552076 [00:01<00:01, 207611.56it/s] 43%|████▎     | 235882/552076 [00:01<00:01, 199906.55it/s] 46%|████▋     | 255590/552076 [00:01<00:01, 196330.57it/s] 50%|████▉     | 275040/552076 [00:01<00:01, 151471.42it/s] 53%|█████▎    | 291619/552076 [00:01<00:01, 147837.85it/s] 56%|█████▌    | 309149/552076 [00:01<00:01, 155126.47it/s] 60%|█████▉    | 328695/552076 [00:01<00:01, 165362.12it/s] 63%|██████▎   | 347875/552076 [00:01<00:01, 172493.12it/s] 67%|██████▋   | 367907/552076 [00:01<00:01, 179992.33it/s] 70%|███████   | 387426/552076 [00:02<00:00, 184296.99it/s] 74%|███████▎  | 406521/552076 [00:02<00:00, 186242.84it/s] 77%|███████▋  | 426382/552076 [00:02<00:00, 189786.82it/s] 81%|████████  | 446689/552076 [00:02<00:00, 193584.39it/s] 84%|████████▍ | 466212/552076 [00:02<00:00, 193767.28it/s] 88%|████████▊ | 485704/552076 [00:02<00:00, 175226.98it/s] 91%|█████████ | 503646/552076 [00:02<00:00, 142276.57it/s] 94%|█████████▍| 519172/552076 [00:02<00:00, 118027.41it/s] 96%|█████████▋| 532574/552076 [00:03<00:00, 110897.13it/s]100%|█████████▉| 551976/552076 [00:03<00:00, 127251.80it/s]100%|██████████| 552076/552076 [00:03<00:00, 173747.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15456/552076 [00:00<00:03, 154554.62it/s]  4%|▎         | 20093/552076 [00:00<00:06, 84207.09it/s]   5%|▍         | 26395/552076 [00:00<00:06, 76489.35it/s]  6%|▌         | 32665/552076 [00:00<00:07, 71753.84it/s]  7%|▋         | 39903/552076 [00:00<00:07, 71939.29it/s]  9%|▊         | 47457/552076 [00:00<00:06, 72981.85it/s] 11%|█         | 61000/552076 [00:00<00:05, 84698.27it/s] 13%|█▎        | 73710/552076 [00:00<00:05, 94116.76it/s] 15%|█▌        | 84764/552076 [00:00<00:04, 98505.31it/s] 17%|█▋        | 94945/552076 [00:01<00:04, 98582.51it/s] 19%|█▉        | 105035/552076 [00:01<00:05, 80573.30it/s] 23%|██▎       | 125139/552076 [00:01<00:04, 98231.46it/s] 27%|██▋       | 146873/552076 [00:01<00:03, 117558.63it/s] 30%|███       | 168255/552076 [00:01<00:02, 135914.68it/s] 34%|███▍      | 188029/552076 [00:01<00:02, 149982.13it/s] 38%|███▊      | 208280/552076 [00:01<00:02, 162636.74it/s] 41%|████      | 227029/552076 [00:01<00:01, 169370.08it/s] 45%|████▍     | 246838/552076 [00:01<00:01, 177070.55it/s] 48%|████▊     | 267071/552076 [00:01<00:01, 183957.93it/s] 52%|█████▏    | 287192/552076 [00:02<00:01, 188813.88it/s] 56%|█████▌    | 306767/552076 [00:02<00:01, 182694.03it/s] 59%|█████▉    | 325565/552076 [00:02<00:01, 183376.65it/s] 63%|██████▎   | 345108/552076 [00:02<00:01, 186831.47it/s] 66%|██████▌   | 364925/552076 [00:02<00:00, 190093.68it/s] 70%|██████▉   | 384407/552076 [00:02<00:00, 191486.03it/s] 73%|███████▎  | 404173/552076 [00:02<00:00, 193296.18it/s] 77%|███████▋  | 424165/552076 [00:02<00:00, 195236.15it/s] 80%|████████  | 444252/552076 [00:02<00:00, 196890.82it/s] 84%|████████▍ | 464001/552076 [00:03<00:00, 195254.39it/s] 88%|████████▊ | 484146/552076 [00:03<00:00, 197071.09it/s] 91%|█████████▏| 503889/552076 [00:03<00:00, 195901.02it/s] 95%|█████████▍| 524004/552076 [00:03<00:00, 197443.73it/s] 98%|█████████▊| 543770/552076 [00:03<00:00, 197473.19it/s]100%|██████████| 552076/552076 [00:03<00:00, 159599.74it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19416/552076 [00:00<00:02, 194150.46it/s]  7%|▋         | 38682/552076 [00:00<00:02, 193699.15it/s] 11%|█         | 58710/552076 [00:00<00:02, 195627.05it/s] 14%|█▍        | 78982/552076 [00:00<00:02, 197701.91it/s] 18%|█▊        | 98938/552076 [00:00<00:02, 198254.62it/s] 21%|██▏       | 118574/552076 [00:00<00:02, 197682.04it/s] 25%|██▌       | 138724/552076 [00:00<00:02, 198811.08it/s] 29%|██▊       | 158606/552076 [00:00<00:01, 198812.96it/s] 32%|███▏      | 177372/552076 [00:00<00:01, 194317.12it/s] 36%|███▌      | 196046/552076 [00:01<00:01, 191889.39it/s] 39%|███▉      | 216672/552076 [00:01<00:01, 195985.21it/s] 43%|████▎     | 236729/552076 [00:01<00:01, 197336.46it/s] 46%|████▋     | 256536/552076 [00:01<00:01, 197554.31it/s] 50%|█████     | 276546/552076 [00:01<00:01, 198309.42it/s] 54%|█████▍    | 297242/552076 [00:01<00:01, 200827.06it/s] 58%|█████▊    | 318113/552076 [00:01<00:01, 203127.77it/s] 61%|██████▏   | 338381/552076 [00:01<00:01, 201793.61it/s] 65%|██████▍   | 358635/552076 [00:01<00:00, 202014.41it/s] 69%|██████▉   | 380342/552076 [00:01<00:00, 206306.77it/s] 73%|███████▎  | 400981/552076 [00:02<00:00, 206178.17it/s] 76%|███████▋  | 422087/552076 [00:02<00:00, 207617.00it/s] 80%|████████  | 443303/552076 [00:02<00:00, 208958.96it/s] 84%|████████▍ | 464206/552076 [00:02<00:00, 195372.74it/s] 88%|████████▊ | 483927/552076 [00:02<00:00, 137570.52it/s] 91%|█████████ | 500174/552076 [00:02<00:00, 123971.12it/s] 94%|█████████▍| 521206/552076 [00:02<00:00, 141384.38it/s] 98%|█████████▊| 541822/552076 [00:02<00:00, 156096.91it/s]100%|██████████| 552076/552076 [00:03<00:00, 178498.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9693/552076 [00:00<00:05, 96920.62it/s]  3%|▎         | 17155/552076 [00:00<00:06, 88944.37it/s]  7%|▋         | 39471/552076 [00:00<00:04, 108525.21it/s] 11%|█         | 61256/552076 [00:00<00:03, 127758.80it/s] 15%|█▍        | 82442/552076 [00:00<00:03, 145029.83it/s] 19%|█▉        | 103773/552076 [00:00<00:02, 160436.15it/s] 23%|██▎       | 126625/552076 [00:00<00:02, 176182.23it/s] 27%|██▋       | 148669/552076 [00:00<00:02, 187473.69it/s] 31%|███       | 171548/552076 [00:00<00:01, 198211.67it/s] 35%|███▌      | 194597/552076 [00:01<00:01, 206903.13it/s] 39%|███▉      | 218019/552076 [00:01<00:01, 214402.41it/s] 44%|████▎     | 240331/552076 [00:01<00:01, 216944.02it/s] 48%|████▊     | 263882/552076 [00:01<00:01, 222197.57it/s] 52%|█████▏    | 286444/552076 [00:01<00:01, 216946.68it/s] 56%|█████▌    | 308406/552076 [00:01<00:01, 215244.41it/s] 60%|█████▉    | 330121/552076 [00:01<00:01, 211622.06it/s] 64%|██████▎   | 351739/552076 [00:01<00:00, 212969.04it/s] 68%|██████▊   | 374321/552076 [00:01<00:00, 216666.80it/s] 72%|███████▏  | 397196/552076 [00:01<00:00, 220153.81it/s] 76%|███████▌  | 419735/552076 [00:02<00:00, 221698.54it/s] 80%|████████  | 441961/552076 [00:02<00:00, 218773.62it/s] 84%|████████▍ | 465366/552076 [00:02<00:00, 223141.05it/s] 88%|████████▊ | 488568/552076 [00:02<00:00, 225731.04it/s] 93%|█████████▎| 511187/552076 [00:02<00:00, 223836.62it/s] 97%|█████████▋| 533607/552076 [00:02<00:00, 220926.57it/s]100%|██████████| 552076/552076 [00:02<00:00, 211032.71it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21011/552076 [00:00<00:02, 210103.69it/s]  7%|▋         | 40974/552076 [00:00<00:02, 206844.82it/s] 11%|█         | 60905/552076 [00:00<00:02, 204524.38it/s] 15%|█▍        | 82181/552076 [00:00<00:02, 206924.80it/s] 19%|█▊        | 103498/552076 [00:00<00:02, 208757.46it/s] 22%|██▏       | 124122/552076 [00:00<00:02, 207992.55it/s] 26%|██▋       | 146195/552076 [00:00<00:01, 211654.88it/s] 30%|███       | 167919/552076 [00:00<00:01, 213299.64it/s] 34%|███▍      | 189974/552076 [00:00<00:01, 215420.49it/s] 38%|███▊      | 210687/552076 [00:01<00:02, 152785.86it/s] 41%|████▏     | 227917/552076 [00:01<00:02, 154726.77it/s] 45%|████▌     | 249624/552076 [00:01<00:01, 169314.98it/s] 49%|████▉     | 269983/552076 [00:01<00:01, 178320.64it/s] 53%|█████▎    | 292166/552076 [00:01<00:01, 189468.88it/s] 57%|█████▋    | 312065/552076 [00:01<00:01, 188273.28it/s] 60%|██████    | 331561/552076 [00:01<00:01, 143165.41it/s] 64%|██████▎   | 350623/552076 [00:01<00:01, 154720.25it/s] 68%|██████▊   | 373489/552076 [00:02<00:01, 171340.40it/s] 72%|███████▏  | 395592/552076 [00:02<00:00, 183730.08it/s] 75%|███████▌  | 415453/552076 [00:02<00:00, 167972.69it/s] 79%|███████▉  | 437166/552076 [00:02<00:00, 180210.29it/s] 83%|████████▎ | 456351/552076 [00:02<00:00, 165373.11it/s] 86%|████████▌ | 473942/552076 [00:02<00:00, 133231.07it/s] 89%|████████▊ | 489006/552076 [00:02<00:00, 137286.13it/s] 91%|█████████▏| 503984/552076 [00:02<00:00, 131129.33it/s] 95%|█████████▍| 521811/552076 [00:03<00:00, 142425.78it/s] 97%|█████████▋| 536991/552076 [00:03<00:00, 139477.58it/s]100%|█████████▉| 551609/552076 [00:03<00:00, 113456.29it/s]100%|██████████| 552076/552076 [00:03<00:00, 164382.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12310/552076 [00:00<00:04, 123099.53it/s]  6%|▌         | 32556/552076 [00:00<00:03, 139503.04it/s]  9%|▉         | 52374/552076 [00:00<00:03, 153100.74it/s] 13%|█▎        | 74087/552076 [00:00<00:02, 167957.85it/s] 17%|█▋        | 96377/552076 [00:00<00:02, 181367.39it/s] 22%|██▏       | 119613/552076 [00:00<00:02, 194149.23it/s] 26%|██▌       | 142059/552076 [00:00<00:02, 202344.44it/s] 30%|███       | 165771/552076 [00:00<00:01, 211655.23it/s] 34%|███▍      | 189220/552076 [00:00<00:01, 218024.55it/s] 39%|███▊      | 212642/552076 [00:01<00:01, 222640.98it/s] 43%|████▎     | 234941/552076 [00:01<00:01, 221840.92it/s] 47%|████▋     | 258417/552076 [00:01<00:01, 225564.74it/s] 51%|█████     | 281705/552076 [00:01<00:01, 227708.60it/s] 55%|█████▌    | 305104/552076 [00:01<00:01, 229557.06it/s] 59%|█████▉    | 328083/552076 [00:01<00:00, 225937.59it/s] 64%|██████▎   | 350980/552076 [00:01<00:00, 226838.11it/s] 68%|██████▊   | 373685/552076 [00:01<00:00, 224555.53it/s] 72%|███████▏  | 396161/552076 [00:01<00:00, 223265.80it/s] 76%|███████▌  | 418504/552076 [00:01<00:00, 215033.33it/s] 80%|███████▉  | 440084/552076 [00:02<00:00, 213566.74it/s] 84%|████████▎ | 461972/552076 [00:02<00:00, 215131.98it/s] 88%|████████▊ | 483527/552076 [00:02<00:00, 213448.16it/s] 91%|█████████▏| 504905/552076 [00:02<00:00, 212017.39it/s] 95%|█████████▌| 526641/552076 [00:02<00:00, 213590.80it/s]100%|█████████▉| 549794/552076 [00:02<00:00, 218673.34it/s]100%|██████████| 552076/552076 [00:02<00:00, 217087.25it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17890/552076 [00:00<00:02, 178887.38it/s]  4%|▍         | 24749/552076 [00:00<00:04, 120662.85it/s]  6%|▌         | 34296/552076 [00:00<00:04, 111807.53it/s]  8%|▊         | 42775/552076 [00:00<00:04, 102051.74it/s]  9%|▉         | 51510/552076 [00:00<00:05, 97145.75it/s]  12%|█▏        | 67842/552076 [00:00<00:04, 110587.09it/s] 16%|█▌        | 87052/552076 [00:00<00:03, 126717.23it/s] 20%|█▉        | 108427/552076 [00:00<00:03, 144348.71it/s] 23%|██▎       | 129092/552076 [00:00<00:02, 158701.06it/s] 27%|██▋       | 149119/552076 [00:01<00:02, 169238.30it/s] 31%|███       | 170177/552076 [00:01<00:02, 179827.56it/s] 35%|███▍      | 190647/552076 [00:01<00:01, 186627.51it/s] 38%|███▊      | 210007/552076 [00:01<00:02, 139507.23it/s] 41%|████      | 226193/552076 [00:01<00:02, 126539.44it/s] 44%|████▎     | 240643/552076 [00:01<00:02, 123244.98it/s] 46%|████▌     | 254244/552076 [00:01<00:02, 123625.38it/s] 48%|████▊     | 267500/552076 [00:01<00:02, 124262.25it/s] 51%|█████     | 280553/552076 [00:02<00:02, 123199.92it/s] 53%|█████▎    | 293314/552076 [00:02<00:02, 123918.48it/s] 55%|█████▌    | 306016/552076 [00:02<00:01, 123672.55it/s] 58%|█████▊    | 318600/552076 [00:02<00:01, 123722.84it/s] 60%|█████▉    | 331124/552076 [00:02<00:01, 124057.75it/s] 62%|██████▏   | 343715/552076 [00:02<00:01, 124604.72it/s] 65%|██████▍   | 356251/552076 [00:02<00:02, 94078.70it/s]  67%|██████▋   | 368187/552076 [00:02<00:01, 100461.34it/s] 69%|██████▊   | 379168/552076 [00:03<00:02, 82153.35it/s]  71%|███████   | 389751/552076 [00:03<00:01, 87025.45it/s] 72%|███████▏  | 399372/552076 [00:03<00:01, 81607.06it/s] 75%|███████▍  | 411876/552076 [00:03<00:01, 91099.63it/s] 77%|███████▋  | 424117/552076 [00:03<00:01, 98669.29it/s] 79%|███████▉  | 436646/552076 [00:03<00:01, 105386.23it/s] 81%|████████  | 447857/552076 [00:03<00:01, 99465.49it/s]  83%|████████▎ | 458343/552076 [00:03<00:00, 94190.03it/s] 85%|████████▍ | 468198/552076 [00:04<00:01, 71805.39it/s] 87%|████████▋ | 477849/552076 [00:04<00:00, 77776.74it/s] 88%|████████▊ | 486543/552076 [00:04<00:00, 70390.20it/s] 90%|█████████ | 498531/552076 [00:04<00:00, 80339.45it/s] 93%|█████████▎| 511006/552076 [00:04<00:00, 89945.23it/s] 95%|█████████▍| 523502/552076 [00:04<00:00, 98198.64it/s] 97%|█████████▋| 535948/552076 [00:04<00:00, 104833.33it/s] 99%|█████████▉| 547250/552076 [00:04<00:00, 105692.22it/s]100%|██████████| 552076/552076 [00:04<00:00, 114139.80it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12208/552076 [00:00<00:04, 122068.77it/s]  3%|▎         | 18837/552076 [00:00<00:05, 97463.17it/s]   5%|▍         | 26095/552076 [00:00<00:05, 88373.68it/s]  7%|▋         | 37604/552076 [00:00<00:05, 94987.51it/s]  9%|▉         | 49412/552076 [00:00<00:04, 100905.87it/s] 11%|█         | 60974/552076 [00:00<00:04, 104909.79it/s] 13%|█▎        | 72141/552076 [00:00<00:04, 106847.94it/s] 15%|█▌        | 84074/552076 [00:00<00:04, 110308.28it/s] 17%|█▋        | 94644/552076 [00:00<00:04, 107534.78it/s] 19%|█▉        | 105090/552076 [00:01<00:04, 92559.66it/s] 21%|██        | 116161/552076 [00:01<00:04, 97346.96it/s] 23%|██▎       | 126975/552076 [00:01<00:04, 100349.77it/s] 25%|██▌       | 138416/552076 [00:01<00:03, 104190.91it/s] 27%|██▋       | 149442/552076 [00:01<00:03, 105937.57it/s] 29%|██▉       | 160140/552076 [00:01<00:04, 97774.69it/s]  31%|███▏      | 173866/552076 [00:01<00:03, 107008.55it/s] 35%|███▌      | 193237/552076 [00:01<00:02, 123605.07it/s] 38%|███▊      | 212185/552076 [00:01<00:02, 137997.95it/s] 42%|████▏     | 231360/552076 [00:01<00:02, 150668.28it/s] 45%|████▌     | 250292/552076 [00:02<00:01, 160497.11it/s] 49%|████▉     | 270798/552076 [00:02<00:01, 171688.95it/s] 53%|█████▎    | 291063/552076 [00:02<00:01, 179934.64it/s] 56%|█████▌    | 310381/552076 [00:02<00:01, 183712.83it/s] 60%|█████▉    | 330990/552076 [00:02<00:01, 189896.11it/s] 64%|██████▎   | 351304/552076 [00:02<00:01, 193683.60it/s] 67%|██████▋   | 371556/552076 [00:02<00:00, 195199.65it/s] 71%|███████   | 391316/552076 [00:02<00:00, 194158.29it/s] 75%|███████▍  | 411632/552076 [00:02<00:00, 196773.42it/s] 78%|███████▊  | 432596/552076 [00:02<00:00, 200463.55it/s] 82%|████████▏ | 452748/552076 [00:03<00:00, 200014.39it/s] 86%|████████▌ | 472824/552076 [00:03<00:00, 196667.57it/s] 89%|████████▉ | 492556/552076 [00:03<00:00, 196703.87it/s] 93%|█████████▎| 512278/552076 [00:03<00:00, 196857.35it/s] 96%|█████████▋| 531996/552076 [00:03<00:00, 195888.65it/s]100%|█████████▉| 551609/552076 [00:03<00:00, 193396.04it/s]100%|██████████| 552076/552076 [00:03<00:00, 153179.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19528/552076 [00:00<00:02, 195270.87it/s]  7%|▋         | 39586/552076 [00:00<00:02, 196833.09it/s] 11%|█         | 58492/552076 [00:00<00:02, 194433.93it/s] 14%|█▍        | 78215/552076 [00:00<00:02, 195262.65it/s] 18%|█▊        | 98105/552076 [00:00<00:02, 196339.03it/s] 21%|██▏       | 117713/552076 [00:00<00:02, 196259.34it/s] 25%|██▍       | 137183/552076 [00:00<00:02, 195787.01it/s] 29%|██▊       | 157466/552076 [00:00<00:01, 197847.23it/s] 32%|███▏      | 177738/552076 [00:00<00:01, 199282.10it/s] 36%|███▌      | 197927/552076 [00:01<00:01, 200056.01it/s] 39%|███▉      | 217872/552076 [00:01<00:01, 199872.16it/s] 43%|████▎     | 238798/552076 [00:01<00:01, 202597.51it/s] 47%|████▋     | 258800/552076 [00:01<00:01, 199777.85it/s] 50%|█████     | 278606/552076 [00:01<00:01, 171995.66it/s] 54%|█████▎    | 296366/552076 [00:01<00:01, 136558.33it/s] 56%|█████▋    | 311565/552076 [00:01<00:02, 114962.53it/s] 59%|█████▉    | 328423/552076 [00:01<00:01, 127088.26it/s] 63%|██████▎   | 350005/552076 [00:02<00:01, 144968.53it/s] 66%|██████▋   | 366468/552076 [00:02<00:01, 141102.28it/s] 69%|██████▉   | 381977/552076 [00:02<00:01, 116455.49it/s] 72%|███████▏  | 395965/552076 [00:02<00:01, 122613.76it/s] 74%|███████▍  | 409498/552076 [00:02<00:01, 109819.14it/s] 78%|███████▊  | 428585/552076 [00:02<00:00, 125851.32it/s] 82%|████████▏ | 451312/552076 [00:02<00:00, 145302.98it/s] 86%|████████▌ | 472936/552076 [00:02<00:00, 161162.64it/s] 89%|████████▉ | 493711/552076 [00:02<00:00, 172784.60it/s] 93%|█████████▎| 515506/552076 [00:03<00:00, 184237.13it/s] 97%|█████████▋| 536259/552076 [00:03<00:00, 190654.64it/s]100%|██████████| 552076/552076 [00:03<00:00, 168896.65it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20264/552076 [00:00<00:02, 202636.33it/s]  8%|▊         | 41641/552076 [00:00<00:02, 205851.65it/s] 12%|█▏        | 64507/552076 [00:00<00:02, 212200.29it/s] 16%|█▌        | 86884/552076 [00:00<00:02, 215542.33it/s] 20%|█▉        | 108203/552076 [00:00<00:02, 214829.09it/s] 24%|██▎       | 130555/552076 [00:00<00:01, 217363.57it/s] 27%|██▋       | 151013/552076 [00:00<00:01, 213362.15it/s] 31%|███       | 171694/552076 [00:00<00:01, 211350.60it/s] 35%|███▍      | 191694/552076 [00:00<00:01, 202674.44it/s] 39%|███▉      | 214052/552076 [00:01<00:01, 208522.71it/s] 43%|████▎     | 236448/552076 [00:01<00:01, 212925.49it/s] 47%|████▋     | 257543/552076 [00:01<00:01, 212328.27it/s] 51%|█████     | 279726/552076 [00:01<00:01, 215091.97it/s] 55%|█████▍    | 301298/552076 [00:01<00:01, 215278.21it/s] 58%|█████▊    | 322730/552076 [00:01<00:01, 213669.64it/s] 62%|██████▏   | 344033/552076 [00:01<00:01, 206973.16it/s] 66%|██████▌   | 364731/552076 [00:01<00:00, 204235.59it/s] 70%|██████▉   | 385163/552076 [00:01<00:00, 202989.33it/s] 73%|███████▎  | 405470/552076 [00:01<00:00, 202784.19it/s] 77%|███████▋  | 425754/552076 [00:02<00:00, 202065.05it/s] 81%|████████  | 445983/552076 [00:02<00:00, 202131.24it/s] 84%|████████▍ | 466485/552076 [00:02<00:00, 202986.75it/s] 88%|████████▊ | 487025/552076 [00:02<00:00, 203702.93it/s] 92%|█████████▏| 507398/552076 [00:02<00:00, 203376.28it/s] 96%|█████████▌| 527738/552076 [00:02<00:00, 202249.12it/s] 99%|█████████▉| 548233/552076 [00:02<00:00, 203050.07it/s]100%|██████████| 552076/552076 [00:02<00:00, 208173.10it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21010/552076 [00:00<00:02, 210099.70it/s]  7%|▋         | 40551/552076 [00:00<00:02, 205464.21it/s] 11%|█         | 61597/552076 [00:00<00:02, 206936.47it/s] 15%|█▍        | 82799/552076 [00:00<00:02, 208435.07it/s] 19%|█▊        | 102292/552076 [00:00<00:02, 204189.90it/s] 22%|██▏       | 122375/552076 [00:00<00:02, 203168.48it/s] 26%|██▌       | 141908/552076 [00:00<00:02, 200751.43it/s] 29%|██▉       | 160552/552076 [00:00<00:01, 196230.49it/s] 32%|███▏      | 179002/552076 [00:00<00:01, 191900.46it/s] 36%|███▌      | 197393/552076 [00:01<00:01, 189193.21it/s] 39%|███▉      | 215761/552076 [00:01<00:01, 178796.13it/s] 42%|████▏     | 233845/552076 [00:01<00:01, 179401.93it/s] 46%|████▌     | 253506/552076 [00:01<00:01, 184237.37it/s] 50%|████▉     | 274231/552076 [00:01<00:01, 190584.48it/s] 54%|█████▎    | 295856/552076 [00:01<00:01, 197618.95it/s] 58%|█████▊    | 318002/552076 [00:01<00:01, 204212.87it/s] 62%|██████▏   | 339612/552076 [00:01<00:01, 207637.02it/s] 65%|██████▌   | 360550/552076 [00:01<00:00, 208155.59it/s] 69%|██████▉   | 381838/552076 [00:01<00:00, 209549.92it/s] 73%|███████▎  | 403024/552076 [00:02<00:00, 210237.10it/s] 77%|███████▋  | 424078/552076 [00:02<00:00, 201064.81it/s] 80%|████████  | 444291/552076 [00:02<00:00, 170548.76it/s] 84%|████████▎ | 462218/552076 [00:02<00:00, 152187.93it/s] 87%|████████▋ | 478416/552076 [00:02<00:00, 141985.45it/s] 89%|████████▉ | 493438/552076 [00:02<00:00, 135340.64it/s] 92%|█████████▏| 507614/552076 [00:02<00:00, 129586.60it/s] 94%|█████████▍| 521074/552076 [00:02<00:00, 112333.00it/s] 97%|█████████▋| 533068/552076 [00:03<00:00, 73185.90it/s]  98%|█████████▊| 542675/552076 [00:03<00:00, 77505.87it/s]100%|██████████| 552076/552076 [00:03<00:00, 159804.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11830/552076 [00:00<00:04, 118293.91it/s]  4%|▍         | 23856/552076 [00:00<00:04, 118875.98it/s]  6%|▌         | 33506/552076 [00:00<00:04, 108021.82it/s]  7%|▋         | 40442/552076 [00:00<00:05, 91538.81it/s]  10%|▉         | 52737/552076 [00:00<00:05, 99136.45it/s] 11%|█         | 61242/552076 [00:00<00:06, 73396.78it/s] 12%|█▏        | 68567/552076 [00:00<00:07, 66471.17it/s] 14%|█▍        | 79341/552076 [00:00<00:06, 74086.01it/s] 16%|█▌        | 87108/552076 [00:01<00:06, 69956.26it/s] 18%|█▊        | 99261/552076 [00:01<00:05, 80160.97it/s] 20%|██        | 111638/552076 [00:01<00:04, 89635.44it/s] 22%|██▏       | 124116/552076 [00:01<00:04, 97907.02it/s] 25%|██▍       | 136503/552076 [00:01<00:03, 104474.40it/s] 27%|██▋       | 148858/552076 [00:01<00:03, 109548.23it/s] 29%|██▉       | 161070/552076 [00:01<00:03, 113038.38it/s] 31%|███▏      | 173400/552076 [00:01<00:03, 115930.46it/s] 34%|███▎      | 185805/552076 [00:01<00:03, 118250.90it/s] 36%|███▌      | 198003/552076 [00:01<00:02, 119343.33it/s] 38%|███▊      | 210102/552076 [00:02<00:02, 119404.12it/s] 40%|████      | 222414/552076 [00:02<00:02, 120494.14it/s] 43%|████▎     | 234727/552076 [00:02<00:02, 121271.21it/s] 45%|████▍     | 247204/552076 [00:02<00:02, 122298.56it/s] 47%|████▋     | 259478/552076 [00:02<00:02, 121523.88it/s] 49%|████▉     | 271662/552076 [00:02<00:02, 121412.27it/s] 51%|█████▏    | 283940/552076 [00:02<00:02, 121816.82it/s] 54%|█████▎    | 296138/552076 [00:02<00:02, 121666.50it/s] 56%|█████▌    | 308360/552076 [00:02<00:02, 121828.75it/s] 58%|█████▊    | 320551/552076 [00:03<00:02, 106708.75it/s] 60%|██████    | 332620/552076 [00:03<00:01, 110550.56it/s] 62%|██████▏   | 343952/552076 [00:03<00:01, 109198.59it/s] 64%|██████▍   | 355652/552076 [00:03<00:01, 111425.75it/s] 67%|██████▋   | 367362/552076 [00:03<00:01, 113067.20it/s] 69%|██████▉   | 379597/552076 [00:03<00:01, 115698.85it/s] 71%|███████   | 391757/552076 [00:03<00:01, 117408.04it/s] 73%|███████▎  | 403852/552076 [00:03<00:01, 118446.19it/s] 75%|███████▌  | 416148/552076 [00:03<00:01, 119763.77it/s] 78%|███████▊  | 428322/552076 [00:03<00:01, 120349.48it/s] 80%|███████▉  | 440521/552076 [00:04<00:00, 120834.53it/s] 82%|████████▏ | 453021/552076 [00:04<00:00, 122052.63it/s] 84%|████████▍ | 465244/552076 [00:04<00:00, 121768.24it/s] 86%|████████▋ | 477436/552076 [00:04<00:00, 121812.80it/s] 89%|████████▊ | 489634/552076 [00:04<00:00, 121861.03it/s] 91%|█████████ | 501922/552076 [00:04<00:00, 122162.63it/s] 93%|█████████▎| 514189/552076 [00:04<00:00, 122313.04it/s] 95%|█████████▌| 526456/552076 [00:04<00:00, 122417.50it/s] 98%|█████████▊| 538700/552076 [00:04<00:00, 121828.51it/s]100%|█████████▉| 551070/552076 [00:04<00:00, 122382.80it/s]100%|██████████| 552076/552076 [00:04<00:00, 111889.09it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3303/552076 [00:00<00:17, 31328.31it/s]  1%|▏         | 7212/552076 [00:00<00:16, 33311.99it/s]  2%|▏         | 11378/552076 [00:00<00:15, 35441.20it/s]  3%|▎         | 15374/552076 [00:00<00:14, 36685.22it/s]  4%|▍         | 21440/552076 [00:00<00:12, 41619.19it/s]  5%|▌         | 27957/552076 [00:00<00:11, 46679.26it/s]  6%|▌         | 32642/552076 [00:00<00:11, 45990.51it/s]  7%|▋         | 38341/552076 [00:00<00:10, 47888.29it/s]  8%|▊         | 43160/552076 [00:00<00:11, 45424.39it/s]  9%|▉         | 49027/552076 [00:01<00:10, 48723.18it/s] 10%|▉         | 54000/552076 [00:01<00:11, 44305.14it/s] 11%|█         | 58578/552076 [00:01<00:11, 44392.40it/s] 11%|█▏        | 63121/552076 [00:01<00:11, 43879.35it/s] 13%|█▎        | 69521/552076 [00:01<00:09, 48447.66it/s] 14%|█▍        | 75980/552076 [00:01<00:09, 52373.26it/s] 15%|█▍        | 81823/552076 [00:01<00:08, 54051.96it/s] 16%|█▌        | 87403/552076 [00:01<00:08, 53302.34it/s] 17%|█▋        | 92858/552076 [00:01<00:09, 47322.16it/s] 18%|█▊        | 97802/552076 [00:02<00:09, 47790.67it/s] 19%|█▊        | 103157/552076 [00:02<00:09, 49382.44it/s] 20%|█▉        | 108213/552076 [00:02<00:09, 46457.28it/s] 21%|██        | 114557/552076 [00:02<00:08, 50512.76it/s] 22%|██▏       | 121142/552076 [00:02<00:07, 54305.41it/s] 23%|██▎       | 126784/552076 [00:02<00:07, 53664.36it/s] 24%|██▍       | 133278/552076 [00:02<00:07, 56612.94it/s] 25%|██▌       | 139528/552076 [00:02<00:07, 58258.70it/s] 27%|██▋       | 147653/552076 [00:02<00:06, 63662.06it/s] 28%|██▊       | 156412/552076 [00:02<00:05, 69344.32it/s] 30%|███       | 167830/552076 [00:03<00:04, 78604.02it/s] 33%|███▎      | 179427/552076 [00:03<00:04, 87013.28it/s] 35%|███▍      | 190808/552076 [00:03<00:03, 93056.93it/s] 36%|███▋      | 200739/552076 [00:03<00:03, 92531.00it/s] 39%|███▊      | 213015/552076 [00:03<00:03, 99910.40it/s] 41%|████      | 224817/552076 [00:03<00:03, 104730.13it/s] 43%|████▎     | 237103/552076 [00:03<00:02, 109581.20it/s] 45%|████▌     | 248967/552076 [00:03<00:02, 112148.92it/s] 47%|████▋     | 261185/552076 [00:03<00:02, 114979.49it/s] 50%|████▉     | 273355/552076 [00:03<00:02, 116914.50it/s] 52%|█████▏    | 285678/552076 [00:04<00:02, 118738.84it/s] 54%|█████▍    | 297659/552076 [00:04<00:02, 108484.56it/s] 56%|█████▌    | 309797/552076 [00:04<00:02, 112053.38it/s] 58%|█████▊    | 322039/552076 [00:04<00:02, 114971.93it/s] 61%|██████    | 334414/552076 [00:04<00:01, 117470.42it/s] 63%|██████▎   | 346760/552076 [00:04<00:01, 119202.85it/s] 65%|██████▍   | 358775/552076 [00:04<00:01, 118989.99it/s] 67%|██████▋   | 370740/552076 [00:04<00:01, 114630.87it/s] 69%|██████▉   | 382284/552076 [00:04<00:01, 112583.61it/s] 71%|███████▏  | 394627/552076 [00:05<00:01, 115631.75it/s] 74%|███████▎  | 406822/552076 [00:05<00:01, 117451.85it/s] 76%|███████▌  | 418621/552076 [00:05<00:01, 80498.07it/s]  78%|███████▊  | 430134/552076 [00:05<00:01, 88482.11it/s] 80%|███████▉  | 440344/552076 [00:05<00:01, 71268.63it/s] 82%|████████▏ | 452421/552076 [00:05<00:01, 81258.34it/s] 84%|████████▍ | 462768/552076 [00:05<00:01, 86851.16it/s] 86%|████████▌ | 474967/552076 [00:05<00:00, 95064.86it/s] 88%|████████▊ | 487155/552076 [00:06<00:00, 101781.24it/s] 90%|█████████ | 499566/552076 [00:06<00:00, 107587.69it/s] 93%|█████████▎| 511025/552076 [00:06<00:00, 88800.22it/s]  94%|█████████▍| 520939/552076 [00:06<00:00, 87521.26it/s] 96%|█████████▌| 530419/552076 [00:06<00:00, 77382.77it/s] 98%|█████████▊| 538883/552076 [00:06<00:00, 65683.51it/s] 99%|█████████▉| 546265/552076 [00:06<00:00, 66357.35it/s]100%|██████████| 552076/552076 [00:06<00:00, 79083.54it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10676/552076 [00:00<00:05, 106754.76it/s]  4%|▍         | 22855/552076 [00:00<00:04, 110859.35it/s]  6%|▌         | 34336/552076 [00:00<00:04, 112014.95it/s]  8%|▊         | 46098/552076 [00:00<00:04, 113637.00it/s] 10%|▉         | 54927/552076 [00:00<00:04, 103724.22it/s] 12%|█▏        | 68632/552076 [00:00<00:04, 111884.21it/s] 15%|█▍        | 80806/552076 [00:00<00:04, 114668.94it/s] 17%|█▋        | 91631/552076 [00:00<00:04, 93012.80it/s]  19%|█▊        | 102324/552076 [00:00<00:04, 96791.58it/s] 21%|██        | 114292/552076 [00:01<00:04, 102681.62it/s] 23%|██▎       | 126474/552076 [00:01<00:03, 107759.77it/s] 25%|██▍       | 137477/552076 [00:01<00:04, 90863.76it/s]  27%|██▋       | 147175/552076 [00:01<00:04, 90673.22it/s] 29%|██▉       | 159392/552076 [00:01<00:03, 98272.44it/s] 31%|███       | 169704/552076 [00:01<00:03, 97689.26it/s] 33%|███▎      | 179813/552076 [00:01<00:04, 85457.49it/s] 35%|███▍      | 190906/552076 [00:01<00:03, 91778.54it/s] 37%|███▋      | 203202/552076 [00:02<00:03, 99334.13it/s] 39%|███▉      | 215383/552076 [00:02<00:03, 105153.68it/s] 41%|████      | 226358/552076 [00:02<00:03, 98617.61it/s]  43%|████▎     | 236624/552076 [00:02<00:04, 71892.22it/s] 44%|████▍     | 245132/552076 [00:02<00:04, 70089.45it/s] 46%|████▌     | 253074/552076 [00:02<00:04, 63726.84it/s] 47%|████▋     | 260211/552076 [00:02<00:05, 54396.59it/s] 49%|████▉     | 272289/552076 [00:03<00:04, 65136.06it/s] 51%|█████     | 280261/552076 [00:03<00:04, 66752.18it/s] 53%|█████▎    | 292891/552076 [00:03<00:03, 77748.49it/s] 55%|█████▍    | 303378/552076 [00:03<00:02, 84287.17it/s] 57%|█████▋    | 313978/552076 [00:03<00:02, 89805.02it/s] 59%|█████▊    | 323860/552076 [00:03<00:02, 85599.64it/s] 60%|██████    | 333093/552076 [00:03<00:02, 78845.54it/s] 62%|██████▏   | 344357/552076 [00:03<00:02, 86644.00it/s] 64%|██████▍   | 353659/552076 [00:03<00:02, 84690.71it/s] 66%|██████▋   | 365877/552076 [00:04<00:01, 93276.35it/s] 68%|██████▊   | 375790/552076 [00:04<00:02, 86732.60it/s] 70%|██████▉   | 384965/552076 [00:04<00:02, 77949.30it/s] 71%|███████   | 393279/552076 [00:04<00:02, 78044.01it/s] 73%|███████▎  | 405265/552076 [00:04<00:01, 87166.48it/s] 76%|███████▌  | 417551/552076 [00:04<00:01, 95487.45it/s] 78%|███████▊  | 429167/552076 [00:04<00:01, 100871.57it/s] 80%|███████▉  | 441394/552076 [00:04<00:01, 106459.06it/s] 82%|████████▏ | 453464/552076 [00:04<00:00, 110365.43it/s] 84%|████████▍ | 465491/552076 [00:04<00:00, 113160.06it/s] 87%|████████▋ | 477623/552076 [00:05<00:00, 115489.26it/s] 89%|████████▉ | 490038/552076 [00:05<00:00, 117955.92it/s] 91%|█████████ | 502435/552076 [00:05<00:00, 119696.60it/s] 93%|█████████▎| 514584/552076 [00:05<00:00, 120227.11it/s] 95%|█████████▌| 526838/552076 [00:05<00:00, 120911.54it/s] 98%|█████████▊| 539016/552076 [00:05<00:00, 121169.34it/s]100%|█████████▉| 551173/552076 [00:05<00:00, 112983.27it/s]100%|██████████| 552076/552076 [00:05<00:00, 96328.39it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11395/552076 [00:00<00:04, 113947.39it/s]  4%|▍         | 23013/552076 [00:00<00:04, 114607.98it/s]  6%|▋         | 35086/552076 [00:00<00:04, 116376.98it/s]  9%|▊         | 47326/552076 [00:00<00:04, 118118.54it/s] 11%|█         | 59788/552076 [00:00<00:04, 119996.49it/s] 13%|█▎        | 69888/552076 [00:00<00:04, 111417.98it/s] 15%|█▍        | 81818/552076 [00:00<00:04, 113669.34it/s] 17%|█▋        | 93622/552076 [00:00<00:03, 114714.74it/s] 19%|█▉        | 105775/552076 [00:00<00:03, 116676.43it/s] 21%|██        | 117044/552076 [00:01<00:04, 92528.91it/s]  23%|██▎       | 126805/552076 [00:01<00:04, 91035.36it/s] 25%|██▍       | 136269/552076 [00:01<00:04, 89302.42it/s] 27%|██▋       | 148817/552076 [00:01<00:04, 97756.23it/s] 29%|██▉       | 159015/552076 [00:01<00:04, 84551.19it/s] 31%|███       | 170024/552076 [00:01<00:04, 90874.67it/s] 33%|███▎      | 182385/552076 [00:01<00:03, 98717.58it/s] 35%|███▌      | 194717/552076 [00:01<00:03, 105001.55it/s] 37%|███▋      | 206998/552076 [00:01<00:03, 109775.54it/s] 40%|███▉      | 219323/552076 [00:02<00:02, 113495.89it/s] 42%|████▏     | 231755/552076 [00:02<00:02, 116537.44it/s] 44%|████▍     | 244138/552076 [00:02<00:02, 118632.62it/s] 46%|████▋     | 256186/552076 [00:02<00:02, 117000.96it/s] 49%|████▊     | 268021/552076 [00:02<00:02, 111909.44it/s] 51%|█████     | 279353/552076 [00:02<00:02, 108901.46it/s] 53%|█████▎    | 290360/552076 [00:02<00:02, 107196.38it/s] 55%|█████▍    | 301690/552076 [00:02<00:02, 108956.56it/s] 57%|█████▋    | 313206/552076 [00:02<00:02, 110745.84it/s] 59%|█████▉    | 325390/552076 [00:03<00:01, 113855.72it/s] 61%|██████    | 337323/552076 [00:03<00:01, 115443.44it/s] 63%|██████▎   | 349537/552076 [00:03<00:01, 117371.47it/s] 66%|██████▌   | 361691/552076 [00:03<00:01, 118589.41it/s] 68%|██████▊   | 373708/552076 [00:03<00:01, 119058.31it/s] 70%|██████▉   | 385637/552076 [00:03<00:01, 117365.60it/s] 72%|███████▏  | 397772/552076 [00:03<00:01, 118530.48it/s] 74%|███████▍  | 409823/552076 [00:03<00:01, 119115.82it/s] 76%|███████▋  | 421748/552076 [00:03<00:01, 97833.90it/s]  79%|███████▊  | 434548/552076 [00:03<00:01, 105276.41it/s] 81%|████████  | 446479/552076 [00:04<00:00, 109124.98it/s] 83%|████████▎ | 458303/552076 [00:04<00:00, 111707.10it/s] 85%|████████▌ | 469811/552076 [00:04<00:00, 91262.96it/s]  87%|████████▋ | 479785/552076 [00:04<00:00, 74644.17it/s] 88%|████████▊ | 488339/552076 [00:04<00:00, 71273.94it/s] 90%|█████████ | 496987/552076 [00:04<00:00, 75242.13it/s] 92%|█████████▏| 508154/552076 [00:04<00:00, 83404.13it/s] 94%|█████████▎| 517202/552076 [00:05<00:00, 79483.85it/s] 95%|█████████▌| 526660/552076 [00:05<00:00, 83480.74it/s] 97%|█████████▋| 536727/552076 [00:05<00:00, 87986.20it/s] 99%|█████████▉| 545890/552076 [00:05<00:00, 72453.60it/s]100%|██████████| 552076/552076 [00:05<00:00, 100753.90it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5933/552076 [00:00<00:10, 52795.87it/s]  2%|▏         | 8611/552076 [00:00<00:13, 40879.01it/s]  3%|▎         | 15242/552076 [00:00<00:11, 46193.32it/s]  4%|▍         | 21751/552076 [00:00<00:10, 50598.67it/s]  5%|▍         | 26151/552076 [00:00<00:10, 48419.42it/s]  6%|▌         | 31697/552076 [00:00<00:10, 50336.18it/s]  7%|▋         | 38237/552076 [00:00<00:09, 54071.59it/s]  8%|▊         | 44806/552076 [00:00<00:08, 57101.20it/s]  9%|▉         | 51391/552076 [00:00<00:08, 59470.48it/s] 10%|█         | 57315/552076 [00:01<00:12, 41228.07it/s] 12%|█▏        | 63832/552076 [00:01<00:10, 46331.71it/s] 13%|█▎        | 70398/552076 [00:01<00:09, 50819.16it/s] 14%|█▍        | 76121/552076 [00:01<00:09, 51302.50it/s] 15%|█▍        | 81705/552076 [00:01<00:08, 52583.51it/s] 16%|█▌        | 88300/552076 [00:01<00:08, 55987.06it/s] 17%|█▋        | 94597/552076 [00:01<00:07, 57913.67it/s] 18%|█▊        | 100606/552076 [00:01<00:08, 56368.42it/s] 19%|█▉        | 106405/552076 [00:01<00:07, 55919.01it/s] 21%|██        | 114513/552076 [00:02<00:07, 61657.60it/s] 23%|██▎       | 126635/552076 [00:02<00:05, 72317.32it/s] 25%|██▌       | 138777/552076 [00:02<00:05, 82300.79it/s] 27%|██▋       | 150800/552076 [00:02<00:04, 90902.45it/s] 29%|██▉       | 162599/552076 [00:02<00:03, 97625.77it/s] 32%|███▏      | 174638/552076 [00:02<00:03, 103495.25it/s] 34%|███▍      | 187165/552076 [00:02<00:03, 109188.45it/s] 36%|███▌      | 198665/552076 [00:02<00:03, 99958.40it/s]  38%|███▊      | 210782/552076 [00:02<00:03, 105497.07it/s] 40%|████      | 223066/552076 [00:03<00:02, 110161.49it/s] 42%|████▏     | 234467/552076 [00:03<00:02, 108031.70it/s] 45%|████▍     | 246184/552076 [00:03<00:02, 110619.89it/s] 47%|████▋     | 258376/552076 [00:03<00:02, 113782.35it/s] 49%|████▉     | 270492/552076 [00:03<00:02, 115897.68it/s] 51%|█████▏    | 283078/552076 [00:03<00:02, 118715.66it/s] 54%|█████▎    | 295818/552076 [00:03<00:02, 121192.35it/s] 56%|█████▌    | 308421/552076 [00:03<00:01, 122601.42it/s] 58%|█████▊    | 320747/552076 [00:03<00:01, 122713.03it/s] 60%|██████    | 333064/552076 [00:03<00:01, 122444.92it/s] 63%|██████▎   | 345341/552076 [00:04<00:01, 122430.51it/s] 65%|██████▍   | 357607/552076 [00:04<00:01, 122246.24it/s] 67%|██████▋   | 369848/552076 [00:04<00:01, 122163.02it/s] 69%|██████▉   | 382076/552076 [00:04<00:01, 121967.62it/s] 71%|███████▏  | 394281/552076 [00:04<00:01, 120767.04it/s] 74%|███████▎  | 406366/552076 [00:04<00:01, 113916.29it/s] 76%|███████▌  | 417844/552076 [00:04<00:01, 112899.93it/s] 78%|███████▊  | 430201/552076 [00:04<00:01, 115902.05it/s] 80%|████████  | 442355/552076 [00:04<00:00, 117536.63it/s] 82%|████████▏ | 454159/552076 [00:04<00:00, 115993.35it/s] 84%|████████▍ | 466108/552076 [00:05<00:00, 117018.32it/s] 87%|████████▋ | 478179/552076 [00:05<00:00, 118101.27it/s] 89%|████████▉ | 490397/552076 [00:05<00:00, 119293.12it/s] 91%|█████████ | 502346/552076 [00:05<00:00, 117651.08it/s] 93%|█████████▎| 514602/552076 [00:05<00:00, 119079.84it/s] 95%|█████████▌| 526631/552076 [00:05<00:00, 119436.88it/s] 98%|█████████▊| 538795/552076 [00:05<00:00, 120089.00it/s]100%|█████████▉| 550814/552076 [00:05<00:00, 117126.93it/s]100%|██████████| 552076/552076 [00:05<00:00, 95276.53it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7096/552076 [00:00<00:08, 65248.80it/s]  2%|▏         | 13077/552076 [00:00<00:08, 63164.44it/s]  4%|▍         | 24622/552076 [00:00<00:07, 73094.60it/s]  6%|▋         | 34749/552076 [00:00<00:06, 79751.05it/s]  8%|▊         | 46346/552076 [00:00<00:05, 87994.49it/s] 10%|▉         | 54724/552076 [00:00<00:06, 82652.96it/s] 12%|█▏        | 66379/552076 [00:00<00:05, 90552.04it/s] 14%|█▍        | 76449/552076 [00:00<00:05, 93374.51it/s] 16%|█▌        | 86595/552076 [00:00<00:04, 95661.04it/s] 18%|█▊        | 96808/552076 [00:01<00:04, 97513.71it/s] 20%|█▉        | 108587/552076 [00:01<00:04, 102821.68it/s] 22%|██▏       | 120062/552076 [00:01<00:04, 106130.17it/s] 24%|██▎       | 130892/552076 [00:01<00:03, 106770.08it/s] 26%|██▌       | 142768/552076 [00:01<00:03, 110102.53it/s] 28%|██▊       | 154480/552076 [00:01<00:03, 112116.82it/s] 30%|███       | 166182/552076 [00:01<00:03, 113543.64it/s] 32%|███▏      | 178247/552076 [00:01<00:03, 115585.94it/s] 34%|███▍      | 190218/552076 [00:01<00:03, 116792.47it/s] 37%|███▋      | 202028/552076 [00:01<00:02, 117179.05it/s] 39%|███▉      | 213944/552076 [00:02<00:02, 117765.59it/s] 41%|████      | 225738/552076 [00:02<00:02, 116990.50it/s] 43%|████▎     | 237451/552076 [00:02<00:02, 116689.27it/s] 45%|████▌     | 249130/552076 [00:02<00:02, 114955.09it/s] 47%|████▋     | 260638/552076 [00:02<00:02, 114492.59it/s] 49%|████▉     | 272097/552076 [00:02<00:02, 113760.36it/s] 51%|█████▏    | 284052/552076 [00:02<00:02, 115436.81it/s] 54%|█████▎    | 296120/552076 [00:02<00:02, 116958.66it/s] 56%|█████▌    | 307932/552076 [00:02<00:02, 117302.77it/s] 58%|█████▊    | 319828/552076 [00:02<00:01, 117794.27it/s] 60%|██████    | 331615/552076 [00:03<00:01, 117523.69it/s] 62%|██████▏   | 343409/552076 [00:03<00:01, 117647.55it/s] 64%|██████▍   | 355178/552076 [00:03<00:01, 116613.14it/s] 66%|██████▋   | 366970/552076 [00:03<00:01, 116999.36it/s] 69%|██████▊   | 378674/552076 [00:03<00:02, 85884.02it/s]  70%|███████   | 388457/552076 [00:03<00:02, 68017.62it/s] 73%|███████▎  | 400277/552076 [00:03<00:01, 77944.98it/s] 75%|███████▍  | 411801/552076 [00:03<00:01, 86325.85it/s] 76%|███████▋  | 421769/552076 [00:04<00:01, 65778.99it/s] 78%|███████▊  | 431721/552076 [00:04<00:01, 73226.86it/s] 80%|████████  | 443144/552076 [00:04<00:01, 82062.36it/s] 82%|████████▏ | 452702/552076 [00:04<00:01, 67727.81it/s] 84%|████████▍ | 464650/552076 [00:04<00:01, 77841.82it/s] 86%|████████▌ | 474327/552076 [00:04<00:00, 81526.07it/s] 88%|████████▊ | 483571/552076 [00:04<00:00, 75228.30it/s] 89%|████████▉ | 491954/552076 [00:05<00:00, 66049.58it/s] 90%|█████████ | 499365/552076 [00:05<00:00, 58583.57it/s] 92%|█████████▏| 510629/552076 [00:05<00:00, 68435.51it/s] 95%|█████████▍| 522359/552076 [00:05<00:00, 78208.36it/s] 96%|█████████▋| 531467/552076 [00:05<00:00, 70040.80it/s] 98%|█████████▊| 543030/552076 [00:05<00:00, 79436.17it/s]100%|██████████| 552076/552076 [00:05<00:00, 94817.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9300/552076 [00:00<00:05, 92994.77it/s]  4%|▎         | 20227/552076 [00:00<00:05, 97343.31it/s]  6%|▌         | 32163/552076 [00:00<00:05, 103044.09it/s]  8%|▊         | 44095/552076 [00:00<00:04, 107440.08it/s] 10%|▉         | 54413/552076 [00:00<00:04, 106124.43it/s] 12%|█▏        | 63563/552076 [00:00<00:05, 90924.23it/s]  13%|█▎        | 72519/552076 [00:00<00:05, 90507.96it/s] 15%|█▌        | 84592/552076 [00:00<00:04, 97856.30it/s] 17%|█▋        | 96305/552076 [00:00<00:04, 102935.64it/s] 19%|█▉        | 106569/552076 [00:01<00:04, 93920.12it/s] 22%|██▏       | 118886/552076 [00:01<00:04, 101123.16it/s] 24%|██▎       | 130183/552076 [00:01<00:04, 104406.77it/s] 26%|██▌       | 142469/552076 [00:01<00:03, 109333.19it/s] 28%|██▊       | 154705/552076 [00:01<00:03, 112938.77it/s] 30%|███       | 166171/552076 [00:01<00:03, 112794.12it/s] 32%|███▏      | 177571/552076 [00:01<00:03, 94300.87it/s]  34%|███▍      | 187597/552076 [00:01<00:03, 93922.60it/s] 36%|███▌      | 199195/552076 [00:01<00:03, 99604.75it/s] 38%|███▊      | 211233/552076 [00:02<00:03, 105042.45it/s] 40%|████      | 223583/552076 [00:02<00:02, 109971.01it/s] 43%|████▎     | 235988/552076 [00:02<00:02, 113845.86it/s] 45%|████▍     | 247682/552076 [00:02<00:02, 114754.15it/s] 47%|████▋     | 259968/552076 [00:02<00:02, 117068.57it/s] 49%|████▉     | 272175/552076 [00:02<00:02, 118524.80it/s] 52%|█████▏    | 284396/552076 [00:02<00:02, 119605.67it/s] 54%|█████▎    | 296561/552076 [00:02<00:02, 120211.16it/s] 56%|█████▌    | 308633/552076 [00:02<00:02, 116953.57it/s] 58%|█████▊    | 320384/552076 [00:02<00:02, 104964.31it/s] 60%|██████    | 332229/552076 [00:03<00:02, 108675.72it/s] 62%|██████▏   | 344297/552076 [00:03<00:01, 112016.77it/s] 65%|██████▍   | 356322/552076 [00:03<00:01, 114363.58it/s] 67%|██████▋   | 368480/552076 [00:03<00:01, 116434.96it/s] 69%|██████▉   | 380230/552076 [00:03<00:01, 115735.57it/s] 71%|███████   | 392467/552076 [00:03<00:01, 117648.01it/s] 73%|███████▎  | 404526/552076 [00:03<00:01, 118513.96it/s] 76%|███████▌  | 416932/552076 [00:03<00:01, 120122.78it/s] 78%|███████▊  | 429022/552076 [00:03<00:01, 120352.10it/s] 80%|███████▉  | 441083/552076 [00:03<00:00, 119312.78it/s] 82%|████████▏ | 453035/552076 [00:04<00:00, 118904.66it/s] 84%|████████▍ | 465351/552076 [00:04<00:00, 120149.84it/s] 87%|████████▋ | 477897/552076 [00:04<00:00, 121692.42it/s] 89%|████████▉ | 490081/552076 [00:04<00:00, 120754.80it/s] 91%|█████████ | 502168/552076 [00:04<00:00, 120743.28it/s] 93%|█████████▎| 514297/552076 [00:04<00:00, 120904.23it/s] 95%|█████████▌| 526394/552076 [00:04<00:00, 120787.28it/s] 98%|█████████▊| 538482/552076 [00:04<00:00, 120814.85it/s]100%|█████████▉| 550567/552076 [00:04<00:00, 111064.10it/s]100%|██████████| 552076/552076 [00:04<00:00, 111651.31it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7881/552076 [00:00<00:07, 73014.91it/s]  3%|▎         | 18964/552076 [00:00<00:06, 81340.75it/s]  6%|▌         | 32649/552076 [00:00<00:05, 92608.99it/s]  8%|▊         | 44258/552076 [00:00<00:05, 95665.09it/s] 10%|▉         | 53350/552076 [00:00<00:05, 94188.16it/s] 12%|█▏        | 65166/552076 [00:00<00:04, 100290.85it/s] 14%|█▍        | 76874/552076 [00:00<00:04, 104797.30it/s] 16%|█▌        | 87150/552076 [00:00<00:04, 104175.51it/s] 18%|█▊        | 98555/552076 [00:00<00:04, 106952.78it/s] 20%|█▉        | 109132/552076 [00:01<00:05, 87116.07it/s] 22%|██▏       | 120950/552076 [00:01<00:04, 94573.13it/s] 24%|██▍       | 131296/552076 [00:01<00:04, 97073.70it/s] 26%|██▌       | 142989/552076 [00:01<00:03, 102282.79it/s] 28%|██▊       | 155098/552076 [00:01<00:03, 107279.33it/s] 30%|███       | 167561/552076 [00:01<00:03, 111953.32it/s] 33%|███▎      | 179971/552076 [00:01<00:03, 115338.37it/s] 35%|███▍      | 192266/552076 [00:01<00:03, 117520.42it/s] 37%|███▋      | 204463/552076 [00:01<00:02, 118820.28it/s] 39%|███▉      | 216648/552076 [00:01<00:02, 119710.69it/s] 41%|████▏     | 228746/552076 [00:02<00:02, 120088.62it/s] 44%|████▎     | 241004/552076 [00:02<00:02, 120822.82it/s] 46%|████▌     | 253129/552076 [00:02<00:02, 119485.89it/s] 48%|████▊     | 265111/552076 [00:02<00:02, 119034.48it/s] 50%|█████     | 277427/552076 [00:02<00:02, 120240.00it/s] 52%|█████▏    | 289471/552076 [00:02<00:02, 119878.00it/s] 55%|█████▍    | 301696/552076 [00:02<00:02, 120579.23it/s] 57%|█████▋    | 313966/552076 [00:02<00:01, 121205.96it/s] 59%|█████▉    | 326133/552076 [00:02<00:01, 121343.80it/s] 61%|██████▏   | 338274/552076 [00:03<00:02, 98625.81it/s]  63%|██████▎   | 348832/552076 [00:03<00:02, 71122.40it/s] 65%|██████▍   | 357515/552076 [00:03<00:02, 65028.06it/s] 67%|██████▋   | 369508/552076 [00:03<00:02, 75380.03it/s] 69%|██████▉   | 381570/552076 [00:03<00:02, 84936.32it/s] 71%|███████▏  | 393847/552076 [00:03<00:01, 93586.73it/s] 74%|███████▎  | 405815/552076 [00:03<00:01, 100136.13it/s] 76%|███████▌  | 417489/552076 [00:03<00:01, 104596.88it/s] 78%|███████▊  | 428709/552076 [00:04<00:01, 88428.00it/s]  80%|███████▉  | 440356/552076 [00:04<00:01, 95310.63it/s] 82%|████████▏ | 450713/552076 [00:04<00:01, 64643.81it/s] 83%|████████▎ | 460393/552076 [00:04<00:01, 71797.52it/s] 86%|████████▌ | 472481/552076 [00:04<00:00, 81756.10it/s] 88%|████████▊ | 484595/552076 [00:04<00:00, 90590.37it/s] 90%|████████▉ | 496792/552076 [00:04<00:00, 98166.11it/s] 92%|█████████▏| 509037/552076 [00:05<00:00, 104374.46it/s] 94%|█████████▍| 520900/552076 [00:05<00:00, 108277.67it/s] 97%|█████████▋| 533107/552076 [00:05<00:00, 112074.45it/s] 99%|█████████▉| 545380/552076 [00:05<00:00, 115069.36it/s]100%|██████████| 552076/552076 [00:05<00:00, 102406.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11682/552076 [00:00<00:04, 116815.38it/s]  4%|▍         | 23380/552076 [00:00<00:04, 116864.66it/s]  6%|▋         | 35443/552076 [00:00<00:04, 117967.65it/s]  9%|▊         | 47142/552076 [00:00<00:04, 117670.56it/s] 11%|█         | 59050/552076 [00:00<00:04, 118088.15it/s] 13%|█▎        | 70830/552076 [00:00<00:04, 117998.97it/s] 15%|█▌        | 83308/552076 [00:00<00:03, 119952.33it/s] 17%|█▋        | 95237/552076 [00:00<00:03, 119752.04it/s] 19%|█▉        | 107441/552076 [00:00<00:03, 120426.68it/s] 22%|██▏       | 119493/552076 [00:01<00:03, 120453.06it/s] 24%|██▍       | 131502/552076 [00:01<00:03, 120341.62it/s] 26%|██▌       | 143308/552076 [00:01<00:03, 118974.58it/s] 28%|██▊       | 155050/552076 [00:01<00:03, 113984.98it/s] 30%|███       | 166384/552076 [00:01<00:03, 106409.87it/s] 32%|███▏      | 178721/552076 [00:01<00:03, 110984.96it/s] 34%|███▍      | 189910/552076 [00:01<00:03, 107209.75it/s] 36%|███▋      | 200722/552076 [00:01<00:04, 82376.77it/s]  39%|███▊      | 212782/552076 [00:01<00:03, 91032.24it/s] 41%|████      | 224150/552076 [00:02<00:03, 96817.02it/s] 42%|████▏     | 234588/552076 [00:02<00:04, 78561.55it/s] 44%|████▍     | 243531/552076 [00:02<00:04, 68570.94it/s] 46%|████▌     | 251378/552076 [00:02<00:04, 63749.57it/s] 47%|████▋     | 258514/552076 [00:02<00:04, 61940.95it/s] 48%|████▊     | 265252/552076 [00:02<00:04, 60155.15it/s] 49%|████▉     | 271660/552076 [00:02<00:04, 59743.91it/s] 50%|█████     | 277910/552076 [00:03<00:04, 58791.07it/s] 51%|█████▏    | 283985/552076 [00:03<00:04, 57263.10it/s] 53%|█████▎    | 289858/552076 [00:03<00:04, 54964.68it/s] 54%|█████▎    | 295801/552076 [00:03<00:04, 55475.73it/s] 55%|█████▍    | 302216/552076 [00:03<00:04, 57346.15it/s] 56%|█████▌    | 308696/552076 [00:03<00:04, 59394.70it/s] 57%|█████▋    | 315193/552076 [00:03<00:03, 60964.10it/s] 58%|█████▊    | 321351/552076 [00:03<00:03, 60354.49it/s] 60%|██████    | 332860/552076 [00:03<00:03, 70398.05it/s] 62%|██████▏   | 344478/552076 [00:03<00:02, 79834.85it/s] 64%|██████▍   | 356086/552076 [00:04<00:02, 88084.76it/s] 67%|██████▋   | 367670/552076 [00:04<00:01, 94906.50it/s] 69%|██████▉   | 379708/552076 [00:04<00:01, 101338.14it/s] 71%|███████   | 390505/552076 [00:04<00:01, 102005.75it/s] 73%|███████▎  | 401171/552076 [00:04<00:01, 80569.01it/s]  74%|███████▍  | 410259/552076 [00:04<00:01, 79950.10it/s] 76%|███████▌  | 418977/552076 [00:04<00:01, 74497.21it/s] 77%|███████▋  | 427008/552076 [00:04<00:01, 71373.39it/s] 79%|███████▊  | 434580/552076 [00:05<00:01, 59162.17it/s] 80%|███████▉  | 441585/552076 [00:05<00:01, 62054.52it/s] 81%|████████▏ | 448563/552076 [00:05<00:01, 64183.82it/s] 83%|████████▎ | 455546/552076 [00:05<00:01, 65778.86it/s] 84%|████████▍ | 462389/552076 [00:05<00:01, 66243.84it/s] 85%|████████▍ | 469200/552076 [00:05<00:01, 66516.53it/s] 86%|████████▌ | 475983/552076 [00:05<00:01, 66846.32it/s] 87%|████████▋ | 482760/552076 [00:05<00:01, 66952.41it/s] 89%|████████▊ | 489682/552076 [00:05<00:00, 67615.82it/s] 90%|████████▉ | 496491/552076 [00:06<00:00, 67441.49it/s] 91%|█████████ | 503268/552076 [00:06<00:00, 63973.56it/s] 92%|█████████▏| 509726/552076 [00:06<00:00, 61362.32it/s] 93%|█████████▎| 515927/552076 [00:06<00:00, 54751.37it/s] 94%|█████████▍| 521581/552076 [00:06<00:00, 54525.17it/s] 96%|█████████▌| 528089/552076 [00:06<00:00, 57312.32it/s] 97%|█████████▋| 534779/552076 [00:06<00:00, 59886.98it/s] 98%|█████████▊| 541058/552076 [00:06<00:00, 60727.76it/s] 99%|█████████▉| 547636/552076 [00:06<00:00, 62157.98it/s]100%|██████████| 552076/552076 [00:06<00:00, 79225.98it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11995/552076 [00:00<00:04, 119944.11it/s]  4%|▍         | 24067/552076 [00:00<00:04, 120172.78it/s]  6%|▋         | 35840/552076 [00:00<00:04, 119427.50it/s]  8%|▊         | 44886/552076 [00:00<00:04, 108958.44it/s] 10%|█         | 57194/552076 [00:00<00:04, 112840.27it/s] 13%|█▎        | 69305/552076 [00:00<00:04, 115199.84it/s] 14%|█▍        | 79539/552076 [00:00<00:04, 109748.52it/s] 16%|█▌        | 89668/552076 [00:00<00:04, 104021.78it/s] 18%|█▊        | 101448/552076 [00:00<00:04, 107804.47it/s] 21%|██        | 113305/552076 [00:01<00:03, 110823.00it/s] 23%|██▎       | 125111/552076 [00:01<00:03, 112897.99it/s] 25%|██▍       | 136261/552076 [00:01<00:03, 107268.06it/s] 27%|██▋       | 148789/552076 [00:01<00:03, 112102.11it/s] 29%|██▉       | 161245/552076 [00:01<00:03, 115568.61it/s] 31%|███▏      | 172850/552076 [00:01<00:03, 108782.26it/s] 34%|███▎      | 185363/552076 [00:01<00:03, 113217.60it/s] 36%|███▌      | 197856/552076 [00:01<00:03, 116492.53it/s] 38%|███▊      | 210394/552076 [00:01<00:02, 119021.86it/s] 40%|████      | 222389/552076 [00:01<00:02, 111532.73it/s] 43%|████▎     | 234792/552076 [00:02<00:02, 115009.19it/s] 45%|████▍     | 246949/552076 [00:02<00:02, 116899.23it/s] 47%|████▋     | 258750/552076 [00:02<00:02, 114765.53it/s] 49%|████▉     | 270309/552076 [00:02<00:02, 112398.66it/s] 51%|█████     | 282813/552076 [00:02<00:02, 115912.17it/s] 53%|█████▎    | 295304/552076 [00:02<00:02, 118470.26it/s] 56%|█████▌    | 307218/552076 [00:02<00:02, 111246.95it/s] 58%|█████▊    | 319674/552076 [00:02<00:02, 114930.75it/s] 60%|██████    | 332231/552076 [00:02<00:01, 117925.54it/s] 62%|██████▏   | 344687/552076 [00:03<00:01, 119838.60it/s] 65%|██████▍   | 356754/552076 [00:03<00:01, 119524.66it/s] 67%|██████▋   | 369165/552076 [00:03<00:01, 120861.20it/s] 69%|██████▉   | 381590/552076 [00:03<00:01, 121855.32it/s] 71%|███████▏  | 394109/552076 [00:03<00:01, 122834.02it/s] 74%|███████▎  | 406617/552076 [00:03<00:01, 123496.72it/s] 76%|███████▌  | 418986/552076 [00:03<00:01, 123347.13it/s] 78%|███████▊  | 431334/552076 [00:03<00:00, 123147.60it/s] 80%|████████  | 443658/552076 [00:03<00:01, 104866.84it/s] 82%|████████▏ | 454622/552076 [00:04<00:01, 86510.74it/s]  85%|████████▍ | 466990/552076 [00:04<00:00, 95081.59it/s] 86%|████████▋ | 477363/552076 [00:04<00:00, 88622.25it/s] 88%|████████▊ | 486919/552076 [00:04<00:00, 77789.57it/s] 90%|████████▉ | 495424/552076 [00:04<00:00, 71325.48it/s] 92%|█████████▏| 507423/552076 [00:04<00:00, 81205.82it/s] 94%|█████████▎| 516445/552076 [00:04<00:00, 66401.28it/s] 95%|█████████▌| 525866/552076 [00:04<00:00, 72851.84it/s] 97%|█████████▋| 534091/552076 [00:05<00:00, 54736.60it/s] 99%|█████████▊| 544693/552076 [00:05<00:00, 64027.74it/s]100%|██████████| 552076/552076 [00:05<00:00, 102672.81it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11374/552076 [00:00<00:04, 113734.69it/s]  4%|▍         | 22860/552076 [00:00<00:04, 114068.21it/s]  5%|▌         | 29374/552076 [00:00<00:05, 90618.54it/s]   7%|▋         | 39015/552076 [00:00<00:05, 92280.09it/s]  9%|▉         | 50841/552076 [00:00<00:05, 95168.48it/s] 11%|█         | 58847/552076 [00:00<00:06, 76315.17it/s] 13%|█▎        | 71098/552076 [00:00<00:05, 86047.94it/s] 15%|█▌        | 83353/552076 [00:00<00:04, 94490.78it/s] 17%|█▋        | 93116/552076 [00:01<00:05, 86259.04it/s] 19%|█▉        | 105457/552076 [00:01<00:04, 94821.39it/s] 21%|██        | 115448/552076 [00:01<00:04, 89153.09it/s] 23%|██▎       | 126235/552076 [00:01<00:04, 94048.44it/s] 25%|██▍       | 136740/552076 [00:01<00:04, 95173.06it/s] 27%|██▋       | 148442/552076 [00:01<00:04, 100818.83it/s] 29%|██▉       | 160863/552076 [00:01<00:03, 106855.04it/s] 31%|███       | 171839/552076 [00:01<00:04, 93969.97it/s]  33%|███▎      | 183928/552076 [00:01<00:03, 100696.48it/s] 35%|███▌      | 194473/552076 [00:02<00:03, 98308.45it/s]  37%|███▋      | 206462/552076 [00:02<00:03, 103919.37it/s] 39%|███▉      | 217182/552076 [00:02<00:03, 101352.48it/s] 41%|████      | 227561/552076 [00:02<00:03, 95312.22it/s]  43%|████▎     | 238665/552076 [00:02<00:03, 99166.73it/s] 45%|████▌     | 249337/552076 [00:02<00:02, 101316.45it/s] 47%|████▋     | 261227/552076 [00:02<00:02, 106018.16it/s] 49%|████▉     | 272998/552076 [00:02<00:02, 109273.36it/s] 52%|█████▏    | 285219/552076 [00:02<00:02, 112854.98it/s] 54%|█████▍    | 297544/552076 [00:02<00:02, 115783.54it/s] 56%|█████▌    | 309655/552076 [00:03<00:02, 117329.87it/s] 58%|█████▊    | 321551/552076 [00:03<00:01, 117813.15it/s] 60%|██████    | 333721/552076 [00:03<00:01, 118951.50it/s] 63%|██████▎   | 345907/552076 [00:03<00:01, 119808.81it/s] 65%|██████▍   | 357920/552076 [00:03<00:01, 119502.17it/s] 67%|██████▋   | 369893/552076 [00:03<00:01, 102261.43it/s] 69%|██████▉   | 382116/552076 [00:03<00:01, 107530.50it/s] 71%|███████   | 393256/552076 [00:03<00:01, 101932.80it/s] 73%|███████▎  | 405580/552076 [00:03<00:01, 107507.25it/s] 76%|███████▌  | 417243/552076 [00:04<00:01, 110088.72it/s] 78%|███████▊  | 429545/552076 [00:04<00:01, 113672.12it/s] 80%|████████  | 441899/552076 [00:04<00:00, 116461.28it/s] 82%|████████▏ | 454249/552076 [00:04<00:00, 118486.32it/s] 84%|████████▍ | 466214/552076 [00:04<00:00, 117986.80it/s] 87%|████████▋ | 478513/552076 [00:04<00:00, 119442.62it/s] 89%|████████▉ | 490810/552076 [00:04<00:00, 120476.48it/s] 91%|█████████ | 503035/552076 [00:04<00:00, 121001.86it/s] 93%|█████████▎| 515168/552076 [00:04<00:00, 102184.96it/s] 95%|█████████▌| 525910/552076 [00:05<00:00, 88874.81it/s]  97%|█████████▋| 535475/552076 [00:05<00:00, 81153.50it/s] 99%|█████████▊| 544195/552076 [00:05<00:00, 76495.35it/s]100%|██████████| 552076/552076 [00:05<00:00, 101549.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6566/552076 [00:00<00:08, 65658.81it/s]  2%|▏         | 13159/552076 [00:00<00:08, 65739.86it/s]  4%|▎         | 19740/552076 [00:00<00:08, 65760.76it/s]  5%|▍         | 26413/552076 [00:00<00:07, 66046.15it/s]  6%|▌         | 33164/552076 [00:00<00:07, 66476.98it/s]  7%|▋         | 39895/552076 [00:00<00:07, 66722.93it/s]  8%|▊         | 46620/552076 [00:00<00:07, 66879.77it/s] 10%|▉         | 53431/552076 [00:00<00:07, 67242.74it/s] 11%|█         | 60234/552076 [00:00<00:07, 67474.67it/s] 12%|█▏        | 67030/552076 [00:01<00:07, 67617.40it/s] 13%|█▎        | 73692/552076 [00:01<00:07, 67313.37it/s] 15%|█▍        | 80561/552076 [00:01<00:06, 67718.55it/s] 16%|█▌        | 87314/552076 [00:01<00:06, 67661.31it/s] 17%|█▋        | 94027/552076 [00:01<00:06, 67499.50it/s] 18%|█▊        | 100734/552076 [00:01<00:07, 62287.60it/s] 19%|█▉        | 107012/552076 [00:01<00:07, 60221.37it/s] 21%|██        | 115754/552076 [00:01<00:06, 66420.35it/s] 23%|██▎       | 128105/552076 [00:01<00:05, 77112.83it/s] 25%|██▌       | 139573/552076 [00:01<00:04, 85516.28it/s] 28%|██▊       | 151954/552076 [00:02<00:04, 94262.63it/s] 30%|██▉       | 164361/552076 [00:02<00:03, 101582.26it/s] 32%|███▏      | 176697/552076 [00:02<00:03, 107262.56it/s] 34%|███▍      | 189480/552076 [00:02<00:03, 112702.07it/s] 37%|███▋      | 201775/552076 [00:02<00:03, 115589.94it/s] 39%|███▊      | 213868/552076 [00:02<00:02, 117139.77it/s] 41%|████      | 226345/552076 [00:02<00:02, 119325.62it/s] 43%|████▎     | 238977/552076 [00:02<00:02, 121339.52it/s] 46%|████▌     | 251502/552076 [00:02<00:02, 122483.90it/s] 48%|████▊     | 263872/552076 [00:02<00:02, 122844.76it/s] 50%|█████     | 276448/552076 [00:03<00:02, 123704.64it/s] 52%|█████▏    | 288872/552076 [00:03<00:02, 98076.68it/s]  55%|█████▍    | 301606/552076 [00:03<00:02, 105338.35it/s] 57%|█████▋    | 313962/552076 [00:03<00:02, 110212.34it/s] 59%|█████▉    | 326571/552076 [00:03<00:01, 114539.16it/s] 61%|██████▏   | 338484/552076 [00:03<00:01, 115191.24it/s] 63%|██████▎   | 350325/552076 [00:03<00:02, 96314.05it/s]  65%|██████▌   | 360704/552076 [00:03<00:01, 97117.54it/s] 67%|██████▋   | 372531/552076 [00:04<00:01, 102621.90it/s] 70%|██████▉   | 384948/552076 [00:04<00:01, 108256.00it/s] 72%|███████▏  | 396591/552076 [00:04<00:01, 110585.05it/s] 74%|███████▍  | 407941/552076 [00:04<00:01, 98514.19it/s]  76%|███████▌  | 418242/552076 [00:04<00:01, 84886.35it/s] 77%|███████▋  | 427378/552076 [00:04<00:01, 84250.43it/s] 80%|███████▉  | 439642/552076 [00:04<00:01, 92981.05it/s] 82%|████████▏ | 451309/552076 [00:04<00:01, 99011.27it/s] 84%|████████▍ | 463535/552076 [00:04<00:00, 104999.68it/s] 86%|████████▌ | 475901/552076 [00:05<00:00, 109977.04it/s] 88%|████████▊ | 488304/552076 [00:05<00:00, 113844.58it/s] 91%|█████████ | 500779/552076 [00:05<00:00, 116910.49it/s] 93%|█████████▎| 512917/552076 [00:05<00:00, 118215.52it/s] 95%|█████████▌| 524907/552076 [00:05<00:00, 118093.84it/s] 97%|█████████▋| 536834/552076 [00:05<00:00, 112577.39it/s] 99%|█████████▉| 548229/552076 [00:05<00:00, 105364.05it/s]100%|██████████| 552076/552076 [00:05<00:00, 96944.92it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7645/552076 [00:00<00:07, 74217.34it/s]  3%|▎         | 16880/552076 [00:00<00:06, 78862.65it/s]  5%|▌         | 28716/552076 [00:00<00:05, 87634.70it/s]  7%|▋         | 40544/552076 [00:00<00:05, 95018.93it/s]  9%|▉         | 48829/552076 [00:00<00:05, 91006.35it/s] 10%|█         | 57023/552076 [00:00<00:06, 79642.93it/s] 13%|█▎        | 69262/552076 [00:00<00:05, 88964.05it/s] 15%|█▍        | 81519/552076 [00:00<00:04, 96937.17it/s] 17%|█▋        | 93843/552076 [00:00<00:04, 103567.45it/s] 19%|█▉        | 106145/552076 [00:01<00:04, 108722.86it/s] 21%|██▏       | 118341/552076 [00:01<00:03, 112380.76it/s] 24%|██▎       | 130101/552076 [00:01<00:03, 113896.63it/s] 26%|██▌       | 142086/552076 [00:01<00:03, 115619.07it/s] 28%|██▊       | 154085/552076 [00:01<00:03, 116896.25it/s] 30%|███       | 165865/552076 [00:01<00:03, 106685.25it/s] 32%|███▏      | 176770/552076 [00:01<00:03, 102155.00it/s] 34%|███▍      | 187271/552076 [00:01<00:03, 102993.29it/s] 36%|███▌      | 199645/552076 [00:01<00:03, 108446.80it/s] 38%|███▊      | 210669/552076 [00:02<00:03, 98549.85it/s]  40%|████      | 222560/552076 [00:02<00:03, 103884.57it/s] 42%|████▏     | 234436/552076 [00:02<00:02, 107939.68it/s] 44%|████▍     | 245472/552076 [00:02<00:02, 108083.82it/s] 47%|████▋     | 257534/552076 [00:02<00:02, 111561.25it/s] 49%|████▉     | 269675/552076 [00:02<00:02, 114343.03it/s] 51%|█████     | 281229/552076 [00:02<00:02, 96189.57it/s]  53%|█████▎    | 294355/552076 [00:02<00:02, 104569.55it/s] 55%|█████▌    | 305428/552076 [00:02<00:02, 99400.99it/s]  57%|█████▋    | 315853/552076 [00:03<00:02, 88844.29it/s] 59%|█████▉    | 325287/552076 [00:03<00:02, 76843.00it/s] 60%|██████    | 333644/552076 [00:03<00:02, 74080.37it/s] 62%|██████▏   | 341544/552076 [00:03<00:03, 65583.84it/s] 63%|██████▎   | 349181/552076 [00:03<00:03, 67459.89it/s] 65%|██████▌   | 361014/552076 [00:03<00:02, 77447.86it/s] 68%|██████▊   | 373004/552076 [00:03<00:02, 86651.32it/s] 70%|██████▉   | 384968/552076 [00:03<00:01, 94464.92it/s] 72%|███████▏  | 395259/552076 [00:04<00:02, 72568.17it/s] 73%|███████▎  | 403876/552076 [00:04<00:02, 62452.89it/s] 75%|███████▍  | 411322/552076 [00:04<00:02, 50151.79it/s] 76%|███████▋  | 421076/552076 [00:04<00:02, 58283.51it/s] 78%|███████▊  | 428259/552076 [00:04<00:02, 55470.72it/s] 79%|███████▉  | 438504/552076 [00:04<00:01, 64318.14it/s] 82%|████████▏ | 450216/552076 [00:04<00:01, 74377.26it/s] 84%|████████▎ | 462055/552076 [00:05<00:01, 83712.74it/s] 85%|████████▌ | 471810/552076 [00:05<00:01, 74979.67it/s] 88%|████████▊ | 483857/552076 [00:05<00:00, 84558.20it/s] 90%|████████▉ | 495457/552076 [00:05<00:00, 92041.21it/s] 92%|█████████▏| 507797/552076 [00:05<00:00, 99635.89it/s] 94%|█████████▍| 518826/552076 [00:05<00:00, 102609.50it/s] 96%|█████████▌| 529745/552076 [00:05<00:00, 102086.23it/s] 98%|█████████▊| 540415/552076 [00:05<00:00, 102565.44it/s]100%|█████████▉| 550995/552076 [00:05<00:00, 102707.07it/s]100%|██████████| 552076/552076 [00:05<00:00, 92735.26it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4727/552076 [00:00<00:11, 47266.33it/s]  2%|▏         | 11333/552076 [00:00<00:10, 51676.78it/s]  3%|▎         | 17916/552076 [00:00<00:09, 55238.50it/s]  4%|▍         | 24740/552076 [00:00<00:09, 58587.02it/s]  6%|▌         | 31465/552076 [00:00<00:08, 60940.58it/s]  7%|▋         | 38220/552076 [00:00<00:08, 62782.63it/s]  8%|▊         | 45048/552076 [00:00<00:07, 64335.53it/s]  9%|▉         | 51180/552076 [00:00<00:10, 48680.43it/s] 10%|█         | 57410/552076 [00:01<00:09, 51170.27it/s] 11%|█▏        | 62810/552076 [00:01<00:11, 41101.05it/s] 13%|█▎        | 69095/552076 [00:01<00:10, 45860.76it/s] 13%|█▎        | 74218/552076 [00:01<00:11, 42561.27it/s] 14%|█▍        | 78898/552076 [00:01<00:12, 38682.91it/s] 15%|█▌        | 83131/552076 [00:01<00:13, 36058.99it/s] 16%|█▌        | 87028/552076 [00:01<00:13, 34443.02it/s] 16%|█▋        | 90692/552076 [00:01<00:13, 33665.43it/s] 17%|█▋        | 94216/552076 [00:02<00:13, 33660.38it/s] 18%|█▊        | 97692/552076 [00:02<00:13, 32599.76it/s] 18%|█▊        | 101221/552076 [00:02<00:13, 32779.44it/s] 19%|█▉        | 104559/552076 [00:02<00:13, 32205.95it/s] 20%|█▉        | 108201/552076 [00:02<00:13, 33362.76it/s] 20%|██        | 111579/552076 [00:02<00:13, 31857.27it/s] 21%|██        | 115108/552076 [00:02<00:13, 31506.84it/s] 22%|██▏       | 121707/552076 [00:02<00:11, 37364.23it/s] 23%|██▎       | 127373/552076 [00:02<00:10, 41615.39it/s] 24%|██▍       | 133980/552076 [00:03<00:08, 46813.43it/s] 25%|██▌       | 140388/552076 [00:03<00:08, 50928.98it/s] 27%|██▋       | 146778/552076 [00:03<00:07, 54230.76it/s] 28%|██▊       | 153176/552076 [00:03<00:07, 56827.91it/s] 29%|██▉       | 159598/552076 [00:03<00:06, 58859.13it/s] 30%|███       | 165871/552076 [00:03<00:06, 59968.60it/s] 31%|███       | 172286/552076 [00:03<00:06, 61163.37it/s] 32%|███▏      | 178724/552076 [00:03<00:06, 62093.13it/s] 34%|███▎      | 185169/552076 [00:03<00:05, 62781.86it/s] 35%|███▍      | 191569/552076 [00:03<00:05, 63139.57it/s] 36%|███▌      | 197950/552076 [00:04<00:05, 63339.01it/s] 37%|███▋      | 204404/552076 [00:04<00:05, 63693.89it/s] 38%|███▊      | 210851/552076 [00:04<00:05, 63922.59it/s] 39%|███▉      | 217260/552076 [00:04<00:08, 41264.91it/s] 40%|████      | 223449/552076 [00:04<00:07, 45847.68it/s] 42%|████▏     | 229286/552076 [00:04<00:06, 49000.01it/s] 43%|████▎     | 235687/552076 [00:04<00:06, 52706.17it/s] 44%|████▍     | 241872/552076 [00:04<00:05, 55150.87it/s] 45%|████▍     | 248301/552076 [00:05<00:05, 57606.98it/s] 46%|████▌     | 254701/552076 [00:05<00:05, 59384.13it/s] 47%|████▋     | 260879/552076 [00:05<00:04, 60071.97it/s] 48%|████▊     | 267310/552076 [00:05<00:04, 61281.51it/s] 50%|████▉     | 273703/552076 [00:05<00:04, 62050.29it/s] 51%|█████     | 279998/552076 [00:05<00:04, 61603.76it/s] 52%|█████▏    | 286222/552076 [00:05<00:04, 59074.29it/s] 53%|█████▎    | 292521/552076 [00:05<00:04, 60195.04it/s] 54%|█████▍    | 299301/552076 [00:05<00:04, 62289.08it/s] 55%|█████▌    | 305585/552076 [00:05<00:04, 60833.41it/s] 57%|█████▋    | 312674/552076 [00:06<00:03, 63535.37it/s] 58%|█████▊    | 319333/552076 [00:06<00:03, 64419.35it/s] 59%|█████▉    | 326221/552076 [00:06<00:03, 65692.97it/s] 60%|██████    | 332830/552076 [00:06<00:03, 63079.31it/s] 62%|██████▏   | 339625/552076 [00:06<00:03, 64463.51it/s] 63%|██████▎   | 346221/552076 [00:06<00:03, 64904.97it/s] 64%|██████▍   | 353247/552076 [00:06<00:02, 66422.62it/s] 65%|██████▌   | 360039/552076 [00:06<00:02, 66864.31it/s] 66%|██████▋   | 366948/552076 [00:06<00:02, 67514.89it/s] 68%|██████▊   | 373808/552076 [00:06<00:02, 67835.34it/s] 69%|██████▉   | 380945/552076 [00:07<00:02, 68858.20it/s] 70%|███████   | 387843/552076 [00:07<00:02, 66850.28it/s] 72%|███████▏  | 395347/552076 [00:07<00:02, 67814.45it/s] 74%|███████▎  | 407092/552076 [00:07<00:01, 77659.73it/s] 75%|███████▌  | 415376/552076 [00:07<00:01, 73879.10it/s] 77%|███████▋  | 426964/552076 [00:07<00:01, 82891.07it/s] 80%|███████▉  | 438944/552076 [00:07<00:01, 91331.29it/s] 82%|████████▏ | 451227/552076 [00:07<00:01, 98942.57it/s] 84%|████████▍ | 463396/552076 [00:07<00:00, 104819.60it/s] 86%|████████▌ | 475421/552076 [00:07<00:00, 109014.17it/s] 88%|████████▊ | 487816/552076 [00:08<00:00, 113102.61it/s] 91%|█████████ | 499731/552076 [00:08<00:00, 114848.16it/s] 93%|█████████▎| 511573/552076 [00:08<00:00, 115212.99it/s] 95%|█████████▍| 523271/552076 [00:08<00:00, 105702.32it/s] 97%|█████████▋| 535641/552076 [00:08<00:00, 110524.68it/s] 99%|█████████▉| 547949/552076 [00:08<00:00, 114013.48it/s]100%|██████████| 552076/552076 [00:08<00:00, 63735.63it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5781/552076 [00:00<00:09, 57801.65it/s]  2%|▏         | 10280/552076 [00:00<00:10, 53250.29it/s]  3%|▎         | 16145/552076 [00:00<00:09, 54761.39it/s]  4%|▍         | 21007/552076 [00:00<00:10, 52610.41it/s]  5%|▍         | 26691/552076 [00:00<00:09, 53809.95it/s]  6%|▌         | 33442/552076 [00:00<00:09, 57297.56it/s]  7%|▋         | 40084/552076 [00:00<00:08, 59757.77it/s]  8%|▊         | 46834/552076 [00:00<00:08, 61886.27it/s] 10%|▉         | 52776/552076 [00:00<00:08, 56898.93it/s] 11%|█         | 58372/552076 [00:01<00:09, 52208.86it/s] 12%|█▏        | 65108/552076 [00:01<00:08, 55986.63it/s] 13%|█▎        | 71839/552076 [00:01<00:08, 58960.45it/s] 14%|█▍        | 78082/552076 [00:01<00:07, 59959.61it/s] 15%|█▌        | 84153/552076 [00:01<00:08, 57925.09it/s] 16%|█▋        | 90013/552076 [00:01<00:08, 56997.56it/s] 17%|█▋        | 95764/552076 [00:01<00:08, 53017.44it/s] 19%|█▊        | 102331/552076 [00:01<00:07, 56268.13it/s] 20%|█▉        | 108849/552076 [00:01<00:07, 58672.50it/s] 21%|██        | 114900/552076 [00:01<00:07, 59208.96it/s] 22%|██▏       | 120899/552076 [00:02<00:08, 50458.13it/s] 23%|██▎       | 127296/552076 [00:02<00:07, 53871.62it/s] 24%|██▍       | 133847/552076 [00:02<00:07, 56904.07it/s] 25%|██▌       | 140219/552076 [00:02<00:07, 58788.55it/s] 27%|██▋       | 146923/552076 [00:02<00:06, 61040.24it/s] 28%|██▊       | 153824/552076 [00:02<00:06, 63230.22it/s] 29%|██▉       | 160472/552076 [00:02<00:06, 64171.00it/s] 30%|███       | 167166/552076 [00:02<00:05, 64975.02it/s] 32%|███▏      | 173963/552076 [00:02<00:05, 65843.99it/s] 33%|███▎      | 180687/552076 [00:03<00:05, 66254.58it/s] 34%|███▍      | 187347/552076 [00:03<00:05, 65191.72it/s] 35%|███▌      | 194138/552076 [00:03<00:05, 65981.90it/s] 36%|███▋      | 200836/552076 [00:03<00:05, 66275.35it/s] 38%|███▊      | 207510/552076 [00:03<00:05, 66411.53it/s] 39%|███▉      | 214163/552076 [00:03<00:05, 62301.29it/s] 40%|████      | 221028/552076 [00:03<00:05, 64077.35it/s] 41%|████      | 227491/552076 [00:03<00:05, 63180.51it/s] 42%|████▏     | 234243/552076 [00:03<00:04, 64422.52it/s] 44%|████▎     | 240913/552076 [00:03<00:04, 65087.33it/s] 45%|████▍     | 247694/552076 [00:04<00:04, 65879.77it/s] 46%|████▌     | 254303/552076 [00:04<00:04, 65848.68it/s] 47%|████▋     | 260903/552076 [00:04<00:04, 65633.99it/s] 48%|████▊     | 267558/552076 [00:04<00:04, 65906.06it/s] 50%|████▉     | 274156/552076 [00:04<00:04, 62135.08it/s] 51%|█████     | 280420/552076 [00:04<00:04, 61685.38it/s] 52%|█████▏    | 286936/552076 [00:04<00:04, 62686.90it/s] 53%|█████▎    | 293387/552076 [00:04<00:04, 63221.03it/s] 54%|█████▍    | 299899/552076 [00:04<00:03, 63778.79it/s] 55%|█████▌    | 306293/552076 [00:05<00:04, 55922.56it/s] 57%|█████▋    | 312807/552076 [00:05<00:04, 58401.13it/s] 58%|█████▊    | 318807/552076 [00:05<00:04, 58131.04it/s] 59%|█████▉    | 325430/552076 [00:05<00:03, 59624.51it/s] 60%|██████    | 331481/552076 [00:05<00:03, 57052.65it/s] 61%|██████    | 337272/552076 [00:05<00:04, 50067.29it/s] 62%|██████▏   | 342494/552076 [00:05<00:04, 46612.21it/s] 63%|██████▎   | 347354/552076 [00:05<00:04, 44272.58it/s] 64%|██████▍   | 352316/552076 [00:05<00:04, 45750.73it/s] 65%|██████▍   | 357515/552076 [00:06<00:04, 47442.16it/s] 66%|██████▌   | 362364/552076 [00:06<00:04, 41489.13it/s] 67%|██████▋   | 369038/552076 [00:06<00:03, 46799.94it/s] 68%|██████▊   | 375702/552076 [00:06<00:03, 51388.30it/s] 69%|██████▉   | 381375/552076 [00:06<00:03, 52880.93it/s] 70%|███████   | 387428/552076 [00:06<00:02, 54964.18it/s] 71%|███████   | 393148/552076 [00:06<00:03, 47936.26it/s] 72%|███████▏  | 398260/552076 [00:07<00:04, 36154.15it/s] 73%|███████▎  | 402528/552076 [00:07<00:04, 31900.77it/s] 74%|███████▍  | 409027/552076 [00:07<00:03, 37650.85it/s] 75%|███████▍  | 413593/552076 [00:07<00:04, 34447.64it/s] 76%|███████▌  | 420303/552076 [00:07<00:03, 40335.57it/s] 77%|███████▋  | 427011/552076 [00:07<00:02, 45815.31it/s] 78%|███████▊  | 432465/552076 [00:07<00:02, 48124.50it/s] 79%|███████▉  | 437982/552076 [00:07<00:02, 50039.93it/s] 81%|████████  | 444659/552076 [00:07<00:01, 54106.33it/s] 82%|████████▏ | 451451/552076 [00:08<00:01, 57620.20it/s] 83%|████████▎ | 458217/552076 [00:08<00:01, 60303.85it/s] 84%|████████▍ | 464990/552076 [00:08<00:01, 62354.62it/s] 85%|████████▌ | 471509/552076 [00:08<00:01, 63178.53it/s] 87%|████████▋ | 477999/552076 [00:08<00:01, 63684.96it/s] 88%|████████▊ | 484797/552076 [00:08<00:01, 64913.37it/s] 89%|████████▉ | 491576/552076 [00:08<00:00, 65747.99it/s] 90%|█████████ | 498210/552076 [00:08<00:00, 61205.27it/s] 91%|█████████▏| 504435/552076 [00:08<00:00, 59109.40it/s] 92%|█████████▏| 510435/552076 [00:09<00:00, 47329.48it/s] 93%|█████████▎| 515604/552076 [00:09<00:00, 48406.50it/s] 94%|█████████▍| 520756/552076 [00:09<00:00, 43559.93it/s] 95%|█████████▌| 526410/552076 [00:09<00:00, 46781.13it/s] 96%|█████████▌| 531372/552076 [00:09<00:00, 45489.11it/s] 97%|█████████▋| 536128/552076 [00:09<00:00, 43951.82it/s] 98%|█████████▊| 542082/552076 [00:09<00:00, 47697.38it/s] 99%|█████████▉| 547054/552076 [00:09<00:00, 46352.51it/s]100%|██████████| 552076/552076 [00:09<00:00, 55498.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5333/552076 [00:00<00:10, 53324.71it/s]  2%|▏         | 9556/552076 [00:00<00:11, 49162.71it/s]  3%|▎         | 15052/552076 [00:00<00:10, 50769.03it/s]  3%|▎         | 18359/552076 [00:00<00:13, 41004.58it/s]  4%|▍         | 22677/552076 [00:00<00:12, 41632.56it/s]  5%|▍         | 26187/552076 [00:00<00:13, 37744.94it/s]  6%|▌         | 32504/552076 [00:00<00:12, 42928.14it/s]  8%|▊         | 42672/552076 [00:00<00:09, 51929.75it/s] 10%|▉         | 53652/552076 [00:00<00:08, 61491.24it/s] 12%|█▏        | 64572/552076 [00:01<00:06, 70765.79it/s] 14%|█▍        | 76842/552076 [00:01<00:05, 81057.60it/s] 16%|█▌        | 89058/552076 [00:01<00:05, 90157.48it/s] 18%|█▊        | 101339/552076 [00:01<00:04, 97971.87it/s] 21%|██        | 113442/552076 [00:01<00:04, 103909.49it/s] 23%|██▎       | 125718/552076 [00:01<00:03, 108927.24it/s] 25%|██▌       | 138101/552076 [00:01<00:03, 113006.76it/s] 27%|██▋       | 149935/552076 [00:01<00:03, 102001.03it/s] 29%|██▉       | 160713/552076 [00:01<00:04, 95397.38it/s]  31%|███▏      | 173118/552076 [00:02<00:03, 102498.71it/s] 34%|███▎      | 185474/552076 [00:02<00:03, 108021.79it/s] 36%|███▌      | 197879/552076 [00:02<00:03, 112377.62it/s] 38%|███▊      | 210216/552076 [00:02<00:02, 115462.88it/s] 40%|████      | 222378/552076 [00:02<00:02, 117243.25it/s] 42%|████▏     | 234292/552076 [00:02<00:02, 117111.11it/s] 45%|████▍     | 246776/552076 [00:02<00:02, 119326.93it/s] 47%|████▋     | 259274/552076 [00:02<00:02, 120967.28it/s] 49%|████▉     | 271684/552076 [00:02<00:02, 121889.37it/s] 51%|█████▏    | 284011/552076 [00:02<00:02, 122298.77it/s] 54%|█████▎    | 296281/552076 [00:03<00:02, 114542.79it/s] 56%|█████▌    | 307863/552076 [00:03<00:02, 107257.71it/s] 58%|█████▊    | 318773/552076 [00:03<00:02, 84113.97it/s]  60%|█████▉    | 329353/552076 [00:03<00:02, 87483.55it/s] 61%|██████▏   | 338769/552076 [00:03<00:02, 77862.91it/s] 63%|██████▎   | 347219/552076 [00:03<00:02, 78549.38it/s] 64%|██████▍   | 355540/552076 [00:03<00:02, 78639.36it/s] 67%|██████▋   | 368619/552076 [00:03<00:02, 89323.64it/s] 69%|██████▊   | 378276/552076 [00:04<00:01, 91175.64it/s] 71%|███████   | 390055/552076 [00:04<00:01, 97804.04it/s] 73%|███████▎  | 400333/552076 [00:04<00:01, 87461.88it/s] 74%|███████▍  | 409632/552076 [00:04<00:01, 87166.86it/s] 76%|███████▌  | 420108/552076 [00:04<00:01, 91790.99it/s] 78%|███████▊  | 432222/552076 [00:04<00:01, 98985.19it/s] 80%|████████  | 444289/552076 [00:04<00:01, 104623.74it/s] 82%|████████▏ | 455116/552076 [00:04<00:00, 103475.44it/s] 84%|████████▍ | 465722/552076 [00:04<00:00, 103946.33it/s] 87%|████████▋ | 477859/552076 [00:04<00:00, 108622.31it/s] 89%|████████▉ | 490299/552076 [00:05<00:00, 112918.43it/s] 91%|█████████ | 502690/552076 [00:05<00:00, 116004.42it/s] 93%|█████████▎| 515167/552076 [00:05<00:00, 118501.21it/s] 95%|█████████▌| 527129/552076 [00:05<00:00, 117871.08it/s] 98%|█████████▊| 539616/552076 [00:05<00:00, 119885.36it/s]100%|██████████| 552076/552076 [00:05<00:00, 98790.02it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6597/552076 [00:00<00:08, 65965.66it/s]  2%|▏         | 13129/552076 [00:00<00:08, 65767.19it/s]  4%|▎         | 19831/552076 [00:00<00:08, 66137.87it/s]  5%|▍         | 26548/552076 [00:00<00:07, 66443.15it/s]  6%|▌         | 33263/552076 [00:00<00:07, 66653.42it/s]  7%|▋         | 38821/552076 [00:00<00:08, 57706.41it/s]  8%|▊         | 45210/552076 [00:00<00:08, 59431.15it/s]  9%|▉         | 51009/552076 [00:00<00:08, 58989.64it/s] 10%|█         | 57467/552076 [00:00<00:08, 60561.58it/s] 12%|█▏        | 64072/552076 [00:01<00:07, 62108.10it/s] 13%|█▎        | 70738/552076 [00:01<00:07, 63405.28it/s] 14%|█▍        | 77470/552076 [00:01<00:07, 64530.57it/s] 15%|█▌        | 84203/552076 [00:01<00:07, 65345.62it/s] 17%|█▋        | 91141/552076 [00:01<00:06, 66505.09it/s] 18%|█▊        | 98120/552076 [00:01<00:06, 67455.64it/s] 19%|█▉        | 104943/552076 [00:01<00:06, 67685.25it/s] 20%|██        | 111707/552076 [00:01<00:06, 67222.97it/s] 21%|██▏       | 118427/552076 [00:01<00:06, 67212.88it/s] 23%|██▎       | 125163/552076 [00:01<00:06, 67255.86it/s] 24%|██▍       | 131914/552076 [00:02<00:06, 67330.86it/s] 25%|██▌       | 138671/552076 [00:02<00:06, 67401.20it/s] 26%|██▋       | 145420/552076 [00:02<00:06, 67425.33it/s] 28%|██▊       | 152168/552076 [00:02<00:05, 67439.67it/s] 29%|██▉       | 158927/552076 [00:02<00:05, 67483.37it/s] 30%|███       | 165831/552076 [00:02<00:05, 67940.08it/s] 31%|███▏      | 172751/552076 [00:02<00:05, 68311.02it/s] 33%|███▎      | 179583/552076 [00:02<00:05, 64221.89it/s] 34%|███▎      | 186056/552076 [00:02<00:05, 63316.28it/s] 35%|███▍      | 192427/552076 [00:02<00:05, 62733.12it/s] 36%|███▌      | 198853/552076 [00:03<00:05, 63182.99it/s] 37%|███▋      | 205276/552076 [00:03<00:05, 63491.94it/s] 39%|███▊      | 213007/552076 [00:03<00:05, 67089.17it/s] 40%|████      | 222465/552076 [00:03<00:04, 73496.94it/s] 42%|████▏     | 230884/552076 [00:03<00:04, 76407.53it/s] 44%|████▍     | 241811/552076 [00:03<00:03, 83984.15it/s] 46%|████▌     | 252376/552076 [00:03<00:03, 89489.07it/s] 48%|████▊     | 263953/552076 [00:03<00:03, 96027.69it/s] 50%|████▉     | 274300/552076 [00:03<00:02, 98143.52it/s] 52%|█████▏    | 286578/552076 [00:03<00:02, 104428.41it/s] 54%|█████▍    | 297370/552076 [00:04<00:02, 105451.30it/s] 56%|█████▌    | 308132/552076 [00:04<00:02, 105073.55it/s] 58%|█████▊    | 320147/552076 [00:04<00:02, 109182.92it/s] 60%|██████    | 333236/552076 [00:04<00:01, 114897.26it/s] 63%|██████▎   | 346026/552076 [00:04<00:01, 118509.82it/s] 65%|██████▍   | 358034/552076 [00:04<00:01, 118764.23it/s] 67%|██████▋   | 370539/552076 [00:04<00:01, 120580.30it/s] 69%|██████▉   | 383012/552076 [00:04<00:01, 121795.87it/s] 72%|███████▏  | 395507/552076 [00:04<00:01, 122724.52it/s] 74%|███████▍  | 407825/552076 [00:04<00:01, 120213.00it/s] 76%|███████▌  | 420301/552076 [00:05<00:01, 121541.69it/s] 78%|███████▊  | 432736/552076 [00:05<00:00, 122370.46it/s] 81%|████████  | 444998/552076 [00:05<00:00, 121155.64it/s] 83%|████████▎ | 457134/552076 [00:05<00:00, 118250.58it/s] 85%|████████▍ | 468989/552076 [00:05<00:00, 117762.81it/s] 87%|████████▋ | 481293/552076 [00:05<00:00, 119294.87it/s] 89%|████████▉ | 493243/552076 [00:05<00:00, 103905.27it/s] 91%|█████████▏| 504004/552076 [00:05<00:00, 104217.44it/s] 93%|█████████▎| 515510/552076 [00:05<00:00, 107247.00it/s] 96%|█████████▌| 527827/552076 [00:06<00:00, 111573.20it/s] 98%|█████████▊| 539172/552076 [00:06<00:00, 106026.69it/s]100%|█████████▉| 549964/552076 [00:06<00:00, 88278.32it/s] 100%|██████████| 552076/552076 [00:06<00:00, 87031.91it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11901/552076 [00:00<00:04, 119006.42it/s]  4%|▍         | 21788/552076 [00:00<00:04, 112148.34it/s]  5%|▍         | 27253/552076 [00:00<00:07, 71252.25it/s]   7%|▋         | 39459/552076 [00:00<00:06, 81419.21it/s]  9%|▉         | 50215/552076 [00:00<00:05, 87467.83it/s] 11%|█         | 58393/552076 [00:00<00:08, 57624.86it/s] 12%|█▏        | 65080/552076 [00:00<00:08, 59717.21it/s] 13%|█▎        | 71719/552076 [00:01<00:08, 59292.24it/s] 14%|█▍        | 78116/552076 [00:01<00:08, 57749.15it/s] 15%|█▌        | 84227/552076 [00:01<00:10, 46184.63it/s] 16%|█▌        | 89469/552076 [00:01<00:09, 47892.23it/s] 17%|█▋        | 94697/552076 [00:01<00:10, 43490.54it/s] 18%|█▊        | 100185/552076 [00:01<00:09, 46376.93it/s] 19%|█▉        | 105145/552076 [00:01<00:12, 35137.15it/s] 20%|█▉        | 109887/552076 [00:01<00:11, 37738.86it/s] 21%|██▏       | 117499/552076 [00:02<00:09, 44237.26it/s] 23%|██▎       | 126326/552076 [00:02<00:08, 52022.14it/s] 25%|██▍       | 135802/552076 [00:02<00:06, 60162.07it/s] 26%|██▌       | 143051/552076 [00:02<00:06, 62009.97it/s] 27%|██▋       | 150457/552076 [00:02<00:06, 64545.49it/s] 29%|██▊       | 157995/552076 [00:02<00:05, 67453.11it/s] 31%|███       | 169969/552076 [00:02<00:04, 77621.49it/s] 32%|███▏      | 178621/552076 [00:02<00:05, 68999.29it/s] 34%|███▍      | 190170/552076 [00:02<00:04, 78475.62it/s] 37%|███▋      | 202679/552076 [00:03<00:03, 88352.88it/s] 39%|███▉      | 215226/552076 [00:03<00:03, 96957.15it/s] 41%|████      | 227729/552076 [00:03<00:03, 103958.90it/s] 44%|████▎     | 240318/552076 [00:03<00:02, 109691.42it/s] 46%|████▌     | 252671/552076 [00:03<00:02, 113505.32it/s] 48%|████▊     | 264539/552076 [00:03<00:02, 111641.96it/s] 50%|█████     | 276806/552076 [00:03<00:02, 114733.90it/s] 52%|█████▏    | 288682/552076 [00:03<00:02, 115910.46it/s] 54%|█████▍    | 300812/552076 [00:03<00:02, 117475.74it/s] 57%|█████▋    | 312704/552076 [00:04<00:02, 104098.14it/s] 59%|█████▊    | 323496/552076 [00:04<00:02, 101892.15it/s] 61%|██████    | 334624/552076 [00:04<00:02, 104536.00it/s] 63%|██████▎   | 345289/552076 [00:04<00:02, 98322.39it/s]  65%|██████▍   | 356957/552076 [00:04<00:01, 103191.36it/s] 67%|██████▋   | 369018/552076 [00:04<00:01, 107862.70it/s] 69%|██████▉   | 381157/552076 [00:04<00:01, 111590.77it/s] 71%|███████   | 392823/552076 [00:04<00:01, 113062.66it/s] 73%|███████▎  | 404260/552076 [00:04<00:01, 110111.19it/s] 75%|███████▌  | 415380/552076 [00:04<00:01, 106558.27it/s] 77%|███████▋  | 426137/552076 [00:05<00:01, 103887.99it/s] 79%|███████▉  | 436611/552076 [00:05<00:01, 96757.47it/s]  81%|████████  | 447226/552076 [00:05<00:01, 99395.43it/s] 83%|████████▎ | 457295/552076 [00:05<00:00, 95044.88it/s] 85%|████████▍ | 466930/552076 [00:05<00:01, 81036.86it/s] 87%|████████▋ | 479377/552076 [00:05<00:00, 90510.76it/s] 89%|████████▉ | 491809/552076 [00:05<00:00, 98548.94it/s] 91%|█████████▏| 504188/552076 [00:05<00:00, 104968.65it/s] 94%|█████████▎| 516617/552076 [00:05<00:00, 110101.94it/s] 96%|█████████▌| 529191/552076 [00:06<00:00, 114368.17it/s] 98%|█████████▊| 541770/552076 [00:06<00:00, 117569.44it/s]100%|██████████| 552076/552076 [00:06<00:00, 87949.44it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6424/552076 [00:00<00:08, 64238.22it/s]  2%|▏         | 13045/552076 [00:00<00:08, 64816.38it/s]  4%|▎         | 19728/552076 [00:00<00:08, 65406.48it/s]  5%|▍         | 26446/552076 [00:00<00:07, 65926.47it/s]  6%|▌         | 33137/552076 [00:00<00:07, 66215.73it/s]  7%|▋         | 39891/552076 [00:00<00:07, 66605.62it/s]  8%|▊         | 46693/552076 [00:00<00:07, 67020.81it/s] 10%|▉         | 53447/552076 [00:00<00:07, 67172.78it/s] 11%|█         | 60140/552076 [00:00<00:07, 67096.56it/s] 12%|█▏        | 66865/552076 [00:01<00:07, 67141.87it/s] 13%|█▎        | 73626/552076 [00:01<00:07, 67279.49it/s] 15%|█▍        | 80403/552076 [00:01<00:06, 67423.32it/s] 16%|█▌        | 87444/552076 [00:01<00:06, 68291.07it/s] 17%|█▋        | 94262/552076 [00:01<00:06, 68255.82it/s] 18%|█▊        | 101047/552076 [00:01<00:07, 62340.25it/s] 20%|█▉        | 107659/552076 [00:01<00:07, 63425.81it/s] 21%|██        | 114056/552076 [00:01<00:08, 54298.32it/s] 22%|██▏       | 123186/552076 [00:01<00:06, 61813.55it/s] 24%|██▍       | 134606/552076 [00:01<00:05, 71676.74it/s] 27%|██▋       | 148017/552076 [00:02<00:04, 83311.62it/s] 29%|██▉       | 161015/552076 [00:02<00:04, 93368.30it/s] 31%|███▏      | 172919/552076 [00:02<00:03, 99825.37it/s] 34%|███▎      | 185157/552076 [00:02<00:03, 105667.37it/s] 36%|███▌      | 196572/552076 [00:02<00:03, 103064.71it/s] 38%|███▊      | 208835/552076 [00:02<00:03, 108243.99it/s] 40%|███▉      | 220575/552076 [00:02<00:02, 110836.82it/s] 42%|████▏     | 232364/552076 [00:02<00:02, 112861.18it/s] 44%|████▍     | 244272/552076 [00:02<00:02, 114655.75it/s] 46%|████▋     | 256095/552076 [00:03<00:02, 115702.33it/s] 49%|████▊     | 267801/552076 [00:03<00:02, 109903.47it/s] 51%|█████     | 278947/552076 [00:03<00:02, 101098.50it/s] 52%|█████▏    | 289305/552076 [00:03<00:02, 97705.81it/s]  54%|█████▍    | 299274/552076 [00:03<00:02, 97108.87it/s] 57%|█████▋    | 315395/552076 [00:03<00:02, 110261.47it/s] 59%|█████▉    | 327127/552076 [00:03<00:02, 111701.95it/s] 62%|██████▏   | 344379/552076 [00:03<00:01, 124910.56it/s] 65%|██████▌   | 361444/552076 [00:03<00:01, 135831.56it/s] 69%|██████▉   | 383222/552076 [00:03<00:01, 153115.91it/s] 74%|███████▎  | 406138/552076 [00:04<00:00, 170039.84it/s] 77%|███████▋  | 425330/552076 [00:04<00:00, 176057.39it/s] 80%|████████  | 444060/552076 [00:04<00:00, 168619.32it/s] 84%|████████▍ | 465531/552076 [00:04<00:00, 180223.64it/s] 88%|████████▊ | 488499/552076 [00:04<00:00, 192669.68it/s] 93%|█████████▎| 510897/552076 [00:04<00:00, 201101.64it/s] 97%|█████████▋| 532979/552076 [00:04<00:00, 206635.60it/s]100%|██████████| 552076/552076 [00:04<00:00, 113928.80it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21271/552076 [00:00<00:02, 212704.12it/s]  8%|▊         | 43268/552076 [00:00<00:02, 214832.59it/s] 12%|█▏        | 65286/552076 [00:00<00:02, 216406.96it/s] 16%|█▌        | 86842/552076 [00:00<00:02, 216150.22it/s] 20%|█▉        | 109166/552076 [00:00<00:02, 218228.56it/s] 24%|██▍       | 132303/552076 [00:00<00:01, 222009.00it/s] 28%|██▊       | 155070/552076 [00:00<00:01, 223676.01it/s] 32%|███▏      | 177627/552076 [00:00<00:01, 224238.05it/s] 36%|███▌      | 199777/552076 [00:00<00:01, 223408.65it/s] 40%|████      | 222497/552076 [00:01<00:01, 224531.18it/s] 44%|████▍     | 244795/552076 [00:01<00:01, 224063.47it/s] 48%|████▊     | 267697/552076 [00:01<00:01, 225526.86it/s] 53%|█████▎    | 289962/552076 [00:01<00:01, 222018.38it/s] 57%|█████▋    | 312435/552076 [00:01<00:01, 222824.24it/s] 61%|██████    | 334586/552076 [00:01<00:01, 162696.44it/s] 64%|██████▍   | 353087/552076 [00:01<00:01, 126543.04it/s] 68%|██████▊   | 374213/552076 [00:01<00:01, 143845.22it/s] 71%|███████   | 391366/552076 [00:02<00:01, 112317.77it/s] 75%|███████▌  | 414215/552076 [00:02<00:01, 132533.01it/s] 79%|███████▉  | 437523/552076 [00:02<00:00, 152233.36it/s] 83%|████████▎ | 460399/552076 [00:02<00:00, 169215.24it/s] 87%|████████▋ | 480399/552076 [00:02<00:00, 173516.57it/s] 91%|█████████ | 499933/552076 [00:02<00:00, 175881.42it/s] 94%|█████████▍| 520905/552076 [00:02<00:00, 184827.67it/s] 98%|█████████▊| 541665/552076 [00:02<00:00, 191115.74it/s]100%|██████████| 552076/552076 [00:02<00:00, 187410.47it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19980/552076 [00:00<00:02, 199799.71it/s]  6%|▋         | 35273/552076 [00:00<00:02, 182974.58it/s]  9%|▉         | 50680/552076 [00:00<00:02, 173224.06it/s] 13%|█▎        | 71597/552076 [00:00<00:02, 182640.02it/s] 17%|█▋        | 94138/552076 [00:00<00:02, 193663.87it/s] 21%|██        | 116101/552076 [00:00<00:02, 200783.01it/s] 25%|██▌       | 138026/552076 [00:00<00:02, 205986.67it/s] 28%|██▊       | 157268/552076 [00:00<00:02, 180376.73it/s] 33%|███▎      | 180502/552076 [00:00<00:01, 193348.64it/s] 36%|███▌      | 199846/552076 [00:01<00:01, 193372.22it/s] 40%|███▉      | 219183/552076 [00:01<00:01, 178413.76it/s] 43%|████▎     | 238774/552076 [00:01<00:01, 183325.39it/s] 47%|████▋     | 257301/552076 [00:01<00:01, 154134.93it/s] 50%|█████     | 278455/552076 [00:01<00:01, 167793.50it/s] 54%|█████▍    | 297601/552076 [00:01<00:01, 174251.75it/s] 57%|█████▋    | 315794/552076 [00:01<00:01, 161082.11it/s] 61%|██████    | 336450/552076 [00:01<00:01, 172471.97it/s] 65%|██████▍   | 356907/552076 [00:01<00:01, 180990.29it/s] 68%|██████▊   | 375635/552076 [00:02<00:01, 169798.02it/s] 71%|███████   | 393196/552076 [00:02<00:00, 171475.11it/s] 75%|███████▍  | 412760/552076 [00:02<00:00, 178073.47it/s] 79%|███████▊  | 433837/552076 [00:02<00:00, 186763.55it/s] 82%|████████▏ | 454626/552076 [00:02<00:00, 192636.37it/s] 86%|████████▌ | 475168/552076 [00:02<00:00, 196301.00it/s] 90%|████████▉ | 495941/552076 [00:02<00:00, 199592.20it/s] 93%|█████████▎| 516072/552076 [00:02<00:00, 198287.60it/s] 97%|█████████▋| 537645/552076 [00:02<00:00, 203214.53it/s]100%|██████████| 552076/552076 [00:02<00:00, 186600.87it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14137/552076 [00:00<00:03, 141366.43it/s]  5%|▌         | 29308/552076 [00:00<00:03, 144317.37it/s]  8%|▊         | 44218/552076 [00:00<00:03, 145719.36it/s] 11%|█         | 59261/552076 [00:00<00:03, 147099.47it/s] 14%|█▍        | 79433/552076 [00:00<00:02, 160104.84it/s] 18%|█▊        | 101764/552076 [00:00<00:02, 174960.27it/s] 22%|██▏       | 123997/552076 [00:00<00:02, 186905.82it/s] 26%|██▋       | 146071/552076 [00:00<00:02, 195912.34it/s] 31%|███       | 168452/552076 [00:00<00:01, 203520.95it/s] 34%|███▍      | 190430/552076 [00:01<00:01, 208140.25it/s] 39%|███▊      | 212956/552076 [00:01<00:01, 212996.20it/s] 42%|████▏     | 234263/552076 [00:01<00:01, 211220.56it/s] 46%|████▋     | 255394/552076 [00:01<00:01, 179023.99it/s] 50%|████▉     | 274147/552076 [00:01<00:01, 166856.52it/s] 53%|█████▎    | 291595/552076 [00:01<00:01, 160053.77it/s] 56%|█████▌    | 308193/552076 [00:01<00:01, 155620.38it/s] 60%|█████▉    | 329062/552076 [00:01<00:01, 168472.30it/s] 63%|██████▎   | 349705/552076 [00:01<00:01, 178307.39it/s] 67%|██████▋   | 368122/552076 [00:02<00:01, 158843.60it/s] 70%|██████▉   | 385586/552076 [00:02<00:01, 163273.06it/s] 74%|███████▎  | 407045/552076 [00:02<00:00, 175890.05it/s] 77%|███████▋  | 427048/552076 [00:02<00:00, 182496.72it/s] 81%|████████  | 446847/552076 [00:02<00:00, 186882.39it/s] 84%|████████▍ | 466501/552076 [00:02<00:00, 189677.92it/s] 88%|████████▊ | 486668/552076 [00:02<00:00, 193122.07it/s] 92%|█████████▏| 508556/552076 [00:02<00:00, 200188.34it/s] 96%|█████████▌| 531240/552076 [00:02<00:00, 207499.30it/s]100%|██████████| 552076/552076 [00:02<00:00, 185662.91it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21376/552076 [00:00<00:02, 213755.11it/s]  8%|▊         | 41937/552076 [00:00<00:02, 211242.81it/s] 11%|█▏        | 62951/552076 [00:00<00:02, 210908.09it/s] 15%|█▌        | 83828/552076 [00:00<00:02, 210260.17it/s] 19%|█▊        | 102528/552076 [00:00<00:02, 200030.75it/s] 22%|██▏       | 119046/552076 [00:00<00:02, 157712.04it/s] 24%|██▍       | 133776/552076 [00:00<00:03, 129326.29it/s] 27%|██▋       | 146820/552076 [00:01<00:04, 99888.40it/s]  29%|██▉       | 159285/552076 [00:01<00:03, 106217.90it/s] 31%|███▏      | 172539/552076 [00:01<00:03, 112945.45it/s] 34%|███▎      | 185663/552076 [00:01<00:03, 117872.58it/s] 36%|███▌      | 198950/552076 [00:01<00:02, 122003.41it/s] 38%|███▊      | 211970/552076 [00:01<00:02, 124351.72it/s] 41%|████      | 224721/552076 [00:01<00:03, 100567.33it/s] 43%|████▎     | 237928/552076 [00:01<00:02, 108317.50it/s] 45%|████▌     | 251027/552076 [00:01<00:02, 114249.55it/s] 48%|████▊     | 263915/552076 [00:02<00:02, 118276.32it/s] 50%|█████     | 276251/552076 [00:02<00:02, 96680.30it/s]  52%|█████▏    | 286920/552076 [00:02<00:02, 99251.35it/s] 54%|█████▍    | 299296/552076 [00:02<00:02, 105520.28it/s] 56%|█████▋    | 311807/552076 [00:02<00:02, 110720.07it/s] 59%|█████▉    | 324376/552076 [00:02<00:01, 114821.96it/s] 61%|██████    | 337002/552076 [00:02<00:01, 118027.67it/s] 63%|██████▎   | 349597/552076 [00:02<00:01, 120295.61it/s] 66%|██████▌   | 362141/552076 [00:02<00:01, 121791.99it/s] 68%|██████▊   | 374711/552076 [00:02<00:01, 122935.58it/s] 70%|███████   | 387295/552076 [00:03<00:01, 123789.37it/s] 72%|███████▏  | 399836/552076 [00:03<00:01, 124269.50it/s] 75%|███████▍  | 412319/552076 [00:03<00:01, 124307.40it/s] 77%|███████▋  | 424789/552076 [00:03<00:01, 124119.09it/s] 79%|███████▉  | 437393/552076 [00:03<00:00, 124688.69it/s] 81%|████████▏ | 449882/552076 [00:03<00:00, 104338.23it/s] 84%|████████▍ | 463275/552076 [00:03<00:00, 111743.67it/s] 86%|████████▋ | 476393/552076 [00:03<00:00, 116939.40it/s] 89%|████████▊ | 489744/552076 [00:03<00:00, 121461.22it/s] 91%|█████████ | 502827/552076 [00:04<00:00, 124126.30it/s] 93%|█████████▎| 515505/552076 [00:04<00:00, 124837.87it/s] 96%|█████████▌| 528176/552076 [00:04<00:00, 124675.37it/s] 98%|█████████▊| 540775/552076 [00:04<00:00, 124798.51it/s]100%|██████████| 552076/552076 [00:04<00:00, 124121.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5937/552076 [00:00<00:09, 58909.93it/s]  2%|▏         | 11727/552076 [00:00<00:09, 58602.32it/s]  3%|▎         | 17537/552076 [00:00<00:09, 58449.55it/s]  5%|▌         | 28000/552076 [00:00<00:07, 67369.40it/s]  7%|▋         | 38252/552076 [00:00<00:06, 74489.20it/s]  9%|▊         | 47995/552076 [00:00<00:06, 78031.50it/s] 10%|█         | 57910/552076 [00:00<00:05, 83357.08it/s] 12%|█▏        | 67875/552076 [00:00<00:05, 87476.89it/s] 14%|█▍        | 79101/552076 [00:00<00:05, 93679.49it/s] 16%|█▌        | 88596/552076 [00:01<00:04, 93843.12it/s] 18%|█▊        | 98069/552076 [00:01<00:04, 93671.97it/s] 20%|█▉        | 108798/552076 [00:01<00:04, 96984.71it/s] 21%|██▏       | 118570/552076 [00:01<00:04, 94279.69it/s] 23%|██▎       | 128931/552076 [00:01<00:04, 96896.62it/s] 25%|██▌       | 138687/552076 [00:01<00:04, 96325.37it/s] 28%|██▊       | 152090/552076 [00:01<00:03, 105203.74it/s] 30%|██▉       | 165410/552076 [00:01<00:03, 112281.95it/s] 32%|███▏      | 178183/552076 [00:01<00:03, 116508.44it/s] 35%|███▍      | 191331/552076 [00:01<00:02, 120628.47it/s] 37%|███▋      | 204561/552076 [00:02<00:02, 123905.95it/s] 39%|███▉      | 217600/552076 [00:02<00:02, 125780.46it/s] 42%|████▏     | 230311/552076 [00:02<00:02, 120228.78it/s] 44%|████▍     | 242479/552076 [00:02<00:02, 109170.81it/s] 47%|████▋     | 256865/552076 [00:02<00:02, 117682.38it/s] 49%|████▉     | 271723/552076 [00:02<00:02, 125510.34it/s] 52%|█████▏    | 285982/552076 [00:02<00:02, 130186.68it/s] 54%|█████▍    | 299341/552076 [00:02<00:02, 108128.96it/s] 56%|█████▋    | 311017/552076 [00:03<00:02, 86898.86it/s]  58%|█████▊    | 320978/552076 [00:03<00:03, 73786.27it/s] 60%|█████▉    | 329588/552076 [00:03<00:02, 74399.03it/s] 61%|██████▏   | 338706/552076 [00:03<00:02, 78745.56it/s] 63%|██████▎   | 348194/552076 [00:03<00:02, 82751.00it/s] 65%|██████▍   | 358458/552076 [00:03<00:02, 87856.77it/s] 67%|██████▋   | 367697/552076 [00:03<00:02, 86025.21it/s] 69%|██████▉   | 380026/552076 [00:03<00:01, 94602.71it/s] 71%|███████   | 389975/552076 [00:03<00:01, 88566.40it/s] 73%|███████▎  | 400818/552076 [00:04<00:01, 93716.09it/s] 74%|███████▍  | 410565/552076 [00:04<00:01, 82646.17it/s] 76%|███████▌  | 419355/552076 [00:04<00:01, 84154.33it/s] 78%|███████▊  | 428567/552076 [00:04<00:01, 86394.80it/s] 80%|███████▉  | 441000/552076 [00:04<00:01, 95098.44it/s] 82%|████████▏ | 452999/552076 [00:04<00:00, 101409.23it/s] 84%|████████▍ | 463573/552076 [00:04<00:00, 94051.75it/s]  86%|████████▌ | 473388/552076 [00:04<00:00, 80347.08it/s] 88%|████████▊ | 483357/552076 [00:05<00:00, 85311.96it/s] 89%|████████▉ | 492416/552076 [00:05<00:00, 82180.91it/s] 91%|█████████ | 501663/552076 [00:05<00:00, 85017.81it/s] 93%|█████████▎| 511148/552076 [00:05<00:00, 87744.79it/s] 95%|█████████▍| 522973/552076 [00:05<00:00, 95104.12it/s] 97%|█████████▋| 535135/552076 [00:05<00:00, 100485.75it/s] 99%|█████████▉| 545505/552076 [00:05<00:00, 86023.03it/s] 100%|██████████| 552076/552076 [00:05<00:00, 95588.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8121/552076 [00:00<00:06, 79355.92it/s]  3%|▎         | 16886/552076 [00:00<00:06, 81674.21it/s]  5%|▍         | 25144/552076 [00:00<00:06, 81943.24it/s]  7%|▋         | 36323/552076 [00:00<00:05, 89076.71it/s]  9%|▉         | 49282/552076 [00:00<00:05, 98294.83it/s] 11%|█         | 61140/552076 [00:00<00:04, 103611.81it/s] 13%|█▎        | 72962/552076 [00:00<00:04, 107600.42it/s] 15%|█▌        | 85123/552076 [00:00<00:04, 111450.95it/s] 18%|█▊        | 97440/552076 [00:00<00:03, 114724.82it/s] 20%|█▉        | 110308/552076 [00:01<00:03, 118581.65it/s] 22%|██▏       | 122743/552076 [00:01<00:03, 120254.87it/s] 24%|██▍       | 134737/552076 [00:01<00:03, 113561.36it/s] 26%|██▋       | 146148/552076 [00:01<00:03, 103305.21it/s] 29%|██▉       | 159791/552076 [00:01<00:03, 111419.35it/s] 31%|███       | 171267/552076 [00:01<00:03, 109388.40it/s] 33%|███▎      | 182448/552076 [00:01<00:03, 105267.12it/s] 35%|███▍      | 193178/552076 [00:01<00:03, 103097.12it/s] 37%|███▋      | 203640/552076 [00:01<00:03, 97490.34it/s]  39%|███▊      | 213559/552076 [00:02<00:03, 96531.38it/s] 40%|████      | 223333/552076 [00:02<00:03, 92920.07it/s] 42%|████▏     | 232739/552076 [00:02<00:03, 92784.61it/s] 44%|████▍     | 242097/552076 [00:02<00:03, 91605.38it/s] 46%|████▌     | 251675/552076 [00:02<00:03, 92525.34it/s] 47%|████▋     | 260972/552076 [00:02<00:03, 91383.40it/s] 49%|████▉     | 270145/552076 [00:02<00:03, 90287.22it/s] 51%|█████     | 279201/552076 [00:02<00:03, 86283.33it/s] 52%|█████▏    | 287886/552076 [00:02<00:03, 69534.68it/s] 54%|█████▍    | 298728/552076 [00:03<00:03, 77918.35it/s] 56%|█████▌    | 307242/552076 [00:03<00:03, 73296.73it/s] 57%|█████▋    | 315133/552076 [00:03<00:03, 64384.29it/s] 58%|█████▊    | 322162/552076 [00:03<00:03, 59383.15it/s] 60%|█████▉    | 331150/552076 [00:03<00:03, 66112.67it/s] 61%|██████▏   | 338346/552076 [00:03<00:03, 62837.81it/s] 63%|██████▎   | 345073/552076 [00:03<00:03, 63695.22it/s] 64%|██████▎   | 351756/552076 [00:03<00:03, 55059.14it/s] 65%|██████▍   | 357882/552076 [00:04<00:03, 55895.20it/s] 67%|██████▋   | 368541/552076 [00:04<00:02, 65197.27it/s] 68%|██████▊   | 375863/552076 [00:04<00:03, 58683.66it/s] 69%|██████▉   | 382416/552076 [00:04<00:02, 56723.19it/s] 70%|███████   | 388582/552076 [00:04<00:03, 53844.60it/s] 73%|███████▎  | 400487/552076 [00:04<00:02, 64431.33it/s] 75%|███████▍  | 413692/552076 [00:04<00:01, 76125.27it/s] 77%|███████▋  | 426746/552076 [00:04<00:01, 87004.48it/s] 80%|███████▉  | 440094/552076 [00:04<00:01, 97151.86it/s] 82%|████████▏ | 452896/552076 [00:05<00:00, 104725.48it/s] 84%|████████▍ | 465723/552076 [00:05<00:00, 110826.43it/s] 87%|████████▋ | 478617/552076 [00:05<00:00, 115700.87it/s] 89%|████████▉ | 491474/552076 [00:05<00:00, 119282.68it/s] 91%|█████████▏| 504301/552076 [00:05<00:00, 121841.60it/s] 94%|█████████▎| 516938/552076 [00:05<00:00, 123163.39it/s] 96%|█████████▌| 529603/552076 [00:05<00:00, 124188.47it/s] 98%|█████████▊| 542644/552076 [00:05<00:00, 125989.38it/s]100%|██████████| 552076/552076 [00:05<00:00, 94362.97it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3162/552076 [00:00<00:17, 31617.54it/s]  3%|▎         | 15065/552076 [00:00<00:13, 40480.15it/s]  4%|▍         | 24042/552076 [00:00<00:10, 48462.54it/s]  6%|▋         | 34668/552076 [00:00<00:08, 57912.32it/s]  8%|▊         | 44323/552076 [00:00<00:07, 65813.26it/s]  9%|▉         | 52203/552076 [00:00<00:07, 65640.97it/s] 11%|█         | 59676/552076 [00:00<00:07, 64937.26it/s] 13%|█▎        | 69434/552076 [00:00<00:06, 72180.23it/s] 15%|█▍        | 81760/552076 [00:00<00:05, 82427.76it/s] 17%|█▋        | 92761/552076 [00:01<00:05, 89131.14it/s] 19%|█▊        | 102531/552076 [00:01<00:04, 90909.78it/s] 20%|██        | 112399/552076 [00:01<00:04, 93107.77it/s] 23%|██▎       | 124827/552076 [00:01<00:04, 100682.18it/s] 25%|██▍       | 137224/552076 [00:01<00:03, 106692.92it/s] 27%|██▋       | 149442/552076 [00:01<00:03, 110909.09it/s] 29%|██▉       | 160882/552076 [00:01<00:03, 106076.08it/s] 31%|███       | 171779/552076 [00:01<00:04, 89557.10it/s]  33%|███▎      | 181377/552076 [00:02<00:05, 73453.55it/s] 35%|███▍      | 191459/552076 [00:02<00:04, 79964.04it/s] 37%|███▋      | 202613/552076 [00:02<00:03, 87384.98it/s] 38%|███▊      | 212129/552076 [00:02<00:04, 76406.41it/s] 40%|███▉      | 220563/552076 [00:02<00:04, 77810.52it/s] 41%|████▏     | 228906/552076 [00:02<00:04, 78859.24it/s] 43%|████▎     | 238224/552076 [00:02<00:03, 82669.95it/s] 45%|████▍     | 246898/552076 [00:02<00:03, 83849.79it/s] 46%|████▋     | 255516/552076 [00:02<00:03, 83290.01it/s] 48%|████▊     | 264224/552076 [00:02<00:03, 84389.95it/s] 50%|████▉     | 273985/552076 [00:03<00:03, 87178.09it/s] 51%|█████     | 282809/552076 [00:03<00:03, 87269.57it/s] 53%|█████▎    | 291611/552076 [00:03<00:02, 87281.09it/s] 55%|█████▍    | 302868/552076 [00:03<00:02, 93587.63it/s] 57%|█████▋    | 312952/552076 [00:03<00:02, 95650.51it/s] 59%|█████▊    | 324190/552076 [00:03<00:02, 100120.99it/s] 61%|██████    | 334861/552076 [00:03<00:02, 102010.04it/s] 63%|██████▎   | 345171/552076 [00:03<00:02, 100383.07it/s] 64%|██████▍   | 355292/552076 [00:03<00:02, 98025.54it/s]  66%|██████▌   | 365165/552076 [00:04<00:01, 98127.89it/s] 68%|██████▊   | 375027/552076 [00:04<00:01, 96173.69it/s] 70%|██████▉   | 384688/552076 [00:04<00:01, 92574.33it/s] 71%|███████▏  | 394005/552076 [00:04<00:01, 89476.89it/s] 73%|███████▎  | 405191/552076 [00:04<00:01, 95190.35it/s] 75%|███████▌  | 416700/552076 [00:04<00:01, 100397.37it/s] 78%|███████▊  | 428956/552076 [00:04<00:01, 106154.06it/s] 80%|███████▉  | 441086/552076 [00:04<00:01, 110283.33it/s] 82%|████████▏ | 453194/552076 [00:04<00:00, 113314.10it/s] 84%|████████▍ | 466173/552076 [00:04<00:00, 117798.92it/s] 87%|████████▋ | 478351/552076 [00:05<00:00, 118963.35it/s] 89%|████████▉ | 490358/552076 [00:05<00:00, 118764.65it/s] 91%|█████████ | 502312/552076 [00:05<00:00, 112516.76it/s] 93%|█████████▎| 513687/552076 [00:05<00:00, 105758.73it/s] 95%|█████████▍| 524432/552076 [00:05<00:00, 97818.50it/s]  97%|█████████▋| 534451/552076 [00:05<00:00, 94759.97it/s] 99%|█████████▊| 544114/552076 [00:05<00:00, 91736.61it/s]100%|██████████| 552076/552076 [00:05<00:00, 95182.70it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8204/552076 [00:00<00:06, 82039.69it/s]  4%|▎         | 19932/552076 [00:00<00:05, 90167.65it/s]  6%|▌         | 32104/552076 [00:00<00:05, 97769.65it/s]  8%|▊         | 44412/552076 [00:00<00:04, 104196.51it/s] 10%|█         | 56747/552076 [00:00<00:04, 109286.40it/s] 13%|█▎        | 69154/552076 [00:00<00:04, 113336.46it/s] 15%|█▍        | 81457/552076 [00:00<00:04, 116077.62it/s] 17%|█▋        | 93357/552076 [00:00<00:03, 116936.72it/s] 19%|█▉        | 105658/552076 [00:00<00:03, 118694.57it/s] 21%|██▏       | 118081/552076 [00:01<00:03, 120301.99it/s] 24%|██▎       | 130538/552076 [00:01<00:03, 121550.04it/s] 26%|██▌       | 142590/552076 [00:01<00:03, 120968.00it/s] 28%|██▊       | 154994/552076 [00:01<00:03, 121872.00it/s] 30%|███       | 167415/552076 [00:01<00:03, 122563.27it/s] 33%|███▎      | 179888/552076 [00:01<00:03, 123202.51it/s] 35%|███▍      | 192321/552076 [00:01<00:02, 123536.53it/s] 37%|███▋      | 204792/552076 [00:01<00:02, 123885.14it/s] 39%|███▉      | 217170/552076 [00:01<00:02, 123783.45it/s] 42%|████▏     | 230149/552076 [00:01<00:02, 125524.43it/s] 44%|████▍     | 243345/552076 [00:02<00:02, 127385.96it/s] 46%|████▋     | 256091/552076 [00:02<00:03, 81879.56it/s]  49%|████▊     | 267812/552076 [00:02<00:03, 90019.51it/s] 50%|█████     | 278512/552076 [00:02<00:02, 92123.10it/s] 52%|█████▏    | 288925/552076 [00:02<00:03, 77407.64it/s] 54%|█████▍    | 297906/552076 [00:02<00:03, 72715.18it/s] 55%|█████▌    | 306104/552076 [00:02<00:03, 62444.96it/s] 57%|█████▋    | 313252/552076 [00:03<00:03, 62514.06it/s] 59%|█████▊    | 323060/552076 [00:03<00:03, 70144.53it/s] 60%|█████▉    | 331021/552076 [00:03<00:03, 71821.03it/s] 61%|██████▏   | 338736/552076 [00:03<00:03, 69639.90it/s] 64%|██████▎   | 351747/552076 [00:03<00:02, 80922.17it/s] 66%|██████▌   | 362510/552076 [00:03<00:02, 87429.27it/s] 68%|██████▊   | 374502/552076 [00:03<00:01, 95163.32it/s] 70%|███████   | 387488/552076 [00:03<00:01, 103454.49it/s] 72%|███████▏  | 398588/552076 [00:03<00:01, 90110.22it/s]  74%|███████▍  | 409319/552076 [00:04<00:01, 94660.10it/s] 76%|███████▌  | 419432/552076 [00:04<00:01, 76979.91it/s] 78%|███████▊  | 428120/552076 [00:04<00:01, 69028.89it/s] 79%|███████▉  | 435870/552076 [00:04<00:01, 69932.56it/s] 81%|████████▏ | 449296/552076 [00:04<00:01, 81671.87it/s] 84%|████████▎ | 462347/552076 [00:04<00:00, 91998.93it/s] 86%|████████▌ | 475074/552076 [00:04<00:00, 100339.88it/s] 88%|████████▊ | 488376/552076 [00:04<00:00, 108323.30it/s] 91%|█████████ | 501455/552076 [00:05<00:00, 114208.29it/s] 93%|█████████▎| 513629/552076 [00:05<00:00, 106897.66it/s] 95%|█████████▌| 524941/552076 [00:05<00:00, 90243.74it/s]  97%|█████████▋| 537993/552076 [00:05<00:00, 99449.18it/s]100%|█████████▉| 551113/552076 [00:05<00:00, 107232.65it/s]100%|██████████| 552076/552076 [00:05<00:00, 99367.76it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11367/552076 [00:00<00:04, 113664.42it/s]  4%|▎         | 20639/552076 [00:00<00:04, 106448.99it/s]  5%|▌         | 28953/552076 [00:00<00:05, 98188.89it/s]   7%|▋         | 39232/552076 [00:00<00:05, 99524.59it/s]  9%|▉         | 49823/552076 [00:00<00:04, 101355.61it/s] 11%|█         | 61563/552076 [00:00<00:04, 105688.19it/s] 13%|█▎        | 73976/552076 [00:00<00:04, 110617.42it/s] 16%|█▌        | 86153/552076 [00:00<00:04, 113740.69it/s] 18%|█▊        | 98251/552076 [00:00<00:03, 115816.79it/s] 20%|█▉        | 110345/552076 [00:01<00:03, 117305.99it/s] 22%|██▏       | 122511/552076 [00:01<00:03, 118576.26it/s] 24%|██▍       | 134198/552076 [00:01<00:03, 116449.38it/s] 26%|██▋       | 145732/552076 [00:01<00:03, 102059.82it/s] 28%|██▊       | 156183/552076 [00:01<00:03, 100604.01it/s] 30%|███       | 166419/552076 [00:01<00:04, 96394.15it/s]  32%|███▏      | 176219/552076 [00:01<00:03, 94313.96it/s] 34%|███▍      | 189062/552076 [00:01<00:03, 102479.34it/s] 37%|███▋      | 202070/552076 [00:01<00:03, 109445.92it/s] 39%|███▉      | 214946/552076 [00:01<00:02, 114602.16it/s] 41%|████▏     | 227845/552076 [00:02<00:02, 118568.84it/s] 43%|████▎     | 239946/552076 [00:02<00:02, 116013.17it/s] 46%|████▌     | 251731/552076 [00:02<00:02, 107683.02it/s] 48%|████▊     | 262747/552076 [00:02<00:02, 101453.99it/s] 49%|████▉     | 273140/552076 [00:02<00:02, 100608.48it/s] 51%|█████▏    | 283376/552076 [00:02<00:02, 97387.04it/s]  53%|█████▎    | 293260/552076 [00:02<00:02, 94116.42it/s] 55%|█████▌    | 303991/552076 [00:02<00:02, 97720.57it/s] 57%|█████▋    | 316968/552076 [00:02<00:02, 105538.55it/s] 59%|█████▉    | 327788/552076 [00:03<00:02, 89996.45it/s]  62%|██████▏   | 341341/552076 [00:03<00:02, 100083.60it/s] 64%|██████▍   | 352115/552076 [00:03<00:02, 92093.43it/s]  66%|██████▌   | 361986/552076 [00:03<00:02, 80604.03it/s] 67%|██████▋   | 370769/552076 [00:03<00:02, 82413.38it/s] 69%|██████▉   | 380453/552076 [00:03<00:02, 85573.58it/s] 71%|███████   | 391010/552076 [00:03<00:01, 90727.87it/s] 73%|███████▎  | 400442/552076 [00:03<00:01, 90346.37it/s] 74%|███████▍  | 409729/552076 [00:04<00:01, 84766.61it/s] 76%|███████▌  | 418452/552076 [00:04<00:01, 69529.13it/s] 78%|███████▊  | 428983/552076 [00:04<00:01, 77419.54it/s] 79%|███████▉  | 437917/552076 [00:04<00:01, 80646.82it/s] 81%|████████  | 446521/552076 [00:04<00:01, 81996.02it/s] 83%|████████▎ | 458954/552076 [00:04<00:01, 91324.20it/s] 85%|████████▌ | 471432/552076 [00:04<00:00, 99311.00it/s] 88%|████████▊ | 483924/552076 [00:04<00:00, 105817.84it/s] 90%|████████▉ | 496372/552076 [00:04<00:00, 110800.59it/s] 92%|█████████▏| 508948/552076 [00:05<00:00, 114899.13it/s] 94%|█████████▍| 521447/552076 [00:05<00:00, 117747.13it/s] 97%|█████████▋| 533816/552076 [00:05<00:00, 119468.69it/s] 99%|█████████▉| 545956/552076 [00:05<00:00, 114997.02it/s]100%|██████████| 552076/552076 [00:05<00:00, 101267.49it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9882/552076 [00:00<00:05, 98044.49it/s]  4%|▎         | 19604/552076 [00:00<00:05, 94136.90it/s]  6%|▌         | 32722/552076 [00:00<00:05, 102848.47it/s]  8%|▊         | 43600/552076 [00:00<00:04, 104557.18it/s]  9%|▉         | 52176/552076 [00:00<00:05, 98105.83it/s]  11%|█         | 60554/552076 [00:00<00:08, 59296.67it/s] 12%|█▏        | 67344/552076 [00:00<00:07, 61409.37it/s] 13%|█▎        | 74446/552076 [00:00<00:07, 64007.20it/s] 15%|█▍        | 81528/552076 [00:01<00:07, 65908.11it/s] 16%|█▌        | 88458/552076 [00:01<00:07, 61408.84it/s] 17%|█▋        | 96371/552076 [00:01<00:06, 65830.86it/s] 19%|█▊        | 103253/552076 [00:01<00:06, 66681.97it/s] 20%|█▉        | 110133/552076 [00:01<00:07, 59445.04it/s] 21%|██        | 116687/552076 [00:01<00:07, 61150.49it/s] 22%|██▏       | 123021/552076 [00:01<00:06, 61493.47it/s] 23%|██▎       | 129590/552076 [00:01<00:06, 62694.07it/s] 25%|██▍       | 136327/552076 [00:01<00:06, 64024.69it/s] 26%|██▌       | 143114/552076 [00:02<00:06, 65130.91it/s] 27%|██▋       | 149743/552076 [00:02<00:06, 65472.53it/s] 28%|██▊       | 156337/552076 [00:02<00:06, 64724.79it/s] 30%|██▉       | 162966/552076 [00:02<00:05, 65186.24it/s] 31%|███       | 169729/552076 [00:02<00:05, 65898.02it/s] 32%|███▏      | 176447/552076 [00:02<00:05, 66276.34it/s] 33%|███▎      | 183175/552076 [00:02<00:05, 66574.16it/s] 34%|███▍      | 189847/552076 [00:02<00:05, 65541.26it/s] 36%|███▌      | 196412/552076 [00:02<00:05, 61937.08it/s] 37%|███▋      | 202750/552076 [00:02<00:05, 62362.07it/s] 38%|███▊      | 209466/552076 [00:03<00:05, 63725.79it/s] 39%|███▉      | 215871/552076 [00:03<00:06, 55513.57it/s] 40%|████      | 221635/552076 [00:03<00:06, 54518.47it/s] 41%|████      | 227240/552076 [00:03<00:06, 52510.23it/s] 42%|████▏     | 232614/552076 [00:03<00:06, 50292.73it/s] 43%|████▎     | 239337/552076 [00:03<00:05, 54403.23it/s] 45%|████▍     | 245933/552076 [00:03<00:05, 57419.43it/s] 46%|████▌     | 251840/552076 [00:03<00:06, 48619.62it/s] 47%|████▋     | 257096/552076 [00:04<00:05, 49502.90it/s] 48%|████▊     | 263100/552076 [00:04<00:05, 52252.23it/s] 49%|████▉     | 269864/552076 [00:04<00:05, 56077.93it/s] 50%|████▉     | 275701/552076 [00:04<00:06, 45984.18it/s] 51%|█████     | 282424/552076 [00:04<00:05, 50799.36it/s] 52%|█████▏    | 287981/552076 [00:04<00:05, 49678.10it/s] 53%|█████▎    | 293288/552076 [00:04<00:06, 38929.94it/s] 54%|█████▍    | 300030/552076 [00:04<00:05, 44581.22it/s] 56%|█████▌    | 306788/552076 [00:05<00:04, 49649.17it/s] 57%|█████▋    | 312432/552076 [00:05<00:04, 51303.87it/s] 58%|█████▊    | 318433/552076 [00:05<00:04, 53636.87it/s] 59%|█████▉    | 324463/552076 [00:05<00:04, 55474.81it/s] 60%|█████▉    | 330286/552076 [00:05<00:04, 46282.34it/s] 61%|██████    | 335364/552076 [00:05<00:04, 46161.10it/s] 62%|██████▏   | 340295/552076 [00:05<00:04, 45026.39it/s] 62%|██████▏   | 345024/552076 [00:05<00:05, 37606.57it/s] 63%|██████▎   | 349206/552076 [00:06<00:05, 37961.52it/s] 64%|██████▍   | 353461/552076 [00:06<00:05, 37173.66it/s] 65%|██████▍   | 358077/552076 [00:06<00:04, 39478.72it/s] 67%|██████▋   | 367789/552076 [00:06<00:03, 48030.14it/s] 69%|██████▊   | 379492/552076 [00:06<00:02, 58349.59it/s] 71%|███████   | 390630/552076 [00:06<00:02, 68072.80it/s] 73%|███████▎  | 402797/552076 [00:06<00:01, 78437.75it/s] 75%|███████▍  | 412618/552076 [00:06<00:01, 83479.01it/s] 77%|███████▋  | 425054/552076 [00:06<00:01, 92612.05it/s] 79%|███████▉  | 437542/552076 [00:06<00:01, 100394.11it/s] 81%|████████▏ | 449919/552076 [00:07<00:00, 106423.24it/s] 84%|████████▎ | 462204/552076 [00:07<00:00, 110868.54it/s] 86%|████████▌ | 474612/552076 [00:07<00:00, 114526.62it/s] 88%|████████▊ | 486999/552076 [00:07<00:00, 117175.47it/s] 90%|█████████ | 499267/552076 [00:07<00:00, 118773.13it/s] 93%|█████████▎| 512115/552076 [00:07<00:00, 121526.66it/s] 95%|█████████▍| 524461/552076 [00:07<00:00, 121927.38it/s] 97%|█████████▋| 536812/552076 [00:07<00:00, 122395.67it/s] 99%|█████████▉| 549220/552076 [00:07<00:00, 122893.75it/s]100%|██████████| 552076/552076 [00:07<00:00, 70008.84it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7001/552076 [00:00<00:07, 70004.89it/s]  3%|▎         | 16490/552076 [00:00<00:07, 75981.74it/s]  5%|▌         | 29583/552076 [00:00<00:06, 86924.96it/s]  8%|▊         | 42250/552076 [00:00<00:05, 95956.78it/s] 10%|▉         | 54738/552076 [00:00<00:04, 101863.99it/s] 12%|█▏        | 64372/552076 [00:00<00:05, 96923.29it/s]  13%|█▎        | 73728/552076 [00:00<00:05, 95031.78it/s] 15%|█▌        | 84177/552076 [00:00<00:04, 97684.08it/s] 18%|█▊        | 97425/552076 [00:00<00:04, 106038.16it/s] 20%|█▉        | 108139/552076 [00:01<00:04, 102872.85it/s] 22%|██▏       | 120732/552076 [00:01<00:03, 108850.13it/s] 24%|██▍       | 133206/552076 [00:01<00:03, 113174.95it/s] 26%|██▋       | 145682/552076 [00:01<00:03, 116417.49it/s] 29%|██▊       | 158033/552076 [00:01<00:03, 118456.70it/s] 31%|███       | 169981/552076 [00:01<00:03, 118475.07it/s] 33%|███▎      | 181901/552076 [00:01<00:03, 115742.80it/s] 35%|███▌      | 194889/552076 [00:01<00:02, 119647.56it/s] 37%|███▋      | 206932/552076 [00:01<00:03, 109111.15it/s] 40%|███▉      | 218354/552076 [00:01<00:03, 110592.90it/s] 42%|████▏     | 229583/552076 [00:02<00:03, 105526.05it/s] 44%|████▎     | 240303/552076 [00:02<00:02, 105208.84it/s] 45%|████▌     | 250942/552076 [00:02<00:03, 87173.45it/s]  47%|████▋     | 260257/552076 [00:02<00:03, 78632.85it/s] 49%|████▉     | 272578/552076 [00:02<00:03, 88205.52it/s] 51%|█████     | 282243/552076 [00:02<00:02, 90578.87it/s] 53%|█████▎    | 291866/552076 [00:02<00:03, 86475.66it/s] 55%|█████▌    | 304653/552076 [00:02<00:02, 95775.96it/s] 57%|█████▋    | 317331/552076 [00:03<00:02, 103357.70it/s] 59%|█████▉    | 328270/552076 [00:03<00:02, 99446.10it/s]  62%|██████▏   | 340687/552076 [00:03<00:01, 105762.34it/s] 64%|██████▍   | 352608/552076 [00:03<00:01, 109466.44it/s] 66%|██████▌   | 364485/552076 [00:03<00:01, 112100.21it/s] 68%|██████▊   | 375944/552076 [00:03<00:01, 110324.48it/s] 70%|███████   | 387157/552076 [00:03<00:01, 104090.45it/s] 72%|███████▏  | 398377/552076 [00:03<00:01, 106247.78it/s] 74%|███████▍  | 410631/552076 [00:03<00:01, 110661.40it/s] 77%|███████▋  | 423045/552076 [00:03<00:01, 114385.91it/s] 79%|███████▉  | 435455/552076 [00:04<00:00, 117134.27it/s] 81%|████████  | 448029/552076 [00:04<00:00, 119587.14it/s] 83%|████████▎ | 460574/552076 [00:04<00:00, 121285.08it/s] 86%|████████▌ | 473089/552076 [00:04<00:00, 122418.43it/s] 88%|████████▊ | 485383/552076 [00:04<00:00, 117976.30it/s] 90%|█████████ | 498154/552076 [00:04<00:00, 120734.39it/s] 93%|█████████▎| 510687/552076 [00:04<00:00, 122077.24it/s] 95%|█████████▍| 523218/552076 [00:04<00:00, 123027.73it/s] 97%|█████████▋| 535654/552076 [00:04<00:00, 123423.91it/s] 99%|█████████▉| 548023/552076 [00:04<00:00, 122687.20it/s]100%|██████████| 552076/552076 [00:05<00:00, 109749.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11664/552076 [00:00<00:04, 116637.05it/s]  5%|▍         | 24856/552076 [00:00<00:04, 120834.63it/s]  7%|▋         | 37541/552076 [00:00<00:04, 122577.66it/s]  9%|▉         | 50712/552076 [00:00<00:04, 125179.90it/s] 12%|█▏        | 64212/552076 [00:00<00:03, 127970.87it/s] 14%|█▍        | 77536/552076 [00:00<00:03, 129506.01it/s] 16%|█▋        | 90775/552076 [00:00<00:03, 130355.76it/s] 19%|█▉        | 103803/552076 [00:00<00:03, 130330.45it/s] 21%|██▏       | 117355/552076 [00:00<00:03, 131843.85it/s] 24%|██▎       | 130663/552076 [00:01<00:03, 132210.25it/s] 26%|██▌       | 143787/552076 [00:01<00:03, 131915.24it/s] 28%|██▊       | 156757/552076 [00:01<00:03, 101930.77it/s] 31%|███       | 168452/552076 [00:01<00:03, 106014.94it/s] 33%|███▎      | 181741/552076 [00:01<00:03, 112861.02it/s] 35%|███▌      | 195268/552076 [00:01<00:03, 118762.43it/s] 38%|███▊      | 208768/552076 [00:01<00:02, 123207.76it/s] 40%|████      | 222125/552076 [00:01<00:02, 126142.35it/s] 43%|████▎     | 235435/552076 [00:01<00:02, 128150.76it/s] 45%|████▌     | 248985/552076 [00:01<00:02, 130267.70it/s] 47%|████▋     | 262169/552076 [00:02<00:02, 130733.90it/s] 50%|████▉     | 275352/552076 [00:02<00:02, 130893.68it/s] 52%|█████▏    | 288862/552076 [00:02<00:01, 132127.02it/s] 55%|█████▍    | 302131/552076 [00:02<00:01, 132120.96it/s] 57%|█████▋    | 315383/552076 [00:02<00:01, 127874.20it/s] 59%|█████▉    | 328228/552076 [00:02<00:02, 107576.49it/s] 62%|██████▏   | 339575/552076 [00:02<00:02, 95613.26it/s]  63%|██████▎   | 349795/552076 [00:02<00:02, 80605.53it/s] 65%|██████▍   | 358719/552076 [00:03<00:02, 82046.82it/s] 67%|██████▋   | 371481/552076 [00:03<00:01, 91890.44it/s] 70%|██████▉   | 384118/552076 [00:03<00:01, 100081.47it/s] 72%|███████▏  | 396794/552076 [00:03<00:01, 106826.40it/s] 74%|███████▍  | 409581/552076 [00:03<00:01, 112374.26it/s] 76%|███████▋  | 421367/552076 [00:03<00:01, 111521.52it/s] 78%|███████▊  | 432905/552076 [00:03<00:01, 110342.56it/s] 80%|████████  | 444212/552076 [00:03<00:01, 97191.63it/s]  82%|████████▏ | 454967/552076 [00:03<00:00, 100082.76it/s] 84%|████████▍ | 465331/552076 [00:04<00:01, 83171.79it/s]  86%|████████▌ | 474376/552076 [00:04<00:00, 83158.67it/s] 88%|████████▊ | 483201/552076 [00:04<00:00, 70172.78it/s] 89%|████████▉ | 493563/552076 [00:04<00:00, 77695.56it/s] 92%|█████████▏| 506457/552076 [00:04<00:00, 88211.58it/s] 94%|█████████▍| 519342/552076 [00:04<00:00, 97429.47it/s] 96%|█████████▋| 532257/552076 [00:04<00:00, 105177.65it/s] 99%|█████████▉| 545216/552076 [00:04<00:00, 111477.30it/s]100%|██████████| 552076/552076 [00:04<00:00, 110916.51it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6298/552076 [00:00<00:08, 62978.41it/s]  3%|▎         | 17574/552076 [00:00<00:07, 72592.38it/s]  6%|▌         | 30984/552076 [00:00<00:06, 84174.61it/s]  8%|▊         | 44375/552076 [00:00<00:05, 94728.37it/s] 10%|█         | 57634/552076 [00:00<00:04, 103602.63it/s] 13%|█▎        | 71016/552076 [00:00<00:04, 111129.61it/s] 15%|█▌        | 83712/552076 [00:00<00:04, 115446.26it/s] 17%|█▋        | 96097/552076 [00:00<00:03, 117845.02it/s] 20%|█▉        | 108644/552076 [00:00<00:03, 120031.54it/s] 22%|██▏       | 120743/552076 [00:01<00:03, 115334.93it/s] 24%|██▍       | 132383/552076 [00:01<00:03, 111559.62it/s] 26%|██▌       | 144783/552076 [00:01<00:03, 115019.93it/s] 28%|██▊       | 157179/552076 [00:01<00:03, 117561.99it/s] 31%|███       | 169627/552076 [00:01<00:03, 119553.10it/s] 33%|███▎      | 181974/552076 [00:01<00:03, 120700.68it/s] 35%|███▌      | 194783/552076 [00:01<00:02, 122826.25it/s] 38%|███▊      | 207109/552076 [00:01<00:02, 122182.83it/s] 40%|███▉      | 219359/552076 [00:01<00:02, 118768.90it/s] 42%|████▏     | 231279/552076 [00:01<00:02, 108154.08it/s] 44%|████▍     | 242345/552076 [00:02<00:02, 108892.51it/s] 46%|████▌     | 253385/552076 [00:02<00:02, 107556.56it/s] 48%|████▊     | 264250/552076 [00:02<00:02, 106715.15it/s] 50%|█████     | 276675/552076 [00:02<00:02, 111431.99it/s] 52%|█████▏    | 289156/552076 [00:02<00:02, 115134.14it/s] 55%|█████▍    | 301594/552076 [00:02<00:02, 117758.23it/s] 57%|█████▋    | 314753/552076 [00:02<00:01, 121591.73it/s] 59%|█████▉    | 327007/552076 [00:02<00:01, 118872.48it/s] 61%|██████▏   | 338974/552076 [00:02<00:02, 97881.15it/s]  63%|██████▎   | 349431/552076 [00:03<00:02, 86376.60it/s] 65%|██████▍   | 358785/552076 [00:03<00:02, 80545.82it/s] 67%|██████▋   | 367420/552076 [00:03<00:02, 81049.24it/s] 68%|██████▊   | 375932/552076 [00:03<00:02, 76295.32it/s] 70%|██████▉   | 383994/552076 [00:03<00:02, 77542.54it/s] 71%|███████   | 391993/552076 [00:03<00:02, 75847.79it/s] 72%|███████▏  | 399758/552076 [00:03<00:02, 74700.06it/s] 74%|███████▍  | 407358/552076 [00:03<00:02, 68363.83it/s] 75%|███████▌  | 414390/552076 [00:04<00:02, 56317.74it/s] 76%|███████▌  | 420510/552076 [00:04<00:02, 57322.99it/s] 78%|███████▊  | 428881/552076 [00:04<00:01, 62985.42it/s] 80%|███████▉  | 439305/552076 [00:04<00:01, 70698.40it/s] 81%|████████▏ | 449202/552076 [00:04<00:01, 76620.53it/s] 83%|████████▎ | 458850/552076 [00:04<00:01, 81662.75it/s] 85%|████████▍ | 468358/552076 [00:04<00:00, 85271.33it/s] 86%|████████▋ | 477266/552076 [00:04<00:00, 81400.96it/s] 88%|████████▊ | 485710/552076 [00:04<00:00, 71171.69it/s] 89%|████████▉ | 493272/552076 [00:05<00:00, 60331.01it/s] 91%|█████████ | 500835/552076 [00:05<00:00, 63043.31it/s] 92%|█████████▏| 509798/552076 [00:05<00:00, 68769.56it/s] 94%|█████████▍| 520682/552076 [00:05<00:00, 77307.21it/s] 97%|█████████▋| 533335/552076 [00:05<00:00, 87521.36it/s] 99%|█████████▉| 546519/552076 [00:05<00:00, 97337.41it/s]100%|██████████| 552076/552076 [00:05<00:00, 96172.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12129/552076 [00:00<00:04, 121286.93it/s]  3%|▎         | 18200/552076 [00:00<00:05, 91962.28it/s]   5%|▍         | 25084/552076 [00:00<00:06, 83543.11it/s]  6%|▌         | 32484/552076 [00:00<00:06, 80430.01it/s]  8%|▊         | 41954/552076 [00:00<00:06, 84237.87it/s]  9%|▉         | 49144/552076 [00:00<00:06, 79846.69it/s] 10%|█         | 56100/552076 [00:00<00:07, 69513.17it/s] 11%|█▏        | 62571/552076 [00:00<00:09, 53326.99it/s] 12%|█▏        | 68137/552076 [00:01<00:10, 47854.33it/s] 13%|█▎        | 73192/552076 [00:01<00:11, 42159.79it/s] 14%|█▍        | 77721/552076 [00:01<00:11, 39648.36it/s] 15%|█▍        | 81935/552076 [00:01<00:12, 38084.84it/s] 16%|█▌        | 85932/552076 [00:01<00:12, 38626.31it/s] 16%|█▋        | 89928/552076 [00:01<00:12, 37731.33it/s] 17%|█▋        | 93799/552076 [00:01<00:12, 37829.38it/s] 18%|█▊        | 97651/552076 [00:01<00:12, 37344.47it/s] 19%|█▉        | 103767/552076 [00:01<00:10, 42283.46it/s] 20%|█▉        | 108922/552076 [00:02<00:09, 44693.61it/s] 21%|██        | 113963/552076 [00:02<00:09, 46211.25it/s] 22%|██▏       | 120386/552076 [00:02<00:08, 50456.90it/s] 23%|██▎       | 126274/552076 [00:02<00:08, 52062.55it/s] 24%|██▍       | 132973/552076 [00:02<00:07, 54356.48it/s] 25%|██▌       | 139372/552076 [00:02<00:07, 56193.32it/s] 26%|██▋       | 145724/552076 [00:02<00:06, 58207.13it/s] 27%|██▋       | 151647/552076 [00:02<00:06, 58128.56it/s] 29%|██▊       | 157532/552076 [00:02<00:07, 54566.34it/s] 30%|██▉       | 163238/552076 [00:03<00:07, 55207.01it/s] 31%|███       | 169504/552076 [00:03<00:06, 57248.75it/s] 32%|███▏      | 175296/552076 [00:03<00:06, 57314.20it/s] 33%|███▎      | 181521/552076 [00:03<00:06, 58709.54it/s] 34%|███▍      | 187434/552076 [00:03<00:06, 58631.73it/s] 35%|███▌      | 193657/552076 [00:03<00:06, 59666.35it/s] 36%|███▌      | 199649/552076 [00:03<00:05, 59425.33it/s] 37%|███▋      | 205822/552076 [00:03<00:05, 60097.89it/s] 38%|███▊      | 211846/552076 [00:03<00:05, 59651.77it/s] 40%|███▉      | 218389/552076 [00:03<00:05, 61274.23it/s] 41%|████      | 224535/552076 [00:04<00:05, 60027.95it/s] 42%|████▏     | 230914/552076 [00:04<00:05, 61108.48it/s] 43%|████▎     | 237043/552076 [00:04<00:05, 59943.02it/s] 44%|████▍     | 243219/552076 [00:04<00:05, 59800.38it/s] 45%|████▌     | 249403/552076 [00:04<00:05, 60110.12it/s] 46%|████▋     | 255423/552076 [00:04<00:04, 60067.80it/s] 47%|████▋     | 261771/552076 [00:04<00:04, 61051.28it/s] 49%|████▊     | 267885/552076 [00:04<00:04, 60807.25it/s] 50%|████▉     | 273972/552076 [00:04<00:04, 57988.39it/s] 51%|█████     | 279803/552076 [00:04<00:04, 57143.85it/s] 52%|█████▏    | 285753/552076 [00:05<00:04, 57829.64it/s] 53%|█████▎    | 291668/552076 [00:05<00:04, 58069.62it/s] 54%|█████▍    | 297906/552076 [00:05<00:04, 59298.23it/s] 55%|█████▌    | 303852/552076 [00:05<00:04, 59176.14it/s] 56%|█████▌    | 310167/552076 [00:05<00:04, 60314.18it/s] 57%|█████▋    | 316212/552076 [00:05<00:03, 60182.23it/s] 58%|█████▊    | 322240/552076 [00:05<00:03, 60187.98it/s] 60%|█████▉    | 328607/552076 [00:05<00:03, 61191.28it/s] 61%|██████    | 334735/552076 [00:05<00:03, 60776.62it/s] 62%|██████▏   | 341170/552076 [00:05<00:03, 61805.68it/s] 63%|██████▎   | 347360/552076 [00:06<00:03, 61392.82it/s] 64%|██████▍   | 353507/552076 [00:06<00:03, 57183.32it/s] 65%|██████▌   | 359289/552076 [00:06<00:04, 44023.65it/s] 66%|██████▌   | 365689/552076 [00:06<00:03, 47923.63it/s] 67%|██████▋   | 370936/552076 [00:06<00:04, 44531.40it/s] 68%|██████▊   | 376888/552076 [00:06<00:03, 48170.26it/s] 69%|██████▉   | 382512/552076 [00:06<00:03, 48417.09it/s] 70%|███████   | 388257/552076 [00:06<00:03, 50813.32it/s] 71%|███████▏  | 394697/552076 [00:07<00:02, 53162.85it/s] 73%|███████▎  | 401487/552076 [00:07<00:02, 55326.78it/s] 74%|███████▍  | 407590/552076 [00:07<00:02, 56921.63it/s] 75%|███████▍  | 413973/552076 [00:07<00:02, 58831.32it/s] 76%|███████▌  | 420018/552076 [00:07<00:02, 59307.10it/s] 77%|███████▋  | 426015/552076 [00:07<00:02, 59470.89it/s] 78%|███████▊  | 432009/552076 [00:07<00:02, 59185.61it/s] 79%|███████▉  | 437961/552076 [00:07<00:02, 51735.10it/s] 80%|████████  | 444394/552076 [00:07<00:01, 54962.66it/s] 82%|████████▏ | 450080/552076 [00:08<00:02, 45809.61it/s] 83%|████████▎ | 456682/552076 [00:08<00:01, 50442.08it/s] 84%|████████▍ | 462797/552076 [00:08<00:01, 52596.16it/s] 85%|████████▍ | 468372/552076 [00:08<00:01, 47486.70it/s] 86%|████████▌ | 474888/552076 [00:08<00:01, 51692.43it/s] 87%|████████▋ | 480431/552076 [00:08<00:01, 51638.62it/s] 88%|████████▊ | 485826/552076 [00:08<00:01, 49085.78it/s] 89%|████████▉ | 490923/552076 [00:08<00:01, 47210.99it/s] 90%|████████▉ | 495792/552076 [00:09<00:01, 45710.53it/s] 91%|█████████ | 500477/552076 [00:09<00:01, 44810.93it/s] 92%|█████████▏| 506353/552076 [00:09<00:00, 48246.16it/s] 93%|█████████▎| 511311/552076 [00:09<00:00, 48289.89it/s] 94%|█████████▎| 517034/552076 [00:09<00:00, 50663.63it/s] 95%|█████████▍| 522197/552076 [00:09<00:00, 48117.67it/s] 96%|█████████▌| 527598/552076 [00:09<00:00, 49367.35it/s] 97%|█████████▋| 534145/552076 [00:09<00:00, 53300.16it/s] 98%|█████████▊| 539617/552076 [00:09<00:00, 50509.52it/s] 99%|█████████▊| 544798/552076 [00:10<00:00, 47785.55it/s]100%|█████████▉| 549698/552076 [00:10<00:00, 45690.79it/s]100%|██████████| 552076/552076 [00:10<00:00, 54168.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4702/552076 [00:00<00:13, 41723.51it/s]  2%|▏         | 9077/552076 [00:00<00:12, 42070.72it/s]  3%|▎         | 14133/552076 [00:00<00:12, 44196.38it/s]  4%|▎         | 20394/552076 [00:00<00:10, 48472.78it/s]  5%|▍         | 26816/552076 [00:00<00:10, 52321.39it/s]  6%|▌         | 33303/552076 [00:00<00:09, 55544.14it/s]  7%|▋         | 39329/552076 [00:00<00:09, 56221.34it/s]  8%|▊         | 45917/552076 [00:00<00:08, 58806.10it/s]  9%|▉         | 52109/552076 [00:00<00:08, 58930.84it/s] 11%|█         | 58606/552076 [00:01<00:08, 60621.25it/s] 12%|█▏        | 64847/552076 [00:01<00:08, 60440.50it/s] 13%|█▎        | 70860/552076 [00:01<00:08, 53531.69it/s] 14%|█▍        | 76337/552076 [00:01<00:10, 47160.72it/s] 15%|█▍        | 81278/552076 [00:01<00:10, 42903.50it/s] 16%|█▌        | 85800/552076 [00:01<00:12, 38372.95it/s] 16%|█▋        | 89889/552076 [00:01<00:13, 35184.36it/s] 17%|█▋        | 93734/552076 [00:01<00:13, 35117.86it/s] 18%|█▊        | 97406/552076 [00:02<00:14, 30405.12it/s] 18%|█▊        | 100671/552076 [00:02<00:15, 29372.02it/s] 19%|█▉        | 103773/552076 [00:02<00:16, 27838.39it/s] 19%|█▉        | 106689/552076 [00:02<00:15, 27946.35it/s] 20%|█▉        | 109576/552076 [00:02<00:16, 26703.48it/s] 20%|██        | 112529/552076 [00:02<00:16, 25940.39it/s] 21%|██        | 116073/552076 [00:02<00:15, 28208.53it/s] 22%|██▏       | 118993/552076 [00:02<00:15, 28277.08it/s] 22%|██▏       | 121890/552076 [00:03<00:15, 27532.33it/s] 23%|██▎       | 124856/552076 [00:03<00:15, 27700.25it/s] 23%|██▎       | 127695/552076 [00:03<00:15, 27338.79it/s] 24%|██▍       | 131323/552076 [00:03<00:14, 29521.03it/s] 24%|██▍       | 134345/552076 [00:03<00:14, 28154.81it/s] 25%|██▍       | 137223/552076 [00:03<00:15, 27533.40it/s] 25%|██▌       | 140556/552076 [00:03<00:14, 28941.84it/s] 26%|██▌       | 143794/552076 [00:03<00:13, 29893.85it/s] 27%|██▋       | 147320/552076 [00:03<00:12, 31213.51it/s] 27%|██▋       | 150741/552076 [00:03<00:12, 31230.09it/s] 28%|██▊       | 154233/552076 [00:04<00:12, 32251.64it/s] 29%|██▊       | 158048/552076 [00:04<00:11, 32976.33it/s] 29%|██▉       | 161372/552076 [00:04<00:12, 30931.16it/s] 30%|██▉       | 164509/552076 [00:04<00:13, 29640.45it/s] 30%|███       | 168087/552076 [00:04<00:12, 30218.66it/s] 31%|███       | 171427/552076 [00:04<00:12, 31107.50it/s] 32%|███▏      | 174863/552076 [00:04<00:11, 32016.12it/s] 32%|███▏      | 178183/552076 [00:04<00:11, 32361.83it/s] 33%|███▎      | 181442/552076 [00:04<00:11, 32248.58it/s] 34%|███▎      | 185066/552076 [00:05<00:11, 32361.12it/s] 34%|███▍      | 188451/552076 [00:05<00:11, 32754.29it/s] 35%|███▍      | 191939/552076 [00:05<00:10, 33364.14it/s] 35%|███▌      | 195314/552076 [00:05<00:10, 33095.45it/s] 36%|███▌      | 198793/552076 [00:05<00:10, 33398.12it/s] 38%|███▊      | 207060/552076 [00:05<00:08, 40669.68it/s] 38%|███▊      | 211882/552076 [00:05<00:09, 37251.47it/s] 40%|███▉      | 220699/552076 [00:05<00:07, 45057.73it/s] 41%|████▏     | 228611/552076 [00:05<00:06, 51613.24it/s] 43%|████▎     | 234919/552076 [00:06<00:05, 53841.43it/s] 45%|████▍     | 247178/552076 [00:06<00:04, 64731.50it/s] 47%|████▋     | 259099/552076 [00:06<00:03, 75015.69it/s] 49%|████▉     | 271423/552076 [00:06<00:03, 84992.99it/s] 51%|█████▏    | 283602/552076 [00:06<00:02, 93463.20it/s] 54%|█████▎    | 295361/552076 [00:06<00:02, 99591.84it/s] 56%|█████▌    | 307671/552076 [00:06<00:02, 105642.12it/s] 58%|█████▊    | 319820/552076 [00:06<00:02, 109943.35it/s] 60%|██████    | 331464/552076 [00:06<00:02, 106626.91it/s] 62%|██████▏   | 343476/552076 [00:06<00:01, 110343.01it/s] 64%|██████▍   | 354877/552076 [00:07<00:01, 106802.75it/s] 66%|██████▋   | 366554/552076 [00:07<00:01, 109607.98it/s] 69%|██████▊   | 378191/552076 [00:07<00:01, 111551.41it/s] 71%|███████   | 390341/552076 [00:07<00:01, 114360.18it/s] 73%|███████▎  | 402821/552076 [00:07<00:01, 117301.99it/s] 75%|███████▌  | 414925/552076 [00:07<00:01, 118398.71it/s] 77%|███████▋  | 426844/552076 [00:07<00:01, 118305.45it/s] 80%|███████▉  | 439313/552076 [00:07<00:00, 120149.06it/s] 82%|████████▏ | 451374/552076 [00:07<00:01, 90781.87it/s]  84%|████████▎ | 461551/552076 [00:08<00:00, 92505.99it/s] 86%|████████▌ | 473936/552076 [00:08<00:00, 100106.22it/s] 88%|████████▊ | 486423/552076 [00:08<00:00, 106437.39it/s] 90%|█████████ | 498747/552076 [00:08<00:00, 110976.10it/s] 92%|█████████▏| 510327/552076 [00:08<00:00, 109778.68it/s] 94%|█████████▍| 521645/552076 [00:08<00:00, 88203.69it/s]  96%|█████████▋| 531382/552076 [00:08<00:00, 77850.88it/s] 99%|█████████▊| 543805/552076 [00:08<00:00, 87668.98it/s]100%|██████████| 552076/552076 [00:08<00:00, 61482.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10489/552076 [00:00<00:05, 104889.10it/s]  4%|▍         | 22725/552076 [00:00<00:04, 109582.19it/s]  6%|▋         | 34975/552076 [00:00<00:04, 113161.78it/s]  9%|▊         | 47239/552076 [00:00<00:04, 115846.93it/s] 11%|█         | 59553/552076 [00:00<00:04, 117940.52it/s] 13%|█▎        | 71923/552076 [00:00<00:04, 119609.80it/s] 15%|█▌        | 84384/552076 [00:00<00:03, 121066.65it/s] 17%|█▋        | 96088/552076 [00:00<00:03, 119827.35it/s] 20%|█▉        | 108512/552076 [00:00<00:03, 121116.14it/s] 22%|██▏       | 120926/552076 [00:01<00:03, 122006.89it/s] 24%|██▍       | 133371/552076 [00:01<00:03, 122728.69it/s] 26%|██▋       | 145881/552076 [00:01<00:03, 123430.01it/s] 29%|██▊       | 158431/552076 [00:01<00:03, 124042.79it/s] 31%|███       | 170950/552076 [00:01<00:03, 124381.77it/s] 33%|███▎      | 183323/552076 [00:01<00:03, 122300.35it/s] 35%|███▌      | 195714/552076 [00:01<00:02, 122776.09it/s] 38%|███▊      | 208056/552076 [00:01<00:02, 122967.28it/s] 40%|███▉      | 220520/552076 [00:01<00:02, 123462.03it/s] 42%|████▏     | 232854/552076 [00:01<00:02, 121160.46it/s] 44%|████▍     | 245301/552076 [00:02<00:02, 122131.90it/s] 47%|████▋     | 257817/552076 [00:02<00:02, 123023.83it/s] 49%|████▉     | 270305/552076 [00:02<00:02, 123572.80it/s] 51%|█████     | 282741/552076 [00:02<00:02, 123807.50it/s] 53%|█████▎    | 295171/552076 [00:02<00:02, 123954.79it/s] 56%|█████▌    | 307618/552076 [00:02<00:01, 124108.50it/s] 58%|█████▊    | 320134/552076 [00:02<00:01, 124420.80it/s] 60%|██████    | 332624/552076 [00:02<00:01, 124564.12it/s] 63%|██████▎   | 345082/552076 [00:02<00:01, 124058.04it/s] 65%|██████▍   | 357528/552076 [00:02<00:01, 124177.15it/s] 67%|██████▋   | 369947/552076 [00:03<00:01, 124122.89it/s] 69%|██████▉   | 382360/552076 [00:03<00:01, 112450.28it/s] 71%|███████▏  | 393816/552076 [00:03<00:01, 90606.71it/s]  73%|███████▎  | 404218/552076 [00:03<00:01, 94251.23it/s] 75%|███████▌  | 416517/552076 [00:03<00:01, 101354.51it/s] 78%|███████▊  | 428950/552076 [00:03<00:01, 107301.13it/s] 80%|███████▉  | 441441/552076 [00:03<00:00, 112037.99it/s] 82%|████████▏ | 453900/552076 [00:03<00:00, 115528.72it/s] 84%|████████▍ | 466394/552076 [00:03<00:00, 118197.34it/s] 87%|████████▋ | 478888/552076 [00:04<00:00, 120140.68it/s] 89%|████████▉ | 491330/552076 [00:04<00:00, 121393.19it/s] 91%|█████████▏| 503893/552076 [00:04<00:00, 122631.73it/s] 94%|█████████▎| 516388/552076 [00:04<00:00, 123317.29it/s] 96%|█████████▌| 528840/552076 [00:04<00:00, 123674.11it/s] 98%|█████████▊| 541341/552076 [00:04<00:00, 124068.65it/s]100%|██████████| 552076/552076 [00:04<00:00, 119558.46it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11963/552076 [00:00<00:04, 119622.98it/s]  4%|▍         | 23916/552076 [00:00<00:04, 119593.14it/s]  7%|▋         | 36039/552076 [00:00<00:04, 120077.53it/s]  9%|▊         | 47924/552076 [00:00<00:04, 119703.98it/s] 11%|█         | 60236/552076 [00:00<00:04, 120708.49it/s] 13%|█▎        | 72721/552076 [00:00<00:03, 121920.65it/s] 15%|█▌        | 85221/552076 [00:00<00:03, 122825.76it/s] 18%|█▊        | 97500/552076 [00:00<00:03, 122813.05it/s] 20%|█▉        | 109745/552076 [00:00<00:03, 122701.92it/s] 22%|██▏       | 122089/552076 [00:01<00:03, 122919.91it/s] 24%|██▍       | 134401/552076 [00:01<00:03, 122978.94it/s] 27%|██▋       | 146464/552076 [00:01<00:03, 115229.79it/s] 29%|██▉       | 158762/552076 [00:01<00:03, 117448.73it/s] 31%|███       | 171081/552076 [00:01<00:03, 119111.44it/s] 33%|███▎      | 183564/552076 [00:01<00:03, 120769.51it/s] 36%|███▌      | 196016/552076 [00:01<00:02, 121870.24it/s] 38%|███▊      | 208200/552076 [00:01<00:03, 92715.37it/s]  40%|███▉      | 218514/552076 [00:01<00:03, 84758.43it/s] 42%|████▏     | 229800/552076 [00:02<00:03, 91562.74it/s] 43%|████▎     | 240122/552076 [00:02<00:03, 94771.66it/s] 45%|████▌     | 250161/552076 [00:02<00:03, 83207.67it/s] 48%|████▊     | 262379/552076 [00:02<00:03, 92012.44it/s] 50%|████▉     | 274840/552076 [00:02<00:02, 99847.56it/s] 52%|█████▏    | 287360/552076 [00:02<00:02, 106305.43it/s] 54%|█████▍    | 299888/552076 [00:02<00:02, 111363.40it/s] 56%|█████▋    | 311518/552076 [00:02<00:02, 82368.44it/s]  59%|█████▊    | 324322/552076 [00:03<00:02, 92238.35it/s] 61%|██████    | 337100/552076 [00:03<00:02, 100634.31it/s] 63%|██████▎   | 349597/552076 [00:03<00:01, 106876.88it/s] 65%|██████▌   | 361231/552076 [00:03<00:02, 87834.15it/s]  68%|██████▊   | 373686/552076 [00:03<00:01, 96355.18it/s] 70%|██████▉   | 386162/552076 [00:03<00:01, 103418.94it/s] 72%|███████▏  | 398401/552076 [00:03<00:01, 108462.37it/s] 74%|███████▍  | 410925/552076 [00:03<00:01, 113002.10it/s] 77%|███████▋  | 423373/552076 [00:03<00:01, 116215.77it/s] 79%|███████▉  | 435937/552076 [00:04<00:00, 118889.83it/s] 81%|████████  | 448125/552076 [00:04<00:00, 118915.00it/s] 83%|████████▎ | 460672/552076 [00:04<00:00, 120807.98it/s] 86%|████████▌ | 473153/552076 [00:04<00:00, 121979.87it/s] 88%|████████▊ | 485462/552076 [00:04<00:00, 98215.73it/s]  90%|█████████ | 497866/552076 [00:04<00:00, 104758.39it/s] 92%|█████████▏| 510346/552076 [00:04<00:00, 110060.11it/s] 95%|█████████▍| 522368/552076 [00:04<00:00, 112921.97it/s] 97%|█████████▋| 534872/552076 [00:04<00:00, 116301.55it/s] 99%|█████████▉| 547327/552076 [00:05<00:00, 118657.05it/s]100%|██████████| 552076/552076 [00:05<00:00, 109016.91it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11611/552076 [00:00<00:04, 116104.57it/s]  3%|▎         | 19262/552076 [00:00<00:05, 99075.25it/s]   5%|▍         | 26905/552076 [00:00<00:05, 90676.88it/s]  7%|▋         | 38993/552076 [00:00<00:05, 98023.90it/s]  9%|▉         | 51138/552076 [00:00<00:04, 104043.74it/s] 11%|█▏        | 63255/552076 [00:00<00:04, 108649.27it/s] 14%|█▎        | 75569/552076 [00:00<00:04, 112624.07it/s] 16%|█▌        | 86164/552076 [00:00<00:05, 89924.10it/s]  18%|█▊        | 98498/552076 [00:00<00:04, 97877.63it/s] 20%|██        | 110604/552076 [00:01<00:04, 103842.53it/s] 22%|██▏       | 121628/552076 [00:01<00:04, 105141.75it/s] 24%|██▍       | 132888/552076 [00:01<00:03, 107271.43it/s] 26%|██▋       | 145228/552076 [00:01<00:03, 111648.85it/s] 29%|██▊       | 157665/552076 [00:01<00:03, 115183.17it/s] 31%|███       | 170124/552076 [00:01<00:03, 117850.41it/s] 33%|███▎      | 182034/552076 [00:01<00:03, 101846.34it/s] 35%|███▌      | 194381/552076 [00:01<00:03, 107493.62it/s] 37%|███▋      | 205545/552076 [00:02<00:03, 87730.76it/s]  39%|███▉      | 217826/552076 [00:02<00:03, 95952.40it/s] 42%|████▏     | 230262/552076 [00:02<00:03, 103011.24it/s] 44%|████▍     | 242751/552076 [00:02<00:02, 108724.20it/s] 46%|████▌     | 255054/552076 [00:02<00:02, 112653.43it/s] 48%|████▊     | 266859/552076 [00:02<00:02, 114218.32it/s] 51%|█████     | 278999/552076 [00:02<00:02, 116279.48it/s] 53%|█████▎    | 291176/552076 [00:02<00:02, 117873.23it/s] 55%|█████▍    | 303406/552076 [00:02<00:02, 119165.78it/s] 57%|█████▋    | 315871/552076 [00:02<00:01, 120757.22it/s] 59%|█████▉    | 328227/552076 [00:03<00:01, 121582.17it/s] 62%|██████▏   | 340497/552076 [00:03<00:01, 121914.37it/s] 64%|██████▍   | 352995/552076 [00:03<00:01, 122817.66it/s] 66%|██████▌   | 365426/552076 [00:03<00:01, 123255.94it/s] 68%|██████▊   | 377850/552076 [00:03<00:01, 123546.74it/s] 71%|███████   | 390355/552076 [00:03<00:01, 123993.68it/s] 73%|███████▎  | 402800/552076 [00:03<00:01, 124130.08it/s] 75%|███████▌  | 415222/552076 [00:03<00:01, 123906.40it/s] 77%|███████▋  | 427619/552076 [00:03<00:01, 123698.65it/s] 80%|███████▉  | 439994/552076 [00:03<00:00, 112225.20it/s] 82%|████████▏ | 451424/552076 [00:04<00:00, 111851.60it/s] 84%|████████▍ | 463764/552076 [00:04<00:00, 115080.56it/s] 86%|████████▌ | 475872/552076 [00:04<00:00, 116815.04it/s] 88%|████████▊ | 487969/552076 [00:04<00:00, 118031.20it/s] 91%|█████████ | 500230/552076 [00:04<00:00, 119366.65it/s] 93%|█████████▎| 512686/552076 [00:04<00:00, 120876.79it/s] 95%|█████████▌| 525123/552076 [00:04<00:00, 121903.92it/s] 97%|█████████▋| 537510/552076 [00:04<00:00, 122487.11it/s]100%|█████████▉| 549781/552076 [00:04<00:00, 116803.62it/s]100%|██████████| 552076/552076 [00:04<00:00, 112912.93it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12075/552076 [00:00<00:04, 120745.22it/s]  4%|▍         | 23657/552076 [00:00<00:04, 119222.07it/s]  6%|▋         | 35537/552076 [00:00<00:04, 119094.82it/s]  8%|▊         | 43942/552076 [00:00<00:04, 105853.19it/s] 10%|█         | 55873/552076 [00:00<00:04, 109558.57it/s] 12%|█▏        | 67660/552076 [00:00<00:04, 111923.78it/s] 14%|█▍        | 79665/552076 [00:00<00:04, 114243.31it/s] 17%|█▋        | 91940/552076 [00:00<00:03, 116667.65it/s] 19%|█▊        | 103016/552076 [00:00<00:04, 111094.05it/s] 21%|██        | 113768/552076 [00:01<00:04, 98057.03it/s]  23%|██▎       | 125544/552076 [00:01<00:04, 103237.39it/s] 25%|██▍       | 137697/552076 [00:01<00:03, 108116.83it/s] 27%|██▋       | 148635/552076 [00:01<00:04, 89765.02it/s]  29%|██▉       | 161044/552076 [00:01<00:03, 97886.49it/s] 31%|███▏      | 173285/552076 [00:01<00:03, 104144.15it/s] 33%|███▎      | 184260/552076 [00:01<00:04, 82903.79it/s]  36%|███▌      | 196698/552076 [00:01<00:03, 92118.03it/s] 37%|███▋      | 206987/552076 [00:02<00:03, 87482.22it/s] 40%|███▉      | 219861/552076 [00:02<00:03, 96786.10it/s] 42%|████▏     | 232219/552076 [00:02<00:03, 103518.48it/s] 45%|████▍     | 245804/552076 [00:02<00:02, 111476.91it/s] 47%|████▋     | 259239/552076 [00:02<00:02, 117476.12it/s] 49%|████▉     | 271557/552076 [00:02<00:02, 108739.57it/s] 51%|█████▏    | 282960/552076 [00:02<00:02, 101266.16it/s] 53%|█████▎    | 295148/552076 [00:02<00:02, 106678.85it/s] 56%|█████▌    | 306964/552076 [00:02<00:02, 109880.75it/s] 58%|█████▊    | 319060/552076 [00:03<00:02, 112983.76it/s] 60%|██████    | 331513/552076 [00:03<00:01, 116213.86it/s] 62%|██████▏   | 343937/552076 [00:03<00:01, 118507.86it/s] 65%|██████▍   | 356393/552076 [00:03<00:01, 120260.46it/s] 67%|██████▋   | 368929/552076 [00:03<00:01, 121745.74it/s] 69%|██████▉   | 381257/552076 [00:03<00:01, 122201.34it/s] 71%|███████▏  | 393534/552076 [00:03<00:01, 102901.65it/s] 74%|███████▎  | 406544/552076 [00:03<00:01, 109785.36it/s] 76%|███████▌  | 418237/552076 [00:03<00:01, 111833.10it/s] 78%|███████▊  | 430789/552076 [00:03<00:01, 115615.04it/s] 80%|████████  | 442644/552076 [00:04<00:01, 81436.28it/s]  82%|████████▏ | 452388/552076 [00:04<00:01, 74834.94it/s] 84%|████████▎ | 461846/552076 [00:04<00:01, 79833.70it/s] 85%|████████▌ | 470780/552076 [00:04<00:01, 80196.84it/s] 87%|████████▋ | 481482/552076 [00:04<00:00, 86716.67it/s] 89%|████████▉ | 490842/552076 [00:04<00:00, 88671.73it/s] 91%|█████████ | 503266/552076 [00:04<00:00, 97001.76it/s] 93%|█████████▎| 515496/552076 [00:04<00:00, 103417.73it/s] 95%|█████████▌| 527048/552076 [00:05<00:00, 106773.40it/s] 98%|█████████▊| 538881/552076 [00:05<00:00, 109052.92it/s]100%|█████████▉| 550947/552076 [00:05<00:00, 112290.94it/s]100%|██████████| 552076/552076 [00:05<00:00, 104205.13it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6272/552076 [00:00<00:08, 62715.28it/s]  3%|▎         | 15865/552076 [00:00<00:07, 69984.51it/s]  5%|▍         | 25211/552076 [00:00<00:06, 75687.39it/s]  6%|▋         | 34625/552076 [00:00<00:06, 80413.68it/s]  8%|▊         | 44327/552076 [00:00<00:05, 84764.84it/s] 10%|▉         | 53805/552076 [00:00<00:05, 87539.50it/s] 12%|█▏        | 63662/552076 [00:00<00:05, 90578.78it/s] 13%|█▎        | 72383/552076 [00:00<00:06, 73529.99it/s] 15%|█▌        | 84692/552076 [00:00<00:05, 83630.69it/s] 18%|█▊        | 97128/552076 [00:01<00:04, 92742.98it/s] 20%|█▉        | 109633/552076 [00:01<00:04, 100533.15it/s] 22%|██▏       | 122130/552076 [00:01<00:04, 106797.51it/s] 24%|██▍       | 133805/552076 [00:01<00:03, 109598.90it/s] 26%|██▋       | 146114/552076 [00:01<00:03, 113322.64it/s] 29%|██▊       | 158594/552076 [00:01<00:03, 116536.53it/s] 31%|███       | 170516/552076 [00:01<00:04, 92766.31it/s]  33%|███▎      | 183007/552076 [00:01<00:03, 100525.91it/s] 35%|███▌      | 195521/552076 [00:01<00:03, 106827.62it/s] 38%|███▊      | 208073/552076 [00:02<00:03, 111821.25it/s] 40%|███▉      | 220074/552076 [00:02<00:02, 114157.11it/s] 42%|████▏     | 232606/552076 [00:02<00:02, 117290.44it/s] 44%|████▍     | 245171/552076 [00:02<00:02, 119676.80it/s] 47%|████▋     | 257678/552076 [00:02<00:02, 121245.23it/s] 49%|████▉     | 270252/552076 [00:02<00:02, 122559.42it/s] 51%|█████     | 282793/552076 [00:02<00:02, 123400.41it/s] 53%|█████▎    | 295355/552076 [00:02<00:02, 124057.16it/s] 56%|█████▌    | 307905/552076 [00:02<00:01, 124485.41it/s] 58%|█████▊    | 320396/552076 [00:03<00:02, 109018.97it/s] 60%|██████    | 331675/552076 [00:03<00:02, 99949.47it/s]  62%|██████▏   | 344183/552076 [00:03<00:01, 106358.33it/s] 65%|██████▍   | 356645/552076 [00:03<00:01, 111247.63it/s] 67%|██████▋   | 369060/552076 [00:03<00:01, 114825.52it/s] 69%|██████▉   | 381545/552076 [00:03<00:01, 117658.27it/s] 71%|███████▏  | 394014/552076 [00:03<00:01, 119681.80it/s] 74%|███████▎  | 406421/552076 [00:03<00:01, 120963.07it/s] 76%|███████▌  | 418627/552076 [00:03<00:01, 105221.53it/s] 78%|███████▊  | 429593/552076 [00:04<00:01, 73193.24it/s]  80%|███████▉  | 440511/552076 [00:04<00:01, 81224.15it/s] 82%|████████▏ | 450058/552076 [00:04<00:01, 77592.36it/s] 84%|████████▎ | 462271/552076 [00:04<00:01, 87123.30it/s] 86%|████████▌ | 474662/552076 [00:04<00:00, 95640.83it/s] 88%|████████▊ | 486660/552076 [00:04<00:00, 101837.12it/s] 90%|█████████ | 498609/552076 [00:04<00:00, 106558.72it/s] 92%|█████████▏| 510626/552076 [00:04<00:00, 110305.40it/s] 95%|█████████▍| 523051/552076 [00:04<00:00, 114146.00it/s] 97%|█████████▋| 535521/552076 [00:05<00:00, 117119.14it/s] 99%|█████████▉| 548011/552076 [00:05<00:00, 119348.64it/s]100%|██████████| 552076/552076 [00:05<00:00, 105776.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7068/552076 [00:00<00:07, 70675.35it/s]  3%|▎         | 18924/552076 [00:00<00:06, 80418.38it/s]  5%|▌         | 29277/552076 [00:00<00:06, 85786.29it/s]  6%|▋         | 35854/552076 [00:00<00:06, 77693.67it/s]  8%|▊         | 46737/552076 [00:00<00:05, 84988.15it/s] 11%|█         | 59065/552076 [00:00<00:05, 93720.56it/s] 13%|█▎        | 71526/552076 [00:00<00:04, 101248.93it/s] 15%|█▌        | 83897/552076 [00:00<00:04, 107080.09it/s] 17%|█▋        | 96216/552076 [00:00<00:04, 111450.37it/s] 20%|█▉        | 109172/552076 [00:01<00:03, 116326.50it/s] 22%|██▏       | 121231/552076 [00:01<00:03, 117572.36it/s] 24%|██▍       | 133093/552076 [00:01<00:03, 105547.94it/s] 26%|██▋       | 145097/552076 [00:01<00:03, 109512.51it/s] 29%|██▊       | 157547/552076 [00:01<00:03, 113613.11it/s] 31%|███       | 169971/552076 [00:01<00:03, 116604.83it/s] 33%|███▎      | 181975/552076 [00:01<00:03, 117613.60it/s] 35%|███▌      | 194402/552076 [00:01<00:02, 119533.88it/s] 37%|███▋      | 206448/552076 [00:01<00:03, 94529.06it/s]  40%|███▉      | 219006/552076 [00:02<00:03, 102102.28it/s] 42%|████▏     | 231512/552076 [00:02<00:02, 108052.21it/s] 44%|████▍     | 243943/552076 [00:02<00:02, 112461.84it/s] 46%|████▋     | 256443/552076 [00:02<00:02, 115950.02it/s] 49%|████▊     | 268950/552076 [00:02<00:02, 118541.66it/s] 51%|█████     | 281422/552076 [00:02<00:02, 120326.97it/s] 53%|█████▎    | 293657/552076 [00:02<00:03, 79591.89it/s]  55%|█████▌    | 305981/552076 [00:02<00:02, 89053.98it/s] 58%|█████▊    | 317984/552076 [00:03<00:02, 96526.26it/s] 60%|█████▉    | 329023/552076 [00:03<00:02, 75813.26it/s] 62%|██████▏   | 341478/552076 [00:03<00:02, 85895.66it/s] 64%|██████▍   | 353950/552076 [00:03<00:02, 94742.37it/s] 66%|██████▋   | 366606/552076 [00:03<00:01, 102470.44it/s] 69%|██████▊   | 379141/552076 [00:03<00:01, 108405.88it/s] 71%|███████   | 391546/552076 [00:03<00:01, 112666.20it/s] 73%|███████▎  | 403494/552076 [00:03<00:01, 83188.17it/s]  75%|███████▍  | 413408/552076 [00:04<00:01, 85606.48it/s] 77%|███████▋  | 425178/552076 [00:04<00:01, 93231.65it/s] 79%|███████▉  | 437563/552076 [00:04<00:01, 100699.36it/s] 81%|████████▏ | 449319/552076 [00:04<00:00, 105225.58it/s] 83%|████████▎ | 460754/552076 [00:04<00:00, 107804.91it/s] 85%|████████▌ | 472013/552076 [00:04<00:00, 94824.03it/s]  87%|████████▋ | 482295/552076 [00:04<00:00, 97087.64it/s] 89%|████████▉ | 492451/552076 [00:04<00:00, 93744.42it/s] 91%|█████████ | 502164/552076 [00:04<00:00, 94225.12it/s] 93%|█████████▎| 511824/552076 [00:05<00:00, 90958.37it/s] 94%|█████████▍| 521111/552076 [00:05<00:00, 84937.94it/s] 96%|█████████▌| 529819/552076 [00:05<00:00, 75546.77it/s] 97%|█████████▋| 537716/552076 [00:05<00:00, 64060.37it/s] 99%|█████████▊| 544663/552076 [00:05<00:00, 64224.24it/s]100%|██████████| 552076/552076 [00:05<00:00, 96986.71it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7576/552076 [00:00<00:07, 75757.72it/s]  2%|▏         | 12912/552076 [00:00<00:08, 67087.27it/s]  4%|▍         | 24726/552076 [00:00<00:06, 77079.82it/s]  6%|▌         | 34108/552076 [00:00<00:06, 81437.75it/s]  8%|▊         | 42909/552076 [00:00<00:06, 83302.55it/s] 10%|▉         | 54379/552076 [00:00<00:05, 90754.49it/s] 12%|█▏        | 66151/552076 [00:00<00:04, 97450.56it/s] 14%|█▍        | 77999/552076 [00:00<00:04, 102930.79it/s] 16%|█▋        | 89979/552076 [00:00<00:04, 107470.68it/s] 19%|█▊        | 102527/552076 [00:01<00:04, 112304.70it/s] 21%|██        | 114664/552076 [00:01<00:03, 114877.08it/s] 23%|██▎       | 126787/552076 [00:01<00:03, 116711.16it/s] 25%|██▌       | 138903/552076 [00:01<00:03, 118010.42it/s] 27%|██▋       | 150747/552076 [00:01<00:04, 98549.98it/s]  29%|██▉       | 162658/552076 [00:01<00:03, 98571.63it/s] 32%|███▏      | 175398/552076 [00:01<00:03, 105750.31it/s] 34%|███▍      | 186400/552076 [00:01<00:03, 96570.55it/s]  36%|███▌      | 198142/552076 [00:01<00:03, 102002.39it/s] 38%|███▊      | 208742/552076 [00:02<00:03, 100773.49it/s] 40%|████      | 220863/552076 [00:02<00:03, 106139.80it/s] 42%|████▏     | 233289/552076 [00:02<00:02, 110993.76it/s] 44%|████▍     | 244928/552076 [00:02<00:02, 112556.35it/s] 46%|████▋     | 256364/552076 [00:02<00:03, 95016.55it/s]  49%|████▊     | 268773/552076 [00:02<00:02, 102198.13it/s] 51%|█████     | 279563/552076 [00:02<00:02, 100564.71it/s] 53%|█████▎    | 290024/552076 [00:02<00:03, 80570.26it/s]  54%|█████▍    | 298998/552076 [00:03<00:03, 73070.20it/s] 56%|█████▌    | 307542/552076 [00:03<00:03, 76387.07it/s] 58%|█████▊    | 319980/552076 [00:03<00:02, 86385.71it/s] 60%|██████    | 332376/552076 [00:03<00:02, 95025.38it/s] 62%|██████▏   | 344695/552076 [00:03<00:02, 102022.38it/s] 65%|██████▍   | 357221/552076 [00:03<00:01, 108032.98it/s] 67%|██████▋   | 369685/552076 [00:03<00:01, 112529.86it/s] 69%|██████▉   | 382108/552076 [00:03<00:01, 115799.41it/s] 71%|███████▏  | 394437/552076 [00:03<00:01, 117948.79it/s] 74%|███████▎  | 406735/552076 [00:03<00:01, 119413.43it/s] 76%|███████▌  | 418864/552076 [00:04<00:01, 113795.10it/s] 78%|███████▊  | 433265/552076 [00:04<00:00, 121438.68it/s] 82%|████████▏ | 450661/552076 [00:04<00:00, 133533.18it/s] 84%|████████▍ | 464572/552076 [00:04<00:00, 116064.11it/s] 86%|████████▋ | 476977/552076 [00:04<00:00, 103857.50it/s] 89%|████████▉ | 492080/552076 [00:04<00:00, 114593.05it/s] 92%|█████████▏| 506333/552076 [00:04<00:00, 121751.65it/s] 95%|█████████▌| 525859/552076 [00:04<00:00, 137252.35it/s] 99%|█████████▊| 544326/552076 [00:04<00:00, 148707.02it/s]100%|██████████| 552076/552076 [00:05<00:00, 110085.60it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20094/552076 [00:00<00:02, 200937.80it/s]  5%|▌         | 29692/552076 [00:00<00:03, 151300.45it/s]  8%|▊         | 43984/552076 [00:00<00:03, 148684.29it/s] 12%|█▏        | 64431/552076 [00:00<00:03, 161937.24it/s] 16%|█▌        | 85968/552076 [00:00<00:02, 174957.75it/s] 19%|█▉        | 105744/552076 [00:00<00:02, 181223.72it/s] 22%|██▏       | 123611/552076 [00:00<00:02, 180445.85it/s] 25%|██▌       | 140616/552076 [00:00<00:02, 156969.86it/s] 29%|██▉       | 160162/552076 [00:00<00:02, 166825.21it/s] 33%|███▎      | 180692/552076 [00:01<00:02, 176762.52it/s] 36%|███▋      | 201256/552076 [00:01<00:01, 184534.17it/s] 40%|████      | 221823/552076 [00:01<00:01, 190404.08it/s] 44%|████▎     | 241160/552076 [00:01<00:01, 191283.50it/s] 47%|████▋     | 260524/552076 [00:01<00:01, 191982.55it/s] 51%|█████     | 281763/552076 [00:01<00:01, 197679.92it/s] 55%|█████▍    | 302757/552076 [00:01<00:01, 201204.00it/s] 59%|█████▊    | 322972/552076 [00:01<00:01, 200937.85it/s] 62%|██████▏   | 343132/552076 [00:01<00:01, 200404.59it/s] 66%|██████▌   | 363731/552076 [00:01<00:00, 202047.21it/s] 70%|██████▉   | 384460/552076 [00:02<00:00, 203591.76it/s] 73%|███████▎  | 405539/552076 [00:02<00:00, 205698.85it/s] 77%|███████▋  | 426134/552076 [00:02<00:00, 203928.58it/s] 81%|████████  | 446548/552076 [00:02<00:00, 202609.35it/s] 85%|████████▍ | 466911/552076 [00:02<00:00, 202911.92it/s] 88%|████████▊ | 487758/552076 [00:02<00:00, 204546.89it/s] 92%|█████████▏| 508224/552076 [00:02<00:00, 179021.25it/s] 95%|█████████▌| 526710/552076 [00:02<00:00, 158386.67it/s] 98%|█████████▊| 543395/552076 [00:03<00:00, 108406.25it/s]100%|██████████| 552076/552076 [00:03<00:00, 174556.62it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20990/552076 [00:00<00:02, 209895.20it/s]  7%|▋         | 41069/552076 [00:00<00:02, 207077.54it/s]  9%|▉         | 51964/552076 [00:00<00:03, 162548.84it/s] 11%|█▏        | 62514/552076 [00:00<00:03, 126221.59it/s] 13%|█▎        | 72388/552076 [00:00<00:04, 116431.22it/s] 15%|█▍        | 82257/552076 [00:00<00:04, 105208.34it/s] 18%|█▊        | 100387/552076 [00:00<00:03, 120362.58it/s] 22%|██▏       | 122854/552076 [00:00<00:03, 139838.45it/s] 26%|██▌       | 144554/552076 [00:00<00:02, 156533.75it/s] 30%|██▉       | 164700/552076 [00:01<00:02, 167755.69it/s] 34%|███▎      | 185551/552076 [00:01<00:02, 178203.31it/s] 37%|███▋      | 206681/552076 [00:01<00:01, 186988.85it/s] 41%|████      | 226241/552076 [00:01<00:01, 186814.22it/s] 45%|████▍     | 246994/552076 [00:01<00:01, 192579.68it/s] 48%|████▊     | 267082/552076 [00:01<00:01, 194996.50it/s] 52%|█████▏    | 288580/552076 [00:01<00:01, 200588.58it/s] 56%|█████▌    | 308913/552076 [00:01<00:01, 200988.61it/s] 60%|█████▉    | 329397/552076 [00:01<00:01, 202127.08it/s] 63%|██████▎   | 349746/552076 [00:01<00:01, 202266.84it/s] 67%|██████▋   | 370068/552076 [00:02<00:00, 201342.03it/s] 71%|███████   | 390270/552076 [00:02<00:00, 201459.03it/s] 75%|███████▍  | 411948/552076 [00:02<00:00, 205820.27it/s] 78%|███████▊  | 433308/552076 [00:02<00:00, 208092.05it/s] 82%|████████▏ | 455150/552076 [00:02<00:00, 211084.13it/s] 86%|████████▋ | 476301/552076 [00:02<00:00, 206098.74it/s] 90%|█████████ | 497026/552076 [00:02<00:00, 206439.59it/s] 94%|█████████▍| 518266/552076 [00:02<00:00, 208190.45it/s] 98%|█████████▊| 539116/552076 [00:02<00:00, 204005.10it/s]100%|██████████| 552076/552076 [00:02<00:00, 188378.58it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15069/552076 [00:00<00:03, 150683.32it/s]  6%|▌         | 33355/552076 [00:00<00:03, 159080.90it/s]  9%|▊         | 48018/552076 [00:00<00:03, 155128.70it/s] 12%|█▏        | 64837/552076 [00:00<00:03, 158825.61it/s] 15%|█▍        | 81279/552076 [00:00<00:02, 160461.35it/s] 17%|█▋        | 95647/552076 [00:00<00:02, 155025.73it/s] 21%|██        | 113344/552076 [00:00<00:02, 161013.14it/s] 23%|██▎       | 128328/552076 [00:00<00:02, 156290.49it/s] 26%|██▌       | 144470/552076 [00:00<00:02, 157794.05it/s] 29%|██▉       | 159727/552076 [00:01<00:02, 155387.11it/s] 32%|███▏      | 178635/552076 [00:01<00:02, 164162.90it/s] 36%|███▌      | 198732/552076 [00:01<00:02, 173705.63it/s] 39%|███▉      | 217883/552076 [00:01<00:01, 178688.58it/s] 43%|████▎     | 238322/552076 [00:01<00:01, 185693.03it/s] 47%|████▋     | 258698/552076 [00:01<00:01, 190765.78it/s] 50%|█████     | 278552/552076 [00:01<00:01, 193031.13it/s] 54%|█████▍    | 299106/552076 [00:01<00:01, 196620.74it/s] 58%|█████▊    | 318850/552076 [00:01<00:01, 175111.13it/s] 61%|██████    | 336856/552076 [00:02<00:01, 137387.99it/s] 64%|██████▍   | 352203/552076 [00:02<00:01, 129667.11it/s] 66%|██████▋   | 366825/552076 [00:02<00:01, 134224.17it/s] 69%|██████▉   | 381139/552076 [00:02<00:01, 136741.05it/s] 72%|███████▏  | 396693/552076 [00:02<00:01, 141885.31it/s] 75%|███████▍  | 413654/552076 [00:02<00:00, 149198.69it/s] 78%|███████▊  | 429020/552076 [00:02<00:01, 105335.64it/s] 81%|████████  | 447419/552076 [00:02<00:00, 120831.54it/s] 84%|████████▎ | 461780/552076 [00:03<00:00, 122263.69it/s] 87%|████████▋ | 479499/552076 [00:03<00:00, 134793.68it/s] 90%|█████████ | 497446/552076 [00:03<00:00, 145672.09it/s] 94%|█████████▎| 517203/552076 [00:03<00:00, 158132.21it/s] 97%|█████████▋| 537565/552076 [00:03<00:00, 169490.12it/s]100%|██████████| 552076/552076 [00:03<00:00, 157201.00it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20645/552076 [00:00<00:02, 206446.75it/s]  7%|▋         | 41141/552076 [00:00<00:02, 205997.19it/s] 11%|█         | 61623/552076 [00:00<00:02, 205640.31it/s] 15%|█▍        | 82226/552076 [00:00<00:02, 205755.95it/s] 19%|█▉        | 103740/552076 [00:00<00:02, 208481.96it/s] 22%|██▏       | 124004/552076 [00:00<00:02, 206693.16it/s] 26%|██▌       | 143903/552076 [00:00<00:01, 204319.92it/s] 30%|██▉       | 164848/552076 [00:00<00:01, 205831.12it/s] 34%|███▎      | 185063/552076 [00:00<00:01, 204710.76it/s] 37%|███▋      | 205518/552076 [00:01<00:01, 204660.96it/s] 41%|████      | 225460/552076 [00:01<00:01, 203059.44it/s] 45%|████▍     | 245773/552076 [00:01<00:01, 203078.19it/s] 48%|████▊     | 266533/552076 [00:01<00:01, 204412.68it/s] 52%|█████▏    | 286781/552076 [00:01<00:01, 203622.05it/s] 56%|█████▌    | 307008/552076 [00:01<00:01, 203104.12it/s] 59%|█████▉    | 327225/552076 [00:01<00:01, 202462.30it/s] 63%|██████▎   | 347406/552076 [00:01<00:01, 200535.09it/s] 67%|██████▋   | 367418/552076 [00:01<00:00, 200359.92it/s] 70%|███████   | 387425/552076 [00:01<00:00, 197256.90it/s] 74%|███████▍  | 407176/552076 [00:02<00:00, 197330.56it/s] 78%|███████▊  | 428849/552076 [00:02<00:00, 202775.06it/s] 81%|████████▏ | 449410/552076 [00:02<00:00, 203617.07it/s] 85%|████████▌ | 470814/552076 [00:02<00:00, 206633.70it/s] 89%|████████▉ | 491505/552076 [00:02<00:00, 191195.21it/s] 93%|█████████▎| 510873/552076 [00:02<00:00, 184763.56it/s] 96%|█████████▋| 531530/552076 [00:02<00:00, 190803.80it/s]100%|█████████▉| 552045/552076 [00:02<00:00, 194891.85it/s]100%|██████████| 552076/552076 [00:02<00:00, 200764.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18819/552076 [00:00<00:02, 188188.83it/s]  6%|▋         | 35669/552076 [00:00<00:02, 181814.78it/s]  9%|▊         | 47914/552076 [00:00<00:03, 158727.44it/s] 12%|█▏        | 67873/552076 [00:00<00:02, 169113.53it/s] 16%|█▌        | 88313/552076 [00:00<00:02, 178348.05it/s] 19%|█▉        | 107653/552076 [00:00<00:02, 182609.46it/s] 23%|██▎       | 128075/552076 [00:00<00:02, 188595.94it/s] 27%|██▋       | 148081/552076 [00:00<00:02, 191894.71it/s] 31%|███       | 168415/552076 [00:00<00:01, 195190.21it/s] 34%|███▍      | 187361/552076 [00:01<00:01, 189459.63it/s] 37%|███▋      | 205943/552076 [00:01<00:01, 174837.93it/s] 40%|████      | 223395/552076 [00:01<00:01, 167979.84it/s] 44%|████▎     | 240229/552076 [00:01<00:01, 165992.42it/s] 47%|████▋     | 260870/552076 [00:01<00:01, 176351.48it/s] 50%|█████     | 278703/552076 [00:01<00:01, 176881.71it/s] 54%|█████▎    | 296530/552076 [00:01<00:01, 151635.88it/s] 57%|█████▋    | 312422/552076 [00:01<00:01, 131412.98it/s] 59%|█████▉    | 326553/552076 [00:01<00:01, 129846.31it/s] 62%|██████▏   | 342693/552076 [00:02<00:01, 137936.22it/s] 66%|██████▌   | 361629/552076 [00:02<00:01, 150169.18it/s] 69%|██████▊   | 379029/552076 [00:02<00:01, 156601.48it/s] 72%|███████▏  | 395291/552076 [00:02<00:01, 136229.21it/s] 74%|███████▍  | 409810/552076 [00:02<00:01, 120039.59it/s] 77%|███████▋  | 426035/552076 [00:02<00:00, 130201.00it/s] 80%|███████▉  | 439990/552076 [00:02<00:00, 118839.18it/s] 82%|████████▏ | 452919/552076 [00:02<00:00, 121792.00it/s] 85%|████████▌ | 470725/552076 [00:03<00:00, 134545.60it/s] 89%|████████▊ | 489731/552076 [00:03<00:00, 147465.93it/s] 92%|█████████▏| 508090/552076 [00:03<00:00, 156715.26it/s] 95%|█████████▌| 524593/552076 [00:03<00:00, 158084.80it/s] 98%|█████████▊| 541244/552076 [00:03<00:00, 160519.29it/s]100%|██████████| 552076/552076 [00:03<00:00, 158325.08it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18165/552076 [00:00<00:02, 181648.01it/s]  7%|▋         | 38344/552076 [00:00<00:02, 187252.68it/s] 11%|█         | 58456/552076 [00:00<00:02, 191207.63it/s] 14%|█▍        | 78863/552076 [00:00<00:02, 194891.80it/s] 18%|█▊        | 97293/552076 [00:00<00:02, 191586.52it/s] 21%|██        | 116815/552076 [00:00<00:02, 192662.20it/s] 25%|██▌       | 138293/552076 [00:00<00:02, 198802.19it/s] 28%|██▊       | 156752/552076 [00:00<00:02, 183449.20it/s] 32%|███▏      | 174337/552076 [00:00<00:02, 159548.36it/s] 34%|███▍      | 190317/552076 [00:01<00:02, 143670.77it/s] 37%|███▋      | 205001/552076 [00:01<00:02, 129896.18it/s] 40%|███▉      | 218465/552076 [00:01<00:03, 110142.62it/s] 42%|████▏     | 230329/552076 [00:01<00:03, 90996.66it/s]  44%|████▎     | 240576/552076 [00:01<00:04, 72169.02it/s] 45%|████▌     | 249209/552076 [00:01<00:04, 71508.38it/s] 47%|████▋     | 261268/552076 [00:02<00:03, 81453.63it/s] 50%|████▉     | 273483/552076 [00:02<00:03, 90498.75it/s] 52%|█████▏    | 284867/552076 [00:02<00:02, 96429.21it/s] 54%|█████▎    | 296643/552076 [00:02<00:02, 101968.49it/s] 56%|█████▌    | 307558/552076 [00:02<00:02, 103622.45it/s] 58%|█████▊    | 318789/552076 [00:02<00:02, 106081.83it/s] 60%|█████▉    | 330423/552076 [00:02<00:02, 108961.80it/s] 62%|██████▏   | 342286/552076 [00:02<00:01, 111690.26it/s] 64%|██████▍   | 354026/552076 [00:02<00:01, 113343.41it/s] 66%|██████▋   | 365879/552076 [00:02<00:01, 114849.77it/s] 68%|██████▊   | 377946/552076 [00:03<00:01, 116535.09it/s] 71%|███████   | 390207/552076 [00:03<00:01, 118291.39it/s] 73%|███████▎  | 402326/552076 [00:03<00:01, 119144.75it/s] 75%|███████▌  | 414295/552076 [00:03<00:01, 119305.12it/s] 77%|███████▋  | 426259/552076 [00:03<00:01, 119003.85it/s] 79%|███████▉  | 438183/552076 [00:03<00:00, 118849.34it/s] 82%|████████▏ | 450503/552076 [00:03<00:00, 120121.79it/s] 84%|████████▍ | 462531/552076 [00:03<00:00, 118799.90it/s] 86%|████████▌ | 474546/552076 [00:03<00:00, 119201.18it/s] 88%|████████▊ | 486778/552076 [00:03<00:00, 120117.41it/s] 90%|█████████ | 498799/552076 [00:04<00:00, 109295.05it/s] 93%|█████████▎| 511193/552076 [00:04<00:00, 113311.07it/s] 95%|█████████▍| 523003/552076 [00:04<00:00, 114357.26it/s] 97%|█████████▋| 534682/552076 [00:04<00:00, 114896.00it/s] 99%|█████████▉| 546869/552076 [00:04<00:00, 116902.32it/s]100%|██████████| 552076/552076 [00:04<00:00, 122524.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11880/552076 [00:00<00:04, 118793.03it/s]  4%|▎         | 20690/552076 [00:00<00:04, 107549.84it/s]  6%|▌         | 32804/552076 [00:00<00:04, 111294.79it/s]  8%|▊         | 41919/552076 [00:00<00:04, 104372.10it/s] 10%|▉         | 53883/552076 [00:00<00:04, 108525.98it/s] 12%|█▏        | 66119/552076 [00:00<00:04, 112335.57it/s] 14%|█▍        | 78316/552076 [00:00<00:04, 115062.16it/s] 16%|█▋        | 90549/552076 [00:00<00:03, 117148.69it/s] 19%|█▊        | 102770/552076 [00:00<00:03, 118622.46it/s] 21%|██        | 115057/552076 [00:01<00:03, 119863.26it/s] 23%|██▎       | 127283/552076 [00:01<00:03, 120570.01it/s] 25%|██▌       | 139247/552076 [00:01<00:03, 120288.40it/s] 27%|██▋       | 151443/552076 [00:01<00:03, 120783.80it/s] 30%|██▉       | 163604/552076 [00:01<00:03, 121028.36it/s] 32%|███▏      | 175641/552076 [00:01<00:03, 97529.30it/s]  34%|███▎      | 186081/552076 [00:01<00:03, 93932.85it/s] 35%|███▌      | 195984/552076 [00:01<00:04, 80828.02it/s] 37%|███▋      | 204745/552076 [00:02<00:04, 71344.80it/s] 39%|███▉      | 216727/552076 [00:02<00:04, 81199.05it/s] 41%|████▏     | 228798/552076 [00:02<00:03, 90039.59it/s] 44%|████▎     | 240906/552076 [00:02<00:03, 97540.40it/s] 46%|████▌     | 251947/552076 [00:02<00:02, 101074.40it/s] 48%|████▊     | 263779/552076 [00:02<00:02, 105696.05it/s] 50%|████▉     | 275976/552076 [00:02<00:02, 110102.98it/s] 52%|█████▏    | 287783/552076 [00:02<00:02, 112375.59it/s] 54%|█████▍    | 299309/552076 [00:02<00:02, 92013.07it/s]  56%|█████▌    | 309318/552076 [00:03<00:03, 79435.46it/s] 58%|█████▊    | 318131/552076 [00:03<00:03, 68917.35it/s] 60%|█████▉    | 329163/552076 [00:03<00:02, 77660.98it/s] 62%|██████▏   | 341152/552076 [00:03<00:02, 86836.29it/s] 64%|██████▍   | 353255/552076 [00:03<00:02, 94876.95it/s] 66%|██████▌   | 365276/552076 [00:03<00:01, 101278.51it/s] 68%|██████▊   | 377370/552076 [00:03<00:01, 106469.65it/s] 71%|███████   | 389699/552076 [00:03<00:01, 111012.45it/s] 73%|███████▎  | 401736/552076 [00:03<00:01, 113662.95it/s] 75%|███████▌  | 414069/552076 [00:04<00:01, 116398.33it/s] 77%|███████▋  | 426345/552076 [00:04<00:01, 118234.91it/s] 79%|███████▉  | 438575/552076 [00:04<00:00, 119424.23it/s] 82%|████████▏ | 450654/552076 [00:04<00:00, 116705.04it/s] 84%|████████▍ | 462434/552076 [00:04<00:00, 116716.91it/s] 86%|████████▌ | 474697/552076 [00:04<00:00, 118427.01it/s] 88%|████████▊ | 486913/552076 [00:04<00:00, 119520.84it/s] 90%|█████████ | 499161/552076 [00:04<00:00, 120392.23it/s] 93%|█████████▎| 511504/552076 [00:04<00:00, 121285.05it/s] 95%|█████████▍| 523829/552076 [00:04<00:00, 121864.94it/s] 97%|█████████▋| 536206/552076 [00:05<00:00, 122428.84it/s] 99%|█████████▉| 548519/552076 [00:05<00:00, 122637.68it/s]100%|██████████| 552076/552076 [00:05<00:00, 106788.99it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8860/552076 [00:00<00:06, 79312.29it/s]  4%|▎         | 20208/552076 [00:00<00:06, 87186.47it/s]  6%|▌         | 31760/552076 [00:00<00:05, 94110.56it/s]  8%|▊         | 42254/552076 [00:00<00:05, 97116.01it/s] 10%|▉         | 54023/552076 [00:00<00:04, 102488.90it/s] 11%|█▏        | 63195/552076 [00:00<00:04, 98532.19it/s]  13%|█▎        | 74012/552076 [00:00<00:04, 101236.72it/s] 16%|█▌        | 86199/552076 [00:00<00:04, 106651.94it/s] 18%|█▊        | 99447/552076 [00:00<00:03, 113274.91it/s] 20%|██        | 110974/552076 [00:01<00:03, 113864.25it/s] 22%|██▏       | 122311/552076 [00:01<00:03, 110776.57it/s] 24%|██▍       | 134651/552076 [00:01<00:03, 114283.78it/s] 27%|██▋       | 146854/552076 [00:01<00:03, 116499.95it/s] 29%|██▉       | 159206/552076 [00:01<00:03, 118518.97it/s] 31%|███       | 171529/552076 [00:01<00:03, 119892.38it/s] 33%|███▎      | 183786/552076 [00:01<00:03, 120680.96it/s] 36%|███▌      | 195994/552076 [00:01<00:02, 121094.92it/s] 38%|███▊      | 208115/552076 [00:01<00:02, 120642.67it/s] 40%|███▉      | 220360/552076 [00:01<00:02, 121178.25it/s] 42%|████▏     | 232485/552076 [00:02<00:02, 121045.41it/s] 44%|████▍     | 244595/552076 [00:02<00:02, 120560.02it/s] 46%|████▋     | 256707/552076 [00:02<00:02, 120725.61it/s] 49%|████▊     | 268908/552076 [00:02<00:02, 121105.28it/s] 51%|█████     | 281094/552076 [00:02<00:02, 121330.40it/s] 53%|█████▎    | 293229/552076 [00:02<00:02, 121072.31it/s] 55%|█████▌    | 305338/552076 [00:02<00:02, 120899.27it/s] 58%|█████▊    | 317485/552076 [00:02<00:01, 121067.03it/s] 60%|█████▉    | 329674/552076 [00:02<00:01, 121310.19it/s] 62%|██████▏   | 341876/552076 [00:02<00:01, 121521.00it/s] 64%|██████▍   | 354029/552076 [00:03<00:01, 119230.75it/s] 66%|██████▋   | 366385/552076 [00:03<00:01, 120496.10it/s] 69%|██████▊   | 378725/552076 [00:03<00:01, 121349.95it/s] 71%|███████   | 390869/552076 [00:03<00:01, 110102.27it/s] 73%|███████▎  | 402086/552076 [00:03<00:01, 109800.34it/s] 75%|███████▍  | 413999/552076 [00:03<00:01, 112439.41it/s] 77%|███████▋  | 426636/552076 [00:03<00:01, 116284.03it/s] 79%|███████▉  | 438876/552076 [00:03<00:00, 118053.46it/s] 82%|████████▏ | 450769/552076 [00:03<00:00, 111950.63it/s] 84%|████████▎ | 462328/552076 [00:03<00:00, 113017.47it/s] 86%|████████▌ | 474355/552076 [00:04<00:00, 115098.62it/s] 88%|████████▊ | 485938/552076 [00:04<00:00, 110224.91it/s] 90%|█████████ | 498087/552076 [00:04<00:00, 113376.49it/s] 92%|█████████▏| 510152/552076 [00:04<00:00, 115461.71it/s] 95%|█████████▍| 521925/552076 [00:04<00:00, 116130.21it/s] 97%|█████████▋| 533590/552076 [00:04<00:00, 109831.44it/s] 99%|█████████▉| 545207/552076 [00:04<00:00, 111658.36it/s]100%|██████████| 552076/552076 [00:04<00:00, 115349.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  0%|          | 2738/552076 [00:00<00:20, 26983.73it/s]  2%|▏         | 11037/552076 [00:00<00:15, 33833.04it/s]  3%|▎         | 14201/552076 [00:00<00:16, 31920.60it/s]  4%|▎         | 19428/552076 [00:00<00:14, 36141.34it/s]  5%|▍         | 26491/552076 [00:00<00:12, 42343.92it/s]  7%|▋         | 37135/552076 [00:00<00:09, 51679.98it/s]  9%|▉         | 49279/552076 [00:00<00:08, 62439.94it/s] 11%|█         | 61471/552076 [00:00<00:06, 73144.80it/s] 13%|█▎        | 72028/552076 [00:00<00:05, 80567.53it/s] 15%|█▍        | 81759/552076 [00:01<00:06, 73904.33it/s] 16%|█▋        | 90430/552076 [00:01<00:07, 65763.69it/s] 18%|█▊        | 99348/552076 [00:01<00:06, 71385.90it/s] 21%|██        | 113261/552076 [00:01<00:05, 83596.77it/s] 23%|██▎       | 125582/552076 [00:01<00:04, 92520.19it/s] 25%|██▌       | 138214/552076 [00:01<00:04, 100595.06it/s] 27%|██▋       | 150108/552076 [00:01<00:03, 105474.88it/s] 29%|██▉       | 161498/552076 [00:01<00:03, 105637.81it/s] 31%|███▏      | 173623/552076 [00:01<00:03, 109880.54it/s] 34%|███▎      | 185623/552076 [00:02<00:03, 112730.96it/s] 36%|███▌      | 197911/552076 [00:02<00:03, 115593.18it/s] 38%|███▊      | 210486/552076 [00:02<00:02, 118462.02it/s] 40%|████      | 222529/552076 [00:02<00:02, 116482.79it/s] 42%|████▏     | 234322/552076 [00:02<00:02, 111283.19it/s] 46%|████▌     | 254401/552076 [00:02<00:02, 128462.33it/s] 50%|████▉     | 275654/552076 [00:02<00:01, 145757.94it/s] 54%|█████▍    | 297724/552076 [00:02<00:01, 162290.17it/s] 57%|█████▋    | 315707/552076 [00:02<00:01, 167179.97it/s] 60%|██████    | 333635/552076 [00:03<00:01, 154715.05it/s] 65%|██████▍   | 356315/552076 [00:03<00:01, 171021.01it/s] 69%|██████▊   | 378882/552076 [00:03<00:00, 184417.93it/s] 73%|███████▎  | 402209/552076 [00:03<00:00, 196778.98it/s] 77%|███████▋  | 424569/552076 [00:03<00:00, 204122.90it/s] 81%|████████  | 447541/552076 [00:03<00:00, 211180.88it/s] 85%|████████▌ | 470554/552076 [00:03<00:00, 216527.97it/s] 89%|████████▉ | 492680/552076 [00:03<00:00, 213389.05it/s] 93%|█████████▎| 515998/552076 [00:03<00:00, 218962.52it/s] 98%|█████████▊| 539443/552076 [00:03<00:00, 223386.89it/s]100%|██████████| 552076/552076 [00:03<00:00, 139218.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11237/552076 [00:00<00:04, 112369.84it/s]  5%|▌         | 28829/552076 [00:00<00:04, 126027.49it/s]  8%|▊         | 46763/552076 [00:00<00:03, 138365.74it/s] 12%|█▏        | 66255/552076 [00:00<00:03, 151556.35it/s] 15%|█▍        | 82241/552076 [00:00<00:03, 153953.25it/s] 18%|█▊        | 100316/552076 [00:00<00:02, 161117.47it/s] 22%|██▏       | 122700/552076 [00:00<00:02, 175904.46it/s] 26%|██▋       | 145085/552076 [00:00<00:02, 187982.86it/s] 30%|███       | 167304/552076 [00:00<00:01, 197084.07it/s] 34%|███▍      | 188443/552076 [00:01<00:01, 201168.10it/s] 38%|███▊      | 208724/552076 [00:01<00:01, 181147.90it/s] 41%|████      | 227452/552076 [00:01<00:01, 182943.46it/s] 45%|████▍     | 246095/552076 [00:01<00:02, 152912.26it/s] 48%|████▊     | 262462/552076 [00:01<00:01, 145794.80it/s] 50%|█████     | 277865/552076 [00:01<00:02, 125807.47it/s] 53%|█████▎    | 294679/552076 [00:01<00:01, 136083.76it/s] 56%|█████▌    | 310064/552076 [00:01<00:01, 140967.00it/s] 60%|█████▉    | 328988/552076 [00:01<00:01, 152648.38it/s] 62%|██████▏   | 345047/552076 [00:02<00:01, 119891.85it/s] 66%|██████▌   | 362736/552076 [00:02<00:01, 132721.13it/s] 69%|██████▊   | 378711/552076 [00:02<00:01, 139817.67it/s] 73%|███████▎  | 400955/552076 [00:02<00:00, 157350.73it/s] 77%|███████▋  | 424140/552076 [00:02<00:00, 174135.86it/s] 81%|████████  | 445952/552076 [00:02<00:00, 185347.84it/s] 85%|████████▍ | 467280/552076 [00:02<00:00, 192925.17it/s] 88%|████████▊ | 488423/552076 [00:02<00:00, 198125.00it/s] 92%|█████████▏| 509203/552076 [00:02<00:00, 200930.92it/s] 96%|█████████▌| 530123/552076 [00:03<00:00, 203340.40it/s]100%|█████████▉| 551206/552076 [00:03<00:00, 205530.00it/s]100%|██████████| 552076/552076 [00:03<00:00, 172637.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21439/552076 [00:00<00:02, 214384.58it/s]  8%|▊         | 42106/552076 [00:00<00:02, 212007.98it/s] 12%|█▏        | 64964/552076 [00:00<00:02, 216719.37it/s] 16%|█▌        | 88163/552076 [00:00<00:02, 221084.53it/s] 20%|██        | 111354/552076 [00:00<00:01, 224224.29it/s] 24%|██▍       | 134206/552076 [00:00<00:01, 225493.63it/s] 28%|██▊       | 156588/552076 [00:00<00:01, 224988.82it/s] 32%|███▏      | 178509/552076 [00:00<00:01, 223220.08it/s] 36%|███▋      | 201400/552076 [00:00<00:01, 224896.57it/s] 41%|████      | 224885/552076 [00:01<00:01, 227790.88it/s] 45%|████▍     | 247961/552076 [00:01<00:01, 228672.17it/s] 49%|████▉     | 270420/552076 [00:01<00:01, 226433.12it/s] 53%|█████▎    | 292951/552076 [00:01<00:01, 226092.48it/s] 57%|█████▋    | 315827/552076 [00:01<00:01, 226884.31it/s] 61%|██████▏   | 338379/552076 [00:01<00:00, 225930.20it/s] 65%|██████▌   | 361561/552076 [00:01<00:00, 227664.10it/s] 70%|██████▉   | 384352/552076 [00:01<00:00, 227737.55it/s] 74%|███████▎  | 407082/552076 [00:01<00:00, 225376.97it/s] 78%|███████▊  | 429595/552076 [00:01<00:00, 223017.68it/s] 82%|████████▏ | 452630/552076 [00:02<00:00, 225167.17it/s] 86%|████████▌ | 475144/552076 [00:02<00:00, 223280.18it/s] 90%|█████████ | 497474/552076 [00:02<00:00, 220174.09it/s] 94%|█████████▍| 519502/552076 [00:02<00:00, 218541.12it/s] 98%|█████████▊| 541367/552076 [00:02<00:00, 217684.47it/s]100%|██████████| 552076/552076 [00:02<00:00, 221835.18it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17685/552076 [00:00<00:03, 176845.11it/s]  6%|▋         | 35636/552076 [00:00<00:02, 177634.02it/s] 10%|█         | 55552/552076 [00:00<00:02, 183585.93it/s] 14%|█▍        | 78071/552076 [00:00<00:02, 194356.42it/s] 18%|█▊        | 99769/552076 [00:00<00:02, 200630.60it/s] 22%|██▏       | 119786/552076 [00:00<00:02, 200491.25it/s] 26%|██▌       | 140877/552076 [00:00<00:02, 203505.26it/s] 29%|██▉       | 159878/552076 [00:00<00:02, 156796.92it/s] 32%|███▏      | 177271/552076 [00:00<00:02, 161571.57it/s] 36%|███▌      | 198963/552076 [00:01<00:02, 174963.17it/s] 40%|███▉      | 219370/552076 [00:01<00:01, 182781.07it/s] 43%|████▎     | 238217/552076 [00:01<00:01, 173659.35it/s] 46%|████▋     | 256076/552076 [00:01<00:01, 168739.07it/s] 50%|████▉     | 273326/552076 [00:01<00:01, 165393.26it/s] 53%|█████▎    | 290144/552076 [00:01<00:01, 163909.13it/s] 56%|█████▋    | 311596/552076 [00:01<00:01, 176392.29it/s] 60%|█████▉    | 329644/552076 [00:01<00:01, 176096.88it/s] 63%|██████▎   | 347540/552076 [00:01<00:01, 167854.26it/s] 66%|██████▌   | 364607/552076 [00:02<00:01, 164048.04it/s] 70%|██████▉   | 385075/552076 [00:02<00:00, 174435.90it/s] 73%|███████▎  | 404992/552076 [00:02<00:00, 181184.88it/s] 77%|███████▋  | 423410/552076 [00:02<00:00, 173809.41it/s] 80%|███████▉  | 441065/552076 [00:02<00:00, 173198.63it/s] 83%|████████▎ | 458577/552076 [00:02<00:00, 164327.32it/s] 86%|████████▋ | 476272/552076 [00:02<00:00, 167918.43it/s] 90%|█████████ | 497311/552076 [00:02<00:00, 178742.74it/s] 94%|█████████▎| 517222/552076 [00:02<00:00, 184400.01it/s] 97%|█████████▋| 537151/552076 [00:03<00:00, 188624.88it/s]100%|██████████| 552076/552076 [00:03<00:00, 177082.95it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20468/552076 [00:00<00:02, 204671.90it/s]  7%|▋         | 40645/552076 [00:00<00:02, 203792.37it/s] 11%|█         | 60547/552076 [00:00<00:02, 202334.50it/s] 14%|█▍        | 78961/552076 [00:00<00:02, 196505.95it/s] 17%|█▋        | 96419/552076 [00:00<00:02, 189362.71it/s] 20%|██        | 111999/552076 [00:00<00:03, 136507.84it/s] 23%|██▎       | 125385/552076 [00:00<00:03, 122841.10it/s] 25%|██▍       | 137743/552076 [00:00<00:03, 115900.73it/s] 27%|██▋       | 149466/552076 [00:01<00:03, 106800.03it/s] 29%|██▉       | 160977/552076 [00:01<00:03, 109162.06it/s] 31%|███       | 172070/552076 [00:01<00:03, 105666.72it/s] 33%|███▎      | 183466/552076 [00:01<00:03, 108022.52it/s] 35%|███▌      | 194697/552076 [00:01<00:03, 109273.72it/s] 37%|███▋      | 206157/552076 [00:01<00:03, 110816.85it/s] 39%|███▉      | 217787/552076 [00:01<00:02, 112405.44it/s] 41%|████▏     | 229079/552076 [00:01<00:02, 111028.00it/s] 44%|████▎     | 240222/552076 [00:01<00:03, 98064.39it/s]  45%|████▌     | 250334/552076 [00:02<00:03, 89852.65it/s] 47%|████▋     | 259668/552076 [00:02<00:03, 75329.06it/s] 49%|████▉     | 269942/552076 [00:02<00:03, 80803.50it/s] 51%|█████     | 280508/552076 [00:02<00:03, 86937.97it/s] 54%|█████▍    | 298859/552076 [00:02<00:02, 103235.67it/s] 58%|█████▊    | 317682/552076 [00:02<00:01, 119410.63it/s] 60%|██████    | 331700/552076 [00:02<00:01, 123114.69it/s] 63%|██████▎   | 345494/552076 [00:02<00:01, 105082.47it/s] 66%|██████▌   | 364686/552076 [00:03<00:01, 121585.76it/s] 69%|██████▉   | 379616/552076 [00:03<00:01, 128753.22it/s] 72%|███████▏  | 397524/552076 [00:03<00:01, 140607.57it/s] 76%|███████▌  | 417814/552076 [00:03<00:00, 154870.93it/s] 79%|███████▉  | 435515/552076 [00:03<00:00, 160908.12it/s] 82%|████████▏ | 455157/552076 [00:03<00:00, 170133.80it/s] 86%|████████▌ | 473048/552076 [00:03<00:00, 171505.33it/s] 90%|████████▉ | 494244/552076 [00:03<00:00, 181920.73it/s] 94%|█████████▎| 516387/552076 [00:03<00:00, 192208.23it/s] 97%|█████████▋| 536361/552076 [00:03<00:00, 194404.11it/s]100%|██████████| 552076/552076 [00:04<00:00, 137767.47it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13351/552076 [00:00<00:04, 133508.85it/s]  5%|▌         | 27635/552076 [00:00<00:03, 136175.72it/s]  7%|▋         | 41322/552076 [00:00<00:03, 136381.36it/s] 11%|█         | 59750/552076 [00:00<00:03, 147914.36it/s] 15%|█▍        | 81076/552076 [00:00<00:02, 162887.48it/s] 19%|█▊        | 102595/552076 [00:00<00:02, 175697.41it/s] 22%|██▏       | 124057/552076 [00:00<00:02, 185806.12it/s] 26%|██▌       | 144618/552076 [00:00<00:02, 191334.21it/s] 30%|██▉       | 165457/552076 [00:00<00:01, 196148.89it/s] 34%|███▍      | 186804/552076 [00:01<00:01, 201041.42it/s] 38%|███▊      | 208098/552076 [00:01<00:01, 204467.22it/s] 41%|████▏     | 228918/552076 [00:01<00:01, 205569.93it/s] 45%|████▌     | 249452/552076 [00:01<00:01, 204394.42it/s] 49%|████▉     | 270085/552076 [00:01<00:01, 204970.46it/s] 53%|█████▎    | 290573/552076 [00:01<00:01, 181418.31it/s] 56%|█████▌    | 309206/552076 [00:01<00:01, 126952.56it/s] 59%|█████▉    | 324489/552076 [00:01<00:01, 122275.95it/s] 61%|██████▏   | 338852/552076 [00:02<00:01, 127983.47it/s] 65%|██████▍   | 357821/552076 [00:02<00:01, 141823.83it/s] 68%|██████▊   | 374107/552076 [00:02<00:01, 147539.19it/s] 71%|███████   | 389916/552076 [00:02<00:01, 125657.22it/s] 73%|███████▎  | 404725/552076 [00:02<00:01, 131639.00it/s] 76%|███████▌  | 418875/552076 [00:02<00:01, 121505.22it/s] 79%|███████▉  | 438645/552076 [00:02<00:00, 137389.50it/s] 83%|████████▎ | 459756/552076 [00:02<00:00, 153465.08it/s] 87%|████████▋ | 480544/552076 [00:02<00:00, 166542.55it/s] 90%|█████████ | 498577/552076 [00:03<00:00, 160650.97it/s] 93%|█████████▎| 515652/552076 [00:03<00:00, 140970.32it/s] 96%|█████████▌| 530894/552076 [00:03<00:00, 130171.05it/s]100%|█████████▉| 551155/552076 [00:03<00:00, 145809.17it/s]100%|██████████| 552076/552076 [00:03<00:00, 159722.62it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20375/552076 [00:00<00:02, 203749.22it/s]  7%|▋         | 39345/552076 [00:00<00:02, 199320.61it/s] 11%|█         | 59587/552076 [00:00<00:02, 200237.50it/s] 15%|█▍        | 80375/552076 [00:00<00:02, 202468.53it/s] 18%|█▊        | 100735/552076 [00:00<00:02, 202803.38it/s] 22%|██▏       | 121796/552076 [00:00<00:02, 205083.69it/s] 25%|██▌       | 140252/552076 [00:00<00:02, 198461.76it/s] 29%|██▉       | 161391/552076 [00:00<00:01, 202170.18it/s] 33%|███▎      | 181435/552076 [00:00<00:01, 201646.02it/s] 37%|███▋      | 202513/552076 [00:01<00:01, 204296.25it/s] 40%|████      | 222754/552076 [00:01<00:01, 203725.58it/s] 44%|████▍     | 244227/552076 [00:01<00:01, 206905.54it/s] 48%|████▊     | 264666/552076 [00:01<00:01, 204756.72it/s] 52%|█████▏    | 285666/552076 [00:01<00:01, 206301.19it/s] 56%|█████▌    | 306460/552076 [00:01<00:01, 206787.68it/s] 59%|█████▉    | 328152/552076 [00:01<00:01, 209726.05it/s] 63%|██████▎   | 349078/552076 [00:01<00:00, 208719.46it/s] 67%|██████▋   | 369981/552076 [00:01<00:00, 208811.39it/s] 71%|███████   | 391199/552076 [00:01<00:00, 209808.22it/s] 75%|███████▍  | 412166/552076 [00:02<00:00, 204125.17it/s] 79%|███████▊  | 434126/552076 [00:02<00:00, 208533.16it/s] 82%|████████▏ | 455020/552076 [00:02<00:00, 193250.40it/s] 86%|████████▌ | 474597/552076 [00:02<00:00, 185320.62it/s] 90%|████████▉ | 496300/552076 [00:02<00:00, 193814.24it/s] 94%|█████████▎| 517402/552076 [00:02<00:00, 198672.82it/s] 98%|█████████▊| 538877/552076 [00:02<00:00, 203233.06it/s]100%|██████████| 552076/552076 [00:02<00:00, 202688.25it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20753/552076 [00:00<00:02, 207527.72it/s]  7%|▋         | 40941/552076 [00:00<00:02, 205797.56it/s] 11%|█         | 61256/552076 [00:00<00:02, 204994.66it/s] 15%|█▍        | 81577/552076 [00:00<00:02, 204454.12it/s] 18%|█▊        | 101857/552076 [00:00<00:02, 203954.68it/s] 22%|██▏       | 122255/552076 [00:00<00:02, 203961.75it/s] 26%|██▌       | 143191/552076 [00:00<00:01, 205547.35it/s] 29%|██▉       | 162041/552076 [00:00<00:01, 197804.46it/s] 33%|███▎      | 180691/552076 [00:00<00:02, 175905.32it/s] 36%|███▌      | 197940/552076 [00:01<00:03, 115561.93it/s] 38%|███▊      | 211940/552076 [00:01<00:03, 91530.74it/s]  40%|████      | 223589/552076 [00:01<00:03, 97407.60it/s] 43%|████▎     | 235181/552076 [00:01<00:03, 92160.90it/s] 45%|████▍     | 245751/552076 [00:01<00:04, 73573.08it/s] 47%|████▋     | 258876/552076 [00:01<00:03, 83688.34it/s] 49%|████▊     | 268803/552076 [00:02<00:03, 83512.33it/s] 52%|█████▏    | 289511/552076 [00:02<00:02, 101721.27it/s] 56%|█████▋    | 310930/552076 [00:02<00:01, 120741.14it/s] 60%|█████▉    | 330747/552076 [00:02<00:01, 136772.87it/s] 64%|██████▎   | 350846/552076 [00:02<00:01, 151272.15it/s] 67%|██████▋   | 371226/552076 [00:02<00:01, 163948.23it/s] 71%|███████   | 392119/552076 [00:02<00:00, 175268.02it/s] 75%|███████▍  | 413519/552076 [00:02<00:00, 185330.56it/s] 79%|███████▉  | 435387/552076 [00:02<00:00, 194214.83it/s] 83%|████████▎ | 455869/552076 [00:03<00:00, 196388.65it/s] 86%|████████▋ | 477179/552076 [00:03<00:00, 201117.69it/s] 90%|█████████ | 499350/552076 [00:03<00:00, 206880.07it/s] 94%|█████████▍| 520466/552076 [00:03<00:00, 206755.55it/s] 98%|█████████▊| 542276/552076 [00:03<00:00, 210031.62it/s]100%|██████████| 552076/552076 [00:03<00:00, 159082.71it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14221/552076 [00:00<00:03, 142209.46it/s]  5%|▌         | 28097/552076 [00:00<00:03, 141156.17it/s]  8%|▊         | 42387/552076 [00:00<00:03, 141671.16it/s] 10%|█         | 56672/552076 [00:00<00:03, 142020.68it/s] 13%|█▎        | 70938/552076 [00:00<00:03, 142211.51it/s] 16%|█▋        | 90900/552076 [00:00<00:02, 155639.52it/s] 20%|██        | 112312/552076 [00:00<00:02, 169528.65it/s] 24%|██▍       | 133314/552076 [00:00<00:02, 179935.07it/s] 28%|██▊       | 154717/552076 [00:00<00:02, 188963.39it/s] 32%|███▏      | 175699/552076 [00:01<00:01, 194768.57it/s] 36%|███▌      | 197031/552076 [00:01<00:01, 199984.17it/s] 40%|███▉      | 219067/552076 [00:01<00:01, 205687.97it/s] 43%|████▎     | 240114/552076 [00:01<00:01, 207097.91it/s] 47%|████▋     | 261355/552076 [00:01<00:01, 208659.09it/s] 51%|█████▏    | 283070/552076 [00:01<00:01, 211133.38it/s] 55%|█████▌    | 304221/552076 [00:01<00:01, 210352.94it/s] 59%|█████▉    | 325579/552076 [00:01<00:01, 211310.38it/s] 63%|██████▎   | 346919/552076 [00:01<00:00, 211932.87it/s] 67%|██████▋   | 368556/552076 [00:01<00:00, 213244.24it/s] 71%|███████   | 389893/552076 [00:02<00:00, 211585.31it/s] 74%|███████▍  | 411063/552076 [00:02<00:00, 211452.86it/s] 78%|███████▊  | 432217/552076 [00:02<00:00, 204384.30it/s] 82%|████████▏ | 452713/552076 [00:02<00:00, 184518.08it/s] 85%|████████▌ | 471572/552076 [00:02<00:00, 138847.13it/s] 88%|████████▊ | 488050/552076 [00:02<00:00, 145726.47it/s] 92%|█████████▏| 507211/552076 [00:02<00:00, 157005.35it/s] 96%|█████████▌| 528479/552076 [00:02<00:00, 170384.67it/s] 99%|█████████▉| 548321/552076 [00:02<00:00, 177925.84it/s]100%|██████████| 552076/552076 [00:02<00:00, 185053.36it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17755/552076 [00:00<00:03, 177543.40it/s]  7%|▋         | 38896/552076 [00:00<00:02, 186504.96it/s] 11%|█         | 58533/552076 [00:00<00:02, 189358.21it/s] 14%|█▍        | 76757/552076 [00:00<00:02, 187162.34it/s] 17%|█▋        | 91283/552076 [00:00<00:02, 157919.10it/s] 19%|█▉        | 104923/552076 [00:00<00:03, 113335.91it/s] 21%|██        | 116521/552076 [00:00<00:04, 91436.99it/s]  23%|██▎       | 126530/552076 [00:01<00:04, 85886.32it/s] 25%|██▍       | 137590/552076 [00:01<00:04, 92056.01it/s] 27%|██▋       | 148423/552076 [00:01<00:04, 96396.86it/s] 29%|██▊       | 158534/552076 [00:01<00:04, 92500.78it/s] 30%|███       | 168148/552076 [00:01<00:06, 63851.15it/s] 32%|███▏      | 176168/552076 [00:01<00:05, 68009.62it/s] 34%|███▎      | 185812/552076 [00:01<00:04, 74607.39it/s] 35%|███▌      | 195935/552076 [00:01<00:04, 80995.71it/s] 37%|███▋      | 206531/552076 [00:02<00:03, 87153.73it/s] 39%|███▉      | 217933/552076 [00:02<00:03, 93782.18it/s] 42%|████▏     | 230093/552076 [00:02<00:03, 100692.16it/s] 44%|████▎     | 240756/552076 [00:02<00:03, 87723.71it/s]  45%|████▌     | 250999/552076 [00:02<00:03, 91670.97it/s] 47%|████▋     | 260751/552076 [00:02<00:03, 93347.81it/s] 49%|████▉     | 270561/552076 [00:02<00:02, 94724.11it/s] 51%|█████     | 281930/552076 [00:02<00:02, 99712.41it/s] 53%|█████▎    | 293991/552076 [00:02<00:02, 105178.86it/s] 55%|█████▌    | 305688/552076 [00:02<00:02, 108457.76it/s] 57%|█████▋    | 316822/552076 [00:03<00:02, 109305.44it/s] 60%|█████▉    | 328629/552076 [00:03<00:01, 111793.13it/s] 62%|██████▏   | 340748/552076 [00:03<00:01, 114452.32it/s] 64%|██████▍   | 352292/552076 [00:03<00:01, 103808.09it/s] 66%|██████▌   | 364681/552076 [00:03<00:01, 109112.45it/s] 68%|██████▊   | 376553/552076 [00:03<00:01, 111827.10it/s] 70%|███████   | 388635/552076 [00:03<00:01, 114379.29it/s] 72%|███████▏  | 400223/552076 [00:03<00:01, 114794.93it/s] 75%|███████▍  | 411808/552076 [00:03<00:01, 112407.08it/s] 77%|███████▋  | 423134/552076 [00:04<00:01, 110908.91it/s] 79%|███████▊  | 434289/552076 [00:04<00:01, 110383.66it/s] 81%|████████  | 446766/552076 [00:04<00:00, 114337.64it/s] 83%|████████▎ | 458268/552076 [00:04<00:00, 114188.94it/s] 85%|████████▌ | 470595/552076 [00:04<00:00, 116768.44it/s] 87%|████████▋ | 482651/552076 [00:04<00:00, 117878.27it/s] 90%|████████▉ | 495021/552076 [00:04<00:00, 119563.90it/s] 92%|█████████▏| 507009/552076 [00:04<00:00, 119387.80it/s] 94%|█████████▍| 518970/552076 [00:04<00:00, 119270.97it/s] 96%|█████████▋| 531865/552076 [00:04<00:00, 122018.55it/s] 99%|█████████▊| 544094/552076 [00:05<00:00, 111116.83it/s]100%|██████████| 552076/552076 [00:05<00:00, 106392.49it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5090/552076 [00:00<00:10, 50892.04it/s]  2%|▏         | 10648/552076 [00:00<00:10, 52212.41it/s]  3%|▎         | 16222/552076 [00:00<00:10, 53221.86it/s]  4%|▎         | 19810/552076 [00:00<00:11, 45655.16it/s]  5%|▌         | 30063/552076 [00:00<00:09, 54769.42it/s]  7%|▋         | 36801/552076 [00:00<00:08, 58026.64it/s]  9%|▊         | 47965/552076 [00:00<00:07, 67793.68it/s] 11%|█         | 59765/552076 [00:00<00:06, 77713.11it/s] 13%|█▎        | 74377/552076 [00:00<00:05, 90410.98it/s] 16%|█▌        | 86396/552076 [00:01<00:04, 97669.61it/s] 18%|█▊        | 98342/552076 [00:01<00:04, 103323.10it/s] 20%|█▉        | 109908/552076 [00:01<00:04, 106736.96it/s] 22%|██▏       | 122088/552076 [00:01<00:03, 110848.69it/s] 24%|██▍       | 133692/552076 [00:01<00:03, 105397.50it/s] 26%|██▌       | 144651/552076 [00:01<00:03, 102638.33it/s] 28%|██▊       | 156987/552076 [00:01<00:03, 108083.27it/s] 30%|███       | 168089/552076 [00:01<00:04, 91932.01it/s]  32%|███▏      | 177906/552076 [00:01<00:04, 90492.44it/s] 34%|███▍      | 187397/552076 [00:02<00:04, 76605.37it/s] 36%|███▌      | 197903/552076 [00:02<00:04, 80402.21it/s] 38%|███▊      | 207546/552076 [00:02<00:04, 80937.41it/s] 39%|███▉      | 216007/552076 [00:02<00:04, 70702.60it/s] 40%|████      | 223567/552076 [00:02<00:04, 70396.81it/s] 43%|████▎     | 235844/552076 [00:02<00:03, 80727.54it/s] 44%|████▍     | 244729/552076 [00:02<00:03, 83003.03it/s] 46%|████▌     | 253590/552076 [00:02<00:03, 79361.02it/s] 47%|████▋     | 261953/552076 [00:03<00:03, 79110.87it/s] 49%|████▉     | 270163/552076 [00:03<00:03, 73255.12it/s] 50%|█████     | 277784/552076 [00:03<00:03, 72521.62it/s] 52%|█████▏    | 285245/552076 [00:03<00:03, 71092.45it/s] 53%|█████▎    | 294451/552076 [00:03<00:03, 76305.73it/s] 55%|█████▍    | 302296/552076 [00:03<00:03, 67095.17it/s] 56%|█████▌    | 309358/552076 [00:03<00:03, 66641.27it/s] 58%|█████▊    | 320404/552076 [00:03<00:03, 75642.30it/s] 60%|██████    | 332487/552076 [00:03<00:02, 85199.96it/s] 62%|██████▏   | 344831/552076 [00:04<00:02, 93928.68it/s] 64%|██████▍   | 355066/552076 [00:04<00:02, 94839.88it/s] 67%|██████▋   | 367262/552076 [00:04<00:01, 101618.19it/s] 68%|██████▊   | 377974/552076 [00:04<00:01, 94461.59it/s]  70%|███████   | 387906/552076 [00:04<00:01, 93317.59it/s] 72%|███████▏  | 397903/552076 [00:04<00:01, 95217.25it/s] 74%|███████▍  | 410259/552076 [00:04<00:01, 102251.85it/s] 76%|███████▌  | 420806/552076 [00:04<00:01, 93488.61it/s]  78%|███████▊  | 431486/552076 [00:04<00:01, 97118.90it/s] 80%|███████▉  | 441494/552076 [00:05<00:01, 95728.98it/s] 82%|████████▏ | 453565/552076 [00:05<00:00, 102065.72it/s] 84%|████████▍ | 464036/552076 [00:05<00:00, 101377.15it/s] 86%|████████▌ | 475898/552076 [00:05<00:00, 105997.64it/s] 88%|████████▊ | 486683/552076 [00:05<00:00, 95796.16it/s]  90%|█████████ | 498894/552076 [00:05<00:00, 102416.19it/s] 92%|█████████▏| 509485/552076 [00:05<00:00, 99109.06it/s]  95%|█████████▍| 521757/552076 [00:05<00:00, 105177.33it/s] 96%|█████████▋| 532624/552076 [00:05<00:00, 106200.61it/s] 99%|█████████▊| 544016/552076 [00:05<00:00, 108403.30it/s]100%|██████████| 552076/552076 [00:06<00:00, 91546.39it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6507/552076 [00:00<00:08, 65066.49it/s]  2%|▏         | 13081/552076 [00:00<00:08, 65266.32it/s]  3%|▎         | 16600/552076 [00:00<00:10, 51855.35it/s]  4%|▍         | 20890/552076 [00:00<00:10, 48798.53it/s]  5%|▍         | 27513/552076 [00:00<00:09, 52980.23it/s]  6%|▌         | 34175/552076 [00:00<00:09, 56446.39it/s]  7%|▋         | 40799/552076 [00:00<00:08, 59066.11it/s]  8%|▊         | 46414/552076 [00:00<00:09, 53133.24it/s] 10%|▉         | 52993/552076 [00:00<00:08, 56386.77it/s] 11%|█         | 59643/552076 [00:01<00:08, 59079.85it/s] 12%|█▏        | 66248/552076 [00:01<00:07, 61010.59it/s] 13%|█▎        | 72384/552076 [00:01<00:08, 57377.04it/s] 14%|█▍        | 78965/552076 [00:01<00:08, 58457.73it/s] 15%|█▌        | 84864/552076 [00:01<00:09, 48484.83it/s] 17%|█▋        | 91519/552076 [00:01<00:08, 52782.33it/s] 18%|█▊        | 98105/552076 [00:01<00:08, 56123.55it/s] 19%|█▉        | 104665/552076 [00:01<00:07, 58663.67it/s] 20%|██        | 111246/552076 [00:01<00:07, 60638.45it/s] 21%|██▏       | 117660/552076 [00:02<00:07, 61647.95it/s] 22%|██▏       | 124174/552076 [00:02<00:06, 62653.73it/s] 24%|██▎       | 130613/552076 [00:02<00:06, 63163.39it/s] 25%|██▍       | 137098/552076 [00:02<00:06, 63658.72it/s] 26%|██▌       | 143650/552076 [00:02<00:06, 64202.91it/s] 27%|██▋       | 150276/552076 [00:02<00:06, 64803.93it/s] 28%|██▊       | 156783/552076 [00:02<00:06, 60899.40it/s] 30%|██▉       | 162940/552076 [00:02<00:06, 60424.51it/s] 31%|███       | 169192/552076 [00:02<00:06, 61036.31it/s] 32%|███▏      | 175798/552076 [00:02<00:06, 62458.80it/s] 33%|███▎      | 182077/552076 [00:03<00:06, 59869.78it/s] 34%|███▍      | 188596/552076 [00:03<00:05, 61370.66it/s] 35%|███▌      | 194775/552076 [00:03<00:05, 60708.07it/s] 36%|███▋      | 201472/552076 [00:03<00:05, 62458.82it/s] 38%|███▊      | 208167/552076 [00:03<00:05, 63738.76it/s] 39%|███▉      | 214860/552076 [00:03<00:05, 64662.62it/s] 40%|████      | 221497/552076 [00:03<00:05, 65163.54it/s] 41%|████▏     | 228036/552076 [00:03<00:04, 65228.77it/s] 43%|████▎     | 234715/552076 [00:03<00:04, 65688.56it/s] 44%|████▎     | 241294/552076 [00:03<00:04, 62347.71it/s] 45%|████▍     | 247571/552076 [00:04<00:04, 61266.14it/s] 46%|████▌     | 253732/552076 [00:04<00:05, 51347.51it/s] 47%|████▋     | 259163/552076 [00:04<00:06, 45208.84it/s] 48%|████▊     | 264025/552076 [00:04<00:07, 40204.81it/s] 49%|████▊     | 268387/552076 [00:04<00:07, 37042.32it/s] 49%|████▉     | 272806/552076 [00:04<00:07, 38931.32it/s] 51%|█████     | 279384/552076 [00:04<00:06, 44363.41it/s] 52%|█████▏    | 284841/552076 [00:05<00:05, 46789.08it/s] 53%|█████▎    | 289851/552076 [00:05<00:05, 47334.93it/s] 54%|█████▎    | 296334/552076 [00:05<00:04, 51503.59it/s] 55%|█████▍    | 301756/552076 [00:05<00:05, 46022.50it/s] 56%|█████▌    | 306657/552076 [00:05<00:05, 46464.35it/s] 57%|█████▋    | 312553/552076 [00:05<00:04, 49618.30it/s] 58%|█████▊    | 319237/552076 [00:05<00:04, 52281.13it/s] 60%|█████▉    | 328907/552076 [00:05<00:03, 60636.43it/s] 62%|██████▏   | 341746/552076 [00:05<00:02, 72041.12it/s] 64%|██████▍   | 353968/552076 [00:05<00:02, 82158.91it/s] 66%|██████▌   | 363608/552076 [00:06<00:02, 83181.86it/s] 68%|██████▊   | 372926/552076 [00:06<00:02, 84917.92it/s] 69%|██████▉   | 382127/552076 [00:06<00:02, 84731.71it/s] 71%|███████   | 391097/552076 [00:06<00:02, 74907.11it/s] 72%|███████▏  | 399145/552076 [00:06<00:02, 71552.95it/s] 74%|███████▎  | 406722/552076 [00:06<00:02, 61426.98it/s] 75%|███████▍  | 413411/552076 [00:06<00:02, 62571.12it/s] 76%|███████▌  | 420056/552076 [00:07<00:02, 53187.59it/s] 77%|███████▋  | 425890/552076 [00:07<00:02, 49537.28it/s] 79%|███████▉  | 435845/552076 [00:07<00:01, 58328.03it/s] 80%|████████  | 442587/552076 [00:07<00:02, 51257.99it/s] 82%|████████▏ | 453586/552076 [00:07<00:01, 61035.19it/s] 84%|████████▍ | 463355/552076 [00:07<00:01, 68776.21it/s] 86%|████████▌ | 475675/552076 [00:07<00:00, 79283.20it/s] 88%|████████▊ | 488177/552076 [00:07<00:00, 89055.74it/s] 91%|█████████ | 503623/552076 [00:07<00:00, 102014.65it/s] 95%|█████████▌| 525939/552076 [00:08<00:00, 121860.41it/s] 99%|█████████▉| 549088/552076 [00:08<00:00, 142039.79it/s]100%|██████████| 552076/552076 [00:08<00:00, 67874.99it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12706/552076 [00:00<00:04, 127054.97it/s]  6%|▌         | 34073/552076 [00:00<00:03, 144644.20it/s]  9%|▉         | 52121/552076 [00:00<00:03, 153805.61it/s] 13%|█▎        | 72465/552076 [00:00<00:02, 165951.35it/s] 17%|█▋        | 93942/552076 [00:00<00:02, 178095.59it/s] 21%|██        | 115914/552076 [00:00<00:02, 188826.88it/s] 25%|██▍       | 135920/552076 [00:00<00:02, 192059.25it/s] 28%|██▊       | 154612/552076 [00:00<00:02, 161757.97it/s] 32%|███▏      | 177305/552076 [00:00<00:02, 177008.23it/s] 36%|███▌      | 200028/552076 [00:01<00:01, 189577.40it/s] 40%|████      | 222879/552076 [00:01<00:01, 199787.35it/s] 44%|████▍     | 243547/552076 [00:01<00:01, 186052.83it/s] 48%|████▊     | 263720/552076 [00:01<00:01, 190493.18it/s] 52%|█████▏    | 286688/552076 [00:01<00:01, 200768.75it/s] 56%|█████▌    | 307976/552076 [00:01<00:01, 204253.15it/s] 60%|█████▉    | 329293/552076 [00:01<00:01, 206847.79it/s] 64%|██████▍   | 352235/552076 [00:01<00:00, 213137.11it/s] 68%|██████▊   | 375477/552076 [00:01<00:00, 218577.06it/s] 72%|███████▏  | 398933/552076 [00:01<00:00, 223136.55it/s] 76%|███████▋  | 421871/552076 [00:02<00:00, 224973.03it/s] 81%|████████  | 444485/552076 [00:02<00:00, 222080.56it/s] 85%|████████▍ | 467400/552076 [00:02<00:00, 224152.71it/s] 89%|████████▉ | 490758/552076 [00:02<00:00, 226897.40it/s] 93%|█████████▎| 513503/552076 [00:02<00:00, 216867.52it/s] 97%|█████████▋| 535323/552076 [00:02<00:00, 212808.82it/s]100%|██████████| 552076/552076 [00:02<00:00, 204795.84it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20827/552076 [00:00<00:02, 208269.21it/s]  8%|▊         | 43715/552076 [00:00<00:02, 214050.63it/s] 12%|█▏        | 67258/552076 [00:00<00:02, 220042.87it/s] 16%|█▋        | 90902/552076 [00:00<00:02, 224717.28it/s] 21%|██        | 114350/552076 [00:00<00:01, 227558.93it/s] 25%|██▍       | 137352/552076 [00:00<00:01, 228288.85it/s] 29%|██▉       | 161039/552076 [00:00<00:01, 230795.65it/s] 33%|███▎      | 184717/552076 [00:00<00:01, 232558.36it/s] 38%|███▊      | 207915/552076 [00:00<00:01, 232381.62it/s] 42%|████▏     | 230959/552076 [00:01<00:01, 231792.27it/s] 46%|████▌     | 253927/552076 [00:01<00:01, 231152.93it/s] 50%|█████     | 277532/552076 [00:01<00:01, 232599.83it/s] 55%|█████▍    | 301178/552076 [00:01<00:01, 233741.17it/s] 59%|█████▉    | 324359/552076 [00:01<00:01, 225967.94it/s] 63%|██████▎   | 347686/552076 [00:01<00:00, 228108.89it/s] 67%|██████▋   | 371129/552076 [00:01<00:00, 229967.91it/s] 71%|███████▏  | 394094/552076 [00:01<00:00, 229052.07it/s] 76%|███████▌  | 416978/552076 [00:01<00:00, 222170.37it/s] 80%|███████▉  | 440593/552076 [00:01<00:00, 226185.84it/s] 84%|████████▍ | 463251/552076 [00:02<00:00, 187527.03it/s] 88%|████████▊ | 483133/552076 [00:02<00:00, 169533.08it/s] 91%|█████████ | 501206/552076 [00:02<00:00, 131455.35it/s] 94%|█████████▎| 517140/552076 [00:02<00:00, 138738.37it/s] 97%|█████████▋| 538205/552076 [00:02<00:00, 154568.18it/s]100%|██████████| 552076/552076 [00:02<00:00, 200481.47it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7846/552076 [00:00<00:06, 78458.39it/s]  4%|▎         | 20301/552076 [00:00<00:06, 85496.60it/s]  5%|▍         | 25193/552076 [00:00<00:08, 65759.39it/s]  7%|▋         | 40365/552076 [00:00<00:06, 79225.34it/s] 10%|▉         | 53808/552076 [00:00<00:05, 90356.48it/s] 14%|█▎        | 74965/552076 [00:00<00:04, 109109.62it/s] 16%|█▌        | 87980/552076 [00:00<00:04, 102798.26it/s] 20%|█▉        | 109611/552076 [00:00<00:03, 122005.31it/s] 24%|██▎       | 129842/552076 [00:00<00:03, 138297.79it/s] 28%|██▊       | 152627/552076 [00:01<00:02, 156783.30it/s] 32%|███▏      | 175974/552076 [00:01<00:02, 173921.18it/s] 35%|███▌      | 195782/552076 [00:01<00:02, 168439.91it/s] 39%|███▉      | 216785/552076 [00:01<00:01, 179076.30it/s] 43%|████▎     | 238978/552076 [00:01<00:01, 190086.95it/s] 47%|████▋     | 260964/552076 [00:01<00:01, 198135.10it/s] 51%|█████     | 282208/552076 [00:01<00:01, 202218.25it/s] 55%|█████▍    | 303081/552076 [00:01<00:01, 203636.77it/s] 59%|█████▉    | 325438/552076 [00:01<00:01, 209231.36it/s] 63%|██████▎   | 346927/552076 [00:02<00:00, 210895.84it/s] 67%|██████▋   | 368271/552076 [00:02<00:00, 211036.67it/s] 71%|███████   | 389911/552076 [00:02<00:00, 212615.51it/s] 75%|███████▍  | 412390/552076 [00:02<00:00, 216127.02it/s] 79%|███████▊  | 434364/552076 [00:02<00:00, 217195.98it/s] 83%|████████▎ | 456158/552076 [00:02<00:00, 213419.12it/s] 87%|████████▋ | 477567/552076 [00:02<00:00, 206983.63it/s] 90%|█████████ | 499604/552076 [00:02<00:00, 210822.93it/s] 95%|█████████▍| 522030/552076 [00:02<00:00, 214679.44it/s] 99%|█████████▊| 543986/552076 [00:02<00:00, 216117.99it/s]100%|██████████| 552076/552076 [00:02<00:00, 186663.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21893/552076 [00:00<00:02, 218929.16it/s]  8%|▊         | 43332/552076 [00:00<00:02, 217546.79it/s] 12%|█▏        | 66018/552076 [00:00<00:02, 220258.76it/s] 16%|█▌        | 88977/552076 [00:00<00:02, 222976.33it/s] 20%|██        | 112146/552076 [00:00<00:01, 225519.47it/s] 24%|██▍       | 134426/552076 [00:00<00:01, 224696.10it/s] 28%|██▊       | 156919/552076 [00:00<00:01, 224763.23it/s] 33%|███▎      | 180596/552076 [00:00<00:01, 228233.29it/s] 37%|███▋      | 202177/552076 [00:00<00:01, 222262.75it/s] 40%|████      | 223568/552076 [00:01<00:01, 214655.77it/s] 44%|████▍     | 244505/552076 [00:01<00:01, 190879.34it/s] 48%|████▊     | 263712/552076 [00:01<00:01, 164118.04it/s] 51%|█████     | 280867/552076 [00:01<00:01, 154890.71it/s] 54%|█████▍    | 296983/552076 [00:01<00:01, 146296.98it/s] 57%|█████▋    | 316877/552076 [00:01<00:01, 158910.13it/s] 61%|██████    | 337303/552076 [00:01<00:01, 170249.04it/s] 65%|██████▍   | 357733/552076 [00:01<00:01, 179208.92it/s] 68%|██████▊   | 377600/552076 [00:01<00:00, 184633.00it/s] 72%|███████▏  | 398660/552076 [00:02<00:00, 191724.71it/s] 76%|███████▌  | 418237/552076 [00:02<00:00, 192366.94it/s] 79%|███████▉  | 437758/552076 [00:02<00:00, 157048.63it/s] 82%|████████▏ | 454721/552076 [00:02<00:00, 134464.79it/s] 85%|████████▌ | 469616/552076 [00:02<00:00, 115727.21it/s] 88%|████████▊ | 485034/552076 [00:02<00:00, 125085.25it/s] 91%|█████████▏| 504687/552076 [00:02<00:00, 140396.64it/s] 95%|█████████▍| 524145/552076 [00:02<00:00, 153192.73it/s] 98%|█████████▊| 540851/552076 [00:03<00:00, 147008.41it/s]100%|██████████| 552076/552076 [00:03<00:00, 170612.11it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5918/552076 [00:00<00:09, 59175.26it/s]  4%|▍         | 23418/552076 [00:00<00:07, 73835.34it/s]  8%|▊         | 43308/552076 [00:00<00:05, 91001.28it/s] 11%|█▏        | 63386/552076 [00:00<00:04, 108856.33it/s] 15%|█▌        | 83608/552076 [00:00<00:03, 126357.09it/s] 19%|█▉        | 103777/552076 [00:00<00:03, 142302.18it/s] 23%|██▎       | 124627/552076 [00:00<00:02, 157282.55it/s] 27%|██▋       | 146328/552076 [00:00<00:02, 171436.26it/s] 30%|██▉       | 165475/552076 [00:00<00:02, 158353.67it/s] 33%|███▎      | 184227/552076 [00:01<00:02, 166101.17it/s] 37%|███▋      | 205344/552076 [00:01<00:01, 177462.89it/s] 41%|████      | 225954/552076 [00:01<00:01, 185181.17it/s] 45%|████▍     | 246535/552076 [00:01<00:01, 190921.31it/s] 48%|████▊     | 266258/552076 [00:01<00:01, 190204.61it/s] 52%|█████▏    | 287615/552076 [00:01<00:01, 196657.17it/s] 56%|█████▌    | 308248/552076 [00:01<00:01, 199462.35it/s] 60%|█████▉    | 329002/552076 [00:01<00:01, 201818.06it/s] 63%|██████▎   | 350391/552076 [00:01<00:00, 205293.59it/s] 67%|██████▋   | 371070/552076 [00:01<00:00, 204259.84it/s] 71%|███████   | 392065/552076 [00:02<00:00, 205931.55it/s] 75%|███████▍  | 412736/552076 [00:02<00:00, 203447.92it/s] 78%|███████▊  | 433270/552076 [00:02<00:00, 204011.35it/s] 82%|████████▏ | 453715/552076 [00:02<00:00, 201991.62it/s] 86%|████████▌ | 473949/552076 [00:02<00:00, 202091.88it/s] 90%|████████▉ | 494183/552076 [00:02<00:00, 198598.14it/s] 93%|█████████▎| 514851/552076 [00:02<00:00, 200950.85it/s] 97%|█████████▋| 535690/552076 [00:02<00:00, 203124.01it/s]100%|██████████| 552076/552076 [00:02<00:00, 194271.85it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 13914/552076 [00:00<00:03, 139135.16it/s]  5%|▍         | 27447/552076 [00:00<00:03, 137970.87it/s]  8%|▊         | 41664/552076 [00:00<00:03, 139203.39it/s] 10%|█         | 55735/552076 [00:00<00:03, 139648.35it/s] 13%|█▎        | 70183/552076 [00:00<00:03, 141063.12it/s] 16%|█▋        | 90604/552076 [00:00<00:02, 155486.82it/s] 20%|██        | 110630/552076 [00:00<00:02, 166664.85it/s] 24%|██▎       | 130207/552076 [00:00<00:02, 174444.67it/s] 27%|██▋       | 149018/552076 [00:00<00:02, 178329.02it/s] 31%|███       | 169286/552076 [00:01<00:02, 184994.95it/s] 34%|███▍      | 189747/552076 [00:01<00:01, 190471.29it/s] 38%|███▊      | 208779/552076 [00:01<00:01, 190124.69it/s] 41%|████▏     | 228215/552076 [00:01<00:01, 191373.67it/s] 45%|████▍     | 247974/552076 [00:01<00:01, 193196.89it/s] 48%|████▊     | 267606/552076 [00:01<00:01, 194119.28it/s] 52%|█████▏    | 287020/552076 [00:01<00:01, 193228.10it/s] 55%|█████▌    | 306345/552076 [00:01<00:01, 193136.51it/s] 59%|█████▉    | 326116/552076 [00:01<00:01, 194484.46it/s] 63%|██████▎   | 345568/552076 [00:02<00:01, 147476.71it/s] 66%|██████▌   | 362013/552076 [00:02<00:01, 126939.67it/s] 68%|██████▊   | 376399/552076 [00:02<00:01, 103680.66it/s] 72%|███████▏  | 396013/552076 [00:02<00:01, 120757.99it/s] 75%|███████▌  | 415503/552076 [00:02<00:01, 136314.40it/s] 79%|███████▊  | 433579/552076 [00:02<00:00, 147168.59it/s] 82%|████████▏ | 450180/552076 [00:02<00:00, 112486.27it/s] 84%|████████▍ | 463978/552076 [00:03<00:00, 102882.52it/s] 86%|████████▋ | 476210/552076 [00:03<00:00, 104674.12it/s] 89%|████████▉ | 493932/552076 [00:03<00:00, 119327.58it/s] 93%|█████████▎| 515660/552076 [00:03<00:00, 137988.84it/s] 97%|█████████▋| 536246/552076 [00:03<00:00, 153134.47it/s]100%|██████████| 552076/552076 [00:03<00:00, 155150.73it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21630/552076 [00:00<00:02, 216299.69it/s]  8%|▊         | 42173/552076 [00:00<00:02, 212918.22it/s] 11%|█         | 60980/552076 [00:00<00:02, 204798.92it/s] 15%|█▍        | 81804/552076 [00:00<00:02, 205817.55it/s] 18%|█▊        | 101336/552076 [00:00<00:02, 202551.15it/s] 22%|██▏       | 120772/552076 [00:00<00:02, 200020.51it/s] 26%|██▌       | 141702/552076 [00:00<00:02, 202716.43it/s] 29%|██▉       | 162059/552076 [00:00<00:01, 202969.92it/s] 33%|███▎      | 182309/552076 [00:00<00:01, 202827.61it/s] 37%|███▋      | 203361/552076 [00:01<00:01, 205075.28it/s] 41%|████      | 225618/552076 [00:01<00:01, 210027.00it/s] 45%|████▍     | 247983/552076 [00:01<00:01, 213932.80it/s] 49%|████▉     | 270229/552076 [00:01<00:01, 216420.53it/s] 53%|█████▎    | 292397/552076 [00:01<00:01, 217968.66it/s] 57%|█████▋    | 314180/552076 [00:01<00:01, 217924.77it/s] 61%|██████    | 335892/552076 [00:01<00:01, 215112.97it/s] 65%|██████▍   | 357961/552076 [00:01<00:00, 216755.70it/s] 69%|██████▉   | 380204/552076 [00:01<00:00, 218427.27it/s] 73%|███████▎  | 402310/552076 [00:01<00:00, 219209.45it/s] 77%|███████▋  | 424219/552076 [00:02<00:00, 215043.34it/s] 81%|████████  | 446816/552076 [00:02<00:00, 218206.55it/s] 85%|████████▍ | 468655/552076 [00:02<00:00, 215777.34it/s] 89%|████████▉ | 491068/552076 [00:02<00:00, 218216.03it/s] 93%|█████████▎| 513022/552076 [00:02<00:00, 218609.27it/s] 97%|█████████▋| 535287/552076 [00:02<00:00, 219803.58it/s]100%|██████████| 552076/552076 [00:02<00:00, 212026.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13303/552076 [00:00<00:04, 133027.27it/s]  5%|▍         | 26047/552076 [00:00<00:04, 131299.39it/s]  7%|▋         | 40476/552076 [00:00<00:03, 134941.93it/s] 10%|▉         | 54312/552076 [00:00<00:03, 135947.71it/s] 12%|█▏        | 68371/552076 [00:00<00:03, 137306.19it/s] 16%|█▌        | 87616/552076 [00:00<00:03, 150218.17it/s] 20%|█▉        | 109273/552076 [00:00<00:02, 165421.57it/s] 24%|██▎       | 130974/552076 [00:00<00:02, 178124.45it/s] 27%|██▋       | 151358/552076 [00:00<00:02, 185129.77it/s] 31%|███▏      | 172698/552076 [00:01<00:01, 192790.74it/s] 35%|███▍      | 192121/552076 [00:01<00:02, 149427.56it/s] 38%|███▊      | 208657/552076 [00:01<00:02, 137023.27it/s] 41%|████      | 223676/552076 [00:01<00:02, 133655.72it/s] 43%|████▎     | 237982/552076 [00:01<00:02, 134038.30it/s] 46%|████▌     | 252439/552076 [00:01<00:02, 137032.76it/s] 48%|████▊     | 266794/552076 [00:01<00:02, 138924.31it/s] 51%|█████     | 281027/552076 [00:01<00:02, 120439.91it/s] 53%|█████▎    | 293748/552076 [00:02<00:02, 100918.35it/s] 55%|█████▌    | 304849/552076 [00:02<00:02, 98990.09it/s]  57%|█████▋    | 316175/552076 [00:02<00:02, 102877.63it/s] 60%|██████    | 331751/552076 [00:02<00:01, 114543.08it/s] 63%|██████▎   | 348540/552076 [00:02<00:01, 126611.86it/s] 66%|██████▌   | 364062/552076 [00:02<00:01, 134020.86it/s] 69%|██████▊   | 378248/552076 [00:02<00:01, 108909.24it/s] 71%|███████   | 390680/552076 [00:02<00:01, 113114.88it/s] 74%|███████▎  | 406754/552076 [00:03<00:01, 123406.60it/s] 76%|███████▌  | 420045/552076 [00:03<00:01, 121009.52it/s] 80%|███████▉  | 440440/552076 [00:03<00:00, 137823.67it/s] 83%|████████▎ | 459398/552076 [00:03<00:00, 150118.49it/s] 87%|████████▋ | 478592/552076 [00:03<00:00, 160617.44it/s] 90%|█████████ | 498605/552076 [00:03<00:00, 170727.68it/s] 94%|█████████▍| 519544/552076 [00:03<00:00, 180736.25it/s] 98%|█████████▊| 540117/552076 [00:03<00:00, 187570.82it/s]100%|██████████| 552076/552076 [00:03<00:00, 146200.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14229/552076 [00:00<00:03, 142283.01it/s]  5%|▍         | 26942/552076 [00:00<00:03, 137370.21it/s]  6%|▋         | 35076/552076 [00:00<00:04, 113840.40it/s] 10%|▉         | 54792/552076 [00:00<00:03, 130368.31it/s] 13%|█▎        | 73845/552076 [00:00<00:03, 144009.65it/s] 17%|█▋        | 94913/552076 [00:00<00:02, 159115.03it/s] 21%|██        | 115513/552076 [00:00<00:02, 170774.85it/s] 25%|██▍       | 135847/552076 [00:00<00:02, 179393.71it/s] 28%|██▊       | 156361/552076 [00:00<00:02, 186410.46it/s] 32%|███▏      | 177230/552076 [00:01<00:01, 192577.34it/s] 36%|███▌      | 197964/552076 [00:01<00:01, 196779.04it/s] 40%|███▉      | 219501/552076 [00:01<00:01, 202009.47it/s] 43%|████▎     | 240118/552076 [00:01<00:01, 203236.65it/s] 47%|████▋     | 261043/552076 [00:01<00:01, 205001.95it/s] 51%|█████     | 282726/552076 [00:01<00:01, 208410.67it/s] 55%|█████▌    | 303650/552076 [00:01<00:01, 208658.09it/s] 59%|█████▉    | 325436/552076 [00:01<00:01, 211334.15it/s] 63%|██████▎   | 346610/552076 [00:01<00:00, 210368.03it/s] 67%|██████▋   | 368171/552076 [00:01<00:00, 211913.42it/s] 71%|███████   | 389386/552076 [00:02<00:00, 210844.43it/s] 74%|███████▍  | 410488/552076 [00:02<00:00, 209880.37it/s] 78%|███████▊  | 431601/552076 [00:02<00:00, 210252.57it/s] 82%|████████▏ | 453529/552076 [00:02<00:00, 212878.88it/s] 86%|████████▌ | 474832/552076 [00:02<00:00, 209804.92it/s] 90%|████████▉ | 495833/552076 [00:02<00:00, 208885.83it/s] 94%|█████████▎| 516918/552076 [00:02<00:00, 209470.69it/s] 97%|█████████▋| 537876/552076 [00:02<00:00, 209037.51it/s]100%|██████████| 552076/552076 [00:02<00:00, 198868.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13760/552076 [00:00<00:03, 137593.24it/s]  5%|▌         | 27762/552076 [00:00<00:03, 138309.69it/s]  8%|▊         | 41620/552076 [00:00<00:03, 138389.73it/s] 10%|█         | 55390/552076 [00:00<00:03, 138181.13it/s] 13%|█▎        | 70589/552076 [00:00<00:03, 142050.71it/s] 16%|█▌        | 88523/552076 [00:00<00:03, 151478.12it/s] 19%|█▊        | 102244/552076 [00:00<00:03, 117084.55it/s] 21%|██        | 114174/552076 [00:00<00:03, 117739.78it/s] 23%|██▎       | 126084/552076 [00:01<00:04, 99496.07it/s]  25%|██▍       | 137323/552076 [00:01<00:04, 103041.62it/s] 27%|██▋       | 151318/552076 [00:01<00:03, 111893.76it/s] 31%|███       | 169164/552076 [00:01<00:03, 125991.08it/s] 33%|███▎      | 184721/552076 [00:01<00:02, 133609.54it/s] 36%|███▌      | 198877/552076 [00:01<00:02, 134929.85it/s] 39%|███▊      | 212930/552076 [00:01<00:03, 107953.70it/s] 41%|████      | 224976/552076 [00:01<00:03, 106940.07it/s] 43%|████▎     | 239440/552076 [00:01<00:02, 115258.43it/s] 46%|████▌     | 251765/552076 [00:02<00:02, 113067.04it/s] 49%|████▉     | 271618/552076 [00:02<00:02, 129833.12it/s] 53%|█████▎    | 292354/552076 [00:02<00:01, 146235.23it/s] 57%|█████▋    | 312677/552076 [00:02<00:01, 159668.55it/s] 60%|██████    | 333034/552076 [00:02<00:01, 170712.06it/s] 64%|██████▍   | 352702/552076 [00:02<00:01, 177750.83it/s] 68%|██████▊   | 374310/552076 [00:02<00:00, 187740.43it/s] 72%|███████▏  | 396255/552076 [00:02<00:00, 196244.79it/s] 76%|███████▌  | 418221/552076 [00:02<00:00, 202727.39it/s] 80%|███████▉  | 439511/552076 [00:02<00:00, 205675.39it/s] 84%|████████▎ | 461764/552076 [00:03<00:00, 210455.38it/s] 88%|████████▊ | 483101/552076 [00:03<00:00, 211162.57it/s] 91%|█████████▏| 504422/552076 [00:03<00:00, 210418.50it/s] 95%|█████████▌| 525608/552076 [00:03<00:00, 209952.68it/s] 99%|█████████▉| 546705/552076 [00:03<00:00, 209445.45it/s]100%|██████████| 552076/552076 [00:03<00:00, 157943.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20487/552076 [00:00<00:02, 204864.33it/s]  8%|▊         | 41740/552076 [00:00<00:02, 207104.24it/s] 11%|█▏        | 62832/552076 [00:00<00:02, 208233.86it/s] 15%|█▌        | 83961/552076 [00:00<00:02, 209138.63it/s] 19%|█▉        | 104728/552076 [00:00<00:02, 208694.87it/s] 23%|██▎       | 125122/552076 [00:00<00:02, 207244.75it/s] 26%|██▋       | 145820/552076 [00:00<00:01, 207165.02it/s] 30%|███       | 167598/552076 [00:00<00:01, 210238.14it/s] 34%|███▍      | 188287/552076 [00:00<00:01, 209220.62it/s] 38%|███▊      | 208393/552076 [00:01<00:01, 199655.14it/s] 42%|████▏     | 230159/552076 [00:01<00:01, 204734.68it/s] 46%|████▌     | 251825/552076 [00:01<00:01, 208170.89it/s] 50%|████▉     | 274078/552076 [00:01<00:01, 212279.98it/s] 54%|█████▎    | 295929/552076 [00:01<00:01, 214109.47it/s] 57%|█████▋    | 317261/552076 [00:01<00:01, 172314.17it/s] 61%|██████    | 335745/552076 [00:01<00:01, 141131.40it/s] 64%|██████▎   | 351661/552076 [00:01<00:01, 134486.31it/s] 66%|██████▋   | 366438/552076 [00:02<00:01, 120404.48it/s] 69%|██████▉   | 379685/552076 [00:02<00:01, 114159.96it/s] 71%|███████   | 392389/552076 [00:02<00:01, 117740.32it/s] 73%|███████▎  | 404830/552076 [00:02<00:01, 117711.40it/s] 76%|███████▌  | 417068/552076 [00:02<00:01, 117603.84it/s] 78%|███████▊  | 429220/552076 [00:02<00:01, 118750.55it/s] 80%|████████  | 442101/552076 [00:02<00:00, 121599.07it/s] 82%|████████▏ | 454440/552076 [00:02<00:00, 122010.32it/s] 85%|████████▍ | 466767/552076 [00:02<00:00, 112128.26it/s] 87%|████████▋ | 478225/552076 [00:03<00:00, 92217.30it/s]  89%|████████▊ | 489067/552076 [00:03<00:00, 96543.99it/s] 91%|█████████ | 499981/552076 [00:03<00:00, 100004.36it/s] 93%|█████████▎| 511889/552076 [00:03<00:00, 105051.78it/s] 95%|█████████▍| 524240/552076 [00:03<00:00, 109981.39it/s] 97%|█████████▋| 536655/552076 [00:03<00:00, 113880.10it/s] 99%|█████████▉| 548797/552076 [00:03<00:00, 116041.59it/s]100%|██████████| 552076/552076 [00:03<00:00, 147757.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15034/552076 [00:00<00:03, 150336.92it/s]  5%|▌         | 29398/552076 [00:00<00:03, 148262.46it/s]  7%|▋         | 41393/552076 [00:00<00:03, 138457.62it/s] 10%|▉         | 53494/552076 [00:00<00:03, 132715.95it/s] 12%|█▏        | 65515/552076 [00:00<00:03, 128699.06it/s] 14%|█▍        | 75987/552076 [00:00<00:04, 116686.81it/s] 16%|█▌        | 86192/552076 [00:00<00:05, 87414.81it/s]  17%|█▋        | 94990/552076 [00:00<00:05, 81882.96it/s] 19%|█▊        | 103289/552076 [00:01<00:06, 67428.11it/s] 21%|██        | 115377/552076 [00:01<00:05, 77740.18it/s] 23%|██▎       | 127511/552076 [00:01<00:04, 87131.27it/s] 25%|██▌       | 139788/552076 [00:01<00:04, 95442.25it/s] 28%|██▊       | 151937/552076 [00:01<00:03, 102001.84it/s] 30%|██▉       | 164041/552076 [00:01<00:03, 107052.05it/s] 32%|███▏      | 175946/552076 [00:01<00:03, 110387.35it/s] 34%|███▍      | 187444/552076 [00:01<00:04, 89669.85it/s]  36%|███▌      | 197364/552076 [00:02<00:04, 74012.56it/s] 37%|███▋      | 206744/552076 [00:02<00:04, 79012.14it/s] 39%|███▉      | 215523/552076 [00:02<00:04, 78256.19it/s] 41%|████      | 223965/552076 [00:02<00:04, 76991.26it/s] 43%|████▎     | 235981/552076 [00:02<00:03, 86291.41it/s] 45%|████▍     | 248070/552076 [00:02<00:03, 92162.74it/s] 47%|████▋     | 259826/552076 [00:02<00:02, 98549.46it/s] 49%|████▉     | 272077/552076 [00:02<00:02, 104691.11it/s] 52%|█████▏    | 284380/552076 [00:02<00:02, 109590.34it/s] 54%|█████▍    | 296769/552076 [00:03<00:02, 113521.16it/s] 56%|█████▌    | 308950/552076 [00:03<00:02, 115885.03it/s] 58%|█████▊    | 321342/552076 [00:03<00:01, 118182.85it/s] 60%|██████    | 333865/552076 [00:03<00:01, 120210.42it/s] 63%|██████▎   | 346015/552076 [00:03<00:01, 119894.62it/s] 65%|██████▍   | 358095/552076 [00:03<00:01, 118572.56it/s] 67%|██████▋   | 370019/552076 [00:03<00:01, 118295.94it/s] 69%|██████▉   | 382308/552076 [00:03<00:01, 119636.97it/s] 71%|███████▏  | 394364/552076 [00:03<00:01, 119910.21it/s] 74%|███████▎  | 406381/552076 [00:03<00:01, 119974.27it/s] 76%|███████▌  | 418397/552076 [00:04<00:01, 117937.51it/s] 78%|███████▊  | 430340/552076 [00:04<00:01, 118379.85it/s] 80%|████████  | 442506/552076 [00:04<00:00, 119342.78it/s] 82%|████████▏ | 454453/552076 [00:04<00:00, 119189.79it/s] 84%|████████▍ | 466381/552076 [00:04<00:00, 118143.24it/s] 87%|████████▋ | 478204/552076 [00:04<00:00, 117824.20it/s] 89%|████████▉ | 490461/552076 [00:04<00:00, 119206.52it/s] 91%|█████████ | 502756/552076 [00:04<00:00, 120302.83it/s] 93%|█████████▎| 514872/552076 [00:04<00:00, 120557.71it/s] 95%|█████████▌| 526934/552076 [00:04<00:00, 118601.36it/s] 98%|█████████▊| 539008/552076 [00:05<00:00, 119234.82it/s]100%|█████████▉| 550943/552076 [00:05<00:00, 119267.42it/s]100%|██████████| 552076/552076 [00:05<00:00, 107450.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13796/552076 [00:00<00:03, 137952.90it/s]  5%|▍         | 25094/552076 [00:00<00:04, 129371.63it/s]  6%|▋         | 34745/552076 [00:00<00:04, 117380.79it/s]  8%|▊         | 42041/552076 [00:00<00:05, 98365.05it/s]  10%|▉         | 53794/552076 [00:00<00:04, 103424.40it/s] 12%|█▏        | 63507/552076 [00:00<00:04, 100367.83it/s] 13%|█▎        | 72344/552076 [00:00<00:05, 92674.29it/s]  15%|█▍        | 80889/552076 [00:00<00:05, 85704.72it/s] 17%|█▋        | 94633/552076 [00:00<00:04, 96614.44it/s] 19%|█▉        | 104935/552076 [00:01<00:04, 97800.79it/s] 21%|██        | 114845/552076 [00:01<00:04, 98050.31it/s] 23%|██▎       | 124741/552076 [00:01<00:04, 89681.96it/s] 25%|██▍       | 136356/552076 [00:01<00:04, 96262.15it/s] 27%|██▋       | 148188/552076 [00:01<00:03, 101941.77it/s] 29%|██▉       | 160793/552076 [00:01<00:03, 108145.83it/s] 31%|███       | 171910/552076 [00:01<00:04, 88284.76it/s]  33%|███▎      | 182476/552076 [00:01<00:03, 92866.07it/s] 35%|███▍      | 192391/552076 [00:01<00:04, 86894.43it/s] 37%|███▋      | 203222/552076 [00:02<00:03, 92373.38it/s] 39%|███▊      | 212917/552076 [00:02<00:03, 88660.72it/s] 41%|████      | 224970/552076 [00:02<00:03, 96299.27it/s] 43%|████▎     | 235039/552076 [00:02<00:03, 96845.70it/s] 44%|████▍     | 245032/552076 [00:02<00:03, 87818.19it/s] 46%|████▋     | 255855/552076 [00:02<00:03, 93083.43it/s] 48%|████▊     | 265513/552076 [00:02<00:03, 93584.23it/s] 50%|█████     | 277281/552076 [00:02<00:02, 99707.64it/s] 52%|█████▏    | 288058/552076 [00:02<00:02, 101996.32it/s] 54%|█████▍    | 298468/552076 [00:03<00:02, 99560.79it/s]  56%|█████▌    | 308869/552076 [00:03<00:02, 100853.62it/s] 58%|█████▊    | 320445/552076 [00:03<00:02, 104906.07it/s] 60%|██████    | 331491/552076 [00:03<00:02, 106512.59it/s] 62%|██████▏   | 342235/552076 [00:03<00:02, 98379.86it/s]  64%|██████▍   | 352261/552076 [00:03<00:02, 97516.69it/s] 66%|██████▌   | 363605/552076 [00:03<00:01, 101802.91it/s] 68%|██████▊   | 374530/552076 [00:03<00:01, 102359.99it/s] 70%|██████▉   | 384867/552076 [00:03<00:01, 100521.57it/s] 72%|███████▏  | 396991/552076 [00:04<00:01, 105952.91it/s] 74%|███████▍  | 408364/552076 [00:04<00:01, 108171.01it/s] 76%|███████▌  | 420560/552076 [00:04<00:01, 111968.04it/s] 78%|███████▊  | 432965/552076 [00:04<00:01, 115337.27it/s] 81%|████████  | 445219/552076 [00:04<00:00, 117407.46it/s] 83%|████████▎ | 457734/552076 [00:04<00:00, 119625.55it/s] 85%|████████▌ | 470162/552076 [00:04<00:00, 120982.79it/s] 87%|████████▋ | 482310/552076 [00:04<00:00, 99580.81it/s]  89%|████████▉ | 492929/552076 [00:04<00:00, 84186.75it/s] 91%|█████████ | 502218/552076 [00:05<00:00, 65508.27it/s] 93%|█████████▎| 513787/552076 [00:05<00:00, 75307.19it/s] 95%|█████████▍| 523712/552076 [00:05<00:00, 81182.44it/s] 97%|█████████▋| 534828/552076 [00:05<00:00, 88327.37it/s] 99%|█████████▉| 547170/552076 [00:05<00:00, 96563.57it/s]100%|██████████| 552076/552076 [00:05<00:00, 98588.84it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11606/552076 [00:00<00:04, 116054.30it/s]  4%|▍         | 21499/552076 [00:00<00:04, 110324.25it/s]  6%|▌         | 30870/552076 [00:00<00:04, 104750.32it/s]  7%|▋         | 37465/552076 [00:00<00:07, 71463.02it/s]   8%|▊         | 43751/552076 [00:00<00:07, 68644.04it/s] 10%|█         | 55277/552076 [00:00<00:06, 78121.62it/s] 12%|█▏        | 66829/552076 [00:00<00:05, 86524.56it/s] 14%|█▍        | 78126/552076 [00:00<00:05, 93058.11it/s] 16%|█▋        | 89879/552076 [00:00<00:04, 99257.33it/s] 18%|█▊        | 100097/552076 [00:01<00:04, 92929.96it/s] 20%|█▉        | 109677/552076 [00:01<00:04, 90502.44it/s] 22%|██▏       | 119721/552076 [00:01<00:04, 92535.73it/s] 23%|██▎       | 129136/552076 [00:01<00:05, 77378.17it/s] 25%|██▌       | 139002/552076 [00:01<00:05, 81836.99it/s] 27%|██▋       | 147628/552076 [00:01<00:05, 72335.13it/s] 28%|██▊       | 156693/552076 [00:01<00:05, 77002.36it/s] 30%|██▉       | 164835/552076 [00:01<00:05, 73430.56it/s] 32%|███▏      | 174296/552076 [00:02<00:04, 78715.66it/s] 33%|███▎      | 183443/552076 [00:02<00:04, 81056.24it/s] 35%|███▍      | 193111/552076 [00:02<00:04, 81712.92it/s] 36%|███▋      | 201466/552076 [00:02<00:04, 75440.65it/s] 38%|███▊      | 210758/552076 [00:02<00:04, 79952.54it/s] 40%|███▉      | 220149/552076 [00:02<00:03, 83683.78it/s] 41%|████▏     | 229037/552076 [00:02<00:03, 85176.22it/s] 43%|████▎     | 237762/552076 [00:02<00:03, 85787.23it/s] 45%|████▍     | 248041/552076 [00:02<00:03, 90264.75it/s] 47%|████▋     | 259653/552076 [00:03<00:03, 96725.46it/s] 49%|████▉     | 270998/552076 [00:03<00:02, 101199.07it/s] 51%|█████     | 282631/552076 [00:03<00:02, 105306.25it/s] 53%|█████▎    | 294429/552076 [00:03<00:02, 108812.84it/s] 55%|█████▌    | 306122/552076 [00:03<00:02, 111127.09it/s] 57%|█████▋    | 317427/552076 [00:03<00:02, 111695.04it/s] 60%|█████▉    | 328686/552076 [00:03<00:02, 99115.13it/s]  62%|██████▏   | 339716/552076 [00:03<00:02, 102222.66it/s] 64%|██████▎   | 351389/552076 [00:03<00:01, 106181.46it/s] 66%|██████▌   | 362942/552076 [00:03<00:01, 108820.45it/s] 68%|██████▊   | 373992/552076 [00:04<00:01, 107354.50it/s] 70%|██████▉   | 385545/552076 [00:04<00:01, 109681.12it/s] 72%|███████▏  | 397225/552076 [00:04<00:01, 111723.31it/s] 74%|███████▍  | 409007/552076 [00:04<00:01, 113483.57it/s] 76%|███████▌  | 420423/552076 [00:04<00:01, 113683.58it/s] 78%|███████▊  | 431835/552076 [00:04<00:01, 113267.75it/s] 80%|████████  | 443449/552076 [00:04<00:00, 114111.06it/s] 82%|████████▏ | 454883/552076 [00:04<00:00, 113729.17it/s] 84%|████████▍ | 466481/552076 [00:04<00:00, 114393.21it/s] 87%|████████▋ | 478061/552076 [00:04<00:00, 114810.37it/s] 89%|████████▊ | 489835/552076 [00:05<00:00, 115672.98it/s] 91%|█████████ | 501411/552076 [00:05<00:00, 115159.22it/s] 93%|█████████▎| 512933/552076 [00:05<00:00, 114526.49it/s] 95%|█████████▍| 524391/552076 [00:05<00:00, 113083.66it/s] 97%|█████████▋| 535707/552076 [00:05<00:00, 102336.58it/s] 99%|█████████▉| 546142/552076 [00:05<00:00, 97584.01it/s] 100%|██████████| 552076/552076 [00:05<00:00, 97456.07it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9939/552076 [00:00<00:05, 99388.67it/s]  3%|▎         | 18031/552076 [00:00<00:05, 93019.18it/s]  5%|▌         | 29376/552076 [00:00<00:05, 98330.02it/s]  7%|▋         | 37577/552076 [00:00<00:05, 91851.77it/s]  8%|▊         | 46153/552076 [00:00<00:05, 89932.86it/s] 10%|▉         | 54421/552076 [00:00<00:05, 86535.23it/s] 12%|█▏        | 65982/552076 [00:00<00:05, 93595.82it/s] 14%|█▍        | 77295/552076 [00:00<00:04, 98707.48it/s] 16%|█▌        | 88724/552076 [00:00<00:04, 102915.22it/s] 18%|█▊        | 99019/552076 [00:01<00:04, 102396.29it/s] 20%|█▉        | 109230/552076 [00:01<00:04, 102308.28it/s] 22%|██▏       | 120824/552076 [00:01<00:04, 106048.32it/s] 24%|██▍       | 133261/552076 [00:01<00:03, 110951.41it/s] 26%|██▌       | 144823/552076 [00:01<00:03, 112310.77it/s] 28%|██▊       | 156630/552076 [00:01<00:03, 113978.15it/s] 30%|███       | 168057/552076 [00:01<00:03, 106184.14it/s] 32%|███▏      | 178803/552076 [00:01<00:03, 103110.16it/s] 34%|███▍      | 189223/552076 [00:01<00:04, 72745.41it/s]  36%|███▌      | 197811/552076 [00:02<00:05, 62052.15it/s] 37%|███▋      | 205209/552076 [00:02<00:05, 61889.10it/s] 39%|███▉      | 215108/552076 [00:02<00:04, 69729.01it/s] 40%|████      | 222995/552076 [00:02<00:04, 72016.25it/s] 42%|████▏     | 230855/552076 [00:02<00:04, 72274.52it/s] 44%|████▍     | 242615/552076 [00:02<00:03, 81723.40it/s] 46%|████▌     | 253643/552076 [00:02<00:03, 88605.11it/s] 48%|████▊     | 265732/552076 [00:02<00:02, 96321.62it/s] 50%|█████     | 277843/552076 [00:03<00:02, 102622.69it/s] 53%|█████▎    | 289974/552076 [00:03<00:02, 107594.75it/s] 55%|█████▍    | 301852/552076 [00:03<00:02, 110721.55it/s] 57%|█████▋    | 314096/552076 [00:03<00:02, 113992.73it/s] 59%|█████▉    | 325858/552076 [00:03<00:01, 115056.67it/s] 61%|██████    | 338105/552076 [00:03<00:01, 117183.76it/s] 63%|██████▎   | 350141/552076 [00:03<00:01, 118116.02it/s] 66%|██████▌   | 362159/552076 [00:03<00:01, 118726.76it/s] 68%|██████▊   | 374105/552076 [00:03<00:01, 99778.47it/s]  70%|██████▉   | 384649/552076 [00:04<00:01, 90752.28it/s] 71%|███████▏  | 394278/552076 [00:04<00:02, 72694.68it/s] 74%|███████▎  | 405790/552076 [00:04<00:01, 81729.93it/s] 76%|███████▌  | 417423/552076 [00:04<00:01, 89736.07it/s] 77%|███████▋  | 427363/552076 [00:04<00:01, 79173.79it/s] 80%|███████▉  | 439119/552076 [00:04<00:01, 87770.75it/s] 82%|████████▏ | 451199/552076 [00:04<00:01, 95613.05it/s] 84%|████████▎ | 461614/552076 [00:04<00:01, 87162.64it/s] 85%|████████▌ | 471073/552076 [00:05<00:00, 87670.33it/s] 88%|████████▊ | 483083/552076 [00:05<00:00, 95398.08it/s] 90%|████████▉ | 494735/552076 [00:05<00:00, 100882.70it/s] 92%|█████████▏| 505304/552076 [00:05<00:00, 69070.46it/s]  94%|█████████▎| 517454/552076 [00:05<00:00, 79340.63it/s] 96%|█████████▌| 528092/552076 [00:05<00:00, 85888.99it/s] 97%|█████████▋| 538045/552076 [00:05<00:00, 76304.94it/s]100%|█████████▉| 550052/552076 [00:05<00:00, 85672.83it/s]100%|██████████| 552076/552076 [00:05<00:00, 92630.19it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8020/552076 [00:00<00:06, 80194.53it/s]  4%|▍         | 20895/552076 [00:00<00:05, 90425.02it/s]  6%|▌         | 32562/552076 [00:00<00:05, 96968.95it/s]  8%|▊         | 44486/552076 [00:00<00:04, 102723.39it/s] 10%|█         | 56606/552076 [00:00<00:04, 107645.31it/s] 12%|█▏        | 68779/552076 [00:00<00:04, 111514.53it/s] 15%|█▍        | 80745/552076 [00:00<00:04, 113836.93it/s] 17%|█▋        | 92804/552076 [00:00<00:03, 115781.56it/s] 19%|█▉        | 104708/552076 [00:00<00:03, 116737.37it/s] 21%|██        | 116166/552076 [00:01<00:03, 111796.39it/s] 23%|██▎       | 127239/552076 [00:01<00:04, 88229.79it/s]  25%|██▍       | 137202/552076 [00:01<00:04, 91365.42it/s] 27%|██▋       | 149587/552076 [00:01<00:04, 99166.79it/s] 29%|██▉       | 161143/552076 [00:01<00:03, 103574.18it/s] 31%|███▏      | 172660/552076 [00:01<00:03, 106799.86it/s] 33%|███▎      | 184236/552076 [00:01<00:03, 109338.75it/s] 35%|███▌      | 195906/552076 [00:01<00:03, 111446.93it/s] 38%|███▊      | 208157/552076 [00:01<00:03, 114199.98it/s] 40%|███▉      | 219723/552076 [00:02<00:02, 112315.39it/s] 42%|████▏     | 231064/552076 [00:02<00:02, 112541.32it/s] 44%|████▍     | 242395/552076 [00:02<00:02, 112621.51it/s] 46%|████▌     | 253711/552076 [00:02<00:02, 111945.97it/s] 48%|████▊     | 265095/552076 [00:02<00:02, 112505.81it/s] 50%|█████     | 276928/552076 [00:02<00:02, 114191.45it/s] 52%|█████▏    | 288373/552076 [00:02<00:02, 101143.28it/s] 54%|█████▍    | 299515/552076 [00:02<00:02, 104020.22it/s] 56%|█████▌    | 310487/552076 [00:02<00:02, 105666.14it/s] 58%|█████▊    | 321218/552076 [00:02<00:02, 104505.02it/s] 60%|██████    | 332198/552076 [00:03<00:02, 106037.16it/s] 62%|██████▏   | 343214/552076 [00:03<00:01, 107240.60it/s] 64%|██████▍   | 354003/552076 [00:03<00:01, 106306.32it/s] 66%|██████▌   | 365009/552076 [00:03<00:01, 107404.62it/s] 68%|██████▊   | 376682/552076 [00:03<00:01, 110041.38it/s] 70%|███████   | 387728/552076 [00:03<00:01, 108043.22it/s] 72%|███████▏  | 398570/552076 [00:03<00:01, 101116.45it/s] 74%|███████▍  | 410280/552076 [00:03<00:01, 105432.27it/s] 76%|███████▋  | 421636/552076 [00:03<00:01, 107743.66it/s] 79%|███████▊  | 433445/552076 [00:03<00:01, 110651.20it/s] 81%|████████  | 445489/552076 [00:04<00:00, 113416.54it/s] 83%|████████▎ | 457304/552076 [00:04<00:00, 114794.55it/s] 85%|████████▍ | 469116/552076 [00:04<00:00, 115771.98it/s] 87%|████████▋ | 480996/552076 [00:04<00:00, 116663.76it/s] 89%|████████▉ | 492901/552076 [00:04<00:00, 117367.99it/s] 91%|█████████▏| 504906/552076 [00:04<00:00, 118158.54it/s] 94%|█████████▎| 516973/552076 [00:04<00:00, 118900.55it/s] 96%|█████████▌| 528877/552076 [00:04<00:00, 116439.59it/s] 98%|█████████▊| 540932/552076 [00:04<00:00, 117642.10it/s]100%|██████████| 552076/552076 [00:04<00:00, 110554.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11789/552076 [00:00<00:04, 117883.09it/s]  4%|▍         | 23603/552076 [00:00<00:04, 117958.39it/s]  6%|▋         | 35409/552076 [00:00<00:04, 117988.72it/s]  9%|▊         | 47610/552076 [00:00<00:04, 119166.86it/s] 11%|█         | 59807/552076 [00:00<00:04, 119992.78it/s] 13%|█▎        | 71632/552076 [00:00<00:04, 119461.76it/s] 15%|█▌        | 83544/552076 [00:00<00:03, 119356.92it/s] 17%|█▋        | 95688/552076 [00:00<00:03, 119972.64it/s] 19%|█▉        | 107008/552076 [00:00<00:04, 109306.14it/s] 21%|██▏       | 117648/552076 [00:01<00:04, 96882.03it/s]  23%|██▎       | 128443/552076 [00:01<00:04, 99956.52it/s] 25%|██▌       | 140440/552076 [00:01<00:03, 105221.87it/s] 28%|██▊       | 152432/552076 [00:01<00:03, 109236.31it/s] 30%|██▉       | 164573/552076 [00:01<00:03, 112623.04it/s] 32%|███▏      | 176890/552076 [00:01<00:03, 115589.94it/s] 34%|███▍      | 189135/552076 [00:01<00:03, 117563.24it/s] 36%|███▋      | 201360/552076 [00:01<00:02, 118930.96it/s] 39%|███▊      | 213311/552076 [00:01<00:02, 113794.52it/s] 41%|████      | 224778/552076 [00:01<00:02, 112611.80it/s] 43%|████▎     | 236104/552076 [00:02<00:02, 107411.87it/s] 45%|████▍     | 248007/552076 [00:02<00:02, 110650.10it/s] 47%|████▋     | 259164/552076 [00:02<00:02, 100088.25it/s] 49%|████▉     | 269430/552076 [00:02<00:02, 99168.96it/s]  51%|█████     | 279529/552076 [00:02<00:03, 89926.04it/s] 52%|█████▏    | 288814/552076 [00:02<00:03, 76569.47it/s] 54%|█████▍    | 299066/552076 [00:02<00:03, 81642.35it/s] 56%|█████▌    | 309747/552076 [00:02<00:02, 87851.03it/s] 58%|█████▊    | 321688/552076 [00:03<00:02, 95415.70it/s] 60%|██████    | 331748/552076 [00:03<00:02, 88945.34it/s] 62%|██████▏   | 341116/552076 [00:03<00:02, 90313.43it/s] 63%|██████▎   | 350468/552076 [00:03<00:02, 74205.38it/s] 65%|██████▌   | 360735/552076 [00:03<00:02, 80315.37it/s] 67%|██████▋   | 369401/552076 [00:03<00:03, 60756.06it/s] 69%|██████▉   | 381492/552076 [00:03<00:02, 71414.76it/s] 71%|███████▏  | 393745/552076 [00:03<00:01, 81630.80it/s] 74%|███████▎  | 405994/552076 [00:04<00:01, 90707.10it/s] 76%|███████▌  | 418222/552076 [00:04<00:01, 98321.83it/s] 78%|███████▊  | 430185/552076 [00:04<00:01, 103870.16it/s] 80%|████████  | 441878/552076 [00:04<00:01, 107468.59it/s] 82%|████████▏ | 453298/552076 [00:04<00:01, 78249.92it/s]  84%|████████▍ | 465420/552076 [00:04<00:00, 87561.45it/s] 86%|████████▋ | 476451/552076 [00:04<00:00, 93334.09it/s] 89%|████████▊ | 488711/552076 [00:04<00:00, 100532.35it/s] 91%|█████████ | 501008/552076 [00:05<00:00, 106352.28it/s] 93%|█████████▎| 513290/552076 [00:05<00:00, 110807.87it/s] 95%|█████████▌| 525599/552076 [00:05<00:00, 114226.86it/s] 97%|█████████▋| 537864/552076 [00:05<00:00, 116629.40it/s]100%|█████████▉| 550148/552076 [00:05<00:00, 118424.76it/s]100%|██████████| 552076/552076 [00:05<00:00, 101479.56it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7423/552076 [00:00<00:07, 70395.20it/s]  3%|▎         | 13877/552076 [00:00<00:07, 68182.34it/s]  4%|▍         | 21448/552076 [00:00<00:07, 70277.20it/s]  5%|▌         | 27973/552076 [00:00<00:07, 68687.75it/s]  6%|▋         | 35485/552076 [00:00<00:07, 69264.09it/s]  8%|▊         | 42471/552076 [00:00<00:07, 69440.93it/s]  9%|▉         | 51548/552076 [00:00<00:06, 74707.04it/s] 11%|█▏        | 63036/552076 [00:00<00:05, 83462.99it/s] 14%|█▎        | 74570/552076 [00:00<00:05, 91007.11it/s] 16%|█▌        | 86087/552076 [00:01<00:04, 97118.16it/s] 18%|█▊        | 98375/552076 [00:01<00:04, 103634.91it/s] 20%|█▉        | 110161/552076 [00:01<00:04, 107528.23it/s] 22%|██▏       | 122218/552076 [00:01<00:03, 111132.41it/s] 24%|██▍       | 134711/552076 [00:01<00:03, 114939.46it/s] 27%|██▋       | 146763/552076 [00:01<00:03, 116558.06it/s] 29%|██▉       | 158776/552076 [00:01<00:03, 117604.78it/s] 31%|███       | 170705/552076 [00:01<00:03, 118105.19it/s] 33%|███▎      | 182634/552076 [00:01<00:03, 118455.75it/s] 35%|███▌      | 194694/552076 [00:01<00:03, 119090.67it/s] 37%|███▋      | 206637/552076 [00:02<00:02, 115317.86it/s] 40%|███▉      | 218218/552076 [00:02<00:03, 101381.12it/s] 42%|████▏     | 229359/552076 [00:02<00:03, 104192.80it/s] 43%|████▎     | 240037/552076 [00:02<00:03, 102609.93it/s] 45%|████▌     | 251174/552076 [00:02<00:02, 105089.71it/s] 48%|████▊     | 262286/552076 [00:02<00:02, 106826.40it/s] 50%|████▉     | 273642/552076 [00:02<00:02, 108760.84it/s] 52%|█████▏    | 284746/552076 [00:02<00:02, 109432.73it/s] 54%|█████▎    | 295750/552076 [00:02<00:02, 108840.55it/s] 56%|█████▌    | 306735/552076 [00:02<00:02, 109138.67it/s] 58%|█████▊    | 318029/552076 [00:03<00:02, 110249.88it/s] 60%|█████▉    | 329191/552076 [00:03<00:02, 110655.20it/s] 62%|██████▏   | 340485/552076 [00:03<00:01, 111330.59it/s] 64%|██████▎   | 351631/552076 [00:03<00:01, 110941.03it/s] 66%|██████▌   | 362735/552076 [00:03<00:01, 110869.29it/s] 68%|██████▊   | 373829/552076 [00:03<00:01, 110805.29it/s] 70%|██████▉   | 384915/552076 [00:03<00:01, 110017.79it/s] 72%|███████▏  | 396003/552076 [00:03<00:01, 110274.52it/s] 74%|███████▍  | 407206/552076 [00:03<00:01, 110794.22it/s] 76%|███████▌  | 418289/552076 [00:03<00:01, 106415.84it/s] 78%|███████▊  | 428981/552076 [00:04<00:01, 106565.78it/s] 80%|███████▉  | 439665/552076 [00:04<00:01, 106009.65it/s] 82%|████████▏ | 451551/552076 [00:04<00:00, 109561.74it/s] 84%|████████▍ | 462729/552076 [00:04<00:00, 110215.54it/s] 86%|████████▌ | 474019/552076 [00:04<00:00, 111007.33it/s] 88%|████████▊ | 485941/552076 [00:04<00:00, 113344.92it/s] 90%|█████████ | 497305/552076 [00:04<00:00, 104927.00it/s] 92%|█████████▏| 507943/552076 [00:04<00:00, 101222.17it/s] 94%|█████████▍| 518947/552076 [00:04<00:00, 103712.08it/s] 96%|█████████▌| 529424/552076 [00:05<00:00, 97323.90it/s]  98%|█████████▊| 539445/552076 [00:05<00:00, 98169.67it/s]100%|█████████▉| 549462/552076 [00:05<00:00, 98759.34it/s]100%|██████████| 552076/552076 [00:05<00:00, 104223.68it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8727/552076 [00:00<00:06, 87268.00it/s]  4%|▎         | 20631/552076 [00:00<00:05, 94862.42it/s]  6%|▌         | 32750/552076 [00:00<00:05, 101473.95it/s]  8%|▊         | 44950/552076 [00:00<00:04, 106866.08it/s] 10%|█         | 57128/552076 [00:00<00:04, 110941.30it/s] 12%|█▏        | 68990/552076 [00:00<00:04, 113137.64it/s] 15%|█▍        | 80907/552076 [00:00<00:04, 114040.58it/s] 17%|█▋        | 93170/552076 [00:00<00:03, 116485.77it/s] 19%|█▉        | 104876/552076 [00:00<00:03, 116657.15it/s] 21%|██        | 117013/552076 [00:01<00:03, 118029.11it/s] 23%|██▎       | 128621/552076 [00:01<00:03, 115157.00it/s] 26%|██▌       | 140818/552076 [00:01<00:03, 117119.09it/s] 28%|██▊       | 152894/552076 [00:01<00:03, 118187.97it/s] 30%|██▉       | 164662/552076 [00:01<00:03, 102311.40it/s] 32%|███▏      | 175236/552076 [00:01<00:03, 95463.39it/s]  34%|███▎      | 185115/552076 [00:01<00:04, 91590.68it/s] 35%|███▌      | 194541/552076 [00:01<00:05, 67792.14it/s] 37%|███▋      | 202405/552076 [00:02<00:05, 67592.39it/s] 39%|███▉      | 214147/552076 [00:02<00:04, 77452.01it/s] 41%|████      | 226149/552076 [00:02<00:03, 86673.56it/s] 43%|████▎     | 238335/552076 [00:02<00:03, 94892.01it/s] 45%|████▌     | 250734/552076 [00:02<00:02, 102077.89it/s] 47%|████▋     | 261791/552076 [00:02<00:03, 91024.43it/s]  49%|████▉     | 271711/552076 [00:02<00:03, 83165.00it/s] 51%|█████     | 280732/552076 [00:02<00:03, 74360.81it/s] 52%|█████▏    | 288835/552076 [00:03<00:04, 62383.38it/s] 54%|█████▎    | 296445/552076 [00:03<00:03, 65949.39it/s] 56%|█████▌    | 307592/552076 [00:03<00:03, 75156.25it/s] 58%|█████▊    | 319946/552076 [00:03<00:02, 85161.04it/s] 60%|██████    | 332181/552076 [00:03<00:02, 93705.62it/s] 62%|██████▏   | 344505/552076 [00:03<00:02, 100963.64it/s] 65%|██████▍   | 356746/552076 [00:03<00:01, 106564.34it/s] 67%|██████▋   | 368860/552076 [00:03<00:01, 110553.25it/s] 69%|██████▉   | 380740/552076 [00:03<00:01, 112904.23it/s] 71%|███████   | 392407/552076 [00:04<00:01, 103675.01it/s] 73%|███████▎  | 404262/552076 [00:04<00:01, 107728.93it/s] 75%|███████▌  | 416567/552076 [00:04<00:01, 111908.33it/s] 78%|███████▊  | 428814/552076 [00:04<00:01, 114878.12it/s] 80%|███████▉  | 441301/552076 [00:04<00:00, 117701.22it/s] 82%|████████▏ | 455279/552076 [00:04<00:00, 123150.60it/s] 85%|████████▌ | 470266/552076 [00:04<00:00, 130108.35it/s] 88%|████████▊ | 484873/552076 [00:04<00:00, 134517.65it/s] 92%|█████████▏| 508051/552076 [00:04<00:00, 153890.52it/s] 96%|█████████▌| 530599/552076 [00:04<00:00, 170090.68it/s]100%|██████████| 552076/552076 [00:05<00:00, 110269.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22513/552076 [00:00<00:02, 225129.68it/s]  8%|▊         | 44282/552076 [00:00<00:02, 222842.05it/s] 12%|█▏        | 66345/552076 [00:00<00:02, 222171.30it/s] 16%|█▌        | 88781/552076 [00:00<00:02, 222822.84it/s] 20%|██        | 111385/552076 [00:00<00:01, 223776.97it/s] 24%|██▍       | 132070/552076 [00:00<00:01, 218410.41it/s] 27%|██▋       | 151294/552076 [00:00<00:02, 192830.43it/s] 32%|███▏      | 174142/552076 [00:00<00:01, 202297.71it/s] 36%|███▌      | 197669/552076 [00:00<00:01, 211173.89it/s] 40%|████      | 221359/552076 [00:01<00:01, 218285.20it/s] 44%|████▍     | 245438/552076 [00:01<00:01, 224582.10it/s] 49%|████▊     | 267768/552076 [00:01<00:01, 184972.40it/s] 53%|█████▎    | 291613/552076 [00:01<00:01, 198314.11it/s] 57%|█████▋    | 315360/552076 [00:01<00:01, 208633.50it/s] 61%|██████▏   | 338558/552076 [00:01<00:00, 215127.73it/s] 65%|██████▌   | 361055/552076 [00:01<00:00, 217985.97it/s] 70%|██████▉   | 384503/552076 [00:01<00:00, 222682.77it/s] 74%|███████▎  | 407121/552076 [00:01<00:00, 222330.58it/s] 78%|███████▊  | 429599/552076 [00:02<00:00, 220104.05it/s] 82%|████████▏ | 452084/552076 [00:02<00:00, 221504.86it/s] 86%|████████▌ | 474360/552076 [00:02<00:00, 221562.54it/s] 90%|█████████ | 498032/552076 [00:02<00:00, 225899.41it/s] 94%|█████████▍| 521274/552076 [00:02<00:00, 227814.67it/s] 99%|█████████▊| 544117/552076 [00:02<00:00, 223752.04it/s]100%|██████████| 552076/552076 [00:02<00:00, 216277.78it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20497/552076 [00:00<00:02, 204965.80it/s]  8%|▊         | 42958/552076 [00:00<00:02, 210487.47it/s] 12%|█▏        | 66127/552076 [00:00<00:02, 216427.73it/s] 16%|█▌        | 89419/552076 [00:00<00:02, 221124.62it/s] 20%|██        | 112812/552076 [00:00<00:01, 224814.93it/s] 25%|██▍       | 136149/552076 [00:00<00:01, 227312.23it/s] 29%|██▉       | 158956/552076 [00:00<00:01, 227538.45it/s] 33%|███▎      | 181839/552076 [00:00<00:01, 227923.31it/s] 37%|███▋      | 204388/552076 [00:00<00:01, 227187.23it/s] 41%|████      | 227300/552076 [00:01<00:01, 227760.78it/s] 45%|████▌     | 250343/552076 [00:01<00:01, 228552.34it/s] 49%|████▉     | 272804/552076 [00:01<00:01, 226731.96it/s] 53%|█████▎    | 295204/552076 [00:01<00:01, 225656.25it/s] 58%|█████▊    | 317580/552076 [00:01<00:01, 222223.22it/s] 62%|██████▏   | 339681/552076 [00:01<00:00, 220504.11it/s] 66%|██████▌   | 361650/552076 [00:01<00:01, 176507.27it/s] 69%|██████▉   | 380642/552076 [00:01<00:01, 140900.28it/s] 72%|███████▏  | 396810/552076 [00:02<00:01, 138514.38it/s] 75%|███████▍  | 412125/552076 [00:02<00:01, 129902.62it/s] 78%|███████▊  | 429231/552076 [00:02<00:00, 140007.00it/s] 81%|████████  | 445239/552076 [00:02<00:00, 145476.96it/s] 83%|████████▎ | 460554/552076 [00:02<00:00, 146391.29it/s] 86%|████████▌ | 475732/552076 [00:02<00:00, 140442.75it/s] 90%|█████████ | 497914/552076 [00:02<00:00, 157811.17it/s] 93%|█████████▎| 514700/552076 [00:02<00:00, 149274.75it/s] 96%|█████████▌| 530427/552076 [00:02<00:00, 147975.24it/s]100%|█████████▉| 549692/552076 [00:03<00:00, 159038.14it/s]100%|██████████| 552076/552076 [00:03<00:00, 183284.17it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20896/552076 [00:00<00:02, 208959.20it/s]  8%|▊         | 42268/552076 [00:00<00:02, 210363.60it/s] 12%|█▏        | 63969/552076 [00:00<00:02, 212313.99it/s] 15%|█▌        | 84982/552076 [00:00<00:02, 211651.66it/s] 19%|█▉        | 105622/552076 [00:00<00:02, 210047.61it/s] 23%|██▎       | 127150/552076 [00:00<00:02, 211590.34it/s] 27%|██▋       | 148986/552076 [00:00<00:01, 213575.01it/s] 31%|███       | 169680/552076 [00:00<00:01, 211538.31it/s] 35%|███▍      | 190965/552076 [00:00<00:01, 211927.01it/s] 39%|███▊      | 212668/552076 [00:01<00:01, 213431.24it/s] 42%|████▏     | 233605/552076 [00:01<00:01, 212193.87it/s] 46%|████▌     | 254419/552076 [00:01<00:01, 210242.95it/s] 50%|████▉     | 275929/552076 [00:01<00:01, 211674.25it/s] 54%|█████▍    | 297797/552076 [00:01<00:01, 213726.35it/s] 58%|█████▊    | 319643/552076 [00:01<00:01, 215122.10it/s] 62%|██████▏   | 341448/552076 [00:01<00:00, 215991.17it/s] 66%|██████▌   | 363383/552076 [00:01<00:00, 216984.81it/s] 70%|██████▉   | 385251/552076 [00:01<00:00, 217490.35it/s] 74%|███████▎  | 407003/552076 [00:01<00:00, 217496.51it/s] 78%|███████▊  | 428733/552076 [00:02<00:00, 215105.96it/s] 82%|████████▏ | 450352/552076 [00:02<00:00, 215427.17it/s] 85%|████████▌ | 471920/552076 [00:02<00:00, 215502.10it/s] 90%|████████▉ | 494232/552076 [00:02<00:00, 217730.37it/s] 93%|█████████▎| 516008/552076 [00:02<00:00, 215766.42it/s] 97%|█████████▋| 537617/552076 [00:02<00:00, 215863.30it/s]100%|██████████| 552076/552076 [00:02<00:00, 214358.69it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13700/552076 [00:00<00:03, 136999.48it/s]  5%|▌         | 28054/552076 [00:00<00:03, 138896.68it/s]  8%|▊         | 41643/552076 [00:00<00:03, 137116.27it/s] 10%|█         | 56657/552076 [00:00<00:03, 140779.18it/s] 13%|█▎        | 71286/552076 [00:00<00:03, 142386.69it/s] 15%|█▌        | 84332/552076 [00:00<00:03, 138584.28it/s] 18%|█▊        | 100327/552076 [00:00<00:03, 144368.00it/s] 21%|██        | 116740/552076 [00:00<00:02, 149776.28it/s] 24%|██▎       | 131044/552076 [00:00<00:03, 133607.74it/s] 27%|██▋       | 150905/552076 [00:01<00:02, 148153.95it/s] 31%|███▏      | 173521/552076 [00:01<00:02, 165253.01it/s] 36%|███▌      | 196589/552076 [00:01<00:01, 180620.47it/s] 40%|███▉      | 218971/552076 [00:01<00:01, 191720.15it/s] 44%|████▍     | 241966/552076 [00:01<00:01, 201783.86it/s] 48%|████▊     | 262935/552076 [00:01<00:01, 159788.59it/s] 51%|█████     | 280840/552076 [00:01<00:01, 151105.08it/s] 54%|█████▍    | 297397/552076 [00:01<00:01, 135488.47it/s] 58%|█████▊    | 318847/552076 [00:02<00:01, 152319.49it/s] 62%|██████▏   | 340143/552076 [00:02<00:01, 166545.98it/s] 65%|██████▌   | 359744/552076 [00:02<00:01, 174409.55it/s] 69%|██████▊   | 378348/552076 [00:02<00:01, 116918.03it/s] 71%|███████   | 393354/552076 [00:02<00:01, 121667.57it/s] 75%|███████▌  | 416466/552076 [00:02<00:00, 141814.84it/s] 79%|███████▉  | 437232/552076 [00:02<00:00, 156721.64it/s] 83%|████████▎ | 458739/552076 [00:02<00:00, 170606.99it/s] 87%|████████▋ | 480362/552076 [00:03<00:00, 182134.09it/s] 91%|█████████ | 503071/552076 [00:03<00:00, 193633.26it/s] 95%|█████████▌| 525949/552076 [00:03<00:00, 202987.89it/s] 99%|█████████▉| 547344/552076 [00:03<00:00, 205775.29it/s]100%|██████████| 552076/552076 [00:03<00:00, 165587.04it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18930/552076 [00:00<00:02, 189290.25it/s]  7%|▋         | 38473/552076 [00:00<00:02, 191090.00it/s] 11%|█         | 58276/552076 [00:00<00:02, 193118.69it/s] 14%|█▍        | 78311/552076 [00:00<00:02, 195231.91it/s] 18%|█▊        | 98622/552076 [00:00<00:02, 197520.30it/s] 22%|██▏       | 119809/552076 [00:00<00:02, 201615.56it/s] 26%|██▌       | 141775/552076 [00:00<00:01, 206708.27it/s] 30%|██▉       | 163444/552076 [00:00<00:01, 209604.21it/s] 33%|███▎      | 183617/552076 [00:00<00:01, 207174.41it/s] 37%|███▋      | 203611/552076 [00:01<00:01, 197840.61it/s] 41%|████      | 225012/552076 [00:01<00:01, 202428.30it/s] 45%|████▍     | 247658/552076 [00:01<00:01, 209082.91it/s] 49%|████▉     | 269458/552076 [00:01<00:01, 211679.96it/s] 53%|█████▎    | 290944/552076 [00:01<00:01, 212622.15it/s] 57%|█████▋    | 312968/552076 [00:01<00:01, 214850.30it/s] 61%|██████    | 335941/552076 [00:01<00:00, 219107.12it/s] 65%|██████▍   | 358136/552076 [00:01<00:00, 219951.12it/s] 69%|██████▉   | 381060/552076 [00:01<00:00, 222656.44it/s] 73%|███████▎  | 403669/552076 [00:01<00:00, 223672.88it/s] 77%|███████▋  | 426043/552076 [00:02<00:00, 217598.01it/s] 81%|████████  | 447844/552076 [00:02<00:00, 213401.95it/s] 85%|████████▍ | 469231/552076 [00:02<00:00, 210509.16it/s] 89%|████████▉ | 490324/552076 [00:02<00:00, 208440.51it/s] 93%|█████████▎| 511202/552076 [00:02<00:00, 206281.99it/s] 96%|█████████▋| 531859/552076 [00:02<00:00, 204510.56it/s]100%|██████████| 552076/552076 [00:02<00:00, 208570.62it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14921/552076 [00:00<00:03, 149207.30it/s]  6%|▋         | 34908/552076 [00:00<00:03, 161486.37it/s] 10%|▉         | 55105/552076 [00:00<00:02, 171817.55it/s] 14%|█▍        | 75911/552076 [00:00<00:02, 181291.01it/s] 18%|█▊        | 96743/552076 [00:00<00:02, 188632.74it/s] 21%|██▏       | 117773/552076 [00:00<00:02, 194647.80it/s] 25%|██▌       | 138662/552076 [00:00<00:02, 198710.72it/s] 29%|██▉       | 159684/552076 [00:00<00:01, 202027.49it/s] 33%|███▎      | 180755/552076 [00:00<00:01, 204553.67it/s] 37%|███▋      | 201667/552076 [00:01<00:01, 205900.81it/s] 40%|████      | 223181/552076 [00:01<00:01, 208587.06it/s] 44%|████▍     | 243991/552076 [00:01<00:01, 208440.46it/s] 48%|████▊     | 264681/552076 [00:01<00:01, 207786.25it/s] 52%|█████▏    | 285360/552076 [00:01<00:01, 207484.34it/s] 55%|█████▌    | 306121/552076 [00:01<00:01, 207519.12it/s] 59%|█████▉    | 326821/552076 [00:01<00:01, 207111.78it/s] 63%|██████▎   | 348099/552076 [00:01<00:00, 208779.17it/s] 67%|██████▋   | 369095/552076 [00:01<00:00, 209130.29it/s] 71%|███████   | 390810/552076 [00:01<00:00, 211471.90it/s] 75%|███████▍  | 412101/552076 [00:02<00:00, 211899.99it/s] 79%|███████▊  | 433888/552076 [00:02<00:00, 213656.11it/s] 82%|████████▏ | 455397/552076 [00:02<00:00, 214082.50it/s] 87%|████████▋ | 478029/552076 [00:02<00:00, 217611.66it/s] 91%|█████████ | 501696/552076 [00:02<00:00, 222998.81it/s] 95%|█████████▍| 524040/552076 [00:02<00:00, 207580.56it/s] 99%|█████████▊| 545043/552076 [00:02<00:00, 173169.30it/s]100%|██████████| 552076/552076 [00:02<00:00, 200102.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9593/552076 [00:00<00:05, 95922.77it/s]  4%|▍         | 22305/552076 [00:00<00:05, 103545.46it/s]  8%|▊         | 41803/552076 [00:00<00:04, 120496.55it/s] 10%|█         | 55780/552076 [00:00<00:03, 125694.40it/s] 12%|█▏        | 68973/552076 [00:00<00:03, 126129.57it/s] 15%|█▍        | 80588/552076 [00:00<00:04, 113099.40it/s] 17%|█▋        | 91453/552076 [00:00<00:04, 104998.45it/s] 18%|█▊        | 101757/552076 [00:00<00:04, 92834.38it/s] 20%|██        | 111352/552076 [00:00<00:04, 93746.72it/s] 22%|██▏       | 121141/552076 [00:01<00:04, 94949.01it/s] 24%|██▍       | 131640/552076 [00:01<00:04, 97751.50it/s] 26%|██▌       | 141672/552076 [00:01<00:04, 98505.39it/s] 27%|██▋       | 151571/552076 [00:01<00:04, 96414.76it/s] 29%|██▉       | 161718/552076 [00:01<00:03, 97876.32it/s] 31%|███▏      | 173871/552076 [00:01<00:03, 103945.26it/s] 34%|███▍      | 186627/552076 [00:01<00:03, 110055.63it/s] 36%|███▌      | 200045/552076 [00:01<00:03, 116327.89it/s] 38%|███▊      | 211905/552076 [00:01<00:02, 114641.78it/s] 41%|████      | 224468/552076 [00:02<00:02, 117729.52it/s] 43%|████▎     | 236889/552076 [00:02<00:02, 119598.68it/s] 45%|████▌     | 249588/552076 [00:02<00:02, 121723.41it/s] 48%|████▊     | 263002/552076 [00:02<00:02, 125198.08it/s] 50%|████▉     | 275604/552076 [00:02<00:02, 123936.76it/s] 52%|█████▏    | 288058/552076 [00:02<00:02, 111679.13it/s] 56%|█████▋    | 311038/552076 [00:02<00:01, 132039.60it/s] 60%|██████    | 333580/552076 [00:02<00:01, 150777.10it/s] 64%|██████▍   | 354864/552076 [00:02<00:01, 165230.64it/s] 68%|██████▊   | 377000/552076 [00:02<00:00, 178833.86it/s] 72%|███████▏  | 397679/552076 [00:03<00:00, 186391.72it/s] 76%|███████▌  | 419668/552076 [00:03<00:00, 195317.40it/s] 80%|███████▉  | 440180/552076 [00:03<00:00, 198111.33it/s] 84%|████████▎ | 461980/552076 [00:03<00:00, 203683.77it/s] 88%|████████▊ | 483074/552076 [00:03<00:00, 205805.58it/s] 91%|█████████▏| 504030/552076 [00:03<00:00, 206917.03it/s] 95%|█████████▌| 525605/552076 [00:03<00:00, 209489.80it/s] 99%|█████████▉| 547507/552076 [00:03<00:00, 212260.54it/s]100%|██████████| 552076/552076 [00:03<00:00, 146380.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18549/552076 [00:00<00:02, 185486.64it/s]  7%|▋         | 39010/552076 [00:00<00:02, 190835.62it/s] 11%|█         | 58351/552076 [00:00<00:02, 191600.22it/s] 13%|█▎        | 71177/552076 [00:00<00:03, 147572.03it/s] 16%|█▌        | 88731/552076 [00:00<00:02, 154976.98it/s] 19%|█▊        | 102299/552076 [00:00<00:03, 142580.13it/s] 22%|██▏       | 121596/552076 [00:00<00:02, 154698.15it/s] 26%|██▌       | 142062/552076 [00:00<00:02, 166922.93it/s] 30%|██▉       | 162899/552076 [00:00<00:02, 177515.28it/s] 33%|███▎      | 183598/552076 [00:01<00:01, 185435.71it/s] 37%|███▋      | 204274/552076 [00:01<00:01, 191355.06it/s] 41%|████      | 224386/552076 [00:01<00:01, 194182.89it/s] 44%|████▍     | 243937/552076 [00:01<00:01, 193308.38it/s] 48%|████▊     | 263565/552076 [00:01<00:01, 194188.51it/s] 51%|█████▏    | 283371/552076 [00:01<00:01, 195332.92it/s] 55%|█████▍    | 303481/552076 [00:01<00:01, 197027.52it/s] 59%|█████▊    | 323221/552076 [00:01<00:01, 180764.68it/s] 62%|██████▏   | 344119/552076 [00:01<00:01, 188392.89it/s] 66%|██████▌   | 365659/552076 [00:01<00:00, 195753.89it/s] 70%|███████   | 386610/552076 [00:02<00:00, 199685.12it/s] 74%|███████▍  | 408532/552076 [00:02<00:00, 205167.42it/s] 78%|███████▊  | 429807/552076 [00:02<00:00, 207383.44it/s] 82%|████████▏ | 452305/552076 [00:02<00:00, 212366.21it/s] 86%|████████▌ | 475744/552076 [00:02<00:00, 218524.04it/s] 90%|█████████ | 498811/552076 [00:02<00:00, 222028.53it/s] 94%|█████████▍| 521120/552076 [00:02<00:00, 187689.76it/s] 98%|█████████▊| 543680/552076 [00:02<00:00, 197651.82it/s]100%|██████████| 552076/552076 [00:02<00:00, 191727.66it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21001/552076 [00:00<00:02, 210006.70it/s]  8%|▊         | 43236/552076 [00:00<00:02, 213561.95it/s] 12%|█▏        | 66043/552076 [00:00<00:02, 217715.95it/s] 15%|█▍        | 80642/552076 [00:00<00:02, 178052.39it/s] 18%|█▊        | 101035/552076 [00:00<00:02, 185098.73it/s] 22%|██▏       | 123707/552076 [00:00<00:02, 195886.58it/s] 26%|██▋       | 146117/552076 [00:00<00:01, 203573.35it/s] 30%|███       | 168024/552076 [00:00<00:01, 207985.37it/s] 34%|███▍      | 188849/552076 [00:00<00:01, 208062.22it/s] 38%|███▊      | 209141/552076 [00:01<00:01, 178880.49it/s] 41%|████      | 227388/552076 [00:01<00:02, 129813.33it/s] 44%|████▍     | 242536/552076 [00:01<00:02, 130578.01it/s] 47%|████▋     | 260225/552076 [00:01<00:02, 141707.77it/s] 50%|████▉     | 275735/552076 [00:01<00:01, 144747.68it/s] 53%|█████▎    | 291163/552076 [00:01<00:01, 146469.22it/s] 56%|█████▌    | 308871/552076 [00:01<00:01, 154478.28it/s] 59%|█████▉    | 324907/552076 [00:01<00:01, 155827.27it/s] 62%|██████▏   | 341201/552076 [00:02<00:01, 157894.19it/s] 65%|██████▍   | 357287/552076 [00:02<00:01, 156875.07it/s] 68%|██████▊   | 373184/552076 [00:02<00:01, 154425.29it/s] 70%|███████   | 389050/552076 [00:02<00:01, 155669.41it/s] 73%|███████▎  | 405344/552076 [00:02<00:00, 157779.29it/s] 77%|███████▋  | 423749/552076 [00:02<00:00, 164835.53it/s] 80%|████████  | 442893/552076 [00:02<00:00, 172005.84it/s] 83%|████████▎ | 460274/552076 [00:02<00:00, 143528.68it/s] 87%|████████▋ | 479146/552076 [00:02<00:00, 154636.51it/s] 90%|█████████ | 498076/552076 [00:02<00:00, 163624.15it/s] 93%|█████████▎| 515202/552076 [00:03<00:00, 137766.28it/s] 97%|█████████▋| 534085/552076 [00:03<00:00, 149929.23it/s]100%|██████████| 552076/552076 [00:03<00:00, 164313.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13381/552076 [00:00<00:04, 133805.02it/s]  5%|▌         | 29689/552076 [00:00<00:03, 141419.56it/s]  8%|▊         | 46067/552076 [00:00<00:03, 147457.45it/s] 11%|█         | 58838/552076 [00:00<00:03, 140918.01it/s] 13%|█▎        | 74183/552076 [00:00<00:03, 144456.44it/s] 16%|█▋        | 90321/552076 [00:00<00:03, 149148.36it/s] 19%|█▉        | 106694/552076 [00:00<00:02, 153241.77it/s] 22%|██▏       | 123156/552076 [00:00<00:02, 156485.67it/s] 25%|██▌       | 139175/552076 [00:00<00:02, 157576.91it/s] 28%|██▊       | 155485/552076 [00:01<00:02, 159193.64it/s] 31%|███       | 172079/552076 [00:01<00:02, 161157.94it/s] 34%|███▍      | 188604/552076 [00:01<00:02, 162363.60it/s] 37%|███▋      | 205191/552076 [00:01<00:02, 163397.37it/s] 40%|████      | 221734/552076 [00:01<00:02, 164001.01it/s] 43%|████▎     | 239952/552076 [00:01<00:01, 169060.59it/s] 47%|████▋     | 258870/552076 [00:01<00:01, 174629.89it/s] 50%|█████     | 277948/552076 [00:01<00:01, 179179.67it/s] 54%|█████▎    | 295923/552076 [00:01<00:01, 166481.53it/s] 57%|█████▋    | 312791/552076 [00:01<00:01, 164461.32it/s] 60%|█████▉    | 329397/552076 [00:02<00:01, 164472.92it/s] 63%|██████▎   | 346137/552076 [00:02<00:01, 165338.88it/s] 66%|██████▌   | 362750/552076 [00:02<00:01, 160310.58it/s] 69%|██████▊   | 378870/552076 [00:02<00:01, 149823.42it/s] 71%|███████▏  | 394731/552076 [00:02<00:01, 152354.65it/s] 74%|███████▍  | 411075/552076 [00:02<00:00, 155517.75it/s] 77%|███████▋  | 427359/552076 [00:02<00:00, 157641.76it/s] 80%|████████  | 443837/552076 [00:02<00:00, 159715.60it/s] 83%|████████▎ | 459880/552076 [00:02<00:00, 159836.07it/s] 86%|████████▌ | 475914/552076 [00:02<00:00, 159652.09it/s] 89%|████████▉ | 492356/552076 [00:03<00:00, 161050.96it/s] 92%|█████████▏| 509269/552076 [00:03<00:00, 163390.80it/s] 95%|█████████▌| 525636/552076 [00:03<00:00, 162293.63it/s] 98%|█████████▊| 541887/552076 [00:03<00:00, 161277.17it/s]100%|██████████| 552076/552076 [00:03<00:00, 160721.25it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14579/552076 [00:00<00:03, 145783.19it/s]  5%|▌         | 29550/552076 [00:00<00:03, 146937.51it/s]  8%|▊         | 44553/552076 [00:00<00:03, 147850.68it/s] 10%|█         | 56371/552076 [00:00<00:03, 136955.58it/s] 12%|█▏        | 66729/552076 [00:00<00:05, 91240.46it/s]  14%|█▍        | 76947/552076 [00:00<00:05, 94267.92it/s] 16%|█▌        | 86165/552076 [00:00<00:05, 90073.34it/s] 17%|█▋        | 95066/552076 [00:00<00:05, 76563.28it/s] 19%|█▊        | 102998/552076 [00:01<00:06, 69363.04it/s] 20%|█▉        | 110257/552076 [00:01<00:06, 69319.76it/s] 22%|██▏       | 122035/552076 [00:01<00:05, 79080.24it/s] 24%|██▍       | 134294/552076 [00:01<00:04, 88503.31it/s] 27%|██▋       | 146418/552076 [00:01<00:04, 96302.42it/s] 28%|██▊       | 156816/552076 [00:01<00:05, 68555.93it/s] 30%|███       | 167697/552076 [00:01<00:04, 76981.93it/s] 32%|███▏      | 176891/552076 [00:02<00:05, 72189.68it/s] 34%|███▍      | 188192/552076 [00:02<00:04, 80962.60it/s] 36%|███▋      | 200409/552076 [00:02<00:03, 90076.95it/s] 38%|███▊      | 212487/552076 [00:02<00:03, 97512.59it/s] 40%|████      | 223437/552076 [00:02<00:03, 100823.63it/s] 43%|████▎     | 235712/552076 [00:02<00:02, 106530.92it/s] 45%|████▍     | 248079/552076 [00:02<00:02, 111151.01it/s] 47%|████▋     | 260255/552076 [00:02<00:02, 114134.34it/s] 49%|████▉     | 272045/552076 [00:02<00:02, 115237.92it/s] 52%|█████▏    | 284518/552076 [00:02<00:02, 117928.50it/s] 54%|█████▍    | 296963/552076 [00:03<00:02, 119810.84it/s] 56%|█████▌    | 309080/552076 [00:03<00:02, 120129.14it/s] 58%|█████▊    | 321280/552076 [00:03<00:01, 120682.93it/s] 60%|██████    | 333416/552076 [00:03<00:01, 120798.11it/s] 63%|██████▎   | 345543/552076 [00:03<00:01, 120139.18it/s] 65%|██████▍   | 358068/552076 [00:03<00:01, 121625.42it/s] 67%|██████▋   | 370259/552076 [00:03<00:01, 121709.30it/s] 69%|██████▉   | 382450/552076 [00:03<00:01, 120862.73it/s] 71%|███████▏  | 394598/552076 [00:03<00:01, 121046.08it/s] 74%|███████▎  | 406714/552076 [00:03<00:01, 120050.71it/s] 76%|███████▌  | 418853/552076 [00:04<00:01, 120447.88it/s] 78%|███████▊  | 430905/552076 [00:04<00:01, 120435.79it/s] 80%|████████  | 442954/552076 [00:04<00:00, 117850.93it/s] 82%|████████▏ | 454755/552076 [00:04<00:00, 116281.25it/s] 84%|████████▍ | 466399/552076 [00:04<00:00, 115619.91it/s] 87%|████████▋ | 478087/552076 [00:04<00:00, 115994.04it/s] 89%|████████▊ | 489695/552076 [00:04<00:00, 114976.30it/s] 91%|█████████ | 501201/552076 [00:04<00:00, 114418.06it/s] 93%|█████████▎| 512650/552076 [00:04<00:00, 112385.62it/s] 95%|█████████▍| 524002/552076 [00:04<00:00, 112722.22it/s] 97%|█████████▋| 535591/552076 [00:05<00:00, 113650.42it/s] 99%|█████████▉| 547067/552076 [00:05<00:00, 113978.23it/s]100%|██████████| 552076/552076 [00:05<00:00, 106246.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10295/552076 [00:00<00:05, 102947.89it/s]  4%|▍         | 22393/552076 [00:00<00:04, 107764.45it/s]  6%|▌         | 31177/552076 [00:00<00:05, 100896.55it/s]  7%|▋         | 41341/552076 [00:00<00:05, 101117.03it/s]  9%|▉         | 49073/552076 [00:00<00:05, 85515.45it/s]  10%|█         | 56372/552076 [00:00<00:06, 76601.59it/s] 12%|█▏        | 64180/552076 [00:00<00:06, 77038.03it/s] 14%|█▎        | 74835/552076 [00:00<00:05, 84018.37it/s] 15%|█▌        | 83080/552076 [00:00<00:06, 77303.09it/s] 16%|█▋        | 90850/552076 [00:01<00:05, 77421.54it/s] 18%|█▊        | 101340/552076 [00:01<00:05, 84023.12it/s] 20%|█▉        | 109905/552076 [00:01<00:05, 75491.51it/s] 21%|██▏       | 117731/552076 [00:01<00:06, 71553.02it/s] 23%|██▎       | 125123/552076 [00:01<00:05, 71753.58it/s] 25%|██▍       | 136573/552076 [00:01<00:05, 80802.68it/s] 26%|██▋       | 145436/552076 [00:01<00:04, 83000.95it/s] 28%|██▊       | 154868/552076 [00:01<00:04, 86089.54it/s] 30%|███       | 166778/552076 [00:01<00:04, 93896.39it/s] 32%|███▏      | 178940/552076 [00:02<00:03, 100787.27it/s] 34%|███▍      | 190339/552076 [00:02<00:03, 104413.38it/s] 37%|███▋      | 202640/552076 [00:02<00:03, 109372.48it/s] 39%|███▉      | 214673/552076 [00:02<00:03, 112441.86it/s] 41%|████      | 226815/552076 [00:02<00:02, 114992.52it/s] 43%|████▎     | 239102/552076 [00:02<00:02, 117245.26it/s] 45%|████▌     | 250959/552076 [00:02<00:03, 90132.46it/s]  47%|████▋     | 261016/552076 [00:02<00:03, 92656.35it/s] 50%|████▉     | 274869/552076 [00:02<00:02, 102874.55it/s] 52%|█████▏    | 286034/552076 [00:03<00:02, 100901.09it/s] 54%|█████▍    | 296747/552076 [00:03<00:02, 95960.55it/s]  56%|█████▌    | 309381/552076 [00:03<00:02, 103420.86it/s] 60%|█████▉    | 328655/552076 [00:03<00:01, 120120.59it/s] 62%|██████▏   | 342031/552076 [00:03<00:01, 106503.58it/s] 65%|██████▌   | 360733/552076 [00:03<00:01, 122298.33it/s] 68%|██████▊   | 374667/552076 [00:03<00:01, 124870.81it/s] 72%|███████▏  | 397347/552076 [00:03<00:01, 144329.62it/s] 76%|███████▌  | 419830/552076 [00:03<00:00, 161697.58it/s] 80%|████████  | 442458/552076 [00:04<00:00, 176837.29it/s] 84%|████████▍ | 464274/552076 [00:04<00:00, 187490.04it/s] 88%|████████▊ | 484846/552076 [00:04<00:00, 192608.50it/s] 92%|█████████▏| 505174/552076 [00:04<00:00, 178031.20it/s] 96%|█████████▌| 527976/552076 [00:04<00:00, 190564.13it/s]100%|█████████▉| 551382/552076 [00:04<00:00, 201814.56it/s]100%|██████████| 552076/552076 [00:04<00:00, 120539.79it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21753/552076 [00:00<00:02, 217523.98it/s]  7%|▋         | 38902/552076 [00:00<00:02, 201308.37it/s] 10%|▉         | 54974/552076 [00:00<00:02, 187129.57it/s] 14%|█▍        | 77290/552076 [00:00<00:02, 196652.45it/s] 18%|█▊        | 100257/552076 [00:00<00:02, 205515.91it/s] 22%|██▏       | 123333/552076 [00:00<00:02, 212487.21it/s] 26%|██▋       | 145881/552076 [00:00<00:01, 216223.78it/s] 31%|███       | 168797/552076 [00:00<00:01, 219945.84it/s] 35%|███▍      | 192435/552076 [00:00<00:01, 224630.64it/s] 39%|███▉      | 215464/552076 [00:01<00:01, 226296.07it/s] 43%|████▎     | 237590/552076 [00:01<00:01, 177983.49it/s] 46%|████▋     | 256643/552076 [00:01<00:01, 177102.29it/s] 51%|█████     | 279930/552076 [00:01<00:01, 190809.95it/s] 55%|█████▍    | 302783/552076 [00:01<00:01, 200750.21it/s] 59%|█████▊    | 323761/552076 [00:01<00:01, 203374.26it/s] 63%|██████▎   | 347116/552076 [00:01<00:00, 211574.58it/s] 67%|██████▋   | 370400/552076 [00:01<00:00, 217533.46it/s] 71%|███████▏  | 394121/552076 [00:01<00:00, 223083.48it/s] 76%|███████▌  | 417514/552076 [00:01<00:00, 226228.99it/s] 80%|███████▉  | 440710/552076 [00:02<00:00, 227916.16it/s] 84%|████████▍ | 463958/552076 [00:02<00:00, 229263.37it/s] 88%|████████▊ | 486996/552076 [00:02<00:00, 226958.15it/s] 92%|█████████▏| 509775/552076 [00:02<00:00, 226298.99it/s] 96%|█████████▋| 532464/552076 [00:02<00:00, 224354.47it/s]100%|██████████| 552076/552076 [00:02<00:00, 213158.22it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 20544/552076 [00:00<00:02, 205439.22it/s]  7%|▋         | 41371/552076 [00:00<00:02, 206280.10it/s] 11%|█▏        | 62432/552076 [00:00<00:02, 207557.69it/s] 15%|█▌        | 84168/552076 [00:00<00:02, 210403.02it/s] 19%|█▉        | 105118/552076 [00:00<00:02, 210131.06it/s] 23%|██▎       | 126460/552076 [00:00<00:02, 211105.17it/s] 27%|██▋       | 148797/552076 [00:00<00:01, 214640.74it/s] 31%|███       | 170242/552076 [00:00<00:01, 214582.77it/s] 35%|███▍      | 190780/552076 [00:00<00:01, 211735.46it/s] 38%|███▊      | 211948/552076 [00:01<00:01, 211716.16it/s] 42%|████▏     | 232552/552076 [00:01<00:01, 174589.64it/s] 45%|████▌     | 250692/552076 [00:01<00:01, 155551.75it/s] 48%|████▊     | 267110/552076 [00:01<00:01, 144877.81it/s] 51%|█████     | 282349/552076 [00:01<00:01, 138442.17it/s] 54%|█████▍    | 296780/552076 [00:01<00:01, 134511.54it/s] 56%|█████▋    | 310666/552076 [00:01<00:01, 131924.39it/s] 59%|█████▊    | 324174/552076 [00:01<00:01, 129920.07it/s] 61%|██████    | 337394/552076 [00:02<00:01, 128731.77it/s] 63%|██████▎   | 350430/552076 [00:02<00:01, 127722.24it/s] 66%|██████▌   | 363318/552076 [00:02<00:01, 127139.38it/s] 68%|██████▊   | 376114/552076 [00:02<00:01, 126574.80it/s] 70%|███████   | 388829/552076 [00:02<00:01, 126243.51it/s] 73%|███████▎  | 401494/552076 [00:02<00:01, 126003.91it/s] 75%|███████▌  | 414123/552076 [00:02<00:01, 125729.86it/s] 77%|███████▋  | 426716/552076 [00:02<00:01, 99932.30it/s]  80%|███████▉  | 438959/552076 [00:02<00:01, 105762.28it/s] 82%|████████▏ | 451126/552076 [00:03<00:00, 110077.68it/s] 84%|████████▍ | 463517/552076 [00:03<00:00, 113889.80it/s] 86%|████████▌ | 476050/552076 [00:03<00:00, 117095.72it/s] 88%|████████▊ | 488548/552076 [00:03<00:00, 119352.05it/s] 91%|█████████ | 501048/552076 [00:03<00:00, 120989.79it/s] 93%|█████████▎| 513540/552076 [00:03<00:00, 122141.31it/s] 95%|█████████▌| 525870/552076 [00:03<00:00, 97814.25it/s]  97%|█████████▋| 536505/552076 [00:03<00:00, 71249.79it/s] 99%|█████████▉| 548254/552076 [00:04<00:00, 80785.77it/s]100%|██████████| 552076/552076 [00:04<00:00, 133333.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5681/552076 [00:00<00:09, 56807.75it/s]  2%|▏         | 11830/552076 [00:00<00:09, 58135.35it/s]  3%|▎         | 18186/552076 [00:00<00:08, 59662.54it/s]  4%|▍         | 23046/552076 [00:00<00:09, 55847.37it/s]  5%|▌         | 29611/552076 [00:00<00:09, 56985.45it/s]  6%|▋         | 35565/552076 [00:00<00:08, 57727.19it/s]  8%|▊         | 42667/552076 [00:00<00:08, 61160.88it/s] 10%|▉         | 54956/552076 [00:00<00:06, 72012.33it/s] 12%|█▏        | 64985/552076 [00:00<00:06, 78665.38it/s] 13%|█▎        | 73382/552076 [00:01<00:06, 74427.28it/s] 15%|█▍        | 81724/552076 [00:01<00:06, 76914.02it/s] 17%|█▋        | 91502/552076 [00:01<00:05, 82174.31it/s] 18%|█▊        | 100601/552076 [00:01<00:05, 84619.16it/s] 20%|██        | 112773/552076 [00:01<00:04, 93135.38it/s] 22%|██▏       | 124140/552076 [00:01<00:04, 98471.04it/s] 24%|██▍       | 134605/552076 [00:01<00:04, 100243.74it/s] 26%|██▌       | 144906/552076 [00:01<00:04, 92190.98it/s]  28%|██▊       | 157161/552076 [00:01<00:03, 99591.68it/s] 30%|███       | 167516/552076 [00:01<00:03, 97872.98it/s] 32%|███▏      | 177587/552076 [00:02<00:03, 97540.17it/s] 34%|███▍      | 188121/552076 [00:02<00:03, 99756.04it/s] 36%|███▌      | 198248/552076 [00:02<00:03, 95829.01it/s] 38%|███▊      | 208397/552076 [00:02<00:03, 97459.09it/s] 40%|███▉      | 218247/552076 [00:02<00:03, 95047.19it/s] 42%|████▏     | 230517/552076 [00:02<00:03, 101938.57it/s] 44%|████▎     | 240912/552076 [00:02<00:03, 94635.66it/s]  46%|████▌     | 253231/552076 [00:02<00:02, 101707.30it/s] 48%|████▊     | 265302/552076 [00:02<00:02, 106748.31it/s] 50%|█████     | 277517/552076 [00:03<00:02, 110943.77it/s] 52%|█████▏    | 289335/552076 [00:03<00:02, 113019.50it/s] 55%|█████▍    | 301765/552076 [00:03<00:02, 116181.59it/s] 57%|█████▋    | 313533/552076 [00:03<00:02, 106176.51it/s] 59%|█████▉    | 324423/552076 [00:03<00:02, 105745.04it/s] 61%|██████    | 336647/552076 [00:03<00:01, 110205.42it/s] 63%|██████▎   | 348801/552076 [00:03<00:01, 113376.25it/s] 65%|██████▌   | 360812/552076 [00:03<00:01, 115314.74it/s] 67%|██████▋   | 372457/552076 [00:03<00:01, 103467.44it/s] 70%|██████▉   | 384759/552076 [00:04<00:01, 108646.45it/s] 72%|███████▏  | 396837/552076 [00:04<00:01, 112021.20it/s] 74%|███████▍  | 409074/552076 [00:04<00:01, 114935.36it/s] 76%|███████▋  | 421360/552076 [00:04<00:01, 117202.29it/s] 78%|███████▊  | 433301/552076 [00:04<00:01, 117092.72it/s] 81%|████████  | 445105/552076 [00:04<00:00, 114627.65it/s] 83%|████████▎ | 456646/552076 [00:04<00:00, 111822.34it/s] 85%|████████▍ | 467898/552076 [00:04<00:00, 104279.01it/s] 87%|████████▋ | 478478/552076 [00:04<00:00, 98326.05it/s]  88%|████████▊ | 488487/552076 [00:04<00:00, 96522.07it/s] 91%|█████████ | 500550/552076 [00:05<00:00, 102676.67it/s] 93%|█████████▎| 511017/552076 [00:05<00:00, 99738.22it/s]  94%|█████████▍| 521149/552076 [00:05<00:00, 93589.85it/s] 96%|█████████▌| 530696/552076 [00:05<00:00, 78306.80it/s] 98%|█████████▊| 539080/552076 [00:05<00:00, 78158.12it/s]100%|█████████▉| 550089/552076 [00:05<00:00, 84812.76it/s]100%|██████████| 552076/552076 [00:05<00:00, 96314.15it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10089/552076 [00:00<00:05, 100888.89it/s]  4%|▎         | 19877/552076 [00:00<00:05, 99965.40it/s]   5%|▍         | 25388/552076 [00:00<00:06, 80344.52it/s]  6%|▌         | 34270/552076 [00:00<00:06, 82711.29it/s]  8%|▊         | 42239/552076 [00:00<00:06, 81779.70it/s]  9%|▉         | 51388/552076 [00:00<00:05, 84467.99it/s] 11%|█         | 59020/552076 [00:00<00:06, 81446.72it/s] 13%|█▎        | 69615/552076 [00:00<00:05, 87517.24it/s] 14%|█▍        | 78049/552076 [00:00<00:05, 81331.66it/s] 16%|█▋        | 89828/552076 [00:01<00:05, 89656.55it/s] 19%|█▊        | 102206/552076 [00:01<00:04, 97739.29it/s] 21%|██        | 114186/552076 [00:01<00:04, 103453.39it/s] 23%|██▎       | 126523/552076 [00:01<00:03, 108718.07it/s] 25%|██▍       | 138001/552076 [00:01<00:03, 109096.65it/s] 27%|██▋       | 150067/552076 [00:01<00:03, 112323.76it/s] 29%|██▉       | 162041/552076 [00:01<00:03, 114448.42it/s] 32%|███▏      | 173955/552076 [00:01<00:03, 115815.46it/s] 34%|███▍      | 186369/552076 [00:01<00:03, 118190.89it/s] 36%|███▌      | 198825/552076 [00:01<00:02, 120031.53it/s] 38%|███▊      | 210890/552076 [00:02<00:03, 100508.90it/s] 40%|████      | 221521/552076 [00:02<00:03, 84865.73it/s]  42%|████▏     | 232943/552076 [00:02<00:03, 91953.65it/s] 44%|████▍     | 243909/552076 [00:02<00:03, 96632.32it/s] 46%|████▌     | 254628/552076 [00:02<00:02, 99572.77it/s] 48%|████▊     | 265032/552076 [00:02<00:02, 100871.88it/s] 50%|████▉     | 275427/552076 [00:02<00:03, 78403.57it/s]  51%|█████▏    | 284251/552076 [00:02<00:03, 80902.50it/s] 53%|█████▎    | 294601/552076 [00:03<00:02, 86573.00it/s] 56%|█████▌    | 306653/552076 [00:03<00:02, 94561.88it/s] 58%|█████▊    | 319202/552076 [00:03<00:02, 102109.55it/s] 60%|██████    | 331625/552076 [00:03<00:02, 107871.35it/s] 62%|██████▏   | 343948/552076 [00:03<00:01, 112059.70it/s] 64%|██████▍   | 355563/552076 [00:03<00:02, 92339.38it/s]  66%|██████▌   | 365709/552076 [00:03<00:01, 94896.42it/s] 68%|██████▊   | 377986/552076 [00:03<00:01, 101831.76it/s] 71%|███████   | 390122/552076 [00:03<00:01, 106995.22it/s] 73%|███████▎  | 402335/552076 [00:04<00:01, 111125.95it/s] 75%|███████▌  | 414782/552076 [00:04<00:01, 114817.58it/s] 77%|███████▋  | 427207/552076 [00:04<00:01, 117493.22it/s] 80%|███████▉  | 439297/552076 [00:04<00:00, 118493.88it/s] 82%|████████▏ | 451302/552076 [00:04<00:01, 92587.28it/s]  84%|████████▍ | 463592/552076 [00:04<00:00, 99984.20it/s] 86%|████████▌ | 475201/552076 [00:04<00:00, 104325.22it/s] 88%|████████▊ | 487604/552076 [00:04<00:00, 109545.95it/s] 91%|█████████ | 500101/552076 [00:04<00:00, 113757.31it/s] 93%|█████████▎| 512523/552076 [00:05<00:00, 116705.12it/s] 95%|█████████▌| 524966/552076 [00:05<00:00, 118917.72it/s] 97%|█████████▋| 537460/552076 [00:05<00:00, 120660.58it/s]100%|█████████▉| 549844/552076 [00:05<00:00, 121595.37it/s]100%|██████████| 552076/552076 [00:05<00:00, 103053.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10743/552076 [00:00<00:05, 107422.93it/s]  4%|▍         | 23082/552076 [00:00<00:04, 111760.71it/s]  6%|▋         | 35287/552076 [00:00<00:04, 114659.57it/s]  9%|▊         | 47726/552076 [00:00<00:04, 117413.38it/s] 11%|█         | 60147/552076 [00:00<00:04, 119371.68it/s] 13%|█▎        | 72607/552076 [00:00<00:03, 120892.38it/s] 15%|█▌        | 85114/552076 [00:00<00:03, 122114.82it/s] 18%|█▊        | 97599/552076 [00:00<00:03, 122920.58it/s] 20%|█▉        | 110136/552076 [00:00<00:03, 123645.24it/s] 22%|██▏       | 122684/552076 [00:01<00:03, 124188.20it/s] 24%|██▍       | 135219/552076 [00:01<00:03, 124533.27it/s] 27%|██▋       | 147469/552076 [00:01<00:03, 122575.51it/s] 29%|██▉       | 159931/552076 [00:01<00:03, 123179.98it/s] 31%|███       | 172471/552076 [00:01<00:03, 123837.03it/s] 34%|███▎      | 184976/552076 [00:01<00:02, 124195.21it/s] 36%|███▌      | 197351/552076 [00:01<00:02, 123931.69it/s] 38%|███▊      | 209784/552076 [00:01<00:02, 124049.09it/s] 40%|████      | 222206/552076 [00:01<00:02, 124099.91it/s] 43%|████▎     | 234790/552076 [00:01<00:02, 124615.75it/s] 45%|████▍     | 247321/552076 [00:02<00:02, 124821.65it/s] 47%|████▋     | 259796/552076 [00:02<00:02, 123023.76it/s] 49%|████▉     | 272343/552076 [00:02<00:02, 123747.42it/s] 52%|█████▏    | 284928/552076 [00:02<00:02, 124370.29it/s] 54%|█████▍    | 297411/552076 [00:02<00:02, 124506.90it/s] 56%|█████▌    | 309864/552076 [00:02<00:02, 96813.55it/s]  58%|█████▊    | 320493/552076 [00:02<00:02, 96869.07it/s] 60%|█████▉    | 330843/552076 [00:03<00:03, 60907.46it/s] 61%|██████▏   | 339068/552076 [00:03<00:03, 66029.66it/s] 64%|██████▎   | 351439/552076 [00:03<00:02, 76767.34it/s] 66%|██████▌   | 363157/552076 [00:03<00:02, 85625.55it/s] 68%|██████▊   | 373299/552076 [00:03<00:02, 83254.61it/s] 70%|███████   | 386655/552076 [00:03<00:01, 93858.88it/s] 72%|███████▏  | 397698/552076 [00:03<00:01, 98278.92it/s] 74%|███████▍  | 408443/552076 [00:03<00:01, 76283.16it/s] 76%|███████▋  | 421162/552076 [00:03<00:01, 86691.75it/s] 78%|███████▊  | 431295/552076 [00:04<00:01, 69896.74it/s] 80%|███████▉  | 439833/552076 [00:04<00:01, 72286.75it/s] 82%|████████▏ | 452129/552076 [00:04<00:01, 82213.04it/s] 84%|████████▎ | 461989/552076 [00:04<00:01, 86526.07it/s] 86%|████████▌ | 473901/552076 [00:04<00:00, 94262.37it/s] 88%|████████▊ | 486351/552076 [00:04<00:00, 101668.42it/s] 90%|█████████ | 498826/552076 [00:04<00:00, 107643.12it/s] 93%|█████████▎| 511685/552076 [00:04<00:00, 113171.63it/s] 95%|█████████▌| 524587/552076 [00:04<00:00, 117500.10it/s] 97%|█████████▋| 537281/552076 [00:05<00:00, 120179.45it/s]100%|█████████▉| 549597/552076 [00:05<00:00, 104643.01it/s]100%|██████████| 552076/552076 [00:05<00:00, 103656.25it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12116/552076 [00:00<00:04, 121153.76it/s]  3%|▎         | 15903/552076 [00:00<00:07, 71461.77it/s]   5%|▍         | 26187/552076 [00:00<00:06, 78661.36it/s]  7%|▋         | 38317/552076 [00:00<00:05, 87933.70it/s]  9%|▉         | 50723/552076 [00:00<00:05, 96350.30it/s] 11%|█▏        | 63221/552076 [00:00<00:04, 103459.19it/s] 14%|█▎        | 75726/552076 [00:00<00:04, 109110.38it/s] 16%|█▌        | 88244/552076 [00:00<00:04, 113480.07it/s] 18%|█▊        | 99994/552076 [00:00<00:03, 114656.34it/s] 20%|██        | 111440/552076 [00:01<00:05, 80366.51it/s] 22%|██▏       | 120873/552076 [00:01<00:06, 64818.93it/s] 24%|██▍       | 133296/552076 [00:01<00:05, 75675.24it/s] 26%|██▋       | 145673/552076 [00:01<00:04, 85660.83it/s] 29%|██▊       | 158146/552076 [00:01<00:04, 94544.49it/s] 31%|███       | 170647/552076 [00:01<00:03, 102001.72it/s] 33%|███▎      | 183231/552076 [00:01<00:03, 108145.86it/s] 35%|███▌      | 195794/552076 [00:01<00:03, 112856.20it/s] 38%|███▊      | 208329/552076 [00:02<00:02, 116333.80it/s] 40%|████      | 220882/552076 [00:02<00:02, 118945.78it/s] 42%|████▏     | 233153/552076 [00:02<00:02, 118046.48it/s] 44%|████▍     | 245223/552076 [00:02<00:03, 96074.17it/s]  46%|████▋     | 255681/552076 [00:02<00:03, 87298.87it/s] 48%|████▊     | 265161/552076 [00:02<00:03, 89072.35it/s] 50%|█████     | 277192/552076 [00:02<00:02, 96594.95it/s] 52%|█████▏    | 289178/552076 [00:02<00:02, 102567.03it/s] 54%|█████▍    | 300211/552076 [00:02<00:02, 104776.64it/s] 56%|█████▋    | 311045/552076 [00:03<00:02, 105020.06it/s] 58%|█████▊    | 321797/552076 [00:03<00:02, 97130.55it/s]  60%|██████    | 333873/552076 [00:03<00:02, 102449.97it/s] 63%|██████▎   | 345329/552076 [00:03<00:01, 105803.35it/s] 65%|██████▍   | 356135/552076 [00:03<00:02, 97501.30it/s]  66%|██████▋   | 366172/552076 [00:03<00:01, 97017.84it/s] 68%|██████▊   | 376075/552076 [00:03<00:02, 80976.58it/s] 70%|███████   | 387661/552076 [00:03<00:01, 89015.57it/s] 72%|███████▏  | 400199/552076 [00:04<00:01, 97497.96it/s] 74%|███████▍  | 410649/552076 [00:04<00:01, 95681.07it/s] 76%|███████▌  | 420715/552076 [00:04<00:01, 89548.79it/s] 78%|███████▊  | 431774/552076 [00:04<00:01, 94968.06it/s] 80%|███████▉  | 441660/552076 [00:04<00:01, 81178.00it/s] 82%|████████▏ | 452594/552076 [00:04<00:01, 87974.61it/s] 84%|████████▎ | 461992/552076 [00:04<00:01, 84106.27it/s] 85%|████████▌ | 470954/552076 [00:04<00:00, 85686.61it/s] 87%|████████▋ | 481010/552076 [00:04<00:00, 88706.69it/s] 89%|████████▉ | 490137/552076 [00:05<00:00, 79019.74it/s] 91%|█████████ | 501128/552076 [00:05<00:00, 86295.65it/s] 92%|█████████▏| 510220/552076 [00:05<00:00, 84570.48it/s] 94%|█████████▍| 519009/552076 [00:05<00:00, 76074.45it/s] 96%|█████████▌| 527474/552076 [00:05<00:00, 78457.84it/s] 98%|█████████▊| 539889/552076 [00:05<00:00, 88195.09it/s] 99%|█████████▉| 549312/552076 [00:05<00:00, 83819.67it/s]100%|██████████| 552076/552076 [00:05<00:00, 94564.57it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12015/552076 [00:00<00:04, 120146.68it/s]  4%|▍         | 23575/552076 [00:00<00:04, 118744.90it/s]  6%|▋         | 35768/552076 [00:00<00:04, 119682.68it/s]  9%|▊         | 48086/552076 [00:00<00:04, 120709.78it/s] 11%|█         | 60478/552076 [00:00<00:04, 121653.57it/s] 13%|█▎        | 72906/552076 [00:00<00:03, 122428.42it/s] 15%|█▌        | 85133/552076 [00:00<00:03, 122379.75it/s] 18%|█▊        | 97496/552076 [00:00<00:03, 122750.98it/s] 20%|█▉        | 110008/552076 [00:00<00:03, 123451.20it/s] 22%|██▏       | 121872/552076 [00:01<00:03, 115438.24it/s] 24%|██▍       | 133184/552076 [00:01<00:04, 100227.26it/s] 26%|██▌       | 143403/552076 [00:01<00:04, 97459.06it/s]  28%|██▊       | 153303/552076 [00:01<00:05, 76461.49it/s] 29%|██▉       | 161760/552076 [00:01<00:05, 66183.25it/s] 31%|███       | 169191/552076 [00:01<00:06, 61275.11it/s] 32%|███▏      | 175960/552076 [00:01<00:06, 62000.73it/s] 34%|███▍      | 188305/552076 [00:01<00:04, 72883.89it/s] 36%|███▌      | 199592/552076 [00:02<00:04, 81550.75it/s] 38%|███▊      | 211540/552076 [00:02<00:03, 90134.49it/s] 41%|████      | 223874/552076 [00:02<00:03, 98052.41it/s] 42%|████▏     | 234610/552076 [00:02<00:03, 97666.71it/s] 44%|████▍     | 245029/552076 [00:02<00:03, 98522.12it/s] 47%|████▋     | 257425/552076 [00:02<00:02, 104984.61it/s] 49%|████▊     | 268361/552076 [00:02<00:03, 87520.21it/s]  50%|█████     | 277908/552076 [00:02<00:03, 77855.00it/s] 52%|█████▏    | 286448/552076 [00:03<00:03, 73255.84it/s] 54%|█████▍    | 298984/552076 [00:03<00:03, 83690.45it/s] 56%|█████▌    | 310409/552076 [00:03<00:02, 90989.90it/s] 58%|█████▊    | 322709/552076 [00:03<00:02, 98695.07it/s] 60%|██████    | 333354/552076 [00:03<00:02, 99988.99it/s] 63%|██████▎   | 345877/552076 [00:03<00:01, 106423.86it/s] 65%|██████▍   | 358382/552076 [00:03<00:01, 111400.80it/s] 67%|██████▋   | 370872/552076 [00:03<00:01, 115132.11it/s] 69%|██████▉   | 383429/552076 [00:03<00:01, 118076.41it/s] 72%|███████▏  | 395990/552076 [00:03<00:01, 120238.83it/s] 74%|███████▍  | 408470/552076 [00:04<00:01, 121570.38it/s] 76%|███████▋  | 421037/552076 [00:04<00:01, 122770.73it/s] 79%|███████▊  | 433407/552076 [00:04<00:01, 106348.02it/s] 81%|████████  | 445499/552076 [00:04<00:00, 110335.17it/s] 83%|████████▎ | 457990/552076 [00:04<00:00, 114335.46it/s] 85%|████████▌ | 470507/552076 [00:04<00:00, 117383.11it/s] 87%|████████▋ | 482989/552076 [00:04<00:00, 119517.67it/s] 90%|████████▉ | 495451/552076 [00:04<00:00, 121002.39it/s] 92%|█████████▏| 507963/552076 [00:04<00:00, 122208.11it/s] 94%|█████████▍| 520463/552076 [00:05<00:00, 123031.49it/s] 97%|█████████▋| 532945/552076 [00:05<00:00, 123561.54it/s] 99%|█████████▉| 545492/552076 [00:05<00:00, 124126.32it/s]100%|██████████| 552076/552076 [00:05<00:00, 104643.28it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8812/552076 [00:00<00:06, 88116.51it/s]  4%|▍         | 20844/552076 [00:00<00:05, 92347.41it/s]  6%|▌         | 31368/552076 [00:00<00:05, 95870.25it/s]  8%|▊         | 43636/552076 [00:00<00:04, 102596.40it/s] 10%|▉         | 53523/552076 [00:00<00:04, 101447.71it/s] 12%|█▏        | 65138/552076 [00:00<00:04, 105451.84it/s] 14%|█▍        | 76920/552076 [00:00<00:04, 107678.03it/s] 16%|█▌        | 87066/552076 [00:00<00:04, 99187.52it/s]  18%|█▊        | 99066/552076 [00:00<00:04, 104630.94it/s] 20%|█▉        | 109746/552076 [00:01<00:04, 105270.82it/s] 22%|██▏       | 120182/552076 [00:01<00:04, 100663.51it/s] 24%|██▍       | 132515/552076 [00:01<00:03, 106537.02it/s] 26%|██▌       | 144812/552076 [00:01<00:03, 110985.66it/s] 28%|██▊       | 156839/552076 [00:01<00:03, 113614.46it/s] 31%|███       | 169290/552076 [00:01<00:03, 116675.03it/s] 33%|███▎      | 181529/552076 [00:01<00:03, 118330.92it/s] 35%|███▌      | 193425/552076 [00:01<00:03, 118342.72it/s] 37%|███▋      | 205304/552076 [00:01<00:03, 112821.81it/s] 39%|███▉      | 216672/552076 [00:01<00:03, 107411.34it/s] 41%|████      | 227528/552076 [00:02<00:03, 105481.97it/s] 43%|████▎     | 238164/552076 [00:02<00:02, 105540.94it/s] 45%|████▌     | 250208/552076 [00:02<00:02, 109608.15it/s] 48%|████▊     | 262283/552076 [00:02<00:02, 112728.54it/s] 50%|████▉     | 274208/552076 [00:02<00:02, 114606.66it/s] 52%|█████▏    | 285987/552076 [00:02<00:02, 115541.37it/s] 54%|█████▍    | 298166/552076 [00:02<00:02, 117346.32it/s] 56%|█████▌    | 310013/552076 [00:02<00:02, 117679.96it/s] 58%|█████▊    | 322296/552076 [00:02<00:01, 119177.10it/s] 61%|██████    | 334238/552076 [00:03<00:01, 117829.64it/s] 63%|██████▎   | 346042/552076 [00:03<00:02, 82288.53it/s]  64%|██████▍   | 355754/552076 [00:03<00:02, 73432.38it/s] 67%|██████▋   | 368101/552076 [00:03<00:02, 83595.44it/s] 69%|██████▉   | 380521/552076 [00:03<00:01, 92685.38it/s] 71%|███████   | 391034/552076 [00:03<00:01, 88604.81it/s] 73%|███████▎  | 400809/552076 [00:03<00:01, 91161.88it/s] 75%|███████▌  | 414426/552076 [00:03<00:01, 101195.49it/s] 77%|███████▋  | 426812/552076 [00:04<00:01, 107073.09it/s] 79%|███████▉  | 438175/552076 [00:04<00:01, 97007.82it/s]  82%|████████▏ | 450638/552076 [00:04<00:00, 103916.50it/s] 84%|████████▍ | 463228/552076 [00:04<00:00, 109659.76it/s] 86%|████████▌ | 475209/552076 [00:04<00:00, 112518.66it/s] 88%|████████▊ | 486826/552076 [00:04<00:00, 100021.96it/s] 90%|█████████ | 498582/552076 [00:04<00:00, 104706.95it/s] 93%|█████████▎| 510776/552076 [00:04<00:00, 109341.68it/s] 95%|█████████▍| 522525/552076 [00:04<00:00, 111664.78it/s] 97%|█████████▋| 535070/552076 [00:05<00:00, 115469.45it/s] 99%|█████████▉| 547539/552076 [00:05<00:00, 118087.61it/s]100%|██████████| 552076/552076 [00:05<00:00, 106814.60it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11649/552076 [00:00<00:04, 116481.78it/s]  4%|▍         | 23122/552076 [00:00<00:04, 114772.01it/s]  5%|▌         | 28898/552076 [00:00<00:06, 80860.38it/s]   6%|▌         | 34377/552076 [00:00<00:07, 69336.39it/s]  8%|▊         | 42680/552076 [00:00<00:06, 72945.36it/s]  9%|▉         | 48949/552076 [00:00<00:07, 63652.24it/s] 11%|█         | 59786/552076 [00:00<00:06, 70754.82it/s] 12%|█▏        | 66758/552076 [00:00<00:07, 66201.35it/s] 14%|█▍        | 79090/552076 [00:00<00:06, 76884.01it/s] 16%|█▌        | 87642/552076 [00:01<00:05, 78393.56it/s] 17%|█▋        | 95934/552076 [00:01<00:06, 69730.77it/s] 19%|█▊        | 103402/552076 [00:01<00:06, 70086.65it/s] 21%|██        | 113518/552076 [00:01<00:05, 75963.25it/s] 22%|██▏       | 121500/552076 [00:01<00:06, 69538.80it/s] 23%|██▎       | 128830/552076 [00:01<00:07, 58326.07it/s] 24%|██▍       | 135233/552076 [00:01<00:07, 57625.29it/s] 26%|██▌       | 141397/552076 [00:02<00:07, 53173.75it/s] 28%|██▊       | 153389/552076 [00:02<00:06, 63831.88it/s] 29%|██▉       | 160953/552076 [00:02<00:05, 65788.79it/s] 31%|███       | 169338/552076 [00:02<00:05, 69881.62it/s] 32%|███▏      | 176985/552076 [00:02<00:05, 69624.67it/s] 34%|███▍      | 189385/552076 [00:02<00:04, 80170.50it/s] 37%|███▋      | 201849/552076 [00:02<00:03, 89779.54it/s] 39%|███▉      | 214274/552076 [00:02<00:03, 97929.75it/s] 41%|████      | 226053/552076 [00:02<00:03, 103146.22it/s] 43%|████▎     | 238516/552076 [00:02<00:02, 108769.90it/s] 45%|████▌     | 250932/552076 [00:03<00:02, 112969.11it/s] 48%|████▊     | 263350/552076 [00:03<00:02, 116113.56it/s] 50%|████▉     | 275853/552076 [00:03<00:02, 118651.35it/s] 52%|█████▏    | 288424/552076 [00:03<00:02, 120683.57it/s] 55%|█████▍    | 300967/552076 [00:03<00:02, 122067.94it/s] 57%|█████▋    | 313453/552076 [00:03<00:01, 122890.83it/s] 59%|█████▉    | 325958/552076 [00:03<00:01, 123528.57it/s] 61%|██████▏   | 338481/552076 [00:03<00:01, 124030.99it/s] 64%|██████▎   | 350982/552076 [00:03<00:01, 124321.08it/s] 66%|██████▌   | 363471/552076 [00:03<00:01, 124488.59it/s] 68%|██████▊   | 375950/552076 [00:04<00:01, 124578.63it/s] 70%|███████   | 388425/552076 [00:04<00:01, 123494.92it/s] 73%|███████▎  | 400789/552076 [00:04<00:01, 123497.93it/s] 75%|███████▍  | 413266/552076 [00:04<00:01, 123874.39it/s] 77%|███████▋  | 425746/552076 [00:04<00:01, 124147.40it/s] 79%|███████▉  | 438166/552076 [00:04<00:00, 122700.99it/s] 82%|████████▏ | 450504/552076 [00:04<00:00, 122901.32it/s] 84%|████████▍ | 463003/552076 [00:04<00:00, 123519.54it/s] 86%|████████▌ | 475413/552076 [00:04<00:00, 123692.70it/s] 88%|████████▊ | 487835/552076 [00:04<00:00, 123847.90it/s] 91%|█████████ | 500223/552076 [00:05<00:00, 123823.47it/s] 93%|█████████▎| 512607/552076 [00:05<00:00, 118627.21it/s] 95%|█████████▌| 525073/552076 [00:05<00:00, 120371.96it/s] 97%|█████████▋| 537150/552076 [00:05<00:00, 109779.37it/s]100%|█████████▉| 549564/552076 [00:05<00:00, 113725.36it/s]100%|██████████| 552076/552076 [00:05<00:00, 100112.85it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8218/552076 [00:00<00:06, 82174.79it/s]  3%|▎         | 19203/552076 [00:00<00:05, 88892.38it/s]  6%|▌         | 31368/552076 [00:00<00:05, 96702.96it/s]  8%|▊         | 43572/552076 [00:00<00:04, 103124.70it/s] 10%|█         | 55913/552076 [00:00<00:04, 108472.07it/s] 12%|█▏        | 68212/552076 [00:00<00:04, 112452.55it/s] 15%|█▍        | 80726/552076 [00:00<00:04, 115979.98it/s] 17%|█▋        | 93067/552076 [00:00<00:03, 118112.71it/s] 19%|█▉        | 105480/552076 [00:00<00:03, 119854.19it/s] 21%|██▏       | 117840/552076 [00:01<00:03, 120952.98it/s] 24%|██▎       | 130299/552076 [00:01<00:03, 122020.77it/s] 26%|██▌       | 142643/552076 [00:01<00:03, 122442.53it/s] 28%|██▊       | 155051/552076 [00:01<00:03, 122929.08it/s] 30%|███       | 167580/552076 [00:01<00:03, 123625.72it/s] 33%|███▎      | 180052/552076 [00:01<00:03, 123951.84it/s] 35%|███▍      | 192442/552076 [00:01<00:02, 123935.08it/s] 37%|███▋      | 204820/552076 [00:01<00:02, 119929.75it/s] 39%|███▉      | 216830/552076 [00:01<00:02, 117137.19it/s] 41%|████▏     | 228570/552076 [00:01<00:02, 113763.70it/s] 43%|████▎     | 239986/552076 [00:02<00:03, 101010.91it/s] 45%|████▌     | 250414/552076 [00:02<00:02, 101625.28it/s] 47%|████▋     | 260782/552076 [00:02<00:03, 79637.01it/s]  49%|████▉     | 269628/552076 [00:02<00:04, 70353.87it/s] 51%|█████     | 280299/552076 [00:02<00:03, 78362.55it/s] 52%|█████▏    | 288996/552076 [00:02<00:03, 73715.59it/s] 54%|█████▍    | 297027/552076 [00:02<00:03, 70806.11it/s] 56%|█████▌    | 308944/552076 [00:02<00:03, 80621.88it/s] 58%|█████▊    | 317816/552076 [00:03<00:02, 81083.20it/s] 60%|█████▉    | 329798/552076 [00:03<00:02, 88171.30it/s] 62%|██████▏   | 339926/552076 [00:03<00:02, 91205.19it/s] 64%|██████▎   | 350844/552076 [00:03<00:02, 95943.44it/s] 66%|██████▌   | 362710/552076 [00:03<00:01, 101789.33it/s] 68%|██████▊   | 375129/552076 [00:03<00:01, 107612.17it/s] 70%|███████   | 387596/552076 [00:03<00:01, 112217.44it/s] 72%|███████▏  | 400104/552076 [00:03<00:01, 115789.39it/s] 75%|███████▍  | 412649/552076 [00:03<00:01, 118527.53it/s] 77%|███████▋  | 425118/552076 [00:04<00:01, 120311.13it/s] 79%|███████▉  | 437658/552076 [00:04<00:00, 121791.55it/s] 82%|████████▏ | 450187/552076 [00:04<00:00, 122818.20it/s] 84%|████████▍ | 462803/552076 [00:04<00:00, 123800.90it/s] 86%|████████▌ | 475234/552076 [00:04<00:00, 123903.30it/s] 88%|████████▊ | 487660/552076 [00:04<00:00, 123463.81it/s] 91%|█████████ | 500060/552076 [00:04<00:00, 123621.92it/s] 93%|█████████▎| 512651/552076 [00:04<00:00, 124298.72it/s] 95%|█████████▌| 525250/552076 [00:04<00:00, 124798.61it/s] 97%|█████████▋| 537790/552076 [00:04<00:00, 124975.70it/s]100%|█████████▉| 550367/552076 [00:05<00:00, 125211.81it/s]100%|██████████| 552076/552076 [00:05<00:00, 109954.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7677/552076 [00:00<00:07, 76768.24it/s]  3%|▎         | 17688/552076 [00:00<00:06, 82539.94it/s]  5%|▌         | 28615/552076 [00:00<00:05, 89075.62it/s]  7%|▋         | 39349/552076 [00:00<00:05, 93866.04it/s]  9%|▉         | 49967/552076 [00:00<00:05, 97249.29it/s] 11%|█         | 60439/552076 [00:00<00:04, 99374.82it/s] 13%|█▎        | 73251/552076 [00:00<00:04, 106544.72it/s] 15%|█▌        | 84169/552076 [00:00<00:04, 107318.71it/s] 17%|█▋        | 95041/552076 [00:00<00:04, 107733.10it/s] 19%|█▉        | 105628/552076 [00:01<00:04, 100585.08it/s] 21%|██        | 117006/552076 [00:01<00:04, 104209.29it/s] 23%|██▎       | 128072/552076 [00:01<00:03, 106063.94it/s] 25%|██▌       | 139065/552076 [00:01<00:03, 107193.51it/s] 27%|██▋       | 150324/552076 [00:01<00:03, 108756.03it/s] 29%|██▉       | 162015/552076 [00:01<00:03, 111078.61it/s] 32%|███▏      | 174063/552076 [00:01<00:03, 113740.54it/s] 34%|███▎      | 185907/552076 [00:01<00:03, 115108.38it/s] 36%|███▌      | 198631/552076 [00:01<00:02, 118495.24it/s] 38%|███▊      | 210524/552076 [00:01<00:02, 118409.78it/s] 40%|████      | 222396/552076 [00:02<00:02, 118136.49it/s] 42%|████▏     | 234231/552076 [00:02<00:02, 116564.69it/s] 45%|████▍     | 245908/552076 [00:02<00:02, 106856.50it/s] 47%|████▋     | 256766/552076 [00:02<00:03, 92587.29it/s]  49%|████▊     | 268865/552076 [00:02<00:02, 99600.79it/s] 51%|█████     | 279707/552076 [00:02<00:02, 102091.06it/s] 53%|█████▎    | 290262/552076 [00:02<00:02, 100365.01it/s] 55%|█████▍    | 301899/552076 [00:02<00:02, 104683.09it/s] 57%|█████▋    | 312590/552076 [00:02<00:02, 87793.62it/s]  58%|█████▊    | 321987/552076 [00:03<00:02, 89035.14it/s] 60%|██████    | 331327/552076 [00:03<00:02, 90297.99it/s] 62%|██████▏   | 343385/552076 [00:03<00:02, 97654.27it/s] 64%|██████▍   | 353540/552076 [00:03<00:02, 98478.11it/s] 66%|██████▌   | 363663/552076 [00:03<00:02, 92384.97it/s] 68%|██████▊   | 375365/552076 [00:03<00:01, 98612.39it/s] 70%|██████▉   | 385540/552076 [00:03<00:01, 99531.38it/s] 72%|███████▏  | 397201/552076 [00:03<00:01, 104104.45it/s] 74%|███████▍  | 407817/552076 [00:03<00:01, 95375.78it/s]  76%|███████▌  | 417642/552076 [00:04<00:01, 92135.70it/s] 77%|███████▋  | 427081/552076 [00:04<00:01, 84921.41it/s] 79%|███████▉  | 437769/552076 [00:04<00:01, 89742.54it/s] 81%|████████  | 448132/552076 [00:04<00:01, 93500.22it/s] 83%|████████▎ | 458529/552076 [00:04<00:00, 94648.22it/s] 85%|████████▍ | 468154/552076 [00:04<00:01, 82882.87it/s] 87%|████████▋ | 479068/552076 [00:04<00:00, 89330.11it/s] 88%|████████▊ | 488408/552076 [00:04<00:00, 84877.42it/s] 91%|█████████ | 500689/552076 [00:04<00:00, 93544.50it/s] 93%|█████████▎| 510924/552076 [00:05<00:00, 96020.81it/s] 95%|█████████▍| 522941/552076 [00:05<00:00, 102179.96it/s] 97%|█████████▋| 534315/552076 [00:05<00:00, 105391.07it/s] 99%|█████████▉| 545627/552076 [00:05<00:00, 107595.24it/s]100%|██████████| 552076/552076 [00:05<00:00, 101446.32it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4243/552076 [00:00<00:12, 42425.49it/s]  1%|          | 6734/552076 [00:00<00:15, 34603.55it/s]  2%|▏         | 11035/552076 [00:00<00:14, 36758.89it/s]  3%|▎         | 18860/552076 [00:00<00:12, 43711.80it/s]  5%|▌         | 29538/552076 [00:00<00:09, 53125.00it/s]  7%|▋         | 37970/552076 [00:00<00:08, 59757.08it/s]  8%|▊         | 45730/552076 [00:00<00:07, 64182.52it/s] 10%|█         | 56476/552076 [00:00<00:06, 73002.63it/s] 12%|█▏        | 67657/552076 [00:00<00:05, 81486.43it/s] 15%|█▍        | 80065/552076 [00:01<00:05, 90841.39it/s] 17%|█▋        | 91396/552076 [00:01<00:04, 96585.66it/s] 18%|█▊        | 101844/552076 [00:01<00:06, 70318.42it/s] 20%|██        | 110449/552076 [00:01<00:06, 64058.90it/s] 22%|██▏       | 122244/552076 [00:01<00:05, 74234.07it/s] 24%|██▍       | 134272/552076 [00:01<00:04, 83865.06it/s] 27%|██▋       | 146559/552076 [00:01<00:04, 92691.43it/s] 29%|██▉       | 159047/552076 [00:01<00:03, 100458.46it/s] 31%|███       | 171437/552076 [00:02<00:03, 106502.36it/s] 33%|███▎      | 183707/552076 [00:02<00:03, 110893.13it/s] 36%|███▌      | 196300/552076 [00:02<00:03, 115011.50it/s] 38%|███▊      | 208768/552076 [00:02<00:02, 117749.93it/s] 40%|████      | 221231/552076 [00:02<00:02, 119731.32it/s] 42%|████▏     | 233678/552076 [00:02<00:02, 121113.45it/s] 45%|████▍     | 246241/552076 [00:02<00:02, 122433.55it/s] 47%|████▋     | 258725/552076 [00:02<00:02, 123142.34it/s] 49%|████▉     | 271223/552076 [00:02<00:02, 123687.10it/s] 51%|█████▏    | 283806/552076 [00:02<00:02, 124320.63it/s] 54%|█████▎    | 296412/552076 [00:03<00:02, 124834.32it/s] 56%|█████▌    | 309012/552076 [00:03<00:01, 125180.45it/s] 58%|█████▊    | 321554/552076 [00:03<00:01, 121435.30it/s] 60%|██████    | 333739/552076 [00:03<00:01, 117301.84it/s] 63%|██████▎   | 345529/552076 [00:03<00:01, 111697.62it/s] 65%|██████▍   | 358112/552076 [00:03<00:01, 115592.04it/s] 67%|██████▋   | 369775/552076 [00:03<00:01, 94243.60it/s]  69%|██████▉   | 379915/552076 [00:03<00:02, 80794.96it/s] 70%|███████   | 388831/552076 [00:04<00:02, 76056.52it/s] 73%|███████▎  | 401162/552076 [00:04<00:01, 85935.02it/s] 75%|███████▍  | 412217/552076 [00:04<00:01, 92084.60it/s] 77%|███████▋  | 424461/552076 [00:04<00:01, 99482.35it/s] 79%|███████▉  | 435098/552076 [00:04<00:01, 87073.43it/s] 81%|████████  | 447571/552076 [00:04<00:01, 95743.60it/s] 83%|████████▎ | 457941/552076 [00:04<00:01, 82271.05it/s] 85%|████████▍ | 467058/552076 [00:04<00:01, 79895.56it/s] 86%|████████▌ | 476019/552076 [00:04<00:00, 80875.63it/s] 88%|████████▊ | 486793/552076 [00:05<00:00, 87414.09it/s] 90%|████████▉ | 496001/552076 [00:05<00:00, 86056.13it/s] 92%|█████████▏| 508505/552076 [00:05<00:00, 94934.78it/s] 95%|█████████▍| 521716/552076 [00:05<00:00, 103686.15it/s] 97%|█████████▋| 533737/552076 [00:05<00:00, 108145.28it/s] 99%|█████████▉| 546293/552076 [00:05<00:00, 112839.61it/s]100%|██████████| 552076/552076 [00:05<00:00, 97916.32it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8035/552076 [00:00<00:06, 80348.74it/s]  3%|▎         | 14357/552076 [00:00<00:07, 74307.89it/s]  4%|▍         | 24547/552076 [00:00<00:06, 80877.57it/s]  7%|▋         | 36782/552076 [00:00<00:05, 90032.87it/s]  9%|▉         | 48720/552076 [00:00<00:05, 97200.25it/s] 11%|█         | 58516/552076 [00:00<00:05, 97424.26it/s] 12%|█▏        | 67669/552076 [00:00<00:05, 81122.16it/s] 14%|█▍        | 76860/552076 [00:00<00:05, 84082.65it/s] 15%|█▌        | 85328/552076 [00:00<00:05, 83573.40it/s] 18%|█▊        | 96826/552076 [00:01<00:05, 91031.79it/s] 19%|█▉        | 106155/552076 [00:01<00:05, 79781.13it/s] 21%|██▏       | 117563/552076 [00:01<00:04, 87689.60it/s] 23%|██▎       | 129027/552076 [00:01<00:04, 94343.07it/s] 25%|██▌       | 139403/552076 [00:01<00:04, 96983.09it/s] 27%|██▋       | 151353/552076 [00:01<00:03, 102793.06it/s] 29%|██▉       | 161990/552076 [00:01<00:04, 93374.12it/s]  31%|███▏      | 173646/552076 [00:01<00:03, 99298.39it/s] 33%|███▎      | 183971/552076 [00:02<00:04, 87019.64it/s] 35%|███▌      | 194616/552076 [00:02<00:03, 92060.32it/s] 37%|███▋      | 205008/552076 [00:02<00:03, 95322.44it/s] 39%|███▉      | 215785/552076 [00:02<00:03, 98742.88it/s] 41%|████      | 226479/552076 [00:02<00:03, 101066.17it/s] 43%|████▎     | 236795/552076 [00:02<00:03, 94667.24it/s]  45%|████▌     | 248964/552076 [00:02<00:02, 101422.24it/s] 47%|████▋     | 261365/552076 [00:02<00:02, 107284.00it/s] 50%|████▉     | 273428/552076 [00:02<00:02, 110965.14it/s] 52%|█████▏    | 285901/552076 [00:02<00:02, 114763.87it/s] 54%|█████▍    | 298386/552076 [00:03<00:02, 117611.77it/s] 56%|█████▌    | 310481/552076 [00:03<00:02, 118591.51it/s] 59%|█████▊    | 322990/552076 [00:03<00:01, 120468.83it/s] 61%|██████    | 335445/552076 [00:03<00:01, 121662.64it/s] 63%|██████▎   | 347858/552076 [00:03<00:01, 122391.74it/s] 65%|██████▌   | 360343/552076 [00:03<00:01, 123118.16it/s] 68%|██████▊   | 372688/552076 [00:03<00:01, 99354.32it/s]  69%|██████▉   | 383385/552076 [00:03<00:02, 79432.40it/s] 72%|███████▏  | 395787/552076 [00:04<00:01, 89034.39it/s] 74%|███████▍  | 409592/552076 [00:04<00:01, 99647.52it/s] 76%|███████▋  | 422150/552076 [00:04<00:01, 106227.16it/s] 79%|███████▉  | 436915/552076 [00:04<00:00, 115988.56it/s] 83%|████████▎ | 457505/552076 [00:04<00:00, 133472.91it/s] 86%|████████▌ | 472474/552076 [00:04<00:00, 133526.36it/s] 88%|████████▊ | 486962/552076 [00:04<00:00, 119299.93it/s] 91%|█████████ | 502475/552076 [00:04<00:00, 128180.36it/s] 94%|█████████▎| 516234/552076 [00:04<00:00, 108296.57it/s] 98%|█████████▊| 538408/552076 [00:05<00:00, 127931.66it/s]100%|██████████| 552076/552076 [00:05<00:00, 108157.53it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22079/552076 [00:00<00:02, 220787.58it/s]  8%|▊         | 41463/552076 [00:00<00:02, 211945.84it/s] 10%|▉         | 53969/552076 [00:00<00:02, 175389.37it/s] 14%|█▎        | 74872/552076 [00:00<00:02, 184285.01it/s] 17%|█▋        | 96006/552076 [00:00<00:02, 191642.82it/s] 21%|██        | 115542/552076 [00:00<00:02, 192742.00it/s] 25%|██▍       | 137110/552076 [00:00<00:02, 199092.96it/s] 29%|██▉       | 158766/552076 [00:00<00:01, 204027.87it/s] 32%|███▏      | 178204/552076 [00:00<00:01, 199025.42it/s] 36%|███▋      | 201281/552076 [00:01<00:01, 207590.35it/s] 41%|████      | 224761/552076 [00:01<00:01, 215066.16it/s] 45%|████▍     | 247242/552076 [00:01<00:01, 217897.25it/s] 49%|████▉     | 269993/552076 [00:01<00:01, 220693.37it/s] 53%|█████▎    | 292353/552076 [00:01<00:01, 221554.94it/s] 57%|█████▋    | 316005/552076 [00:01<00:01, 225841.22it/s] 62%|██████▏   | 339671/552076 [00:01<00:00, 228980.66it/s] 66%|██████▌   | 363185/552076 [00:01<00:00, 230791.95it/s] 70%|███████   | 386551/552076 [00:01<00:00, 231643.20it/s] 74%|███████▍  | 409731/552076 [00:01<00:00, 231689.62it/s] 78%|███████▊  | 432903/552076 [00:02<00:00, 230800.67it/s] 83%|████████▎ | 455986/552076 [00:02<00:00, 227374.91it/s] 87%|████████▋ | 478737/552076 [00:02<00:00, 223268.83it/s] 91%|█████████ | 501787/552076 [00:02<00:00, 225387.31it/s] 95%|█████████▍| 524399/552076 [00:02<00:00, 225605.24it/s] 99%|█████████▉| 546976/552076 [00:02<00:00, 223609.50it/s]100%|██████████| 552076/552076 [00:02<00:00, 217006.05it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14304/552076 [00:00<00:03, 143037.41it/s]  5%|▌         | 29225/552076 [00:00<00:03, 144833.82it/s]  9%|▉         | 49503/552076 [00:00<00:03, 158414.17it/s] 12%|█▏        | 68367/552076 [00:00<00:02, 166413.24it/s] 16%|█▌        | 86703/552076 [00:00<00:02, 171156.61it/s] 19%|█▊        | 103254/552076 [00:00<00:02, 169422.14it/s] 22%|██▏       | 123993/552076 [00:00<00:02, 179266.24it/s] 26%|██▌       | 144660/552076 [00:00<00:02, 186690.45it/s] 30%|███       | 167953/552076 [00:00<00:01, 198511.95it/s] 35%|███▍      | 190635/552076 [00:01<00:01, 206232.30it/s] 39%|███▉      | 214199/552076 [00:01<00:01, 214253.42it/s] 43%|████▎     | 237510/552076 [00:01<00:01, 219581.57it/s] 47%|████▋     | 260750/552076 [00:01<00:01, 223274.81it/s] 51%|█████▏    | 283336/552076 [00:01<00:01, 224041.65it/s] 56%|█████▌    | 306525/552076 [00:01<00:01, 226337.02it/s] 60%|█████▉    | 329196/552076 [00:01<00:00, 226149.30it/s] 64%|██████▎   | 351837/552076 [00:01<00:00, 224442.06it/s] 68%|██████▊   | 374913/552076 [00:01<00:00, 226297.54it/s] 72%|███████▏  | 397672/552076 [00:01<00:00, 226682.19it/s] 76%|███████▌  | 420354/552076 [00:02<00:00, 225852.91it/s] 80%|████████  | 443446/552076 [00:02<00:00, 227346.72it/s] 84%|████████▍ | 466190/552076 [00:02<00:00, 226697.99it/s] 89%|████████▊ | 488867/552076 [00:02<00:00, 224620.28it/s] 93%|█████████▎| 512354/552076 [00:02<00:00, 227597.24it/s] 97%|█████████▋| 536298/552076 [00:02<00:00, 231025.11it/s]100%|██████████| 552076/552076 [00:02<00:00, 214075.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11626/552076 [00:00<00:04, 116252.07it/s]  5%|▍         | 26289/552076 [00:00<00:04, 123954.83it/s]  7%|▋         | 41176/552076 [00:00<00:03, 130505.49it/s] 11%|█         | 60014/552076 [00:00<00:03, 143754.38it/s] 15%|█▌        | 82886/552076 [00:00<00:02, 161783.73it/s] 19%|█▉        | 105315/552076 [00:00<00:02, 176543.51it/s] 22%|██▏       | 122790/552076 [00:00<00:02, 166598.55it/s] 26%|██▌       | 143027/552076 [00:00<00:02, 175927.06it/s] 30%|███       | 166031/552076 [00:00<00:02, 189284.57it/s] 34%|███▎      | 185341/552076 [00:01<00:02, 182943.35it/s] 37%|███▋      | 203948/552076 [00:01<00:02, 118712.56it/s] 40%|███▉      | 218931/552076 [00:01<00:03, 97626.97it/s]  43%|████▎     | 238528/552076 [00:01<00:02, 114929.19it/s] 46%|████▌     | 253198/552076 [00:01<00:02, 113834.34it/s] 48%|████▊     | 266808/552076 [00:01<00:02, 110060.35it/s] 52%|█████▏    | 287994/552076 [00:01<00:02, 128597.48it/s] 56%|█████▌    | 309439/552076 [00:02<00:01, 146149.95it/s] 60%|██████    | 332319/552076 [00:02<00:01, 163913.15it/s] 64%|██████▎   | 351120/552076 [00:02<00:01, 164447.60it/s] 67%|██████▋   | 369252/552076 [00:02<00:01, 165729.22it/s] 71%|███████   | 390305/552076 [00:02<00:00, 177029.74it/s] 75%|███████▍  | 412729/552076 [00:02<00:00, 188964.42it/s] 78%|███████▊  | 432578/552076 [00:02<00:00, 179345.80it/s] 82%|████████▏ | 451282/552076 [00:02<00:00, 172551.19it/s] 85%|████████▍ | 469131/552076 [00:02<00:00, 166941.18it/s] 89%|████████▉ | 491937/552076 [00:03<00:00, 181535.93it/s] 93%|█████████▎| 514981/552076 [00:03<00:00, 193877.44it/s] 97%|█████████▋| 535087/552076 [00:03<00:00, 182157.71it/s]100%|██████████| 552076/552076 [00:03<00:00, 162375.94it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20874/552076 [00:00<00:02, 208731.24it/s]  8%|▊         | 43391/552076 [00:00<00:02, 213403.23it/s] 12%|█▏        | 64999/552076 [00:00<00:02, 214195.99it/s] 16%|█▌        | 87558/552076 [00:00<00:02, 217489.14it/s] 20%|█▉        | 109628/552076 [00:00<00:02, 218439.67it/s] 23%|██▎       | 129546/552076 [00:00<00:01, 212277.08it/s] 27%|██▋       | 148370/552076 [00:00<00:02, 181683.58it/s] 30%|███       | 165626/552076 [00:00<00:02, 141525.80it/s] 33%|███▎      | 183241/552076 [00:01<00:02, 150393.13it/s] 37%|███▋      | 205325/552076 [00:01<00:02, 166308.48it/s] 41%|████      | 225804/552076 [00:01<00:01, 176242.68it/s] 44%|████▍     | 244279/552076 [00:01<00:02, 149187.17it/s] 47%|████▋     | 260507/552076 [00:01<00:02, 129502.81it/s] 51%|█████     | 282320/552076 [00:01<00:01, 147478.56it/s] 55%|█████▌    | 305417/552076 [00:01<00:01, 165417.10it/s] 59%|█████▉    | 327786/552076 [00:01<00:01, 179440.32it/s] 63%|██████▎   | 347469/552076 [00:01<00:01, 179777.31it/s] 67%|██████▋   | 370100/552076 [00:02<00:00, 191593.51it/s] 71%|███████   | 392749/552076 [00:02<00:00, 200877.16it/s] 75%|███████▌  | 415696/552076 [00:02<00:00, 208676.47it/s] 79%|███████▉  | 438887/552076 [00:02<00:00, 215141.50it/s] 83%|████████▎ | 460958/552076 [00:02<00:00, 216779.34it/s] 88%|████████▊ | 484305/552076 [00:02<00:00, 221527.97it/s] 92%|█████████▏| 506745/552076 [00:02<00:00, 222182.04it/s] 96%|█████████▌| 530141/552076 [00:02<00:00, 225587.98it/s]100%|██████████| 552076/552076 [00:02<00:00, 192948.92it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22804/552076 [00:00<00:02, 228031.52it/s]  8%|▊         | 45490/552076 [00:00<00:02, 227676.74it/s] 12%|█▏        | 67333/552076 [00:00<00:02, 224820.12it/s] 16%|█▌        | 89388/552076 [00:00<00:02, 223519.62it/s] 20%|██        | 111809/552076 [00:00<00:01, 223723.32it/s] 25%|██▍       | 135281/552076 [00:00<00:01, 226909.67it/s] 29%|██▉       | 158907/552076 [00:00<00:01, 229633.95it/s] 33%|███▎      | 182231/552076 [00:00<00:01, 230702.93it/s] 37%|███▋      | 205749/552076 [00:00<00:01, 232025.49it/s] 41%|████▏     | 228043/552076 [00:01<00:01, 228201.56it/s] 45%|████▌     | 250242/552076 [00:01<00:01, 217977.27it/s] 49%|████▉     | 271738/552076 [00:01<00:01, 217063.14it/s] 53%|█████▎    | 294845/552076 [00:01<00:01, 221081.54it/s] 58%|█████▊    | 318676/552076 [00:01<00:01, 225981.71it/s] 62%|██████▏   | 341198/552076 [00:01<00:00, 223706.36it/s] 66%|██████▌   | 363521/552076 [00:01<00:00, 220963.22it/s] 70%|██████▉   | 385592/552076 [00:01<00:00, 207902.04it/s] 74%|███████▎  | 406523/552076 [00:01<00:00, 192268.47it/s] 77%|███████▋  | 426082/552076 [00:01<00:00, 187428.39it/s] 81%|████████  | 445084/552076 [00:02<00:00, 188065.78it/s] 84%|████████▍ | 464895/552076 [00:02<00:00, 190968.27it/s] 88%|████████▊ | 487018/552076 [00:02<00:00, 199139.97it/s] 92%|█████████▏| 510330/552076 [00:02<00:00, 208245.67it/s] 97%|█████████▋| 534390/552076 [00:02<00:00, 216999.81it/s]100%|██████████| 552076/552076 [00:02<00:00, 216078.84it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20846/552076 [00:00<00:02, 208458.21it/s]  8%|▊         | 41924/552076 [00:00<00:02, 209149.27it/s] 11%|█▏        | 63209/552076 [00:00<00:02, 210243.29it/s] 15%|█▌        | 83667/552076 [00:00<00:02, 208509.13it/s] 19%|█▉        | 104725/552076 [00:00<00:02, 209125.86it/s] 22%|██▏       | 122138/552076 [00:00<00:02, 185947.12it/s] 25%|██▌       | 140523/552076 [00:00<00:02, 185309.55it/s] 29%|██▉       | 160139/552076 [00:00<00:02, 188435.80it/s] 32%|███▏      | 179134/552076 [00:00<00:01, 188885.15it/s] 36%|███▌      | 199204/552076 [00:01<00:01, 192278.74it/s] 40%|███▉      | 218815/552076 [00:01<00:01, 193410.58it/s] 43%|████▎     | 238812/552076 [00:01<00:01, 195332.28it/s] 47%|████▋     | 258130/552076 [00:01<00:01, 187684.90it/s] 50%|█████     | 276812/552076 [00:01<00:01, 163645.21it/s] 53%|█████▎    | 293669/552076 [00:01<00:01, 133933.46it/s] 56%|█████▌    | 308291/552076 [00:01<00:02, 119771.30it/s] 60%|█████▉    | 328922/552076 [00:01<00:01, 137012.45it/s] 64%|██████▎   | 350908/552076 [00:02<00:01, 154474.26it/s] 67%|██████▋   | 368264/552076 [00:02<00:01, 130887.98it/s] 71%|███████   | 389350/552076 [00:02<00:01, 147692.12it/s] 74%|███████▎  | 406846/552076 [00:02<00:00, 154933.36it/s] 77%|███████▋  | 423895/552076 [00:02<00:00, 155601.36it/s] 81%|████████  | 446166/552076 [00:02<00:00, 171063.53it/s] 84%|████████▍ | 466471/552076 [00:02<00:00, 179546.83it/s] 88%|████████▊ | 485398/552076 [00:02<00:00, 142306.20it/s] 92%|█████████▏| 506297/552076 [00:02<00:00, 157369.24it/s] 96%|█████████▌| 528345/552076 [00:03<00:00, 172151.14it/s]100%|█████████▉| 549401/552076 [00:03<00:00, 182116.11it/s]100%|██████████| 552076/552076 [00:03<00:00, 171856.21it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19825/552076 [00:00<00:02, 198245.94it/s]  7%|▋         | 41305/552076 [00:00<00:02, 202937.00it/s] 11%|█         | 61293/552076 [00:00<00:02, 202007.99it/s] 15%|█▌        | 83716/552076 [00:00<00:02, 208196.06it/s] 19%|█▉        | 107192/552076 [00:00<00:02, 215511.62it/s] 24%|██▎       | 130227/552076 [00:00<00:01, 219755.81it/s] 28%|██▊       | 153989/552076 [00:00<00:01, 224826.43it/s] 32%|███▏      | 177917/552076 [00:00<00:01, 228974.12it/s] 37%|███▋      | 201540/552076 [00:00<00:01, 231102.25it/s] 41%|████      | 225135/552076 [00:01<00:01, 232534.61it/s] 45%|████▍     | 247957/552076 [00:01<00:01, 231220.58it/s] 49%|████▉     | 270723/552076 [00:01<00:01, 229844.52it/s] 53%|█████▎    | 293460/552076 [00:01<00:01, 228889.57it/s] 57%|█████▋    | 316765/552076 [00:01<00:01, 230121.92it/s] 62%|██████▏   | 340385/552076 [00:01<00:00, 231911.17it/s] 66%|██████▌   | 363496/552076 [00:01<00:00, 227542.55it/s] 70%|██████▉   | 386259/552076 [00:01<00:00, 227567.38it/s] 74%|███████▍  | 409554/552076 [00:01<00:00, 229155.29it/s] 78%|███████▊  | 432881/552076 [00:01<00:00, 230372.98it/s] 83%|████████▎ | 456473/552076 [00:02<00:00, 232008.59it/s] 87%|████████▋ | 479978/552076 [00:02<00:00, 232911.62it/s] 91%|█████████ | 503268/552076 [00:02<00:00, 232301.05it/s] 95%|█████████▌| 526498/552076 [00:02<00:00, 230218.93it/s]100%|█████████▉| 549524/552076 [00:02<00:00, 226400.75it/s]100%|██████████| 552076/552076 [00:02<00:00, 227415.76it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22788/552076 [00:00<00:02, 227879.67it/s]  8%|▊         | 45138/552076 [00:00<00:02, 226547.43it/s] 12%|█▏        | 67322/552076 [00:00<00:02, 225112.79it/s] 16%|█▋        | 90452/552076 [00:00<00:02, 226931.91it/s] 21%|██        | 113947/552076 [00:00<00:01, 229276.46it/s] 25%|██▍       | 135504/552076 [00:00<00:01, 224983.83it/s] 29%|██▊       | 158367/552076 [00:00<00:01, 226064.35it/s] 33%|███▎      | 179942/552076 [00:00<00:01, 222865.06it/s] 37%|███▋      | 203630/552076 [00:00<00:01, 226891.55it/s] 41%|████      | 227135/552076 [00:01<00:01, 229276.34it/s] 45%|████▌     | 249488/552076 [00:01<00:01, 227519.23it/s] 49%|████▉     | 271814/552076 [00:01<00:01, 225722.66it/s] 53%|█████▎    | 294506/552076 [00:01<00:01, 226079.79it/s] 58%|█████▊    | 317899/552076 [00:01<00:01, 228378.87it/s] 62%|██████▏   | 340598/552076 [00:01<00:00, 226797.79it/s] 66%|██████▌   | 363183/552076 [00:01<00:00, 198625.66it/s] 70%|██████▉   | 385986/552076 [00:01<00:00, 206618.06it/s] 74%|███████▍  | 409068/552076 [00:01<00:00, 213326.37it/s] 78%|███████▊  | 431627/552076 [00:01<00:00, 216860.51it/s] 82%|████████▏ | 454588/552076 [00:02<00:00, 220531.36it/s] 86%|████████▋ | 476858/552076 [00:02<00:00, 191839.35it/s] 90%|████████▉ | 496862/552076 [00:02<00:00, 190905.56it/s] 94%|█████████▎| 516528/552076 [00:02<00:00, 182704.56it/s] 98%|█████████▊| 538319/552076 [00:02<00:00, 192009.75it/s]100%|██████████| 552076/552076 [00:02<00:00, 213396.56it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 18929/552076 [00:00<00:02, 189273.93it/s]  6%|▌         | 31813/552076 [00:00<00:03, 165924.17it/s]  7%|▋         | 39653/552076 [00:00<00:04, 112779.93it/s]  9%|▉         | 48909/552076 [00:00<00:04, 105843.28it/s] 11%|█         | 59165/552076 [00:00<00:04, 104835.93it/s] 12%|█▏        | 67824/552076 [00:00<00:05, 90108.28it/s]  14%|█▍        | 75921/552076 [00:00<00:05, 82180.09it/s] 15%|█▌        | 83635/552076 [00:00<00:06, 69837.15it/s] 16%|█▋        | 90586/552076 [00:01<00:07, 61628.36it/s] 18%|█▊        | 96903/552076 [00:01<00:07, 59764.35it/s] 19%|█▊        | 103000/552076 [00:01<00:08, 53077.52it/s] 20%|█▉        | 109512/552076 [00:01<00:07, 56193.48it/s] 21%|██        | 116317/552076 [00:01<00:07, 59292.15it/s] 22%|██▏       | 123109/552076 [00:01<00:06, 61640.93it/s] 24%|██▎       | 129878/552076 [00:01<00:06, 63338.21it/s] 25%|██▍       | 136697/552076 [00:01<00:06, 64719.52it/s] 26%|██▌       | 143262/552076 [00:01<00:06, 63583.10it/s] 27%|██▋       | 149690/552076 [00:02<00:07, 52878.60it/s] 28%|██▊       | 156412/552076 [00:02<00:07, 56494.21it/s] 30%|██▉       | 163196/552076 [00:02<00:06, 59477.80it/s] 31%|███       | 169943/552076 [00:02<00:06, 61667.85it/s] 32%|███▏      | 176435/552076 [00:02<00:05, 62607.61it/s] 33%|███▎      | 183169/552076 [00:02<00:05, 63953.74it/s] 34%|███▍      | 189899/552076 [00:02<00:05, 64921.41it/s] 36%|███▌      | 196688/552076 [00:02<00:05, 65782.56it/s] 37%|███▋      | 203489/552076 [00:02<00:05, 66433.90it/s] 38%|███▊      | 210286/552076 [00:02<00:05, 66885.90it/s] 39%|███▉      | 217085/552076 [00:03<00:04, 67211.84it/s] 41%|████      | 223859/552076 [00:03<00:04, 67366.62it/s] 42%|████▏     | 230647/552076 [00:03<00:04, 67519.26it/s] 43%|████▎     | 237431/552076 [00:03<00:04, 67612.14it/s] 44%|████▍     | 244200/552076 [00:03<00:04, 67212.79it/s] 45%|████▌     | 250979/552076 [00:03<00:04, 67383.26it/s] 47%|████▋     | 257765/552076 [00:03<00:04, 67524.49it/s] 48%|████▊     | 264544/552076 [00:03<00:04, 67601.34it/s] 49%|████▉     | 271307/552076 [00:03<00:04, 66590.94it/s] 50%|█████     | 277971/552076 [00:04<00:04, 66586.25it/s] 52%|█████▏    | 284634/552076 [00:04<00:04, 66593.81it/s] 53%|█████▎    | 291348/552076 [00:04<00:03, 66754.67it/s] 54%|█████▍    | 298126/552076 [00:04<00:03, 67056.78it/s] 55%|█████▌    | 304886/552076 [00:04<00:03, 67218.37it/s] 56%|█████▋    | 311700/552076 [00:04<00:03, 67492.01it/s] 58%|█████▊    | 318451/552076 [00:04<00:03, 67311.86it/s] 59%|█████▉    | 325210/552076 [00:04<00:03, 67392.77it/s] 60%|██████    | 331950/552076 [00:04<00:03, 67293.46it/s] 61%|██████▏   | 338680/552076 [00:04<00:03, 67189.67it/s] 63%|██████▎   | 345400/552076 [00:05<00:03, 67186.01it/s] 64%|██████▍   | 352119/552076 [00:05<00:03, 62898.05it/s] 65%|██████▍   | 358465/552076 [00:05<00:03, 61951.33it/s] 66%|██████▌   | 364703/552076 [00:05<00:03, 59919.02it/s] 67%|██████▋   | 371156/552076 [00:05<00:02, 61229.88it/s] 68%|██████▊   | 377317/552076 [00:05<00:03, 54825.25it/s] 69%|██████▉   | 382952/552076 [00:05<00:04, 39912.71it/s] 70%|███████   | 387629/552076 [00:05<00:04, 40519.49it/s] 71%|███████   | 392875/552076 [00:06<00:03, 43488.23it/s] 73%|███████▎  | 404457/552076 [00:06<00:02, 53514.27it/s] 75%|███████▌  | 416788/552076 [00:06<00:02, 64459.20it/s] 78%|███████▊  | 428859/552076 [00:06<00:01, 74434.49it/s] 80%|███████▉  | 440487/552076 [00:06<00:01, 83441.86it/s] 82%|████████▏ | 452710/552076 [00:06<00:01, 92220.08it/s] 84%|████████▍ | 465076/552076 [00:06<00:00, 99834.68it/s] 86%|████████▋ | 476292/552076 [00:06<00:00, 100790.35it/s] 89%|████████▊ | 488729/552076 [00:06<00:00, 106868.52it/s] 91%|█████████ | 500121/552076 [00:06<00:00, 100612.35it/s] 93%|█████████▎| 511935/552076 [00:07<00:00, 105298.94it/s] 95%|█████████▍| 524369/552076 [00:07<00:00, 110367.22it/s] 97%|█████████▋| 536563/552076 [00:07<00:00, 113599.48it/s] 99%|█████████▉| 548215/552076 [00:07<00:00, 105477.42it/s]100%|██████████| 552076/552076 [00:07<00:00, 74310.19it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9942/552076 [00:00<00:05, 99416.30it/s]  3%|▎         | 18769/552076 [00:00<00:05, 95785.50it/s]  6%|▌         | 30877/552076 [00:00<00:05, 102189.44it/s]  8%|▊         | 43099/552076 [00:00<00:04, 107473.13it/s] 10%|▉         | 55183/552076 [00:00<00:04, 111161.18it/s] 12%|█▏        | 67330/552076 [00:00<00:04, 114065.10it/s] 14%|█▍        | 79602/552076 [00:00<00:04, 116528.83it/s] 17%|█▋        | 91690/552076 [00:00<00:03, 117800.06it/s] 19%|█▉        | 103938/552076 [00:00<00:03, 119164.84it/s] 21%|██        | 115509/552076 [00:01<00:04, 108378.12it/s] 23%|██▎       | 127852/552076 [00:01<00:03, 112493.18it/s] 25%|██▌       | 140198/552076 [00:01<00:03, 115572.15it/s] 28%|██▊       | 152713/552076 [00:01<00:03, 118286.79it/s] 30%|██▉       | 165225/552076 [00:01<00:03, 120256.53it/s] 32%|███▏      | 177732/552076 [00:01<00:03, 121659.98it/s] 34%|███▍      | 190264/552076 [00:01<00:02, 122734.94it/s] 37%|███▋      | 202747/552076 [00:01<00:02, 123354.68it/s] 39%|███▉      | 215257/552076 [00:01<00:02, 123871.16it/s] 41%|████▏     | 227769/552076 [00:01<00:02, 124241.72it/s] 44%|████▎     | 240295/552076 [00:02<00:02, 124544.08it/s] 46%|████▌     | 252833/552076 [00:02<00:02, 124792.30it/s] 48%|████▊     | 265389/552076 [00:02<00:02, 125021.12it/s] 50%|█████     | 277895/552076 [00:02<00:02, 100233.28it/s] 53%|█████▎    | 290372/552076 [00:02<00:02, 106515.46it/s] 55%|█████▍    | 302759/552076 [00:02<00:02, 111187.07it/s] 57%|█████▋    | 315145/552076 [00:02<00:02, 114707.53it/s] 59%|█████▉    | 327697/552076 [00:02<00:01, 117747.91it/s] 62%|██████▏   | 340267/552076 [00:02<00:01, 120025.14it/s] 64%|██████▍   | 352676/552076 [00:03<00:01, 121214.95it/s] 66%|██████▌   | 365030/552076 [00:03<00:01, 121901.11it/s] 68%|██████▊   | 377329/552076 [00:03<00:01, 122117.11it/s] 71%|███████   | 389867/552076 [00:03<00:01, 123075.96it/s] 73%|███████▎  | 402306/552076 [00:03<00:01, 123466.58it/s] 75%|███████▌  | 414692/552076 [00:03<00:01, 98946.70it/s]  77%|███████▋  | 425714/552076 [00:03<00:01, 100825.28it/s] 79%|███████▉  | 436925/552076 [00:03<00:01, 103962.00it/s] 81%|████████  | 447746/552076 [00:03<00:01, 89650.27it/s]  83%|████████▎ | 457777/552076 [00:04<00:01, 92600.90it/s] 85%|████████▌ | 470140/552076 [00:04<00:00, 100139.95it/s] 87%|████████▋ | 482363/552076 [00:04<00:00, 105879.38it/s] 90%|████████▉ | 494816/552076 [00:04<00:00, 110859.50it/s] 92%|█████████▏| 507295/552076 [00:04<00:00, 114699.89it/s] 94%|█████████▍| 519812/552076 [00:04<00:00, 117650.48it/s] 96%|█████████▋| 532050/552076 [00:04<00:00, 119029.38it/s] 99%|█████████▊| 544115/552076 [00:04<00:00, 118852.00it/s]100%|██████████| 552076/552076 [00:04<00:00, 114410.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10251/552076 [00:00<00:05, 102502.28it/s]  3%|▎         | 19022/552076 [00:00<00:05, 97565.50it/s]   6%|▌         | 31225/552076 [00:00<00:05, 103807.22it/s]  7%|▋         | 40410/552076 [00:00<00:05, 99832.17it/s]  10%|▉         | 52819/552076 [00:00<00:04, 106050.96it/s] 11%|█         | 61901/552076 [00:00<00:05, 94726.71it/s]  13%|█▎        | 74283/552076 [00:00<00:04, 101909.60it/s] 15%|█▌        | 84874/552076 [00:00<00:04, 103077.08it/s] 17%|█▋        | 94882/552076 [00:00<00:04, 98044.45it/s]  19%|█▉        | 107249/552076 [00:01<00:04, 104542.15it/s] 21%|██▏       | 117711/552076 [00:01<00:04, 97297.25it/s]  24%|██▎       | 129968/552076 [00:01<00:04, 103711.57it/s] 26%|██▌       | 142032/552076 [00:01<00:03, 108268.60it/s] 28%|██▊       | 154512/552076 [00:01<00:03, 112748.58it/s] 30%|███       | 166588/552076 [00:01<00:03, 115036.90it/s] 32%|███▏      | 178228/552076 [00:01<00:03, 103110.93it/s] 34%|███▍      | 188867/552076 [00:01<00:03, 92734.84it/s]  36%|███▌      | 198567/552076 [00:02<00:05, 65896.20it/s] 37%|███▋      | 206538/552076 [00:02<00:05, 66189.13it/s] 40%|███▉      | 218506/552076 [00:02<00:04, 76436.05it/s] 41%|████      | 227406/552076 [00:02<00:04, 67158.25it/s] 43%|████▎     | 237344/552076 [00:02<00:04, 74393.90it/s] 45%|████▍     | 247589/552076 [00:02<00:03, 79364.37it/s] 46%|████▋     | 256319/552076 [00:02<00:03, 75270.71it/s] 48%|████▊     | 264446/552076 [00:02<00:03, 74152.29it/s] 50%|████▉     | 273902/552076 [00:03<00:03, 79136.57it/s] 51%|█████     | 282205/552076 [00:03<00:03, 71294.62it/s] 52%|█████▏    | 289754/552076 [00:03<00:03, 65847.27it/s] 54%|█████▍    | 297557/552076 [00:03<00:03, 68562.52it/s] 56%|█████▌    | 306782/552076 [00:03<00:03, 74284.15it/s] 57%|█████▋    | 315879/552076 [00:03<00:03, 78339.65it/s] 59%|█████▉    | 324550/552076 [00:03<00:02, 80674.96it/s] 61%|██████    | 336860/552076 [00:03<00:02, 89976.25it/s] 63%|██████▎   | 349145/552076 [00:03<00:02, 97828.27it/s] 65%|██████▌   | 359480/552076 [00:04<00:02, 73762.86it/s] 67%|██████▋   | 368120/552076 [00:04<00:02, 71518.71it/s] 68%|██████▊   | 376172/552076 [00:04<00:02, 69497.00it/s] 70%|██████▉   | 383764/552076 [00:04<00:02, 68823.76it/s] 71%|███████   | 391098/552076 [00:04<00:02, 65965.37it/s] 72%|███████▏  | 398036/552076 [00:04<00:02, 63673.34it/s] 73%|███████▎  | 404660/552076 [00:04<00:02, 62648.52it/s] 74%|███████▍  | 411108/552076 [00:04<00:02, 62001.35it/s] 76%|███████▌  | 417438/552076 [00:05<00:02, 54569.20it/s] 77%|███████▋  | 423821/552076 [00:05<00:02, 57051.58it/s] 78%|███████▊  | 430511/552076 [00:05<00:02, 59687.06it/s] 79%|███████▉  | 437245/552076 [00:05<00:01, 61793.38it/s] 80%|████████  | 444037/552076 [00:05<00:01, 63510.91it/s] 82%|████████▏ | 450838/552076 [00:05<00:01, 64796.36it/s] 83%|████████▎ | 457652/552076 [00:05<00:01, 65761.73it/s] 84%|████████▍ | 464341/552076 [00:05<00:01, 66093.74it/s] 85%|████████▌ | 470995/552076 [00:05<00:01, 64106.67it/s] 87%|████████▋ | 477775/552076 [00:06<00:01, 65171.42it/s] 88%|████████▊ | 484552/552076 [00:06<00:01, 65928.42it/s] 89%|████████▉ | 491323/552076 [00:06<00:00, 66452.62it/s] 90%|█████████ | 498041/552076 [00:06<00:00, 66666.68it/s] 91%|█████████▏| 504845/552076 [00:06<00:00, 67071.47it/s] 93%|█████████▎| 511609/552076 [00:06<00:00, 67239.61it/s] 94%|█████████▍| 518370/552076 [00:06<00:00, 67349.93it/s] 95%|█████████▌| 525154/552076 [00:06<00:00, 67493.87it/s] 96%|█████████▋| 531908/552076 [00:06<00:00, 66794.31it/s] 98%|█████████▊| 538604/552076 [00:06<00:00, 66842.71it/s] 99%|█████████▉| 545369/552076 [00:07<00:00, 67082.41it/s]100%|██████████| 552076/552076 [00:07<00:00, 77576.66it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6562/552076 [00:00<00:08, 65614.43it/s]  2%|▏         | 13169/552076 [00:00<00:08, 65748.73it/s]  4%|▎         | 19848/552076 [00:00<00:08, 66057.56it/s]  5%|▍         | 26580/552076 [00:00<00:07, 66428.78it/s]  6%|▌         | 33257/552076 [00:00<00:07, 66530.14it/s]  7%|▋         | 39117/552076 [00:00<00:08, 63931.90it/s]  8%|▊         | 45865/552076 [00:00<00:07, 64954.84it/s] 10%|▉         | 52515/552076 [00:00<00:07, 65407.78it/s] 11%|█         | 59180/552076 [00:00<00:07, 65775.20it/s] 12%|█▏        | 65971/552076 [00:01<00:07, 66401.02it/s] 13%|█▎        | 72777/552076 [00:01<00:07, 66888.72it/s] 14%|█▍        | 79568/552076 [00:01<00:07, 67191.26it/s] 16%|█▌        | 86350/552076 [00:01<00:06, 67378.44it/s] 17%|█▋        | 93155/552076 [00:01<00:06, 67576.46it/s] 18%|█▊        | 99933/552076 [00:01<00:06, 67637.37it/s] 19%|█▉        | 106668/552076 [00:01<00:06, 67173.88it/s] 21%|██        | 113458/552076 [00:01<00:06, 67387.57it/s] 22%|██▏       | 120253/552076 [00:01<00:06, 67553.75it/s] 23%|██▎       | 126999/552076 [00:01<00:06, 67229.21it/s] 24%|██▍       | 133716/552076 [00:02<00:06, 67107.57it/s] 25%|██▌       | 140423/552076 [00:02<00:06, 64662.24it/s] 27%|██▋       | 146906/552076 [00:02<00:06, 64276.21it/s] 28%|██▊       | 153346/552076 [00:02<00:06, 62829.36it/s] 29%|██▉       | 159645/552076 [00:02<00:07, 55887.92it/s] 30%|███       | 166222/552076 [00:02<00:06, 58524.91it/s] 31%|███       | 172215/552076 [00:02<00:07, 51749.10it/s] 33%|███▎      | 179546/552076 [00:02<00:06, 56756.52it/s] 34%|███▎      | 185538/552076 [00:02<00:06, 56697.38it/s] 35%|███▌      | 195985/552076 [00:03<00:05, 65711.54it/s] 38%|███▊      | 207656/552076 [00:03<00:04, 75624.20it/s] 40%|███▉      | 219904/552076 [00:03<00:03, 85428.11it/s] 42%|████▏     | 231471/552076 [00:03<00:03, 92697.58it/s] 44%|████▍     | 241766/552076 [00:03<00:03, 95550.42it/s] 46%|████▌     | 252686/552076 [00:03<00:03, 99272.81it/s] 48%|████▊     | 263145/552076 [00:03<00:03, 93116.48it/s] 49%|████▉     | 272907/552076 [00:03<00:03, 76703.84it/s] 51%|█████     | 281371/552076 [00:03<00:04, 65970.64it/s] 52%|█████▏    | 288788/552076 [00:04<00:04, 56068.83it/s] 54%|█████▎    | 296457/552076 [00:04<00:04, 60987.85it/s] 56%|█████▌    | 308467/552076 [00:04<00:03, 71552.12it/s] 58%|█████▊    | 318223/552076 [00:04<00:03, 77770.49it/s] 60%|█████▉    | 330369/552076 [00:04<00:02, 87177.41it/s] 62%|██████▏   | 340162/552076 [00:04<00:02, 88872.28it/s] 64%|██████▍   | 352130/552076 [00:04<00:02, 96307.24it/s] 67%|██████▋   | 368268/552076 [00:04<00:01, 109558.84it/s] 69%|██████▉   | 380350/552076 [00:04<00:01, 108823.95it/s] 71%|███████   | 392703/552076 [00:05<00:01, 112854.30it/s] 73%|███████▎  | 404579/552076 [00:05<00:01, 112909.20it/s] 75%|███████▌  | 416284/552076 [00:05<00:01, 111344.06it/s] 77%|███████▋  | 427713/552076 [00:05<00:01, 102345.03it/s] 79%|███████▉  | 438297/552076 [00:05<00:01, 90618.60it/s]  81%|████████  | 447851/552076 [00:05<00:01, 78983.89it/s] 83%|████████▎ | 456362/552076 [00:05<00:01, 71576.96it/s] 84%|████████▍ | 466190/552076 [00:05<00:01, 77928.57it/s] 86%|████████▌ | 474542/552076 [00:06<00:01, 73813.54it/s] 88%|████████▊ | 485517/552076 [00:06<00:00, 81853.02it/s] 90%|█████████ | 497852/552076 [00:06<00:00, 91041.20it/s] 92%|█████████▏| 509317/552076 [00:06<00:00, 97035.01it/s] 94%|█████████▍| 521698/552076 [00:06<00:00, 103765.83it/s] 97%|█████████▋| 534115/552076 [00:06<00:00, 109143.95it/s] 99%|█████████▉| 546786/552076 [00:06<00:00, 113878.74it/s]100%|██████████| 552076/552076 [00:06<00:00, 81658.17it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5489/552076 [00:00<00:09, 54885.86it/s]  2%|▏         | 10384/552076 [00:00<00:10, 52534.00it/s]  3%|▎         | 16670/552076 [00:00<00:09, 55125.22it/s]  5%|▍         | 25864/552076 [00:00<00:08, 62650.92it/s]  7%|▋         | 38107/552076 [00:00<00:07, 73401.96it/s]  9%|▉         | 50385/552076 [00:00<00:06, 83472.92it/s] 11%|█▏        | 62796/552076 [00:00<00:05, 92564.65it/s] 14%|█▎        | 75260/552076 [00:00<00:04, 100307.97it/s] 16%|█▌        | 87593/552076 [00:00<00:04, 106256.29it/s] 18%|█▊        | 98776/552076 [00:01<00:05, 84783.53it/s]  20%|██        | 111182/552076 [00:01<00:04, 93681.02it/s] 22%|██▏       | 123629/552076 [00:01<00:04, 101189.89it/s] 25%|██▍       | 136159/552076 [00:01<00:03, 107386.78it/s] 27%|██▋       | 148640/552076 [00:01<00:03, 112078.95it/s] 29%|██▉       | 161206/552076 [00:01<00:03, 115833.81it/s] 31%|███▏      | 173696/552076 [00:01<00:03, 118411.78it/s] 34%|███▎      | 185946/552076 [00:01<00:03, 119606.75it/s] 36%|███▌      | 198372/552076 [00:01<00:02, 120963.22it/s] 38%|███▊      | 210629/552076 [00:02<00:03, 104854.19it/s] 40%|████      | 221609/552076 [00:02<00:03, 102255.17it/s] 42%|████▏     | 232195/552076 [00:02<00:03, 96730.31it/s]  44%|████▍     | 242182/552076 [00:02<00:04, 75313.27it/s] 46%|████▌     | 254352/552076 [00:02<00:03, 85036.92it/s] 48%|████▊     | 266823/552076 [00:02<00:03, 94008.59it/s] 50%|█████     | 278602/552076 [00:02<00:02, 100067.91it/s] 52%|█████▏    | 289453/552076 [00:02<00:02, 101591.20it/s] 55%|█████▍    | 301857/552076 [00:02<00:02, 107422.23it/s] 57%|█████▋    | 314304/552076 [00:03<00:02, 112024.24it/s] 59%|█████▉    | 326290/552076 [00:03<00:01, 114263.79it/s] 61%|██████    | 338012/552076 [00:03<00:01, 110109.06it/s] 63%|██████▎   | 350497/552076 [00:03<00:01, 114150.07it/s] 66%|██████▌   | 363054/552076 [00:03<00:01, 117351.39it/s] 68%|██████▊   | 374956/552076 [00:03<00:01, 117242.85it/s] 70%|███████   | 387564/552076 [00:03<00:01, 119761.07it/s] 72%|███████▏  | 400161/552076 [00:03<00:01, 121555.70it/s] 75%|███████▍  | 412772/552076 [00:03<00:01, 122885.22it/s] 77%|███████▋  | 425317/552076 [00:04<00:01, 123641.26it/s] 79%|███████▉  | 437851/552076 [00:04<00:00, 124145.53it/s] 82%|████████▏ | 450423/552076 [00:04<00:00, 124611.28it/s] 84%|████████▍ | 463059/552076 [00:04<00:00, 125127.90it/s] 86%|████████▌ | 475680/552076 [00:04<00:00, 125448.03it/s] 88%|████████▊ | 488236/552076 [00:04<00:00, 125318.42it/s] 91%|█████████ | 500776/552076 [00:04<00:00, 123994.50it/s] 93%|█████████▎| 513184/552076 [00:04<00:00, 114819.82it/s] 95%|█████████▌| 524807/552076 [00:04<00:00, 108514.15it/s] 97%|█████████▋| 537318/552076 [00:04<00:00, 113011.33it/s]100%|█████████▉| 549801/552076 [00:05<00:00, 116313.25it/s]100%|██████████| 552076/552076 [00:05<00:00, 108695.07it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 8899/552076 [00:00<00:06, 88985.84it/s]  4%|▎         | 19581/552076 [00:00<00:05, 93676.63it/s]  6%|▌         | 31714/552076 [00:00<00:05, 100550.05it/s]  8%|▊         | 43192/552076 [00:00<00:04, 104432.98it/s] 10%|█         | 55592/552076 [00:00<00:04, 109620.96it/s] 12%|█▏        | 68079/552076 [00:00<00:04, 113788.29it/s] 15%|█▍        | 80622/552076 [00:00<00:04, 117046.10it/s] 17%|█▋        | 93110/552076 [00:00<00:03, 119290.06it/s] 19%|█▉        | 104637/552076 [00:00<00:04, 94944.38it/s] 21%|██        | 117107/552076 [00:01<00:04, 102264.96it/s] 23%|██▎       | 127847/552076 [00:01<00:05, 83415.64it/s]  25%|██▍       | 137115/552076 [00:01<00:05, 82736.62it/s] 27%|██▋       | 149574/552076 [00:01<00:04, 92008.33it/s] 29%|██▉       | 159558/552076 [00:01<00:04, 80840.49it/s] 31%|███       | 171218/552076 [00:01<00:04, 89031.22it/s] 33%|███▎      | 183575/552076 [00:01<00:03, 97178.59it/s] 35%|███▌      | 194887/552076 [00:01<00:03, 101466.81it/s] 37%|███▋      | 205635/552076 [00:02<00:04, 84502.43it/s]  39%|███▉      | 218009/552076 [00:02<00:03, 93385.79it/s] 41%|████▏     | 228264/552076 [00:02<00:04, 80463.81it/s] 43%|████▎     | 237268/552076 [00:02<00:04, 71148.75it/s] 45%|████▌     | 249605/552076 [00:02<00:03, 81496.66it/s] 47%|████▋     | 261945/552076 [00:02<00:03, 90740.03it/s] 50%|████▉     | 274353/552076 [00:02<00:02, 98694.72it/s] 52%|█████▏    | 286836/552076 [00:02<00:02, 105309.10it/s] 54%|█████▍    | 299242/552076 [00:03<00:02, 110308.94it/s] 56%|█████▋    | 311796/552076 [00:03<00:02, 114474.90it/s] 59%|█████▊    | 324319/552076 [00:03<00:01, 117500.15it/s] 61%|██████    | 336429/552076 [00:03<00:01, 118179.36it/s] 63%|██████▎   | 348942/552076 [00:03<00:01, 120181.39it/s] 65%|██████▌   | 361408/552076 [00:03<00:01, 121490.43it/s] 68%|██████▊   | 373851/552076 [00:03<00:01, 122354.89it/s] 70%|██████▉   | 386385/552076 [00:03<00:01, 123234.12it/s] 72%|███████▏  | 398966/552076 [00:03<00:01, 123995.34it/s] 75%|███████▍  | 411450/552076 [00:03<00:01, 124246.51it/s] 77%|███████▋  | 423909/552076 [00:04<00:01, 121594.43it/s] 79%|███████▉  | 436297/552076 [00:04<00:00, 122268.47it/s] 81%|████████  | 448551/552076 [00:04<00:00, 121557.70it/s] 84%|████████▎ | 461053/552076 [00:04<00:00, 122573.88it/s] 86%|████████▌ | 473553/552076 [00:04<00:00, 123289.46it/s] 88%|████████▊ | 486038/552076 [00:04<00:00, 123751.09it/s] 90%|█████████ | 498556/552076 [00:04<00:00, 124174.07it/s] 93%|█████████▎| 511031/552076 [00:04<00:00, 124343.67it/s] 95%|█████████▍| 523470/552076 [00:04<00:00, 124353.77it/s] 97%|█████████▋| 535909/552076 [00:04<00:00, 122426.36it/s] 99%|█████████▉| 548448/552076 [00:05<00:00, 123298.15it/s]100%|██████████| 552076/552076 [00:05<00:00, 108512.53it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11951/552076 [00:00<00:04, 119501.28it/s]  4%|▍         | 24271/552076 [00:00<00:04, 120585.21it/s]  7%|▋         | 36552/552076 [00:00<00:04, 121242.71it/s]  9%|▉         | 48932/552076 [00:00<00:04, 121996.88it/s] 11%|█         | 61309/552076 [00:00<00:04, 122521.58it/s] 13%|█▎        | 73746/552076 [00:00<00:03, 123069.13it/s] 16%|█▌        | 86146/552076 [00:00<00:03, 123346.34it/s] 18%|█▊        | 98587/552076 [00:00<00:03, 123660.83it/s] 20%|██        | 111074/552076 [00:00<00:03, 124018.42it/s] 22%|██▏       | 123514/552076 [00:01<00:03, 124129.94it/s] 25%|██▍       | 136045/552076 [00:01<00:03, 124481.56it/s] 27%|██▋       | 148473/552076 [00:01<00:03, 124420.97it/s] 29%|██▉       | 160950/552076 [00:01<00:03, 124524.71it/s] 31%|███▏      | 173354/552076 [00:01<00:03, 124377.95it/s] 34%|███▎      | 185730/552076 [00:01<00:02, 124190.09it/s] 36%|███▌      | 198167/552076 [00:01<00:02, 124243.77it/s] 38%|███▊      | 210680/552076 [00:01<00:02, 124507.12it/s] 40%|████      | 223168/552076 [00:01<00:02, 124617.27it/s] 43%|████▎     | 235611/552076 [00:01<00:02, 124145.86it/s] 45%|████▍     | 248013/552076 [00:02<00:02, 123965.88it/s] 47%|████▋     | 260453/552076 [00:02<00:02, 124093.35it/s] 49%|████▉     | 272857/552076 [00:02<00:02, 123990.44it/s] 52%|█████▏    | 285342/552076 [00:02<00:02, 124245.86it/s] 54%|█████▍    | 297764/552076 [00:02<00:02, 124207.48it/s] 56%|█████▌    | 310183/552076 [00:02<00:01, 124127.86it/s] 59%|█████▊    | 323037/552076 [00:02<00:01, 125416.69it/s] 61%|██████    | 335581/552076 [00:02<00:01, 123601.63it/s] 63%|██████▎   | 347949/552076 [00:02<00:01, 122866.47it/s] 65%|██████▌   | 360429/552076 [00:02<00:01, 123438.85it/s] 68%|██████▊   | 372840/552076 [00:03<00:01, 123637.09it/s] 70%|██████▉   | 385208/552076 [00:03<00:01, 116834.93it/s] 72%|███████▏  | 397164/552076 [00:03<00:01, 117638.86it/s] 74%|███████▍  | 409503/552076 [00:03<00:01, 119304.17it/s] 76%|███████▋  | 421937/552076 [00:03<00:01, 120769.00it/s] 79%|███████▊  | 434478/552076 [00:03<00:00, 122124.52it/s] 81%|████████  | 446903/552076 [00:03<00:00, 122751.92it/s] 83%|████████▎ | 459355/552076 [00:03<00:00, 123275.69it/s] 85%|████████▌ | 471875/552076 [00:03<00:00, 123846.60it/s] 88%|████████▊ | 484272/552076 [00:03<00:00, 120727.29it/s] 90%|████████▉ | 496809/552076 [00:04<00:00, 122082.18it/s] 92%|█████████▏| 509327/552076 [00:04<00:00, 122993.96it/s] 95%|█████████▍| 522269/552076 [00:04<00:00, 124852.75it/s] 97%|█████████▋| 534773/552076 [00:04<00:00, 124804.93it/s] 99%|█████████▉| 547267/552076 [00:04<00:00, 123279.92it/s]100%|██████████| 552076/552076 [00:04<00:00, 123216.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9634/552076 [00:00<00:05, 91453.54it/s]  4%|▍         | 21052/552076 [00:00<00:05, 97260.48it/s]  6%|▌         | 32740/552076 [00:00<00:05, 102417.83it/s]  8%|▊         | 43915/552076 [00:00<00:05, 100989.82it/s]  9%|▉         | 51924/552076 [00:00<00:06, 81432.32it/s]  11%|█         | 59213/552076 [00:00<00:07, 69516.07it/s] 12%|█▏        | 65870/552076 [00:00<00:07, 62856.40it/s] 13%|█▎        | 72071/552076 [00:00<00:08, 59681.43it/s] 15%|█▌        | 82881/552076 [00:01<00:06, 68945.64it/s] 17%|█▋        | 94449/552076 [00:01<00:05, 78453.74it/s] 19%|█▉        | 106774/552076 [00:01<00:05, 88054.84it/s] 21%|██▏       | 117766/552076 [00:01<00:04, 93642.90it/s] 24%|██▎       | 130132/552076 [00:01<00:04, 100996.51it/s] 26%|██▌       | 142519/552076 [00:01<00:03, 106918.26it/s] 28%|██▊       | 154722/552076 [00:01<00:03, 111041.20it/s] 30%|███       | 166275/552076 [00:01<00:04, 95009.05it/s]  32%|███▏      | 178737/552076 [00:01<00:03, 102300.04it/s] 35%|███▍      | 191134/552076 [00:02<00:03, 107961.24it/s] 37%|███▋      | 203473/552076 [00:02<00:03, 112167.44it/s] 39%|███▉      | 215430/552076 [00:02<00:02, 114289.47it/s] 41%|████▏     | 227770/552076 [00:02<00:02, 116877.58it/s] 43%|████▎     | 240125/552076 [00:02<00:02, 118800.95it/s] 46%|████▌     | 252423/552076 [00:02<00:02, 120022.56it/s] 48%|████▊     | 264712/552076 [00:02<00:02, 120868.59it/s] 50%|█████     | 276885/552076 [00:02<00:02, 96025.45it/s]  52%|█████▏    | 288866/552076 [00:02<00:02, 102104.63it/s] 54%|█████▍    | 299788/552076 [00:03<00:02, 86563.23it/s]  56%|█████▌    | 309350/552076 [00:03<00:03, 72753.72it/s] 58%|█████▊    | 317634/552076 [00:03<00:03, 73445.75it/s] 59%|█████▉    | 325686/552076 [00:03<00:03, 71977.37it/s] 61%|██████    | 334069/552076 [00:03<00:02, 75165.18it/s] 63%|██████▎   | 345775/552076 [00:03<00:02, 84204.61it/s] 65%|██████▍   | 357726/552076 [00:03<00:02, 92392.32it/s] 67%|██████▋   | 369786/552076 [00:03<00:01, 99362.84it/s] 69%|██████▉   | 380346/552076 [00:03<00:01, 95292.50it/s] 71%|███████   | 392453/552076 [00:04<00:01, 101793.72it/s] 73%|███████▎  | 404339/552076 [00:04<00:01, 106374.44it/s] 75%|███████▌  | 415407/552076 [00:04<00:01, 107629.36it/s] 77%|███████▋  | 426434/552076 [00:04<00:01, 100816.84it/s] 79%|███████▉  | 436788/552076 [00:04<00:01, 99469.35it/s]  81%|████████  | 446930/552076 [00:04<00:01, 94068.96it/s] 83%|████████▎ | 456534/552076 [00:04<00:01, 90803.41it/s] 85%|████████▍ | 468536/552076 [00:04<00:00, 97957.06it/s] 87%|████████▋ | 480083/552076 [00:04<00:00, 102624.96it/s] 89%|████████▉ | 493985/552076 [00:05<00:00, 111370.39it/s] 92%|█████████▏| 505515/552076 [00:05<00:00, 112240.57it/s] 94%|█████████▎| 517032/552076 [00:05<00:00, 113101.12it/s] 96%|█████████▌| 528538/552076 [00:05<00:00, 99729.77it/s]  98%|█████████▊| 538937/552076 [00:05<00:00, 83815.38it/s]100%|█████████▉| 549749/552076 [00:05<00:00, 89230.87it/s]100%|██████████| 552076/552076 [00:05<00:00, 96187.93it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10339/552076 [00:00<00:05, 103388.37it/s]  4%|▍         | 21600/552076 [00:00<00:05, 105992.24it/s]  6%|▌         | 32185/552076 [00:00<00:04, 105946.83it/s]  8%|▊         | 42809/552076 [00:00<00:04, 106032.37it/s] 10%|▉         | 53443/552076 [00:00<00:04, 106121.85it/s] 12%|█▏        | 64176/552076 [00:00<00:04, 106481.38it/s] 14%|█▎        | 74622/552076 [00:00<00:04, 105864.53it/s] 16%|█▌        | 85721/552076 [00:00<00:04, 107349.42it/s] 18%|█▊        | 98284/552076 [00:00<00:04, 112247.37it/s] 20%|██        | 110704/552076 [00:01<00:03, 115583.37it/s] 22%|██▏       | 123252/552076 [00:01<00:03, 118383.70it/s] 24%|██▍       | 134952/552076 [00:01<00:03, 105209.38it/s] 27%|██▋       | 147329/552076 [00:01<00:03, 110164.29it/s] 29%|██▉       | 159792/552076 [00:01<00:03, 114136.33it/s] 31%|███       | 171371/552076 [00:01<00:04, 91159.74it/s]  33%|███▎      | 183776/552076 [00:01<00:03, 99035.54it/s] 36%|███▌      | 196291/552076 [00:01<00:03, 105647.25it/s] 38%|███▊      | 209518/552076 [00:01<00:03, 112435.06it/s] 40%|████      | 223108/552076 [00:02<00:02, 118575.05it/s] 43%|████▎     | 235471/552076 [00:02<00:03, 98454.79it/s]  45%|████▍     | 246241/552076 [00:02<00:03, 91429.15it/s] 46%|████▋     | 256132/552076 [00:02<00:03, 80733.39it/s] 48%|████▊     | 264958/552076 [00:02<00:03, 78173.15it/s] 50%|█████     | 276863/552076 [00:02<00:03, 87149.85it/s] 52%|█████▏    | 288542/552076 [00:02<00:02, 94330.56it/s] 54%|█████▍    | 298999/552076 [00:02<00:02, 96877.73it/s] 56%|█████▌    | 309172/552076 [00:03<00:02, 91732.72it/s] 58%|█████▊    | 322598/552076 [00:03<00:02, 101363.79it/s] 60%|██████    | 333324/552076 [00:03<00:02, 85977.42it/s]  62%|██████▏   | 342737/552076 [00:03<00:02, 87310.33it/s] 64%|██████▍   | 352044/552076 [00:03<00:02, 81930.57it/s] 66%|██████▌   | 364496/552076 [00:03<00:02, 91297.37it/s] 68%|██████▊   | 377033/552076 [00:03<00:01, 99400.18it/s] 71%|███████   | 389509/552076 [00:03<00:01, 105853.27it/s] 73%|███████▎  | 401860/552076 [00:03<00:01, 110595.78it/s] 75%|███████▌  | 414321/552076 [00:04<00:01, 114455.66it/s] 77%|███████▋  | 426739/552076 [00:04<00:01, 117209.15it/s] 80%|███████▉  | 439023/552076 [00:04<00:00, 118840.85it/s] 82%|████████▏ | 451102/552076 [00:04<00:00, 103964.18it/s] 84%|████████▎ | 461972/552076 [00:04<00:01, 83837.07it/s]  86%|████████▌ | 472087/552076 [00:04<00:00, 88374.61it/s] 87%|████████▋ | 482212/552076 [00:04<00:00, 91878.23it/s] 90%|████████▉ | 494396/552076 [00:04<00:00, 99195.19it/s] 92%|█████████▏| 506634/552076 [00:04<00:00, 105171.06it/s] 94%|█████████▍| 518896/552076 [00:05<00:00, 109860.95it/s] 96%|█████████▌| 531186/552076 [00:05<00:00, 113470.31it/s] 98%|█████████▊| 543652/552076 [00:05<00:00, 116608.07it/s]100%|██████████| 552076/552076 [00:05<00:00, 103142.86it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4371/552076 [00:00<00:13, 41489.70it/s]  2%|▏         | 9537/552076 [00:00<00:12, 43869.72it/s]  3%|▎         | 18142/552076 [00:00<00:10, 51432.80it/s]  5%|▍         | 25157/552076 [00:00<00:09, 54613.62it/s]  6%|▌         | 31509/552076 [00:00<00:09, 57011.35it/s]  8%|▊         | 42510/552076 [00:00<00:07, 66642.66it/s]  9%|▉         | 49542/552076 [00:00<00:07, 66762.34it/s] 11%|█         | 61788/552076 [00:00<00:06, 77311.03it/s] 13%|█▎        | 74115/552076 [00:00<00:05, 87046.75it/s] 16%|█▌        | 86516/552076 [00:01<00:04, 95593.49it/s] 18%|█▊        | 98937/552076 [00:01<00:04, 102689.46it/s] 20%|██        | 111441/552076 [00:01<00:04, 108507.81it/s] 22%|██▏       | 123858/552076 [00:01<00:03, 112773.41it/s] 25%|██▍       | 136321/552076 [00:01<00:03, 116086.35it/s] 27%|██▋       | 148500/552076 [00:01<00:03, 117738.22it/s] 29%|██▉       | 161011/552076 [00:01<00:03, 119856.19it/s] 31%|███▏      | 173192/552076 [00:01<00:03, 120112.21it/s] 34%|███▎      | 185341/552076 [00:01<00:03, 117042.80it/s] 36%|███▌      | 197159/552076 [00:01<00:03, 114227.23it/s] 38%|███▊      | 208676/552076 [00:02<00:03, 111149.43it/s] 40%|███▉      | 220481/552076 [00:02<00:02, 113131.01it/s] 42%|████▏     | 232561/552076 [00:02<00:02, 115325.15it/s] 44%|████▍     | 244152/552076 [00:02<00:02, 115481.91it/s] 46%|████▋     | 256549/552076 [00:02<00:02, 117901.76it/s] 49%|████▊     | 268965/552076 [00:02<00:02, 119709.61it/s] 51%|█████     | 281339/552076 [00:02<00:02, 120889.91it/s] 53%|█████▎    | 293456/552076 [00:02<00:02, 114820.89it/s] 55%|█████▌    | 305021/552076 [00:02<00:02, 109357.58it/s] 57%|█████▋    | 317223/552076 [00:02<00:02, 112870.48it/s] 60%|█████▉    | 328618/552076 [00:03<00:01, 112350.54it/s] 62%|██████▏   | 339929/552076 [00:03<00:02, 102267.16it/s] 64%|██████▎   | 351422/552076 [00:03<00:01, 104563.64it/s] 66%|██████▌   | 362448/552076 [00:03<00:01, 106207.97it/s] 68%|██████▊   | 373196/552076 [00:03<00:01, 102933.02it/s] 70%|██████▉   | 384815/552076 [00:03<00:01, 106202.12it/s] 72%|███████▏  | 395539/552076 [00:03<00:01, 81286.27it/s]  73%|███████▎  | 404622/552076 [00:04<00:02, 71588.88it/s] 76%|███████▌  | 418729/552076 [00:04<00:01, 84000.49it/s] 79%|███████▉  | 436300/552076 [00:04<00:01, 99594.90it/s] 83%|████████▎ | 456020/552076 [00:04<00:00, 116962.18it/s] 86%|████████▌ | 475481/552076 [00:04<00:00, 132865.54it/s] 90%|█████████ | 498534/552076 [00:04<00:00, 152210.82it/s] 94%|█████████▍| 518485/552076 [00:04<00:00, 163862.67it/s] 97%|█████████▋| 537124/552076 [00:04<00:00, 145691.28it/s]100%|██████████| 552076/552076 [00:04<00:00, 114115.65it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21576/552076 [00:00<00:02, 215756.09it/s]  8%|▊         | 42841/552076 [00:00<00:02, 214812.20it/s] 11%|█▏        | 62193/552076 [00:00<00:02, 207946.60it/s] 14%|█▎        | 75636/552076 [00:00<00:02, 174885.35it/s] 16%|█▌        | 88873/552076 [00:00<00:02, 154476.34it/s] 19%|█▉        | 107443/552076 [00:00<00:02, 162680.18it/s] 23%|██▎       | 125533/552076 [00:00<00:02, 167748.02it/s] 26%|██▋       | 145256/552076 [00:00<00:02, 175623.19it/s] 30%|███       | 165821/552076 [00:00<00:02, 183665.84it/s] 33%|███▎      | 183802/552076 [00:01<00:02, 164934.14it/s] 37%|███▋      | 204972/552076 [00:01<00:01, 176640.26it/s] 41%|████      | 227188/552076 [00:01<00:01, 188207.61it/s] 45%|████▌     | 250500/552076 [00:01<00:01, 199752.59it/s] 50%|████▉     | 273356/552076 [00:01<00:01, 207602.29it/s] 53%|█████▎    | 294747/552076 [00:01<00:01, 209455.11it/s] 58%|█████▊    | 317986/552076 [00:01<00:01, 215845.37it/s] 62%|██████▏   | 341148/552076 [00:01<00:00, 220344.95it/s] 66%|██████▌   | 364022/552076 [00:01<00:00, 222796.09it/s] 70%|███████   | 386822/552076 [00:01<00:00, 224330.00it/s] 74%|███████▍  | 409362/552076 [00:02<00:00, 224229.12it/s] 78%|███████▊  | 432977/552076 [00:02<00:00, 227676.50it/s] 83%|████████▎ | 455810/552076 [00:02<00:00, 224269.28it/s] 87%|████████▋ | 478979/552076 [00:02<00:00, 226444.37it/s] 91%|█████████ | 501669/552076 [00:02<00:00, 179947.24it/s] 94%|█████████▍| 521202/552076 [00:02<00:00, 134144.55it/s] 99%|█████████▊| 544028/552076 [00:02<00:00, 153079.50it/s]100%|██████████| 552076/552076 [00:02<00:00, 189798.32it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 19134/552076 [00:00<00:02, 191339.73it/s]  7%|▋         | 38979/552076 [00:00<00:02, 193416.89it/s] 11%|█         | 59010/552076 [00:00<00:02, 195431.82it/s] 14%|█▍        | 78733/552076 [00:00<00:02, 195967.74it/s] 18%|█▊        | 100395/552076 [00:00<00:02, 201735.80it/s] 22%|██▏       | 121891/552076 [00:00<00:02, 205526.67it/s] 26%|██▌       | 143630/552076 [00:00<00:01, 208946.22it/s] 30%|██▉       | 163773/552076 [00:00<00:01, 206632.41it/s] 34%|███▎      | 185924/552076 [00:00<00:01, 210881.01it/s] 37%|███▋      | 206684/552076 [00:01<00:01, 209885.78it/s] 41%|████▏     | 228202/552076 [00:01<00:01, 211445.95it/s] 45%|████▌     | 249458/552076 [00:01<00:01, 211778.70it/s] 49%|████▉     | 270391/552076 [00:01<00:01, 208293.87it/s] 53%|█████▎    | 293162/552076 [00:01<00:01, 213761.40it/s] 57%|█████▋    | 315803/552076 [00:01<00:01, 217403.47it/s] 61%|██████▏   | 338703/552076 [00:01<00:00, 220756.36it/s] 65%|██████▌   | 361333/552076 [00:01<00:00, 222390.31it/s] 70%|██████▉   | 384616/552076 [00:01<00:00, 225421.08it/s] 74%|███████▍  | 407775/552076 [00:01<00:00, 227236.40it/s] 78%|███████▊  | 430506/552076 [00:02<00:00, 226861.73it/s] 82%|████████▏ | 453246/552076 [00:02<00:00, 227022.68it/s] 86%|████████▌ | 475952/552076 [00:02<00:00, 226379.38it/s] 90%|█████████ | 498593/552076 [00:02<00:00, 226097.73it/s] 95%|█████████▍| 522268/552076 [00:02<00:00, 229190.33it/s] 99%|█████████▉| 545199/552076 [00:02<00:00, 227138.44it/s]100%|██████████| 552076/552076 [00:02<00:00, 217495.77it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14976/552076 [00:00<00:03, 149752.65it/s]  6%|▌         | 32483/552076 [00:00<00:03, 156543.07it/s] 10%|▉         | 53229/552076 [00:00<00:02, 168981.98it/s] 12%|█▏        | 65331/552076 [00:00<00:03, 148070.13it/s] 15%|█▌        | 85071/552076 [00:00<00:02, 160068.70it/s] 19%|█▉        | 106777/552076 [00:00<00:02, 173754.19it/s] 23%|██▎       | 128088/552076 [00:00<00:02, 183944.62it/s] 26%|██▋       | 146029/552076 [00:00<00:02, 173475.13it/s] 30%|██▉       | 163182/552076 [00:00<00:02, 161919.64it/s] 32%|███▏      | 179394/552076 [00:01<00:02, 128917.07it/s] 35%|███▌      | 194097/552076 [00:01<00:02, 133862.67it/s] 39%|███▉      | 215417/552076 [00:01<00:02, 150683.31it/s] 43%|████▎     | 237427/552076 [00:01<00:01, 166429.08it/s] 46%|████▋     | 255460/552076 [00:01<00:01, 161349.01it/s] 50%|████▉     | 275735/552076 [00:01<00:01, 171875.87it/s] 53%|█████▎    | 294564/552076 [00:01<00:01, 176489.59it/s] 57%|█████▋    | 312870/552076 [00:01<00:01, 174419.04it/s] 60%|██████    | 333210/552076 [00:01<00:01, 182206.69it/s] 64%|██████▎   | 351847/552076 [00:02<00:01, 183235.74it/s] 67%|██████▋   | 370464/552076 [00:02<00:01, 177297.57it/s] 71%|███████   | 391299/552076 [00:02<00:00, 185592.42it/s] 74%|███████▍  | 410133/552076 [00:02<00:00, 180294.12it/s] 78%|███████▊  | 428388/552076 [00:02<00:00, 176832.95it/s] 81%|████████▏ | 449399/552076 [00:02<00:00, 185652.59it/s] 85%|████████▍ | 468202/552076 [00:02<00:00, 179110.34it/s] 88%|████████▊ | 486738/552076 [00:02<00:00, 180938.57it/s] 92%|█████████▏| 507174/552076 [00:02<00:00, 187378.45it/s] 95%|█████████▌| 526079/552076 [00:03<00:00, 181904.70it/s] 99%|█████████▊| 544690/552076 [00:03<00:00, 183145.61it/s]100%|██████████| 552076/552076 [00:03<00:00, 175023.77it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22724/552076 [00:00<00:02, 227235.34it/s]  8%|▊         | 45525/552076 [00:00<00:02, 227465.79it/s] 12%|█▏        | 68809/552076 [00:00<00:02, 229050.11it/s] 17%|█▋        | 91579/552076 [00:00<00:02, 228642.81it/s] 21%|██        | 114649/552076 [00:00<00:01, 229253.40it/s] 25%|██▍       | 137738/552076 [00:00<00:01, 229739.88it/s] 29%|██▊       | 158041/552076 [00:00<00:01, 199677.44it/s] 32%|███▏      | 176842/552076 [00:00<00:02, 187127.51it/s] 36%|███▌      | 196431/552076 [00:00<00:01, 189671.69it/s] 39%|███▉      | 214947/552076 [00:01<00:01, 181411.86it/s] 42%|████▏     | 232849/552076 [00:01<00:01, 177243.12it/s] 46%|████▌     | 253597/552076 [00:01<00:01, 185345.01it/s] 50%|████▉     | 274621/552076 [00:01<00:01, 192168.94it/s] 53%|█████▎    | 293898/552076 [00:01<00:01, 186167.18it/s] 57%|█████▋    | 312598/552076 [00:01<00:01, 178935.60it/s] 60%|█████▉    | 330610/552076 [00:01<00:01, 178389.37it/s] 63%|██████▎   | 349645/552076 [00:01<00:01, 181813.89it/s] 67%|██████▋   | 370714/552076 [00:01<00:00, 189608.70it/s] 71%|███████   | 393315/552076 [00:01<00:00, 199232.05it/s] 75%|███████▌  | 415598/552076 [00:02<00:00, 205768.92it/s] 79%|███████▉  | 437620/552076 [00:02<00:00, 209900.30it/s] 83%|████████▎ | 460447/552076 [00:02<00:00, 215091.85it/s] 88%|████████▊ | 483626/552076 [00:02<00:00, 219840.47it/s] 92%|█████████▏| 507275/552076 [00:02<00:00, 224583.16it/s] 96%|█████████▌| 529851/552076 [00:02<00:00, 222399.45it/s]100%|██████████| 552076/552076 [00:02<00:00, 204846.64it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22129/552076 [00:00<00:02, 221289.68it/s]  8%|▊         | 43772/552076 [00:00<00:02, 219808.44it/s] 12%|█▏        | 65250/552076 [00:00<00:02, 218275.26it/s] 16%|█▌        | 87340/552076 [00:00<00:02, 219053.69it/s] 19%|█▉        | 106587/552076 [00:00<00:02, 210333.01it/s] 22%|██▏       | 123978/552076 [00:00<00:02, 188783.99it/s] 26%|██▋       | 145735/552076 [00:00<00:02, 196586.85it/s] 31%|███       | 168415/552076 [00:00<00:01, 204769.52it/s] 35%|███▍      | 191035/552076 [00:00<00:01, 210756.93it/s] 39%|███▉      | 214827/552076 [00:01<00:01, 218230.70it/s] 43%|████▎     | 236308/552076 [00:01<00:01, 213479.41it/s] 47%|████▋     | 257440/552076 [00:01<00:01, 189057.94it/s] 50%|█████     | 276709/552076 [00:01<00:01, 186655.35it/s] 54%|█████▍    | 298023/552076 [00:01<00:01, 193881.29it/s] 58%|█████▊    | 321383/552076 [00:01<00:01, 204300.36it/s] 62%|██████▏   | 342914/552076 [00:01<00:01, 207482.81it/s] 66%|██████▌   | 364358/552076 [00:01<00:00, 209521.87it/s] 70%|███████   | 386857/552076 [00:01<00:00, 213933.32it/s] 74%|███████▍  | 410119/552076 [00:01<00:00, 219214.30it/s] 78%|███████▊  | 432279/552076 [00:02<00:00, 219921.38it/s] 83%|████████▎ | 455615/552076 [00:02<00:00, 223786.73it/s] 87%|████████▋ | 478344/552076 [00:02<00:00, 224826.22it/s] 91%|█████████ | 500886/552076 [00:02<00:00, 223307.47it/s] 95%|█████████▍| 523261/552076 [00:02<00:00, 221626.78it/s] 99%|█████████▉| 545457/552076 [00:02<00:00, 219520.48it/s]100%|██████████| 552076/552076 [00:02<00:00, 211928.43it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19471/552076 [00:00<00:02, 194707.40it/s]  8%|▊         | 41922/552076 [00:00<00:02, 202780.76it/s] 12%|█▏        | 64567/552076 [00:00<00:02, 209343.57it/s] 16%|█▌        | 87646/552076 [00:00<00:02, 215346.03it/s] 19%|█▉        | 104629/552076 [00:00<00:02, 197368.30it/s] 22%|██▏       | 121473/552076 [00:00<00:02, 178018.34it/s] 25%|██▍       | 137610/552076 [00:00<00:02, 171577.78it/s] 29%|██▊       | 158035/552076 [00:00<00:02, 180226.41it/s] 32%|███▏      | 175393/552076 [00:00<00:02, 167698.15it/s] 36%|███▌      | 197835/552076 [00:01<00:01, 181455.21it/s] 40%|███▉      | 219309/552076 [00:01<00:01, 190301.18it/s] 43%|████▎     | 238539/552076 [00:01<00:02, 151999.72it/s] 47%|████▋     | 259267/552076 [00:01<00:01, 165218.49it/s] 50%|█████     | 277080/552076 [00:01<00:01, 159063.06it/s] 54%|█████▍    | 299463/552076 [00:01<00:01, 174182.33it/s] 58%|█████▊    | 320937/552076 [00:01<00:01, 184643.65it/s] 62%|██████▏   | 342394/552076 [00:01<00:01, 192705.21it/s] 66%|██████▌   | 365327/552076 [00:01<00:00, 202401.42it/s] 70%|███████   | 387643/552076 [00:02<00:00, 208211.21it/s] 74%|███████▍  | 409992/552076 [00:02<00:00, 212570.82it/s] 78%|███████▊  | 432423/552076 [00:02<00:00, 215958.88it/s] 83%|████████▎ | 456027/552076 [00:02<00:00, 221613.33it/s] 87%|████████▋ | 478537/552076 [00:02<00:00, 222647.05it/s] 91%|█████████ | 501886/552076 [00:02<00:00, 225792.45it/s] 95%|█████████▌| 524729/552076 [00:02<00:00, 226576.88it/s] 99%|█████████▉| 548124/552076 [00:02<00:00, 228736.74it/s]100%|██████████| 552076/552076 [00:02<00:00, 199588.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22183/552076 [00:00<00:02, 221823.34it/s]  8%|▊         | 44978/552076 [00:00<00:02, 223625.91it/s] 12%|█▏        | 66717/552076 [00:00<00:02, 221715.21it/s] 16%|█▋        | 89854/552076 [00:00<00:02, 224525.87it/s] 20%|██        | 112822/552076 [00:00<00:01, 226045.02it/s] 25%|██▍       | 135999/552076 [00:00<00:01, 227732.34it/s] 29%|██▊       | 158520/552076 [00:00<00:01, 226968.32it/s] 33%|███▎      | 181122/552076 [00:00<00:01, 226682.24it/s] 37%|███▋      | 203533/552076 [00:00<00:01, 225903.80it/s] 41%|████      | 226984/552076 [00:01<00:01, 228417.39it/s] 45%|████▌     | 250541/552076 [00:01<00:01, 230516.24it/s] 49%|████▉     | 273166/552076 [00:01<00:01, 225681.96it/s] 54%|█████▎    | 295611/552076 [00:01<00:01, 225308.43it/s] 58%|█████▊    | 319109/552076 [00:01<00:01, 228123.42it/s] 62%|██████▏   | 342364/552076 [00:01<00:00, 229431.07it/s] 66%|██████▌   | 365221/552076 [00:01<00:00, 227704.27it/s] 70%|███████   | 387934/552076 [00:01<00:00, 224835.27it/s] 74%|███████▍  | 411155/552076 [00:01<00:00, 226996.03it/s] 79%|███████▊  | 433868/552076 [00:01<00:00, 227033.67it/s] 83%|████████▎ | 456559/552076 [00:02<00:00, 207666.52it/s] 87%|████████▋ | 477639/552076 [00:02<00:00, 146932.59it/s] 90%|████████▉ | 495015/552076 [00:02<00:00, 134121.12it/s] 93%|█████████▎| 513088/552076 [00:02<00:00, 145367.85it/s] 97%|█████████▋| 535124/552076 [00:02<00:00, 161895.45it/s]100%|██████████| 552076/552076 [00:02<00:00, 203354.97it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22487/552076 [00:00<00:02, 224866.46it/s]  8%|▊         | 43780/552076 [00:00<00:02, 221144.93it/s] 12%|█▏        | 66371/552076 [00:00<00:02, 222551.23it/s] 16%|█▌        | 89254/552076 [00:00<00:02, 224396.72it/s] 20%|██        | 110579/552076 [00:00<00:01, 220929.35it/s] 24%|██▍       | 132581/552076 [00:00<00:01, 220655.19it/s] 28%|██▊       | 156155/552076 [00:00<00:01, 224972.95it/s] 32%|███▏      | 176832/552076 [00:00<00:01, 211508.84it/s] 36%|███▌      | 196874/552076 [00:00<00:01, 195376.69it/s] 40%|███▉      | 219497/552076 [00:01<00:01, 203710.88it/s] 44%|████▍     | 242129/552076 [00:01<00:01, 210002.90it/s] 48%|████▊     | 265117/552076 [00:01<00:01, 215593.95it/s] 52%|█████▏    | 288989/552076 [00:01<00:01, 222046.98it/s] 56%|█████▋    | 311196/552076 [00:01<00:01, 196923.87it/s] 60%|██████    | 332332/552076 [00:01<00:01, 201041.05it/s] 65%|██████▍   | 356117/552076 [00:01<00:00, 210827.29it/s] 69%|██████▉   | 379724/552076 [00:01<00:00, 217812.96it/s] 73%|███████▎  | 402696/552076 [00:01<00:00, 221251.50it/s] 77%|███████▋  | 425071/552076 [00:01<00:00, 220936.14it/s] 81%|████████  | 448044/552076 [00:02<00:00, 223500.83it/s] 85%|████████▌ | 470563/552076 [00:02<00:00, 224003.54it/s] 89%|████████▉ | 493639/552076 [00:02<00:00, 225987.21it/s] 94%|█████████▎| 516306/552076 [00:02<00:00, 224564.18it/s] 98%|█████████▊| 538812/552076 [00:02<00:00, 222841.56it/s]100%|██████████| 552076/552076 [00:02<00:00, 217119.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21949/552076 [00:00<00:02, 219487.59it/s]  8%|▊         | 44772/552076 [00:00<00:02, 222038.46it/s] 12%|█▏        | 64281/552076 [00:00<00:02, 213202.54it/s] 14%|█▍        | 78153/552076 [00:00<00:03, 147963.69it/s] 18%|█▊        | 100915/552076 [00:00<00:02, 165318.45it/s] 22%|██▏       | 123711/552076 [00:00<00:02, 180169.23it/s] 26%|██▋       | 145085/552076 [00:00<00:02, 189078.36it/s] 30%|███       | 167034/552076 [00:00<00:01, 197276.74it/s] 34%|███▍      | 189822/552076 [00:00<00:01, 205556.35it/s] 38%|███▊      | 212031/552076 [00:01<00:01, 210250.26it/s] 42%|████▏     | 233921/552076 [00:01<00:01, 212770.98it/s] 46%|████▌     | 255265/552076 [00:01<00:01, 171545.27it/s] 50%|████▉     | 273750/552076 [00:01<00:01, 164761.36it/s] 53%|█████▎    | 291215/552076 [00:01<00:01, 156954.65it/s] 56%|█████▌    | 307681/552076 [00:01<00:01, 129750.52it/s] 58%|█████▊    | 322121/552076 [00:01<00:01, 133822.43it/s] 62%|██████▏   | 343615/552076 [00:01<00:01, 150905.91it/s] 65%|██████▌   | 360101/552076 [00:02<00:01, 144855.25it/s] 69%|██████▉   | 382820/552076 [00:02<00:01, 162524.59it/s] 73%|███████▎  | 400496/552076 [00:02<00:00, 158395.23it/s] 76%|███████▌  | 417355/552076 [00:02<00:00, 148299.98it/s] 79%|███████▉  | 435049/552076 [00:02<00:00, 155867.94it/s] 83%|████████▎ | 457668/552076 [00:02<00:00, 171899.98it/s] 87%|████████▋ | 480973/552076 [00:02<00:00, 186586.79it/s] 91%|█████████ | 502867/552076 [00:02<00:00, 195240.25it/s] 95%|█████████▌| 525704/552076 [00:02<00:00, 204122.70it/s] 99%|█████████▉| 548865/552076 [00:03<00:00, 211656.94it/s]100%|██████████| 552076/552076 [00:03<00:00, 180833.39it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22060/552076 [00:00<00:02, 220596.00it/s]  8%|▊         | 44002/552076 [00:00<00:02, 220240.20it/s] 12%|█▏        | 66093/552076 [00:00<00:02, 220439.05it/s] 16%|█▌        | 87204/552076 [00:00<00:02, 217554.64it/s] 20%|█▉        | 109593/552076 [00:00<00:02, 219415.34it/s] 24%|██▍       | 132276/552076 [00:00<00:01, 221587.62it/s] 28%|██▊       | 155503/552076 [00:00<00:01, 224685.45it/s] 32%|███▏      | 178131/552076 [00:00<00:01, 225160.39it/s] 36%|███▋      | 200246/552076 [00:00<00:01, 223939.39it/s] 40%|████      | 223066/552076 [00:01<00:01, 225198.93it/s] 45%|████▍     | 246602/552076 [00:01<00:01, 228152.24it/s] 49%|████▉     | 269452/552076 [00:01<00:01, 228256.04it/s] 53%|█████▎    | 292233/552076 [00:01<00:01, 228119.49it/s] 57%|█████▋    | 315033/552076 [00:01<00:01, 228081.90it/s] 61%|██████▏   | 338534/552076 [00:01<00:00, 230115.83it/s] 66%|██████▌   | 362213/552076 [00:01<00:00, 232075.05it/s] 70%|██████▉   | 385712/552076 [00:01<00:00, 232940.50it/s] 74%|███████▍  | 408963/552076 [00:01<00:00, 230937.34it/s] 78%|███████▊  | 432031/552076 [00:01<00:00, 229092.03it/s] 82%|████████▏ | 454925/552076 [00:02<00:00, 227865.44it/s] 87%|████████▋ | 478247/552076 [00:02<00:00, 229445.07it/s] 91%|█████████ | 501188/552076 [00:02<00:00, 227114.33it/s] 95%|█████████▍| 523903/552076 [00:02<00:00, 217485.46it/s] 99%|█████████▉| 545741/552076 [00:02<00:00, 203635.01it/s]100%|██████████| 552076/552076 [00:02<00:00, 222267.80it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 13395/552076 [00:00<00:04, 133948.85it/s]  6%|▋         | 34846/552076 [00:00<00:03, 150956.38it/s] 10%|█         | 56246/552076 [00:00<00:02, 165591.00it/s] 14%|█▍        | 79110/552076 [00:00<00:02, 180523.83it/s] 18%|█▊        | 102032/552076 [00:00<00:02, 192811.20it/s] 23%|██▎       | 125205/552076 [00:00<00:02, 203041.17it/s] 27%|██▋       | 147699/552076 [00:00<00:01, 209148.03it/s] 31%|███       | 169992/552076 [00:00<00:01, 213100.08it/s] 35%|███▍      | 192524/552076 [00:00<00:01, 216622.85it/s] 39%|███▉      | 213977/552076 [00:01<00:01, 214742.52it/s] 43%|████▎     | 235941/552076 [00:01<00:01, 216185.23it/s] 47%|████▋     | 258030/552076 [00:01<00:01, 217575.24it/s] 51%|█████     | 279722/552076 [00:01<00:01, 188436.45it/s] 54%|█████▍    | 299213/552076 [00:01<00:01, 163136.32it/s] 57%|█████▋    | 316584/552076 [00:01<00:01, 149095.82it/s] 60%|██████    | 332469/552076 [00:01<00:01, 140692.39it/s] 63%|██████▎   | 347319/552076 [00:01<00:01, 137064.28it/s] 65%|██████▌   | 361592/552076 [00:02<00:01, 133023.32it/s] 68%|██████▊   | 375317/552076 [00:02<00:01, 130490.83it/s] 70%|███████   | 388673/552076 [00:02<00:01, 128455.41it/s] 73%|███████▎  | 401741/552076 [00:02<00:01, 126545.55it/s] 75%|███████▌  | 414558/552076 [00:02<00:01, 126104.34it/s] 77%|███████▋  | 427282/552076 [00:02<00:00, 125806.00it/s] 80%|███████▉  | 439943/552076 [00:02<00:00, 125400.75it/s] 82%|████████▏ | 452540/552076 [00:02<00:00, 125214.00it/s] 84%|████████▍ | 465101/552076 [00:02<00:00, 125235.24it/s] 87%|████████▋ | 477706/552076 [00:02<00:00, 125477.88it/s] 89%|████████▉ | 490274/552076 [00:03<00:00, 120623.16it/s] 91%|█████████ | 502804/552076 [00:03<00:00, 121986.88it/s] 93%|█████████▎| 515287/552076 [00:03<00:00, 122823.22it/s] 96%|█████████▌| 527778/552076 [00:03<00:00, 123439.49it/s] 98%|█████████▊| 540144/552076 [00:03<00:00, 119293.81it/s]100%|██████████| 552076/552076 [00:03<00:00, 154821.54it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8129/552076 [00:00<00:06, 81289.50it/s]  3%|▎         | 19182/552076 [00:00<00:06, 88296.87it/s]  6%|▌         | 30394/552076 [00:00<00:05, 94307.09it/s]  8%|▊         | 41856/552076 [00:00<00:05, 99601.83it/s] 10%|▉         | 52688/552076 [00:00<00:04, 102065.55it/s] 11%|█▏        | 63454/552076 [00:00<00:04, 103680.97it/s] 13%|█▎        | 73187/552076 [00:00<00:04, 101689.90it/s] 15%|█▌        | 82899/552076 [00:00<00:04, 100273.32it/s] 17%|█▋        | 94487/552076 [00:00<00:04, 104494.56it/s] 19%|█▉        | 105892/552076 [00:01<00:04, 107188.55it/s] 21%|██▏       | 117319/552076 [00:01<00:03, 109216.35it/s] 23%|██▎       | 129030/552076 [00:01<00:03, 111468.92it/s] 25%|██▌       | 140466/552076 [00:01<00:03, 111563.64it/s] 28%|██▊       | 152576/552076 [00:01<00:03, 114261.52it/s] 30%|██▉       | 163993/552076 [00:01<00:03, 111468.11it/s] 32%|███▏      | 175622/552076 [00:01<00:03, 112871.57it/s] 34%|███▍      | 187365/552076 [00:01<00:03, 114198.27it/s] 36%|███▌      | 198796/552076 [00:01<00:03, 104187.82it/s] 38%|███▊      | 210426/552076 [00:01<00:03, 107547.13it/s] 40%|████      | 221958/552076 [00:02<00:03, 109766.50it/s] 42%|████▏     | 233053/552076 [00:02<00:03, 96603.39it/s]  44%|████▍     | 243084/552076 [00:02<00:03, 80655.51it/s] 46%|████▌     | 251853/552076 [00:02<00:03, 75296.54it/s] 48%|████▊     | 263011/552076 [00:02<00:03, 83435.07it/s] 49%|████▉     | 272024/552076 [00:02<00:03, 83276.98it/s] 51%|█████     | 281253/552076 [00:02<00:03, 84110.10it/s] 53%|█████▎    | 289994/552076 [00:02<00:03, 78259.16it/s] 54%|█████▍    | 298133/552076 [00:03<00:03, 77973.08it/s] 56%|█████▌    | 310177/552076 [00:03<00:02, 87194.37it/s] 58%|█████▊    | 319402/552076 [00:03<00:03, 76483.41it/s] 60%|██████    | 331906/552076 [00:03<00:02, 86568.02it/s] 62%|██████▏   | 344399/552076 [00:03<00:02, 95350.32it/s] 65%|██████▍   | 356829/552076 [00:03<00:01, 102512.68it/s] 67%|██████▋   | 369291/552076 [00:03<00:01, 108274.56it/s] 69%|██████▉   | 381425/552076 [00:03<00:01, 111888.33it/s] 71%|███████   | 393081/552076 [00:03<00:01, 91761.15it/s]  73%|███████▎  | 405569/552076 [00:04<00:01, 99690.96it/s] 75%|███████▌  | 416384/552076 [00:04<00:01, 80457.04it/s] 78%|███████▊  | 428789/552076 [00:04<00:01, 89937.21it/s] 80%|███████▉  | 441074/552076 [00:04<00:01, 97795.68it/s] 82%|████████▏ | 452978/552076 [00:04<00:00, 103326.56it/s] 84%|████████▍ | 465078/552076 [00:04<00:00, 108059.68it/s] 86%|████████▋ | 477258/552076 [00:04<00:00, 111843.06it/s] 89%|████████▊ | 489740/552076 [00:04<00:00, 115441.36it/s] 91%|█████████ | 502161/552076 [00:04<00:00, 117937.98it/s] 93%|█████████▎| 514219/552076 [00:05<00:00, 111921.40it/s] 95%|█████████▌| 525660/552076 [00:05<00:00, 111388.81it/s] 97%|█████████▋| 538023/552076 [00:05<00:00, 114796.66it/s]100%|█████████▉| 550379/552076 [00:05<00:00, 117291.30it/s]100%|██████████| 552076/552076 [00:05<00:00, 101926.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12121/552076 [00:00<00:04, 121206.07it/s]  4%|▍         | 24213/552076 [00:00<00:04, 121117.28it/s]  7%|▋         | 36530/552076 [00:00<00:04, 121724.96it/s]  8%|▊         | 46567/552076 [00:00<00:04, 112770.07it/s] 10%|█         | 57503/552076 [00:00<00:04, 111722.27it/s] 13%|█▎        | 69776/552076 [00:00<00:04, 114810.40it/s] 15%|█▍        | 82153/552076 [00:00<00:04, 117357.02it/s] 17%|█▋        | 94563/552076 [00:00<00:03, 119299.93it/s] 19%|█▉        | 106246/552076 [00:00<00:03, 118547.83it/s] 22%|██▏       | 118745/552076 [00:01<00:03, 120407.78it/s] 24%|██▍       | 131179/552076 [00:01<00:03, 121558.99it/s] 26%|██▌       | 143125/552076 [00:01<00:03, 117729.67it/s] 28%|██▊       | 154777/552076 [00:01<00:03, 112166.00it/s] 30%|███       | 167260/552076 [00:01<00:03, 115686.42it/s] 33%|███▎      | 179850/552076 [00:01<00:03, 118570.19it/s] 35%|███▍      | 192418/552076 [00:01<00:02, 120615.09it/s] 37%|███▋      | 204970/552076 [00:01<00:02, 122044.85it/s] 39%|███▉      | 217533/552076 [00:01<00:02, 123097.47it/s] 42%|████▏     | 230138/552076 [00:01<00:02, 123966.19it/s] 44%|████▍     | 242795/552076 [00:02<00:02, 124735.70it/s] 46%|████▋     | 255654/552076 [00:02<00:02, 125866.75it/s] 49%|████▊     | 268505/552076 [00:02<00:02, 126647.47it/s] 51%|█████     | 281178/552076 [00:02<00:02, 126398.99it/s] 53%|█████▎    | 293824/552076 [00:02<00:02, 126063.53it/s] 56%|█████▌    | 306435/552076 [00:02<00:01, 125701.24it/s] 58%|█████▊    | 319009/552076 [00:02<00:01, 125500.39it/s] 60%|██████    | 331562/552076 [00:02<00:01, 125320.56it/s] 62%|██████▏   | 344113/552076 [00:02<00:01, 125374.50it/s] 65%|██████▍   | 356652/552076 [00:02<00:01, 125121.29it/s] 67%|██████▋   | 369166/552076 [00:03<00:01, 125007.85it/s] 69%|██████▉   | 381668/552076 [00:03<00:01, 124316.15it/s] 71%|███████▏  | 394101/552076 [00:03<00:01, 120069.51it/s] 74%|███████▎  | 406141/552076 [00:03<00:01, 90033.80it/s]  75%|███████▌  | 416274/552076 [00:03<00:01, 88274.43it/s] 78%|███████▊  | 429696/552076 [00:03<00:01, 98376.70it/s] 80%|████████  | 442239/552076 [00:03<00:01, 105181.21it/s] 82%|████████▏ | 453537/552076 [00:03<00:00, 104674.25it/s] 84%|████████▍ | 464551/552076 [00:04<00:00, 99158.74it/s]  86%|████████▌ | 475101/552076 [00:04<00:00, 100977.21it/s] 88%|████████▊ | 485517/552076 [00:04<00:00, 87218.29it/s]  92%|█████████▏| 506806/552076 [00:04<00:00, 105987.92it/s] 96%|█████████▌| 528807/552076 [00:04<00:00, 125499.78it/s]100%|█████████▉| 549861/552076 [00:04<00:00, 142803.10it/s]100%|██████████| 552076/552076 [00:04<00:00, 120536.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 15026/552076 [00:00<00:03, 150251.90it/s]  6%|▌         | 32539/552076 [00:00<00:03, 156939.88it/s] 10%|▉         | 54126/552076 [00:00<00:02, 170937.92it/s] 14%|█▍        | 76109/552076 [00:00<00:02, 183157.37it/s] 18%|█▊        | 99016/552076 [00:00<00:02, 194873.19it/s] 22%|██▏       | 121472/552076 [00:00<00:02, 202918.99it/s] 26%|██▌       | 143842/552076 [00:00<00:01, 208735.63it/s] 30%|███       | 166375/552076 [00:00<00:01, 213449.82it/s] 34%|███▍      | 190139/552076 [00:00<00:01, 220172.52it/s] 39%|███▊      | 213649/552076 [00:01<00:01, 224447.46it/s] 43%|████▎     | 235873/552076 [00:01<00:01, 222523.42it/s] 47%|████▋     | 258727/552076 [00:01<00:01, 224292.88it/s] 51%|█████     | 281473/552076 [00:01<00:01, 225232.35it/s] 55%|█████▌    | 303926/552076 [00:01<00:01, 223121.03it/s] 59%|█████▉    | 326755/552076 [00:01<00:01, 224646.72it/s] 63%|██████▎   | 349531/552076 [00:01<00:00, 225569.56it/s] 67%|██████▋   | 372069/552076 [00:01<00:00, 224560.18it/s] 72%|███████▏  | 394755/552076 [00:01<00:00, 225242.72it/s] 76%|███████▌  | 417271/552076 [00:01<00:00, 222357.32it/s] 80%|███████▉  | 439510/552076 [00:02<00:00, 221406.50it/s] 84%|████████▎ | 461654/552076 [00:02<00:00, 220385.50it/s] 88%|████████▊ | 484814/552076 [00:02<00:00, 223633.73it/s] 92%|█████████▏| 507192/552076 [00:02<00:00, 221447.41it/s] 96%|█████████▌| 529693/552076 [00:02<00:00, 222504.19it/s]100%|█████████▉| 551955/552076 [00:02<00:00, 217238.84it/s]100%|██████████| 552076/552076 [00:02<00:00, 218580.12it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9099/552076 [00:00<00:05, 90987.92it/s]  3%|▎         | 18520/552076 [00:00<00:05, 91926.89it/s]  5%|▌         | 29804/552076 [00:00<00:05, 97338.08it/s]  7%|▋         | 40709/552076 [00:00<00:05, 100574.49it/s]  9%|▉         | 48671/552076 [00:00<00:05, 87099.59it/s]  10%|█         | 56235/552076 [00:00<00:07, 68369.89it/s] 11%|█▏        | 62896/552076 [00:00<00:07, 62222.85it/s] 13%|█▎        | 69102/552076 [00:00<00:08, 59029.00it/s] 14%|█▎        | 75028/552076 [00:01<00:09, 52515.53it/s] 15%|█▍        | 81738/552076 [00:01<00:08, 56177.51it/s] 16%|█▌        | 87532/552076 [00:01<00:08, 54215.06it/s] 17%|█▋        | 93612/552076 [00:01<00:08, 56034.39it/s] 18%|█▊        | 99328/552076 [00:01<00:10, 42521.48it/s] 19%|█▉        | 107174/552076 [00:01<00:09, 48575.69it/s] 20%|██        | 112729/552076 [00:01<00:10, 43528.39it/s] 21%|██▏       | 117668/552076 [00:01<00:10, 43195.78it/s] 22%|██▏       | 122399/552076 [00:02<00:10, 40811.97it/s] 23%|██▎       | 126795/552076 [00:02<00:12, 33583.29it/s] 25%|██▌       | 138917/552076 [00:02<00:09, 42884.15it/s] 27%|██▋       | 151088/552076 [00:02<00:07, 53225.51it/s] 30%|██▉       | 163319/552076 [00:02<00:06, 64083.75it/s] 32%|███▏      | 175670/552076 [00:02<00:05, 74893.49it/s] 34%|███▍      | 187879/552076 [00:02<00:04, 84717.07it/s] 36%|███▋      | 200247/552076 [00:02<00:03, 93558.43it/s] 39%|███▊      | 212637/552076 [00:02<00:03, 100975.72it/s] 41%|████      | 224964/552076 [00:03<00:03, 106767.07it/s] 43%|████▎     | 237415/552076 [00:03<00:02, 111533.08it/s] 45%|████▌     | 249430/552076 [00:03<00:03, 93890.73it/s]  47%|████▋     | 259898/552076 [00:03<00:03, 83613.61it/s] 49%|████▉     | 271081/552076 [00:03<00:03, 90459.72it/s] 51%|█████▏    | 283106/552076 [00:03<00:02, 97720.70it/s] 54%|█████▎    | 295449/552076 [00:03<00:02, 104233.44it/s] 56%|█████▌    | 307923/552076 [00:03<00:02, 109639.11it/s] 58%|█████▊    | 320203/552076 [00:04<00:02, 113280.47it/s] 60%|██████    | 331971/552076 [00:04<00:01, 114563.91it/s] 62%|██████▏   | 343800/552076 [00:04<00:01, 115654.78it/s] 64%|██████▍   | 355567/552076 [00:04<00:01, 107308.75it/s] 66%|██████▋   | 366559/552076 [00:04<00:02, 89278.21it/s]  69%|██████▊   | 378444/552076 [00:04<00:01, 96479.51it/s] 71%|███████   | 390203/552076 [00:04<00:01, 101969.79it/s] 73%|███████▎  | 401910/552076 [00:04<00:01, 106072.41it/s] 75%|███████▍  | 413910/552076 [00:04<00:01, 109898.00it/s] 77%|███████▋  | 425663/552076 [00:05<00:01, 112080.19it/s] 79%|███████▉  | 438175/552076 [00:05<00:00, 115694.96it/s] 82%|████████▏ | 449943/552076 [00:05<00:00, 116140.28it/s] 84%|████████▍ | 462436/552076 [00:05<00:00, 118644.48it/s] 86%|████████▌ | 474883/552076 [00:05<00:00, 120332.68it/s] 88%|████████▊ | 487369/552076 [00:05<00:00, 121655.38it/s] 91%|█████████ | 499895/552076 [00:05<00:00, 122713.28it/s] 93%|█████████▎| 512297/552076 [00:05<00:00, 123099.98it/s] 95%|█████████▌| 524695/552076 [00:05<00:00, 123359.37it/s] 97%|█████████▋| 537179/552076 [00:05<00:00, 123798.40it/s]100%|█████████▉| 549576/552076 [00:06<00:00, 123728.48it/s]100%|██████████| 552076/552076 [00:06<00:00, 91199.43it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6194/552076 [00:00<00:09, 58139.76it/s]  3%|▎         | 17685/552076 [00:00<00:07, 68255.30it/s]  5%|▌         | 28610/552076 [00:00<00:06, 76912.84it/s]  8%|▊         | 42442/552076 [00:00<00:05, 88728.09it/s] 10%|▉         | 54976/552076 [00:00<00:05, 97249.08it/s] 12%|█▏        | 64848/552076 [00:00<00:05, 92388.96it/s] 14%|█▍        | 77127/552076 [00:00<00:04, 99801.08it/s] 16%|█▌        | 89392/552076 [00:00<00:04, 105708.00it/s] 18%|█▊        | 101726/552076 [00:00<00:04, 110442.47it/s] 21%|██        | 114146/552076 [00:01<00:03, 114237.23it/s] 23%|██▎       | 126471/552076 [00:01<00:03, 116798.79it/s] 25%|██▌       | 138363/552076 [00:01<00:03, 117424.71it/s] 27%|██▋       | 150221/552076 [00:01<00:03, 115804.19it/s] 29%|██▉       | 162787/552076 [00:01<00:03, 118594.32it/s] 32%|███▏      | 175083/552076 [00:01<00:03, 119870.24it/s] 34%|███▍      | 187397/552076 [00:01<00:03, 120832.40it/s] 36%|███▌      | 199834/552076 [00:01<00:02, 121870.18it/s] 38%|███▊      | 212162/552076 [00:01<00:02, 122286.55it/s] 41%|████      | 224594/552076 [00:01<00:02, 122887.60it/s] 43%|████▎     | 236949/552076 [00:02<00:02, 123082.98it/s] 45%|████▌     | 249375/552076 [00:02<00:02, 123433.42it/s] 47%|████▋     | 262219/552076 [00:02<00:02, 124893.70it/s] 50%|████▉     | 274838/552076 [00:02<00:02, 125278.84it/s] 52%|█████▏    | 287374/552076 [00:02<00:02, 124996.16it/s] 54%|█████▍    | 299879/552076 [00:02<00:02, 124676.34it/s] 57%|█████▋    | 312351/552076 [00:02<00:01, 124256.22it/s] 59%|█████▉    | 324780/552076 [00:02<00:01, 124165.34it/s] 61%|██████    | 337199/552076 [00:02<00:01, 123859.21it/s] 63%|██████▎   | 349697/552076 [00:02<00:01, 124191.33it/s] 66%|██████▌   | 362138/552076 [00:03<00:01, 124253.96it/s] 68%|██████▊   | 374744/552076 [00:03<00:01, 124790.17it/s] 70%|███████   | 387577/552076 [00:03<00:01, 125830.24it/s] 72%|███████▏  | 400170/552076 [00:03<00:01, 125857.58it/s] 75%|███████▍  | 412758/552076 [00:03<00:01, 125518.47it/s] 77%|███████▋  | 425312/552076 [00:03<00:01, 125167.17it/s] 79%|███████▉  | 437831/552076 [00:03<00:00, 119433.75it/s] 81%|████████▏ | 449831/552076 [00:03<00:00, 118852.15it/s] 84%|████████▎ | 461757/552076 [00:03<00:00, 117873.45it/s] 86%|████████▌ | 473575/552076 [00:04<00:00, 104186.63it/s] 88%|████████▊ | 484307/552076 [00:04<00:00, 87903.44it/s]  89%|████████▉ | 493752/552076 [00:04<00:00, 76864.68it/s] 91%|█████████ | 502147/552076 [00:04<00:00, 67170.94it/s] 93%|█████████▎| 511152/552076 [00:04<00:00, 72711.82it/s] 95%|█████████▍| 522325/552076 [00:04<00:00, 81220.45it/s] 97%|█████████▋| 534428/552076 [00:04<00:00, 90111.86it/s] 99%|█████████▉| 545791/552076 [00:04<00:00, 96075.66it/s]100%|██████████| 552076/552076 [00:04<00:00, 111763.58it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9577/552076 [00:00<00:05, 95763.24it/s]  4%|▍         | 20756/552076 [00:00<00:05, 100065.30it/s]  6%|▌         | 32468/552076 [00:00<00:04, 104635.92it/s]  8%|▊         | 41821/552076 [00:00<00:05, 101034.89it/s]  9%|▉         | 49715/552076 [00:00<00:05, 90550.54it/s]  11%|█         | 62101/552076 [00:00<00:04, 98495.87it/s] 14%|█▎        | 74548/552076 [00:00<00:04, 105072.28it/s] 16%|█▌        | 87121/552076 [00:00<00:04, 110519.56it/s] 18%|█▊        | 97973/552076 [00:00<00:04, 99225.74it/s]  20%|█▉        | 107973/552076 [00:01<00:06, 66600.15it/s] 21%|██        | 116104/552076 [00:01<00:08, 52008.50it/s] 22%|██▏       | 122828/552076 [00:01<00:10, 40985.45it/s] 23%|██▎       | 128358/552076 [00:01<00:11, 37983.28it/s] 24%|██▍       | 133202/552076 [00:01<00:11, 37350.11it/s] 25%|██▍       | 137672/552076 [00:02<00:10, 38087.73it/s] 26%|██▌       | 141999/552076 [00:02<00:10, 38061.51it/s] 26%|██▋       | 146168/552076 [00:02<00:10, 37135.95it/s] 27%|██▋       | 150141/552076 [00:02<00:10, 37414.10it/s] 28%|██▊       | 154174/552076 [00:02<00:10, 37656.14it/s] 29%|██▊       | 158068/552076 [00:02<00:11, 33377.31it/s] 29%|██▉       | 162026/552076 [00:02<00:11, 33483.73it/s] 30%|███       | 165832/552076 [00:02<00:11, 33952.79it/s] 31%|███       | 169484/552076 [00:03<00:11, 34491.05it/s] 31%|███▏      | 173171/552076 [00:03<00:10, 35171.18it/s] 32%|███▏      | 176737/552076 [00:03<00:10, 34925.99it/s] 33%|███▎      | 180451/552076 [00:03<00:10, 35128.45it/s] 33%|███▎      | 184457/552076 [00:03<00:10, 35102.27it/s] 34%|███▍      | 188494/552076 [00:03<00:10, 35438.57it/s] 35%|███▍      | 192051/552076 [00:03<00:10, 34641.07it/s] 35%|███▌      | 195726/552076 [00:03<00:10, 35246.98it/s] 36%|███▌      | 199263/552076 [00:03<00:10, 32340.94it/s] 37%|███▋      | 203317/552076 [00:03<00:10, 34428.92it/s] 37%|███▋      | 206836/552076 [00:04<00:10, 33926.82it/s] 38%|███▊      | 210284/552076 [00:04<00:10, 33682.40it/s] 39%|███▉      | 213959/552076 [00:04<00:09, 34546.86it/s] 40%|███▉      | 218090/552076 [00:04<00:09, 36330.69it/s] 40%|████      | 221771/552076 [00:04<00:09, 33402.00it/s] 41%|████      | 225547/552076 [00:04<00:09, 34001.94it/s] 41%|████▏     | 229006/552076 [00:04<00:09, 33057.44it/s] 42%|████▏     | 233142/552076 [00:04<00:09, 34199.14it/s] 43%|████▎     | 236993/552076 [00:04<00:08, 35387.20it/s] 44%|████▎     | 240572/552076 [00:05<00:08, 34845.68it/s] 44%|████▍     | 244087/552076 [00:05<00:09, 31079.96it/s] 45%|████▍     | 247813/552076 [00:05<00:09, 32538.80it/s] 46%|████▌     | 252471/552076 [00:05<00:08, 34854.11it/s] 47%|████▋     | 257384/552076 [00:05<00:07, 38181.47it/s] 47%|████▋     | 261372/552076 [00:05<00:08, 35916.37it/s] 48%|████▊     | 265645/552076 [00:05<00:07, 37719.89it/s] 49%|████▉     | 269544/552076 [00:05<00:08, 33021.89it/s] 49%|████▉     | 273041/552076 [00:06<00:09, 29601.21it/s] 50%|█████     | 276986/552076 [00:06<00:08, 31400.40it/s] 51%|█████     | 280298/552076 [00:06<00:08, 31392.95it/s] 51%|█████▏    | 283558/552076 [00:06<00:08, 31243.72it/s] 52%|█████▏    | 286767/552076 [00:06<00:09, 28216.00it/s] 53%|█████▎    | 291023/552076 [00:06<00:08, 31389.75it/s] 53%|█████▎    | 295273/552076 [00:06<00:07, 34060.30it/s] 54%|█████▍    | 298881/552076 [00:06<00:07, 33931.23it/s] 55%|█████▍    | 303289/552076 [00:06<00:06, 35842.90it/s] 56%|█████▌    | 307002/552076 [00:07<00:07, 34079.18it/s] 56%|█████▋    | 310761/552076 [00:07<00:07, 34073.81it/s] 57%|█████▋    | 314382/552076 [00:07<00:06, 34663.56it/s] 58%|█████▊    | 318678/552076 [00:07<00:06, 36793.88it/s] 58%|█████▊    | 322432/552076 [00:07<00:06, 36941.83it/s] 60%|██████    | 331790/552076 [00:07<00:04, 45137.28it/s] 61%|██████    | 337220/552076 [00:07<00:04, 43276.38it/s] 63%|██████▎   | 346948/552076 [00:07<00:03, 51923.23it/s] 65%|██████▌   | 359000/552076 [00:07<00:03, 62614.33it/s] 67%|██████▋   | 370446/552076 [00:07<00:02, 72459.77it/s] 69%|██████▉   | 382639/552076 [00:08<00:02, 82501.60it/s] 72%|███████▏  | 394964/552076 [00:08<00:01, 91585.26it/s] 74%|███████▍  | 407222/552076 [00:08<00:01, 99101.10it/s] 76%|███████▌  | 418403/552076 [00:08<00:01, 96313.65it/s] 78%|███████▊  | 429386/552076 [00:08<00:01, 97943.09it/s] 80%|███████▉  | 439822/552076 [00:08<00:01, 74862.01it/s] 81%|████████▏ | 448576/552076 [00:08<00:01, 72618.81it/s] 83%|████████▎ | 456740/552076 [00:08<00:01, 71005.33it/s] 84%|████████▍ | 464480/552076 [00:09<00:01, 70010.76it/s] 85%|████████▌ | 471932/552076 [00:09<00:01, 69449.25it/s] 87%|████████▋ | 479194/552076 [00:09<00:01, 70079.07it/s] 88%|████████▊ | 486425/552076 [00:09<00:01, 62146.26it/s] 89%|████████▉ | 492962/552076 [00:09<00:01, 58603.14it/s] 91%|█████████ | 499679/552076 [00:09<00:00, 60932.46it/s] 92%|█████████▏| 506458/552076 [00:09<00:00, 62838.42it/s] 93%|█████████▎| 513246/552076 [00:09<00:00, 64269.83it/s] 94%|█████████▍| 520053/552076 [00:09<00:00, 65364.10it/s] 95%|█████████▌| 526711/552076 [00:10<00:00, 65722.67it/s] 97%|█████████▋| 533497/552076 [00:10<00:00, 66349.15it/s] 98%|█████████▊| 540324/552076 [00:10<00:00, 66911.21it/s] 99%|█████████▉| 547090/552076 [00:10<00:00, 67133.12it/s]100%|██████████| 552076/552076 [00:10<00:00, 52731.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11581/552076 [00:00<00:04, 115803.48it/s]  4%|▍         | 24634/552076 [00:00<00:04, 119858.77it/s]  7%|▋         | 38423/552076 [00:00<00:04, 124752.07it/s]  9%|▉         | 49953/552076 [00:00<00:04, 121755.01it/s] 11%|█         | 59418/552076 [00:00<00:04, 109008.93it/s] 13%|█▎        | 70271/552076 [00:00<00:04, 108862.10it/s] 15%|█▍        | 82454/552076 [00:00<00:04, 112451.96it/s] 17%|█▋        | 94768/552076 [00:00<00:03, 115457.06it/s] 19%|█▉        | 106621/552076 [00:00<00:03, 116360.07it/s] 22%|██▏       | 119041/552076 [00:01<00:03, 118604.77it/s] 24%|██▍       | 131400/552076 [00:01<00:03, 120056.13it/s] 26%|██▌       | 143891/552076 [00:01<00:03, 121470.05it/s] 28%|██▊       | 155925/552076 [00:01<00:03, 118844.86it/s] 30%|███       | 167743/552076 [00:01<00:03, 113473.74it/s] 32%|███▏      | 179096/552076 [00:01<00:03, 109903.46it/s] 35%|███▍      | 191316/552076 [00:01<00:03, 113323.54it/s] 37%|███▋      | 203665/552076 [00:01<00:02, 116193.22it/s] 39%|███▉      | 216020/552076 [00:01<00:02, 118305.65it/s] 41%|████▏     | 228462/552076 [00:01<00:02, 120074.70it/s] 44%|████▎     | 240870/552076 [00:02<00:02, 121247.80it/s] 46%|████▌     | 253269/552076 [00:02<00:02, 122055.70it/s] 48%|████▊     | 265673/552076 [00:02<00:02, 122642.16it/s] 50%|█████     | 277954/552076 [00:02<00:02, 91789.84it/s]  53%|█████▎    | 290369/552076 [00:02<00:02, 99575.95it/s] 55%|█████▍    | 302619/552076 [00:02<00:02, 105496.84it/s] 57%|█████▋    | 313964/552076 [00:02<00:02, 106253.04it/s] 59%|█████▉    | 326145/552076 [00:02<00:02, 110484.57it/s] 61%|██████    | 337627/552076 [00:02<00:02, 99933.26it/s]  63%|██████▎   | 349943/552076 [00:03<00:01, 105924.64it/s] 65%|██████▌   | 360980/552076 [00:03<00:01, 102068.74it/s] 67%|██████▋   | 371529/552076 [00:03<00:01, 95914.24it/s]  70%|██████▉   | 383871/552076 [00:03<00:01, 102784.74it/s] 72%|███████▏  | 396264/552076 [00:03<00:01, 108328.67it/s] 74%|███████▍  | 409109/552076 [00:03<00:01, 113669.76it/s] 76%|███████▋  | 421434/552076 [00:03<00:01, 116382.17it/s] 79%|███████▊  | 433810/552076 [00:03<00:00, 118499.32it/s] 81%|████████  | 446251/552076 [00:03<00:00, 120209.99it/s] 83%|████████▎ | 458694/552076 [00:04<00:00, 121444.39it/s] 85%|████████▌ | 471191/552076 [00:04<00:00, 122480.96it/s] 88%|████████▊ | 484686/552076 [00:04<00:00, 125971.52it/s] 90%|█████████ | 497354/552076 [00:04<00:00, 124054.74it/s] 92%|█████████▏| 509816/552076 [00:04<00:00, 118972.62it/s] 95%|█████████▍| 522324/552076 [00:04<00:00, 120740.64it/s] 97%|█████████▋| 534689/552076 [00:04<00:00, 121598.49it/s] 99%|█████████▉| 547053/552076 [00:04<00:00, 122203.18it/s]100%|██████████| 552076/552076 [00:04<00:00, 114946.30it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 6977/552076 [00:00<00:07, 69766.74it/s]  3%|▎         | 18194/552076 [00:00<00:06, 78689.71it/s]  5%|▍         | 26982/552076 [00:00<00:06, 81104.23it/s]  7%|▋         | 37703/552076 [00:00<00:05, 87494.83it/s]  9%|▉         | 49955/552076 [00:00<00:05, 95702.26it/s] 11%|█         | 61511/552076 [00:00<00:04, 100902.31it/s] 13%|█▎        | 73823/552076 [00:00<00:04, 106675.71it/s] 15%|█▌        | 84289/552076 [00:00<00:04, 93738.70it/s]  17%|█▋        | 94613/552076 [00:00<00:04, 96399.05it/s] 19%|█▉        | 107058/552076 [00:01<00:04, 103389.08it/s] 21%|██▏       | 117623/552076 [00:01<00:04, 101065.01it/s] 24%|██▎       | 129910/552076 [00:01<00:03, 106746.30it/s] 26%|██▌       | 142223/552076 [00:01<00:03, 111183.67it/s] 28%|██▊       | 153533/552076 [00:01<00:03, 107638.71it/s] 30%|██▉       | 164456/552076 [00:01<00:03, 107483.19it/s] 32%|███▏      | 176076/552076 [00:01<00:03, 109957.26it/s] 34%|███▍      | 187164/552076 [00:01<00:03, 97688.02it/s]  36%|███▌      | 197251/552076 [00:01<00:03, 95715.45it/s] 38%|███▊      | 208688/552076 [00:02<00:03, 100637.85it/s] 40%|███▉      | 220147/552076 [00:02<00:03, 104451.55it/s] 42%|████▏     | 231648/552076 [00:02<00:02, 107407.71it/s] 44%|████▍     | 244962/552076 [00:02<00:02, 114017.97it/s] 47%|████▋     | 260974/552076 [00:02<00:02, 124796.74it/s] 50%|████▉     | 273915/552076 [00:02<00:02, 116803.24it/s] 52%|█████▏    | 286339/552076 [00:02<00:02, 118938.70it/s] 54%|█████▍    | 298709/552076 [00:02<00:02, 119182.04it/s] 56%|█████▋    | 311195/552076 [00:02<00:01, 120829.07it/s] 59%|█████▊    | 323720/552076 [00:02<00:01, 122121.92it/s] 61%|██████    | 336227/552076 [00:03<00:01, 122988.83it/s] 63%|██████▎   | 348772/552076 [00:03<00:01, 123714.31it/s] 65%|██████▌   | 361256/552076 [00:03<00:01, 124047.71it/s] 68%|██████▊   | 373756/552076 [00:03<00:01, 124329.43it/s] 70%|██████▉   | 386218/552076 [00:03<00:01, 118773.68it/s] 72%|███████▏  | 399193/552076 [00:03<00:01, 121864.08it/s] 75%|███████▍  | 411451/552076 [00:03<00:01, 121560.37it/s] 78%|███████▊  | 428420/552076 [00:03<00:00, 132865.12it/s] 82%|████████▏ | 450678/552076 [00:03<00:00, 151140.24it/s] 86%|████████▌ | 472605/552076 [00:03<00:00, 166676.35it/s] 89%|████████▉ | 493400/552076 [00:04<00:00, 177227.86it/s] 93%|█████████▎| 516191/552076 [00:04<00:00, 189895.18it/s] 97%|█████████▋| 536183/552076 [00:04<00:00, 182975.34it/s]100%|██████████| 552076/552076 [00:04<00:00, 126038.81it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22364/552076 [00:00<00:02, 223636.48it/s]  8%|▊         | 44246/552076 [00:00<00:02, 222169.16it/s] 12%|█▏        | 63502/552076 [00:00<00:02, 212371.36it/s] 14%|█▍        | 77632/552076 [00:00<00:02, 184524.69it/s] 18%|█▊        | 101281/552076 [00:00<00:02, 197546.95it/s] 22%|██▏       | 124207/552076 [00:00<00:02, 206099.01it/s] 27%|██▋       | 148007/552076 [00:00<00:01, 214731.44it/s] 31%|███       | 170912/552076 [00:00<00:01, 218833.71it/s] 35%|███▍      | 191899/552076 [00:00<00:01, 213097.79it/s] 39%|███▉      | 215066/552076 [00:01<00:01, 218348.70it/s] 43%|████▎     | 239071/552076 [00:01<00:01, 224432.82it/s] 48%|████▊     | 262761/552076 [00:01<00:01, 228031.48it/s] 52%|█████▏    | 285427/552076 [00:01<00:01, 227616.89it/s] 56%|█████▌    | 308088/552076 [00:01<00:01, 226397.17it/s] 60%|█████▉    | 330659/552076 [00:01<00:01, 181351.28it/s] 63%|██████▎   | 350174/552076 [00:01<00:01, 162072.93it/s] 67%|██████▋   | 367731/552076 [00:01<00:01, 163256.68it/s] 71%|███████   | 390055/552076 [00:01<00:00, 177568.74it/s] 75%|███████▍  | 411930/552076 [00:02<00:00, 188196.03it/s] 79%|███████▉  | 435495/552076 [00:02<00:00, 200295.75it/s] 83%|████████▎ | 458732/552076 [00:02<00:00, 208946.72it/s] 87%|████████▋ | 480563/552076 [00:02<00:00, 211668.86it/s] 91%|█████████ | 503298/552076 [00:02<00:00, 216140.59it/s] 95%|█████████▌| 526261/552076 [00:02<00:00, 220017.93it/s]100%|█████████▉| 549777/552076 [00:02<00:00, 224351.37it/s]100%|██████████| 552076/552076 [00:02<00:00, 208006.65it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22217/552076 [00:00<00:02, 222169.68it/s]  8%|▊         | 44630/552076 [00:00<00:02, 222752.81it/s] 12%|█▏        | 67336/552076 [00:00<00:02, 224025.87it/s] 16%|█▋        | 90314/552076 [00:00<00:02, 225720.73it/s] 20%|██        | 111451/552076 [00:00<00:01, 221211.58it/s] 24%|██▍       | 134797/552076 [00:00<00:01, 224748.44it/s] 29%|██▊       | 158330/552076 [00:00<00:01, 227820.90it/s] 33%|███▎      | 182050/552076 [00:00<00:01, 230555.24it/s] 37%|███▋      | 204176/552076 [00:00<00:01, 227683.40it/s] 41%|████      | 226776/552076 [00:01<00:01, 227174.19it/s] 45%|████▌     | 248887/552076 [00:01<00:01, 205740.62it/s] 49%|████▉     | 269423/552076 [00:01<00:01, 185764.94it/s] 53%|█████▎    | 290124/552076 [00:01<00:01, 191665.84it/s] 56%|█████▋    | 310949/552076 [00:01<00:01, 196355.68it/s] 60%|██████    | 331693/552076 [00:01<00:01, 199552.43it/s] 64%|██████▍   | 353542/552076 [00:01<00:00, 204879.03it/s] 68%|██████▊   | 374187/552076 [00:01<00:01, 176211.84it/s] 72%|███████▏  | 396541/552076 [00:01<00:00, 188161.18it/s] 76%|███████▌  | 418003/552076 [00:02<00:00, 195385.41it/s] 80%|███████▉  | 439046/552076 [00:02<00:00, 199665.03it/s] 83%|████████▎ | 459475/552076 [00:02<00:00, 154948.88it/s] 87%|████████▋ | 480349/552076 [00:02<00:00, 167930.73it/s] 91%|█████████ | 499746/552076 [00:02<00:00, 174975.42it/s] 94%|█████████▍| 518452/552076 [00:02<00:00, 177528.62it/s] 98%|█████████▊| 540380/552076 [00:02<00:00, 188281.58it/s]100%|██████████| 552076/552076 [00:02<00:00, 198903.42it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22473/552076 [00:00<00:02, 224725.39it/s]  8%|▊         | 44115/552076 [00:00<00:02, 222165.87it/s] 12%|█▏        | 65877/552076 [00:00<00:02, 220781.56it/s] 16%|█▌        | 87877/552076 [00:00<00:02, 220544.20it/s] 20%|██        | 110505/552076 [00:00<00:01, 222232.52it/s] 24%|██▍       | 132047/552076 [00:00<00:01, 220143.53it/s] 28%|██▊       | 154547/552076 [00:00<00:01, 221575.88it/s] 32%|███▏      | 176593/552076 [00:00<00:01, 221237.14it/s] 36%|███▌      | 198427/552076 [00:00<00:01, 220359.70it/s] 40%|███▉      | 220222/552076 [00:01<00:01, 219630.01it/s] 44%|████▍     | 243597/552076 [00:01<00:01, 223682.57it/s] 48%|████▊     | 265542/552076 [00:01<00:01, 222192.57it/s] 52%|█████▏    | 288519/552076 [00:01<00:01, 224411.60it/s] 56%|█████▋    | 310760/552076 [00:01<00:01, 188328.57it/s] 60%|█████▉    | 330437/552076 [00:01<00:01, 164297.46it/s] 63%|██████▎   | 348009/552076 [00:01<00:01, 149942.01it/s] 66%|██████▌   | 364046/552076 [00:01<00:01, 141319.88it/s] 69%|██████▊   | 379010/552076 [00:02<00:01, 135890.29it/s] 71%|███████   | 393226/552076 [00:02<00:01, 132329.74it/s] 74%|███████▎  | 406919/552076 [00:02<00:01, 129790.84it/s] 76%|███████▌  | 420385/552076 [00:02<00:01, 131211.13it/s] 79%|███████▊  | 433743/552076 [00:02<00:00, 128487.61it/s] 81%|████████  | 446770/552076 [00:02<00:00, 127633.19it/s] 83%|████████▎ | 459660/552076 [00:02<00:00, 126687.54it/s] 86%|████████▌ | 472419/552076 [00:02<00:00, 124851.31it/s] 88%|████████▊ | 484973/552076 [00:02<00:00, 124499.82it/s] 90%|█████████ | 497472/552076 [00:02<00:00, 124397.17it/s] 92%|█████████▏| 509946/552076 [00:03<00:00, 124140.58it/s] 95%|█████████▍| 522384/552076 [00:03<00:00, 123959.20it/s] 97%|█████████▋| 534805/552076 [00:03<00:00, 124031.36it/s] 99%|█████████▉| 547220/552076 [00:03<00:00, 103498.28it/s]100%|██████████| 552076/552076 [00:03<00:00, 159385.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12072/552076 [00:00<00:04, 120719.83it/s]  4%|▍         | 24211/552076 [00:00<00:04, 120917.72it/s]  7%|▋         | 36464/552076 [00:00<00:04, 121395.85it/s]  9%|▊         | 47253/552076 [00:00<00:04, 116999.49it/s] 11%|█         | 59859/552076 [00:00<00:04, 119575.15it/s] 13%|█▎        | 71952/552076 [00:00<00:04, 119978.27it/s] 15%|█▌        | 84313/552076 [00:00<00:03, 121044.20it/s] 17%|█▋        | 95445/552076 [00:00<00:04, 104257.54it/s] 20%|█▉        | 107855/552076 [00:00<00:04, 109509.31it/s] 22%|██▏       | 122239/552076 [00:01<00:03, 117954.86it/s] 25%|██▍       | 135912/552076 [00:01<00:03, 123021.34it/s] 27%|██▋       | 148493/552076 [00:01<00:03, 123842.99it/s] 29%|██▉       | 161520/552076 [00:01<00:03, 125701.37it/s] 32%|███▏      | 174392/552076 [00:01<00:02, 126589.98it/s] 34%|███▍      | 187102/552076 [00:01<00:02, 126351.83it/s] 36%|███▌      | 199773/552076 [00:01<00:02, 117704.97it/s] 38%|███▊      | 211688/552076 [00:01<00:03, 105329.79it/s] 40%|████      | 222566/552076 [00:01<00:03, 87969.32it/s]  43%|████▎     | 234950/552076 [00:02<00:03, 96339.38it/s] 45%|████▍     | 246902/552076 [00:02<00:02, 102288.33it/s] 47%|████▋     | 257753/552076 [00:02<00:03, 87631.76it/s]  49%|████▉     | 270142/552076 [00:02<00:02, 96064.54it/s] 51%|█████     | 281929/552076 [00:02<00:02, 101707.17it/s] 53%|█████▎    | 293832/552076 [00:02<00:02, 106349.44it/s] 55%|█████▌    | 304980/552076 [00:02<00:02, 94312.80it/s]  57%|█████▋    | 315022/552076 [00:02<00:02, 91592.92it/s] 59%|█████▉    | 327039/552076 [00:03<00:02, 98627.52it/s] 61%|██████▏   | 338743/552076 [00:03<00:02, 103512.35it/s] 63%|██████▎   | 349484/552076 [00:03<00:02, 88042.78it/s]  65%|██████▌   | 361546/552076 [00:03<00:01, 95804.94it/s] 68%|██████▊   | 373409/552076 [00:03<00:01, 101671.75it/s] 70%|██████▉   | 385495/552076 [00:03<00:01, 106756.24it/s] 72%|███████▏  | 397465/552076 [00:03<00:01, 110334.88it/s] 74%|███████▍  | 409878/552076 [00:03<00:01, 114138.14it/s] 76%|███████▋  | 421912/552076 [00:03<00:01, 115930.39it/s] 79%|███████▊  | 433908/552076 [00:03<00:01, 117107.90it/s] 81%|████████  | 446045/552076 [00:04<00:00, 118351.82it/s] 83%|████████▎ | 457986/552076 [00:04<00:00, 115837.62it/s] 85%|████████▌ | 469656/552076 [00:04<00:00, 115843.78it/s] 87%|████████▋ | 481663/552076 [00:04<00:00, 117078.07it/s] 89%|████████▉ | 493630/552076 [00:04<00:00, 117843.32it/s] 92%|█████████▏| 505448/552076 [00:04<00:00, 117152.79it/s] 94%|█████████▎| 517188/552076 [00:04<00:00, 116953.32it/s] 96%|█████████▌| 528901/552076 [00:04<00:00, 114065.15it/s] 98%|█████████▊| 541375/552076 [00:04<00:00, 117068.15it/s]100%|██████████| 552076/552076 [00:04<00:00, 110570.68it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10009/552076 [00:00<00:05, 100087.47it/s]  3%|▎         | 16981/552076 [00:00<00:06, 88517.88it/s]   5%|▌         | 27982/552076 [00:00<00:05, 94028.43it/s]  7%|▋         | 37980/552076 [00:00<00:05, 95737.91it/s]  9%|▉         | 50398/552076 [00:00<00:04, 102800.46it/s] 11%|█▏        | 62698/552076 [00:00<00:04, 108126.27it/s] 14%|█▎        | 75008/552076 [00:00<00:04, 112220.93it/s] 16%|█▌        | 87362/552076 [00:00<00:04, 115391.12it/s] 18%|█▊        | 99706/552076 [00:00<00:03, 117692.12it/s] 20%|██        | 112121/552076 [00:01<00:03, 119555.22it/s] 23%|██▎       | 124575/552076 [00:01<00:03, 121007.35it/s] 25%|██▍       | 137050/552076 [00:01<00:03, 122104.68it/s] 27%|██▋       | 149179/552076 [00:01<00:03, 112821.35it/s] 29%|██▉       | 161723/552076 [00:01<00:03, 116330.65it/s] 32%|███▏      | 174197/552076 [00:01<00:03, 118731.65it/s] 34%|███▍      | 186687/552076 [00:01<00:03, 120517.01it/s] 36%|███▌      | 199213/552076 [00:01<00:02, 121900.43it/s] 38%|███▊      | 211447/552076 [00:01<00:03, 111474.52it/s] 41%|████      | 223935/552076 [00:01<00:02, 115181.81it/s] 43%|████▎     | 239343/552076 [00:02<00:02, 124618.89it/s] 47%|████▋     | 260530/552076 [00:02<00:02, 142184.93it/s] 51%|█████▏    | 283324/552076 [00:02<00:01, 160273.81it/s] 55%|█████▌    | 305969/552076 [00:02<00:01, 175674.12it/s] 60%|█████▉    | 329964/552076 [00:02<00:01, 191023.51it/s] 63%|██████▎   | 350524/552076 [00:02<00:01, 185460.03it/s] 67%|██████▋   | 370126/552076 [00:02<00:00, 183159.36it/s] 71%|███████▏  | 393749/552076 [00:02<00:00, 196395.55it/s] 75%|███████▌  | 415252/552076 [00:02<00:00, 201636.96it/s] 79%|███████▉  | 438829/552076 [00:02<00:00, 210791.01it/s] 83%|████████▎ | 460429/552076 [00:03<00:00, 197730.47it/s] 87%|████████▋ | 480731/552076 [00:03<00:00, 192028.70it/s] 91%|█████████ | 500341/552076 [00:03<00:00, 163415.05it/s] 94%|█████████▍| 517706/552076 [00:03<00:00, 132175.20it/s] 97%|█████████▋| 536255/552076 [00:03<00:00, 144646.97it/s]100%|██████████| 552076/552076 [00:03<00:00, 147206.01it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21687/552076 [00:00<00:02, 216859.35it/s]  8%|▊         | 43100/552076 [00:00<00:02, 216032.71it/s] 12%|█▏        | 65627/552076 [00:00<00:02, 218721.14it/s] 16%|█▌        | 87779/552076 [00:00<00:02, 219550.14it/s] 20%|██        | 111083/552076 [00:00<00:01, 223428.74it/s] 24%|██▍       | 134216/552076 [00:00<00:01, 225739.24it/s] 28%|██▊       | 157244/552076 [00:00<00:01, 227080.22it/s] 33%|███▎      | 180301/552076 [00:00<00:01, 228114.46it/s] 37%|███▋      | 203661/552076 [00:00<00:01, 229732.46it/s] 41%|████      | 226861/552076 [00:01<00:01, 230406.15it/s] 45%|████▌     | 250029/552076 [00:01<00:01, 230786.41it/s] 49%|████▉     | 272685/552076 [00:01<00:01, 208366.63it/s] 54%|█████▎    | 296136/552076 [00:01<00:01, 215576.19it/s] 58%|█████▊    | 319501/552076 [00:01<00:01, 220697.08it/s] 62%|██████▏   | 342498/552076 [00:01<00:00, 223398.45it/s] 66%|██████▌   | 364939/552076 [00:01<00:00, 222219.90it/s] 70%|███████   | 387233/552076 [00:01<00:00, 221509.80it/s] 74%|███████▍  | 409993/552076 [00:01<00:00, 223301.17it/s] 78%|███████▊  | 432628/552076 [00:01<00:00, 224206.59it/s] 82%|████████▏ | 455077/552076 [00:02<00:00, 218983.13it/s] 86%|████████▋ | 477022/552076 [00:02<00:00, 213718.08it/s] 90%|█████████ | 498455/552076 [00:02<00:00, 201989.62it/s] 94%|█████████▍| 518830/552076 [00:02<00:00, 198622.85it/s] 98%|█████████▊| 541724/552076 [00:02<00:00, 206837.94it/s]100%|██████████| 552076/552076 [00:02<00:00, 218529.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22542/552076 [00:00<00:02, 225411.62it/s]  8%|▊         | 43766/552076 [00:00<00:02, 221291.34it/s] 12%|█▏        | 66590/552076 [00:00<00:02, 223330.54it/s] 16%|█▌        | 89013/552076 [00:00<00:02, 223597.29it/s] 20%|██        | 111315/552076 [00:00<00:01, 223422.58it/s] 24%|██▍       | 134654/552076 [00:00<00:01, 226320.59it/s] 29%|██▊       | 158241/552076 [00:00<00:01, 229102.33it/s] 33%|███▎      | 181254/552076 [00:00<00:01, 229405.97it/s] 37%|███▋      | 203596/552076 [00:00<00:01, 227575.01it/s] 41%|████      | 227354/552076 [00:01<00:01, 230485.36it/s] 45%|████▌     | 250036/552076 [00:01<00:01, 229372.11it/s] 49%|████▉     | 272542/552076 [00:01<00:01, 225349.17it/s] 53%|█████▎    | 294791/552076 [00:01<00:01, 218170.68it/s] 57%|█████▋    | 316458/552076 [00:01<00:01, 171831.61it/s] 61%|██████    | 335072/552076 [00:01<00:01, 174232.91it/s] 64%|██████▍   | 353505/552076 [00:01<00:01, 163967.98it/s] 68%|██████▊   | 375881/552076 [00:01<00:00, 178257.57it/s] 72%|███████▏  | 398114/552076 [00:01<00:00, 189527.99it/s] 76%|███████▌  | 417925/552076 [00:02<00:00, 164049.08it/s] 79%|███████▉  | 435539/552076 [00:02<00:00, 159874.92it/s] 82%|████████▏ | 452396/552076 [00:02<00:00, 137442.88it/s] 86%|████████▌ | 473774/552076 [00:02<00:00, 153931.68it/s] 90%|████████▉ | 494932/552076 [00:02<00:00, 167632.94it/s] 94%|█████████▎| 516514/552076 [00:02<00:00, 179666.24it/s] 98%|█████████▊| 538915/552076 [00:02<00:00, 191008.24it/s]100%|██████████| 552076/552076 [00:02<00:00, 195056.10it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21913/552076 [00:00<00:02, 219123.42it/s]  8%|▊         | 43879/552076 [00:00<00:02, 219282.93it/s] 12%|█▏        | 65954/552076 [00:00<00:02, 219719.81it/s] 16%|█▌        | 87831/552076 [00:00<00:02, 219432.80it/s] 20%|█▉        | 109567/552076 [00:00<00:02, 218804.68it/s] 24%|██▍       | 132686/552076 [00:00<00:01, 222377.50it/s] 28%|██▊       | 154545/552076 [00:00<00:01, 221227.45it/s] 32%|███▏      | 178043/552076 [00:00<00:01, 225179.07it/s] 36%|███▌      | 199907/552076 [00:00<00:01, 223175.24it/s] 40%|████      | 223169/552076 [00:01<00:01, 225925.80it/s] 45%|████▍     | 246937/552076 [00:01<00:01, 229327.42it/s] 49%|████▉     | 270850/552076 [00:01<00:01, 232180.24it/s] 53%|█████▎    | 293794/552076 [00:01<00:01, 231305.01it/s] 57%|█████▋    | 316841/552076 [00:01<00:01, 231051.12it/s] 62%|██████▏   | 340583/552076 [00:01<00:00, 232925.52it/s] 66%|██████▌   | 364606/552076 [00:01<00:00, 235069.37it/s] 70%|███████   | 388055/552076 [00:01<00:00, 233095.61it/s] 75%|███████▍  | 411799/552076 [00:01<00:00, 234381.71it/s] 79%|███████▉  | 435660/552076 [00:01<00:00, 235633.11it/s] 83%|████████▎ | 459430/552076 [00:02<00:00, 236246.10it/s] 87%|████████▋ | 483045/552076 [00:02<00:00, 232993.41it/s] 92%|█████████▏| 506348/552076 [00:02<00:00, 213119.37it/s] 96%|█████████▌| 527992/552076 [00:02<00:00, 190789.37it/s] 99%|█████████▉| 547742/552076 [00:02<00:00, 187543.31it/s]100%|██████████| 552076/552076 [00:02<00:00, 219839.53it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 20743/552076 [00:00<00:02, 207427.73it/s]  8%|▊         | 42644/552076 [00:00<00:02, 210769.73it/s] 12%|█▏        | 65561/552076 [00:00<00:02, 215969.63it/s] 16%|█▌        | 88391/552076 [00:00<00:02, 219525.44it/s] 20%|██        | 110996/552076 [00:00<00:01, 221440.03it/s] 24%|██▍       | 134077/552076 [00:00<00:01, 224169.13it/s] 29%|██▊       | 157897/552076 [00:00<00:01, 228200.99it/s] 33%|███▎      | 180739/552076 [00:00<00:01, 228264.92it/s] 37%|███▋      | 204199/552076 [00:00<00:01, 230127.84it/s] 41%|████▏     | 228452/552076 [00:01<00:01, 233712.00it/s] 46%|████▌     | 252646/552076 [00:01<00:01, 236119.78it/s] 50%|█████     | 276231/552076 [00:01<00:01, 236034.96it/s] 54%|█████▍    | 300118/552076 [00:01<00:01, 236876.43it/s] 59%|█████▉    | 324413/552076 [00:01<00:00, 238663.76it/s] 63%|██████▎   | 348152/552076 [00:01<00:00, 204620.16it/s] 67%|██████▋   | 369375/552076 [00:01<00:01, 173059.55it/s] 70%|███████   | 388049/552076 [00:01<00:01, 157517.16it/s] 73%|███████▎  | 405028/552076 [00:01<00:01, 146720.72it/s] 76%|███████▌  | 420708/552076 [00:02<00:00, 136788.43it/s] 79%|███████▉  | 435228/552076 [00:02<00:00, 128996.41it/s] 81%|████████▏ | 448808/552076 [00:02<00:00, 128199.62it/s] 84%|████████▎ | 462106/552076 [00:02<00:00, 127541.73it/s] 86%|████████▌ | 475236/552076 [00:02<00:00, 128645.02it/s] 88%|████████▊ | 488338/552076 [00:02<00:00, 126607.68it/s] 91%|█████████ | 501172/552076 [00:02<00:00, 126576.09it/s] 93%|█████████▎| 513951/552076 [00:02<00:00, 126576.97it/s] 95%|█████████▌| 526694/552076 [00:02<00:00, 126511.09it/s] 98%|█████████▊| 539405/552076 [00:03<00:00, 126564.07it/s]100%|██████████| 552076/552076 [00:03<00:00, 173405.96it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6016/552076 [00:00<00:11, 48296.48it/s]  2%|▏         | 9941/552076 [00:00<00:12, 45172.97it/s]  3%|▎         | 14530/552076 [00:00<00:11, 45384.93it/s]  4%|▍         | 23646/552076 [00:00<00:09, 53434.28it/s]  6%|▌         | 33921/552076 [00:00<00:08, 62421.65it/s]  8%|▊         | 44281/552076 [00:00<00:07, 70872.27it/s] 10%|█         | 56283/552076 [00:00<00:06, 80798.22it/s] 12%|█▏        | 67691/552076 [00:00<00:05, 88547.43it/s] 14%|█▍        | 78720/552076 [00:00<00:05, 94112.31it/s] 16%|█▋        | 90934/552076 [00:01<00:04, 101069.56it/s] 19%|█▊        | 103244/552076 [00:01<00:04, 106803.12it/s] 21%|██        | 115999/552076 [00:01<00:03, 112281.55it/s] 23%|██▎       | 128031/552076 [00:01<00:03, 114576.86it/s] 25%|██▌       | 140145/552076 [00:01<00:03, 116469.77it/s] 28%|██▊       | 152271/552076 [00:01<00:03, 117866.17it/s] 30%|██▉       | 164222/552076 [00:01<00:03, 114036.03it/s] 32%|███▏      | 175768/552076 [00:01<00:03, 102574.27it/s] 34%|███▍      | 186343/552076 [00:01<00:04, 88048.42it/s]  36%|███▌      | 196384/552076 [00:02<00:03, 91423.40it/s] 37%|███▋      | 205968/552076 [00:02<00:04, 73057.39it/s] 39%|███▉      | 217870/552076 [00:02<00:04, 82629.32it/s] 41%|████▏     | 228461/552076 [00:02<00:03, 88462.53it/s] 44%|████▍     | 242923/552076 [00:02<00:03, 100125.77it/s] 46%|████▌     | 254048/552076 [00:02<00:02, 99632.25it/s]  48%|████▊     | 265991/552076 [00:02<00:02, 104843.98it/s] 50%|█████     | 277094/552076 [00:02<00:02, 100231.76it/s] 52%|█████▏    | 287593/552076 [00:02<00:02, 96510.31it/s]  54%|█████▍    | 297607/552076 [00:03<00:02, 95388.80it/s] 56%|█████▌    | 307403/552076 [00:03<00:02, 95183.43it/s] 57%|█████▋    | 317366/552076 [00:03<00:02, 96474.72it/s] 60%|█████▉    | 329925/552076 [00:03<00:02, 103684.89it/s] 62%|██████▏   | 342383/552076 [00:03<00:01, 109177.32it/s] 64%|██████▍   | 354933/552076 [00:03<00:01, 113608.76it/s] 66%|██████▋   | 366514/552076 [00:03<00:01, 113112.49it/s] 68%|██████▊   | 377980/552076 [00:03<00:01, 95317.14it/s]  71%|███████   | 390852/552076 [00:03<00:01, 103362.28it/s] 73%|███████▎  | 402416/552076 [00:04<00:01, 103846.72it/s] 75%|███████▍  | 413227/552076 [00:04<00:01, 91551.87it/s]  77%|███████▋  | 425597/552076 [00:04<00:01, 99292.30it/s] 79%|███████▉  | 438093/552076 [00:04<00:01, 105812.41it/s] 82%|████████▏ | 450617/552076 [00:04<00:00, 110976.12it/s] 84%|████████▍ | 463204/552076 [00:04<00:00, 115060.44it/s] 86%|████████▌ | 475174/552076 [00:04<00:00, 116411.62it/s] 88%|████████▊ | 487998/552076 [00:04<00:00, 119722.30it/s] 91%|█████████ | 500785/552076 [00:04<00:00, 122053.58it/s] 93%|█████████▎| 513138/552076 [00:05<00:00, 96677.46it/s]  95%|█████████▌| 525397/552076 [00:05<00:00, 103222.58it/s] 97%|█████████▋| 537874/552076 [00:05<00:00, 108862.08it/s]100%|█████████▉| 550430/552076 [00:05<00:00, 113384.02it/s]100%|██████████| 552076/552076 [00:05<00:00, 101758.18it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12147/552076 [00:00<00:04, 121469.25it/s]  4%|▍         | 24677/552076 [00:00<00:04, 122592.06it/s]  7%|▋         | 37216/552076 [00:00<00:04, 123417.32it/s]  9%|▉         | 49608/552076 [00:00<00:04, 123566.05it/s] 11%|█         | 62023/552076 [00:00<00:03, 123740.61it/s] 13%|█▎        | 74446/552076 [00:00<00:03, 123884.85it/s] 16%|█▌        | 86887/552076 [00:00<00:03, 124040.10it/s] 18%|█▊        | 99314/552076 [00:00<00:03, 124106.98it/s] 20%|██        | 111898/552076 [00:00<00:03, 124621.27it/s] 23%|██▎       | 124501/552076 [00:01<00:03, 125037.86it/s] 25%|██▍       | 137031/552076 [00:01<00:03, 125114.90it/s] 27%|██▋       | 149717/552076 [00:01<00:03, 125631.09it/s] 29%|██▉       | 162648/552076 [00:01<00:03, 126712.19it/s] 32%|███▏      | 175259/552076 [00:01<00:02, 126530.15it/s] 34%|███▍      | 187851/552076 [00:01<00:02, 126346.34it/s] 36%|███▋      | 200475/552076 [00:01<00:02, 126313.10it/s] 39%|███▊      | 213086/552076 [00:01<00:02, 126251.14it/s] 41%|████      | 225684/552076 [00:01<00:02, 126040.15it/s] 43%|████▎     | 238332/552076 [00:01<00:02, 126171.64it/s] 45%|████▌     | 250955/552076 [00:02<00:02, 126187.28it/s] 48%|████▊     | 263565/552076 [00:02<00:02, 119119.60it/s] 50%|████▉     | 275553/552076 [00:02<00:02, 102602.12it/s] 52%|█████▏    | 286270/552076 [00:02<00:02, 103578.76it/s] 54%|█████▍    | 296950/552076 [00:02<00:02, 97847.87it/s]  56%|█████▌    | 307026/552076 [00:02<00:02, 86691.10it/s] 57%|█████▋    | 316134/552076 [00:02<00:02, 82854.01it/s] 59%|█████▉    | 328005/552076 [00:02<00:02, 91108.81it/s] 61%|██████    | 338116/552076 [00:02<00:02, 93893.41it/s] 63%|██████▎   | 347913/552076 [00:03<00:02, 94292.15it/s] 65%|██████▍   | 357598/552076 [00:03<00:02, 94335.59it/s] 67%|██████▋   | 369799/552076 [00:03<00:01, 101221.93it/s] 69%|██████▉   | 380188/552076 [00:03<00:01, 100063.32it/s] 71%|███████   | 390384/552076 [00:03<00:01, 92140.79it/s]  73%|███████▎  | 402836/552076 [00:03<00:01, 99936.28it/s] 75%|███████▍  | 413749/552076 [00:03<00:01, 102527.48it/s] 77%|███████▋  | 425712/552076 [00:03<00:01, 107119.61it/s] 79%|███████▉  | 436672/552076 [00:03<00:01, 102424.57it/s] 81%|████████  | 447131/552076 [00:04<00:01, 102026.58it/s] 83%|████████▎ | 457486/552076 [00:04<00:00, 102027.02it/s] 86%|████████▋ | 476198/552076 [00:04<00:00, 118144.52it/s] 89%|████████▊ | 489028/552076 [00:04<00:00, 119119.73it/s] 91%|█████████ | 501653/552076 [00:04<00:00, 110420.23it/s] 93%|█████████▎| 513321/552076 [00:04<00:00, 107838.37it/s] 97%|█████████▋| 533399/552076 [00:04<00:00, 125228.55it/s]100%|██████████| 552076/552076 [00:04<00:00, 115631.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9131/552076 [00:00<00:05, 91306.39it/s]  6%|▌         | 31775/552076 [00:00<00:04, 111217.51it/s] 10%|▉         | 52805/552076 [00:00<00:03, 129525.04it/s] 12%|█▏        | 65212/552076 [00:00<00:03, 127722.04it/s] 14%|█▍        | 77608/552076 [00:00<00:03, 120546.74it/s] 16%|█▋        | 90086/552076 [00:00<00:03, 121784.58it/s] 19%|█▊        | 102142/552076 [00:00<00:04, 96670.51it/s] 21%|██        | 115157/552076 [00:00<00:04, 104752.59it/s] 23%|██▎       | 127707/552076 [00:01<00:03, 110218.63it/s] 25%|██▌       | 139428/552076 [00:01<00:03, 112225.13it/s] 27%|██▋       | 151059/552076 [00:01<00:03, 109371.28it/s] 29%|██▉       | 162298/552076 [00:01<00:03, 107285.15it/s] 31%|███▏      | 173247/552076 [00:01<00:03, 107055.43it/s] 33%|███▎      | 184107/552076 [00:01<00:03, 106433.00it/s] 36%|███▌      | 196625/552076 [00:01<00:03, 111438.88it/s] 38%|███▊      | 208627/552076 [00:01<00:03, 113881.04it/s] 40%|████      | 221088/552076 [00:01<00:02, 116899.45it/s] 42%|████▏     | 234142/552076 [00:01<00:02, 120681.12it/s] 45%|████▍     | 246309/552076 [00:02<00:02, 118439.50it/s] 47%|████▋     | 258797/552076 [00:02<00:02, 120300.09it/s] 49%|████▉     | 271251/552076 [00:02<00:02, 121538.50it/s] 51%|█████▏    | 283830/552076 [00:02<00:02, 122782.13it/s] 54%|█████▎    | 296689/552076 [00:02<00:02, 124467.30it/s] 56%|█████▌    | 309357/552076 [00:02<00:01, 125119.89it/s] 58%|█████▊    | 321918/552076 [00:02<00:01, 125263.61it/s] 61%|██████    | 334514/552076 [00:02<00:01, 125470.23it/s] 63%|██████▎   | 348372/552076 [00:02<00:01, 129133.95it/s] 65%|██████▌   | 361320/552076 [00:02<00:01, 128714.83it/s] 68%|██████▊   | 374216/552076 [00:03<00:01, 127781.02it/s] 70%|███████   | 387013/552076 [00:03<00:01, 127278.48it/s] 72%|███████▏  | 399755/552076 [00:03<00:01, 125086.58it/s] 75%|███████▍  | 412282/552076 [00:03<00:01, 125120.67it/s] 77%|███████▋  | 424814/552076 [00:03<00:01, 125178.47it/s] 79%|███████▉  | 437341/552076 [00:03<00:00, 125014.69it/s] 81%|████████▏ | 449849/552076 [00:03<00:00, 124885.73it/s] 84%|████████▎ | 462342/552076 [00:03<00:00, 124593.54it/s] 86%|████████▌ | 474809/552076 [00:03<00:00, 124614.28it/s] 88%|████████▊ | 487623/552076 [00:03<00:00, 125650.08it/s] 91%|█████████ | 500688/552076 [00:04<00:00, 127108.38it/s] 93%|█████████▎| 513406/552076 [00:04<00:00, 126505.98it/s] 95%|█████████▌| 526062/552076 [00:04<00:00, 125948.81it/s] 98%|█████████▊| 538662/552076 [00:04<00:00, 123089.96it/s]100%|█████████▉| 551157/552076 [00:04<00:00, 123641.03it/s]100%|██████████| 552076/552076 [00:04<00:00, 123540.68it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12544/552076 [00:00<00:04, 125432.64it/s]  4%|▍         | 24569/552076 [00:00<00:04, 123831.21it/s]  6%|▌         | 33844/552076 [00:00<00:04, 112519.14it/s]  8%|▊         | 44784/552076 [00:00<00:04, 111563.53it/s] 10%|█         | 57080/552076 [00:00<00:04, 114754.18it/s] 13%|█▎        | 69364/552076 [00:00<00:04, 117064.90it/s] 15%|█▍        | 81748/552076 [00:00<00:03, 119017.26it/s] 17%|█▋        | 94121/552076 [00:00<00:03, 120391.39it/s] 19%|█▉        | 106524/552076 [00:00<00:03, 121457.67it/s] 22%|██▏       | 118922/552076 [00:01<00:03, 122202.96it/s] 24%|██▎       | 130819/552076 [00:01<00:03, 119369.64it/s] 26%|██▌       | 143831/552076 [00:01<00:03, 122403.20it/s] 28%|██▊       | 156911/552076 [00:01<00:03, 124804.38it/s] 31%|███       | 169350/552076 [00:01<00:03, 124677.04it/s] 33%|███▎      | 181763/552076 [00:01<00:02, 124337.88it/s] 35%|███▌      | 194159/552076 [00:01<00:02, 123743.57it/s] 37%|███▋      | 206508/552076 [00:01<00:02, 122376.77it/s] 40%|███▉      | 218979/552076 [00:01<00:02, 123064.95it/s] 42%|████▏     | 231454/552076 [00:01<00:02, 123564.83it/s] 44%|████▍     | 243967/552076 [00:02<00:02, 124029.85it/s] 46%|████▋     | 256380/552076 [00:02<00:02, 124057.52it/s] 49%|████▉     | 269293/552076 [00:02<00:02, 125536.08it/s] 51%|█████     | 282441/552076 [00:02<00:02, 127258.91it/s] 53%|█████▎    | 295175/552076 [00:02<00:02, 126650.43it/s] 56%|█████▌    | 307846/552076 [00:02<00:01, 125901.88it/s] 58%|█████▊    | 320442/552076 [00:02<00:01, 125488.03it/s] 60%|██████    | 332995/552076 [00:02<00:01, 120878.76it/s] 63%|██████▎   | 345432/552076 [00:02<00:01, 121904.04it/s] 65%|██████▍   | 357832/552076 [00:02<00:01, 122523.83it/s] 67%|██████▋   | 370216/552076 [00:03<00:01, 122913.24it/s] 69%|██████▉   | 382523/552076 [00:03<00:01, 115228.77it/s] 72%|███████▏  | 395448/552076 [00:03<00:01, 119103.98it/s] 74%|███████▍  | 407468/552076 [00:03<00:01, 112551.22it/s] 76%|███████▌  | 418874/552076 [00:03<00:01, 85634.57it/s]  78%|███████▊  | 431006/552076 [00:03<00:01, 93922.12it/s] 80%|████████  | 443360/552076 [00:03<00:01, 101199.80it/s] 83%|████████▎ | 455759/552076 [00:03<00:00, 107105.13it/s] 85%|████████▍ | 468210/552076 [00:03<00:00, 111791.54it/s] 87%|████████▋ | 480687/552076 [00:04<00:00, 115391.63it/s] 89%|████████▉ | 493191/552076 [00:04<00:00, 118125.65it/s] 92%|█████████▏| 505304/552076 [00:04<00:00, 101569.51it/s] 94%|█████████▎| 516403/552076 [00:04<00:00, 104220.79it/s] 96%|█████████▌| 528828/552076 [00:04<00:00, 109517.02it/s] 98%|█████████▊| 541210/552076 [00:04<00:00, 113446.23it/s]100%|██████████| 552076/552076 [00:04<00:00, 116857.33it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12193/552076 [00:00<00:04, 121926.34it/s]  4%|▍         | 24137/552076 [00:00<00:04, 121168.79it/s]  6%|▌         | 30766/552076 [00:00<00:05, 97060.66it/s]   7%|▋         | 40283/552076 [00:00<00:05, 96483.83it/s]  9%|▉         | 52179/552076 [00:00<00:04, 102279.07it/s] 12%|█▏        | 64461/552076 [00:00<00:04, 107680.69it/s] 14%|█▍        | 76835/552076 [00:00<00:04, 112040.92it/s] 16%|█▌        | 89294/552076 [00:00<00:04, 115530.28it/s] 18%|█▊        | 101735/552076 [00:00<00:03, 118057.42it/s] 21%|██        | 113243/552076 [00:01<00:04, 94485.13it/s]  23%|██▎       | 124416/552076 [00:01<00:04, 98616.70it/s] 24%|██▍       | 134703/552076 [00:01<00:05, 79712.37it/s] 26%|██▌       | 144190/552076 [00:01<00:04, 83722.81it/s] 28%|██▊       | 153233/552076 [00:01<00:07, 55660.02it/s] 29%|██▉       | 160501/552076 [00:01<00:07, 49290.97it/s] 30%|███       | 166756/552076 [00:02<00:08, 43448.17it/s] 31%|███       | 172155/552076 [00:02<00:09, 41573.91it/s] 32%|███▏      | 177068/552076 [00:02<00:09, 41033.12it/s] 33%|███▎      | 181702/552076 [00:02<00:09, 39896.29it/s] 34%|███▎      | 186070/552076 [00:02<00:09, 37665.89it/s] 34%|███▍      | 190127/552076 [00:02<00:11, 32065.00it/s] 35%|███▌      | 193681/552076 [00:02<00:11, 31207.74it/s] 36%|███▌      | 197051/552076 [00:03<00:11, 31538.43it/s] 36%|███▋      | 200600/552076 [00:03<00:10, 32249.92it/s] 37%|███▋      | 204607/552076 [00:03<00:10, 33904.44it/s] 38%|███▊      | 208304/552076 [00:03<00:10, 34053.95it/s] 38%|███▊      | 212111/552076 [00:03<00:09, 35166.78it/s] 39%|███▉      | 215694/552076 [00:03<00:09, 35362.79it/s] 40%|███▉      | 219276/552076 [00:03<00:09, 34819.86it/s] 40%|████      | 222792/552076 [00:03<00:10, 31427.51it/s] 41%|████      | 226883/552076 [00:03<00:09, 33776.10it/s] 42%|████▏     | 230371/552076 [00:04<00:09, 33235.77it/s] 43%|████▎     | 234863/552076 [00:04<00:08, 36048.24it/s] 43%|████▎     | 238593/552076 [00:04<00:08, 35696.22it/s] 44%|████▍     | 242369/552076 [00:04<00:08, 36291.13it/s] 45%|████▍     | 246063/552076 [00:04<00:08, 34043.97it/s] 45%|████▌     | 250001/552076 [00:04<00:08, 35463.73it/s] 46%|████▌     | 253614/552076 [00:04<00:09, 32952.91it/s] 47%|████▋     | 256992/552076 [00:04<00:09, 32212.19it/s] 47%|████▋     | 260275/552076 [00:04<00:10, 28992.54it/s] 48%|████▊     | 264072/552076 [00:05<00:09, 31205.87it/s] 48%|████▊     | 267314/552076 [00:05<00:09, 30694.14it/s] 49%|████▉     | 272033/552076 [00:05<00:08, 34289.38it/s] 50%|█████     | 276268/552076 [00:05<00:07, 35613.71it/s] 51%|█████     | 279980/552076 [00:05<00:07, 34693.80it/s] 51%|█████▏    | 283560/552076 [00:05<00:07, 34681.27it/s] 52%|█████▏    | 287106/552076 [00:05<00:07, 33142.70it/s] 53%|█████▎    | 290489/552076 [00:05<00:07, 33133.87it/s] 53%|█████▎    | 293851/552076 [00:05<00:08, 31902.04it/s] 54%|█████▍    | 297098/552076 [00:05<00:07, 32069.27it/s] 54%|█████▍    | 300336/552076 [00:06<00:08, 31437.15it/s] 55%|█████▍    | 303571/552076 [00:06<00:07, 31427.62it/s] 56%|█████▌    | 306845/552076 [00:06<00:07, 31808.96it/s] 56%|█████▌    | 310523/552076 [00:06<00:07, 32608.03it/s] 57%|█████▋    | 314460/552076 [00:06<00:07, 33919.50it/s] 58%|█████▊    | 319413/552076 [00:06<00:06, 37460.62it/s] 59%|█████▊    | 324197/552076 [00:06<00:05, 40018.22it/s] 60%|█████▉    | 329571/552076 [00:06<00:05, 43337.71it/s] 61%|██████    | 334733/552076 [00:06<00:04, 45529.15it/s] 61%|██████▏   | 339440/552076 [00:07<00:04, 44807.12it/s] 62%|██████▏   | 344454/552076 [00:07<00:04, 46282.73it/s] 63%|██████▎   | 349172/552076 [00:07<00:04, 44948.13it/s] 64%|██████▍   | 353738/552076 [00:07<00:04, 42455.30it/s] 65%|██████▍   | 358062/552076 [00:07<00:04, 39048.48it/s] 66%|██████▌   | 362076/552076 [00:07<00:04, 38777.71it/s] 66%|██████▋   | 366031/552076 [00:07<00:05, 34353.11it/s] 67%|██████▋   | 369613/552076 [00:07<00:05, 34511.92it/s] 68%|██████▊   | 373167/552076 [00:07<00:05, 34445.05it/s] 68%|██████▊   | 376684/552076 [00:08<00:05, 33119.86it/s] 69%|██████▉   | 380597/552076 [00:08<00:04, 34718.41it/s] 70%|██████▉   | 384343/552076 [00:08<00:04, 35204.33it/s] 70%|███████   | 388538/552076 [00:08<00:04, 36988.40it/s] 71%|███████   | 392293/552076 [00:08<00:04, 34573.28it/s] 72%|███████▏  | 396010/552076 [00:08<00:04, 34638.40it/s] 72%|███████▏  | 399524/552076 [00:08<00:04, 31256.76it/s] 73%|███████▎  | 402748/552076 [00:08<00:04, 30649.05it/s] 74%|███████▎  | 407088/552076 [00:08<00:04, 33279.19it/s] 75%|███████▍  | 412130/552076 [00:09<00:03, 36997.14it/s] 75%|███████▌  | 416042/552076 [00:09<00:03, 37385.32it/s] 76%|███████▌  | 419930/552076 [00:09<00:03, 36892.63it/s] 77%|███████▋  | 423797/552076 [00:09<00:03, 36928.82it/s] 78%|███████▊  | 427908/552076 [00:09<00:03, 37198.98it/s] 78%|███████▊  | 431681/552076 [00:09<00:03, 34754.36it/s] 79%|███████▉  | 435463/552076 [00:09<00:03, 35620.51it/s] 80%|███████▉  | 439079/552076 [00:09<00:03, 35494.68it/s] 80%|████████  | 442667/552076 [00:09<00:03, 30991.64it/s] 81%|████████  | 445896/552076 [00:10<00:03, 28527.56it/s] 81%|████████▏ | 449483/552076 [00:10<00:03, 30370.35it/s] 82%|████████▏ | 453348/552076 [00:10<00:03, 32455.62it/s] 83%|████████▎ | 456720/552076 [00:10<00:02, 31951.05it/s] 83%|████████▎ | 460708/552076 [00:10<00:02, 32125.40it/s] 84%|████████▍ | 464102/552076 [00:10<00:02, 32458.21it/s] 85%|████████▍ | 467932/552076 [00:10<00:02, 33510.72it/s] 85%|████████▌ | 471847/552076 [00:10<00:02, 35023.87it/s] 86%|████████▌ | 475396/552076 [00:10<00:02, 33547.42it/s] 87%|████████▋ | 478797/552076 [00:11<00:02, 31373.07it/s] 87%|████████▋ | 481995/552076 [00:11<00:02, 31161.62it/s] 88%|████████▊ | 485314/552076 [00:11<00:02, 31743.06it/s] 88%|████████▊ | 488521/552076 [00:11<00:02, 28814.96it/s] 89%|████████▉ | 491887/552076 [00:11<00:02, 29428.25it/s] 90%|████████▉ | 494886/552076 [00:11<00:01, 29473.51it/s] 90%|█████████ | 498124/552076 [00:11<00:01, 29517.11it/s] 91%|█████████ | 501293/552076 [00:11<00:01, 29958.77it/s] 91%|█████████▏| 504790/552076 [00:11<00:01, 31303.99it/s] 92%|█████████▏| 508226/552076 [00:12<00:01, 31566.85it/s] 93%|█████████▎| 511561/552076 [00:12<00:01, 32080.97it/s] 93%|█████████▎| 514787/552076 [00:12<00:01, 31895.01it/s] 94%|█████████▍| 517989/552076 [00:12<00:01, 29872.52it/s] 94%|█████████▍| 521011/552076 [00:12<00:01, 26408.70it/s] 95%|█████████▌| 524878/552076 [00:12<00:00, 29184.53it/s] 96%|█████████▌| 528197/552076 [00:12<00:00, 30279.63it/s] 96%|█████████▌| 531355/552076 [00:12<00:00, 30658.07it/s] 97%|█████████▋| 534532/552076 [00:12<00:00, 30943.25it/s] 97%|█████████▋| 537886/552076 [00:13<00:00, 31678.33it/s] 98%|█████████▊| 541186/552076 [00:13<00:00, 32063.32it/s] 99%|█████████▊| 544427/552076 [00:13<00:00, 31525.34it/s] 99%|█████████▉| 547680/552076 [00:13<00:00, 31708.67it/s]100%|█████████▉| 551035/552076 [00:13<00:00, 32237.97it/s]100%|██████████| 552076/552076 [00:13<00:00, 41048.67it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 2952/552076 [00:00<00:20, 26983.89it/s]  1%|          | 5987/552076 [00:00<00:19, 27657.27it/s]  2%|▏         | 8676/552076 [00:00<00:19, 27422.46it/s]  2%|▏         | 11583/552076 [00:00<00:19, 27823.20it/s]  3%|▎         | 14300/552076 [00:00<00:19, 27623.53it/s]  3%|▎         | 18020/552076 [00:00<00:17, 29934.65it/s]  4%|▍         | 21607/552076 [00:00<00:16, 31366.64it/s]  5%|▍         | 25680/552076 [00:00<00:15, 33690.00it/s]  5%|▌         | 29896/552076 [00:00<00:15, 34184.37it/s]  6%|▌         | 34372/552076 [00:01<00:14, 36791.67it/s]  7%|▋         | 38219/552076 [00:01<00:14, 35451.15it/s]  8%|▊         | 42098/552076 [00:01<00:14, 36385.59it/s]  8%|▊         | 45763/552076 [00:01<00:14, 33912.78it/s]  9%|▉         | 49207/552076 [00:01<00:15, 32839.81it/s] 10%|▉         | 53521/552076 [00:01<00:14, 35372.52it/s] 10%|█         | 57413/552076 [00:01<00:13, 36366.45it/s] 11%|█         | 61584/552076 [00:01<00:13, 36902.22it/s] 12%|█▏        | 65324/552076 [00:01<00:13, 34788.67it/s] 12%|█▏        | 68863/552076 [00:02<00:14, 34034.44it/s] 13%|█▎        | 72539/552076 [00:02<00:13, 34343.55it/s] 14%|█▍        | 77189/552076 [00:02<00:13, 34618.46it/s] 15%|█▍        | 80674/552076 [00:02<00:13, 34018.71it/s] 15%|█▌        | 84095/552076 [00:02<00:13, 33786.07it/s] 16%|█▌        | 87487/552076 [00:02<00:14, 31511.50it/s] 17%|█▋        | 91240/552076 [00:02<00:13, 33103.26it/s] 17%|█▋        | 95461/552076 [00:02<00:12, 35133.48it/s] 18%|█▊        | 99297/552076 [00:02<00:12, 36042.88it/s] 19%|█▉        | 103785/552076 [00:03<00:12, 36573.15it/s] 19%|█▉        | 107482/552076 [00:03<00:12, 34294.92it/s] 20%|██        | 110969/552076 [00:03<00:14, 30647.32it/s] 21%|██        | 114428/552076 [00:03<00:13, 31624.61it/s] 21%|██▏       | 118351/552076 [00:03<00:12, 33576.83it/s] 22%|██▏       | 121802/552076 [00:03<00:13, 32339.96it/s] 23%|██▎       | 125703/552076 [00:03<00:12, 33621.74it/s] 23%|██▎       | 129452/552076 [00:03<00:12, 34695.18it/s] 24%|██▍       | 132977/552076 [00:03<00:12, 34492.20it/s] 25%|██▍       | 136465/552076 [00:04<00:12, 32267.45it/s] 25%|██▌       | 139748/552076 [00:04<00:13, 30386.58it/s] 26%|██▌       | 143234/552076 [00:04<00:12, 31603.10it/s] 27%|██▋       | 148170/552076 [00:04<00:11, 35299.45it/s] 28%|██▊       | 152804/552076 [00:04<00:10, 37192.14it/s] 28%|██▊       | 156741/552076 [00:04<00:10, 37495.35it/s] 29%|██▉       | 160598/552076 [00:04<00:11, 34449.58it/s] 30%|██▉       | 164696/552076 [00:04<00:10, 35814.26it/s] 31%|███       | 168788/552076 [00:04<00:10, 37206.91it/s] 31%|███▏      | 172593/552076 [00:05<00:10, 36484.99it/s] 32%|███▏      | 176304/552076 [00:05<00:10, 35705.49it/s] 33%|███▎      | 179922/552076 [00:05<00:10, 34624.87it/s] 33%|███▎      | 183425/552076 [00:05<00:10, 34663.15it/s] 34%|███▍      | 186920/552076 [00:05<00:10, 33658.03it/s] 34%|███▍      | 190336/552076 [00:05<00:10, 33805.93it/s] 35%|███▌      | 193932/552076 [00:05<00:10, 34424.38it/s] 36%|███▌      | 197598/552076 [00:05<00:10, 35064.85it/s] 36%|███▋      | 201119/552076 [00:05<00:10, 33916.14it/s] 37%|███▋      | 204659/552076 [00:05<00:10, 34347.96it/s] 38%|███▊      | 208204/552076 [00:06<00:09, 34670.18it/s] 38%|███▊      | 211682/552076 [00:06<00:10, 33879.62it/s] 39%|███▉      | 215135/552076 [00:06<00:09, 34071.41it/s] 40%|███▉      | 218645/552076 [00:06<00:09, 34372.63it/s] 40%|████      | 222207/552076 [00:06<00:09, 34737.34it/s] 41%|████      | 225687/552076 [00:06<00:09, 33798.52it/s] 42%|████▏     | 229133/552076 [00:06<00:09, 33993.93it/s] 42%|████▏     | 232720/552076 [00:06<00:09, 34535.68it/s] 43%|████▎     | 236305/552076 [00:06<00:09, 34918.35it/s] 43%|████▎     | 239803/552076 [00:06<00:09, 34053.04it/s] 44%|████▍     | 243392/552076 [00:07<00:09, 34063.50it/s] 45%|████▍     | 246932/552076 [00:07<00:08, 34452.16it/s] 45%|████▌     | 250383/552076 [00:07<00:08, 33980.91it/s] 46%|████▌     | 253854/552076 [00:07<00:08, 34195.42it/s] 47%|████▋     | 257278/552076 [00:07<00:08, 33765.64it/s] 47%|████▋     | 260852/552076 [00:07<00:08, 34333.56it/s] 48%|████▊     | 264291/552076 [00:07<00:08, 33930.05it/s] 49%|████▊     | 267861/552076 [00:07<00:08, 34442.31it/s] 49%|████▉     | 271311/552076 [00:07<00:08, 33984.92it/s] 50%|████▉     | 274829/552076 [00:08<00:08, 34334.55it/s] 50%|█████     | 278267/552076 [00:08<00:08, 34008.42it/s] 51%|█████     | 281819/552076 [00:08<00:07, 34446.31it/s] 52%|█████▏    | 285268/552076 [00:08<00:07, 34110.85it/s] 52%|█████▏    | 288937/552076 [00:08<00:07, 34845.67it/s] 53%|█████▎    | 292434/552076 [00:08<00:07, 34540.92it/s] 54%|█████▎    | 295894/552076 [00:08<00:07, 34438.79it/s] 54%|█████▍    | 299370/552076 [00:08<00:07, 34285.08it/s] 55%|█████▍    | 303018/552076 [00:08<00:07, 34914.46it/s] 56%|█████▌    | 306515/552076 [00:08<00:07, 34433.38it/s] 56%|█████▌    | 310200/552076 [00:09<00:06, 35123.28it/s] 57%|█████▋    | 313720/552076 [00:09<00:07, 33981.89it/s] 57%|█████▋    | 317288/552076 [00:09<00:06, 34133.44it/s] 58%|█████▊    | 320814/552076 [00:09<00:06, 34333.19it/s] 59%|█████▉    | 324434/552076 [00:09<00:06, 34872.42it/s] 59%|█████▉    | 327985/552076 [00:09<00:06, 35059.48it/s] 60%|██████    | 331496/552076 [00:09<00:06, 33746.02it/s] 61%|██████    | 334885/552076 [00:09<00:06, 33784.06it/s] 61%|██████▏   | 338591/552076 [00:09<00:06, 34703.85it/s] 62%|██████▏   | 342075/552076 [00:09<00:06, 34397.22it/s] 63%|██████▎   | 345605/552076 [00:10<00:05, 34661.57it/s] 63%|██████▎   | 349079/552076 [00:10<00:06, 33414.92it/s] 64%|██████▍   | 352631/552076 [00:10<00:05, 34019.15it/s] 65%|██████▍   | 356116/552076 [00:10<00:05, 34263.58it/s] 65%|██████▌   | 359552/552076 [00:10<00:05, 33616.27it/s] 66%|██████▌   | 363031/552076 [00:10<00:05, 33959.97it/s] 66%|██████▋   | 366627/552076 [00:10<00:05, 34534.88it/s] 67%|██████▋   | 370244/552076 [00:10<00:05, 35008.33it/s] 68%|██████▊   | 373752/552076 [00:10<00:05, 34160.78it/s] 68%|██████▊   | 377211/552076 [00:10<00:05, 34287.58it/s] 69%|██████▉   | 380734/552076 [00:11<00:04, 34536.14it/s] 70%|██████▉   | 384433/552076 [00:11<00:04, 35236.23it/s] 70%|███████   | 387964/552076 [00:11<00:04, 35023.90it/s] 71%|███████   | 391472/552076 [00:11<00:04, 34122.01it/s] 72%|███████▏  | 395083/552076 [00:11<00:04, 34694.74it/s] 72%|███████▏  | 398561/552076 [00:11<00:04, 34355.90it/s] 73%|███████▎  | 402120/552076 [00:11<00:04, 34716.45it/s] 73%|███████▎  | 405598/552076 [00:11<00:04, 34337.16it/s] 74%|███████▍  | 409207/552076 [00:11<00:04, 34843.56it/s] 75%|███████▍  | 413901/552076 [00:12<00:03, 37416.41it/s] 76%|███████▌  | 420268/552076 [00:12<00:03, 42697.64it/s] 77%|███████▋  | 427112/552076 [00:12<00:02, 47131.87it/s] 78%|███████▊  | 432177/552076 [00:12<00:02, 42410.93it/s] 79%|███████▉  | 436754/552076 [00:12<00:02, 40520.99it/s] 80%|███████▉  | 441059/552076 [00:12<00:02, 38609.24it/s] 81%|████████  | 445116/552076 [00:12<00:02, 37081.80it/s] 81%|████████▏ | 448975/552076 [00:12<00:02, 35813.57it/s] 82%|████████▏ | 452671/552076 [00:12<00:02, 34744.40it/s] 83%|████████▎ | 456233/552076 [00:13<00:02, 34886.51it/s] 83%|████████▎ | 459783/552076 [00:13<00:02, 34231.42it/s] 84%|████████▍ | 466254/552076 [00:13<00:02, 39863.55it/s] 85%|████████▌ | 471091/552076 [00:13<00:01, 42082.25it/s] 86%|████████▌ | 475601/552076 [00:13<00:01, 38379.73it/s] 87%|████████▋ | 481863/552076 [00:13<00:01, 43421.81it/s] 88%|████████▊ | 488215/552076 [00:13<00:01, 46759.84it/s] 90%|████████▉ | 494718/552076 [00:13<00:01, 51063.15it/s] 91%|█████████ | 501203/552076 [00:13<00:00, 54540.69it/s] 92%|█████████▏| 507847/552076 [00:14<00:00, 55924.10it/s] 93%|█████████▎| 514294/552076 [00:14<00:00, 58239.69it/s] 94%|█████████▍| 520452/552076 [00:14<00:00, 59201.94it/s] 95%|█████████▌| 526510/552076 [00:14<00:00, 55759.86it/s] 97%|█████████▋| 532901/552076 [00:14<00:00, 57976.69it/s] 98%|█████████▊| 538863/552076 [00:14<00:00, 58457.98it/s] 99%|█████████▉| 545229/552076 [00:14<00:00, 59924.63it/s]100%|█████████▉| 551642/552076 [00:14<00:00, 61126.39it/s]100%|██████████| 552076/552076 [00:14<00:00, 37351.92it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4722/552076 [00:00<00:12, 45604.43it/s]  2%|▏         | 10241/552076 [00:00<00:11, 48110.62it/s]  4%|▍         | 21432/552076 [00:00<00:09, 58036.34it/s]  6%|▌         | 33580/552076 [00:00<00:07, 68818.44it/s]  8%|▊         | 45490/552076 [00:00<00:06, 78798.11it/s] 10%|▉         | 54156/552076 [00:00<00:06, 71332.23it/s] 12%|█▏        | 66444/552076 [00:00<00:05, 81601.55it/s] 14%|█▍        | 78851/552076 [00:00<00:05, 90938.42it/s] 16%|█▌        | 88985/552076 [00:01<00:06, 76207.33it/s] 18%|█▊        | 97886/552076 [00:01<00:05, 79642.43it/s] 19%|█▉        | 106683/552076 [00:01<00:06, 71357.12it/s] 22%|██▏       | 119029/552076 [00:01<00:05, 81700.38it/s] 24%|██▍       | 131377/552076 [00:01<00:04, 90929.35it/s] 26%|██▌       | 143786/552076 [00:01<00:04, 98854.29it/s] 28%|██▊       | 156255/552076 [00:01<00:03, 105405.27it/s] 31%|███       | 168672/552076 [00:01<00:03, 110410.37it/s] 33%|███▎      | 181192/552076 [00:01<00:03, 114466.03it/s] 35%|███▌      | 193727/552076 [00:01<00:03, 117526.46it/s] 37%|███▋      | 206204/552076 [00:02<00:02, 119608.78it/s] 40%|███▉      | 218417/552076 [00:02<00:03, 95332.90it/s]  42%|████▏     | 230639/552076 [00:02<00:03, 102066.91it/s] 44%|████▍     | 243157/552076 [00:02<00:02, 108052.05it/s] 46%|████▋     | 255618/552076 [00:02<00:02, 112538.17it/s] 49%|████▊     | 268088/552076 [00:02<00:02, 115928.15it/s] 51%|█████     | 280583/552076 [00:02<00:02, 118493.95it/s] 53%|█████▎    | 292984/552076 [00:02<00:02, 120095.91it/s] 55%|█████▌    | 305231/552076 [00:02<00:02, 120797.85it/s] 58%|█████▊    | 317629/552076 [00:03<00:01, 121733.96it/s] 60%|█████▉    | 330151/552076 [00:03<00:01, 122757.88it/s] 62%|██████▏   | 342607/552076 [00:03<00:01, 123292.09it/s] 64%|██████▍   | 354988/552076 [00:03<00:01, 123433.14it/s] 67%|██████▋   | 367440/552076 [00:03<00:01, 123756.70it/s] 69%|██████▉   | 379842/552076 [00:03<00:01, 123772.23it/s] 71%|███████   | 392264/552076 [00:03<00:01, 123904.93it/s] 73%|███████▎  | 404840/552076 [00:03<00:01, 124455.36it/s] 76%|███████▌  | 417356/552076 [00:03<00:01, 124664.27it/s] 78%|███████▊  | 429830/552076 [00:03<00:00, 124627.94it/s] 80%|████████  | 442298/552076 [00:04<00:00, 123206.79it/s] 82%|████████▏ | 454820/552076 [00:04<00:00, 123803.61it/s] 85%|████████▍ | 467206/552076 [00:04<00:00, 123813.56it/s] 87%|████████▋ | 479592/552076 [00:04<00:00, 123407.74it/s] 89%|████████▉ | 491936/552076 [00:04<00:00, 122197.62it/s] 91%|█████████▏| 504161/552076 [00:04<00:00, 121619.58it/s] 94%|█████████▎| 516525/552076 [00:04<00:00, 122218.43it/s] 96%|█████████▌| 528751/552076 [00:04<00:00, 122078.16it/s] 98%|█████████▊| 540962/552076 [00:04<00:00, 121994.23it/s]100%|██████████| 552076/552076 [00:04<00:00, 110912.35it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9135/552076 [00:00<00:05, 91344.42it/s]  3%|▎         | 16483/552076 [00:00<00:06, 85134.91it/s]  5%|▍         | 26590/552076 [00:00<00:05, 89360.48it/s]  7%|▋         | 36908/552076 [00:00<00:05, 93100.43it/s]  9%|▉         | 48974/552076 [00:00<00:05, 99948.11it/s] 11%|█         | 59862/552076 [00:00<00:04, 100494.11it/s] 13%|█▎        | 70820/552076 [00:00<00:04, 103056.14it/s] 15%|█▍        | 80502/552076 [00:00<00:05, 90918.58it/s]  16%|█▌        | 89419/552076 [00:00<00:05, 89094.20it/s] 18%|█▊        | 98214/552076 [00:01<00:05, 85595.98it/s] 20%|█▉        | 109700/552076 [00:01<00:04, 92678.23it/s] 22%|██▏       | 121960/552076 [00:01<00:04, 99999.36it/s] 24%|██▍       | 132220/552076 [00:01<00:05, 80569.68it/s] 26%|██▌       | 144102/552076 [00:01<00:04, 89182.40it/s] 28%|██▊       | 154729/552076 [00:01<00:04, 93702.05it/s] 30%|██▉       | 164747/552076 [00:01<00:04, 93679.81it/s] 32%|███▏      | 174568/552076 [00:01<00:04, 81524.64it/s] 33%|███▎      | 183320/552076 [00:02<00:04, 79513.16it/s] 35%|███▍      | 191702/552076 [00:02<00:04, 73450.91it/s] 36%|███▌      | 199441/552076 [00:02<00:05, 69821.84it/s] 37%|███▋      | 206736/552076 [00:02<00:05, 64461.89it/s] 39%|███▊      | 213483/552076 [00:02<00:06, 54863.93it/s] 40%|████      | 223130/552076 [00:02<00:05, 63017.02it/s] 42%|████▏     | 232119/552076 [00:02<00:04, 69224.17it/s] 44%|████▍     | 243028/552076 [00:02<00:03, 77747.00it/s] 46%|████▌     | 254985/552076 [00:02<00:03, 86860.77it/s] 48%|████▊     | 264807/552076 [00:03<00:03, 89980.71it/s] 50%|████▉     | 274487/552076 [00:03<00:03, 91321.60it/s] 52%|█████▏    | 285974/552076 [00:03<00:02, 97305.42it/s] 54%|█████▍    | 297124/552076 [00:03<00:02, 101168.03it/s] 56%|█████▌    | 308626/552076 [00:03<00:02, 104958.14it/s] 58%|█████▊    | 320951/552076 [00:03<00:02, 109848.85it/s] 60%|██████    | 332194/552076 [00:03<00:02, 108680.43it/s] 62%|██████▏   | 343656/552076 [00:03<00:01, 110395.54it/s] 64%|██████▍   | 354905/552076 [00:03<00:01, 111015.36it/s] 66%|██████▋   | 366102/552076 [00:03<00:01, 108942.17it/s] 68%|██████▊   | 377072/552076 [00:04<00:01, 107291.15it/s] 70%|███████   | 388138/552076 [00:04<00:01, 108279.80it/s] 72%|███████▏  | 399166/552076 [00:04<00:01, 108872.15it/s] 75%|███████▍  | 411789/552076 [00:04<00:01, 113555.05it/s] 77%|███████▋  | 426013/552076 [00:04<00:01, 120867.09it/s] 79%|███████▉  | 438281/552076 [00:04<00:00, 120605.88it/s] 82%|████████▏ | 450469/552076 [00:04<00:00, 120580.39it/s] 84%|████████▍ | 462616/552076 [00:04<00:00, 120607.10it/s] 86%|████████▌ | 474769/552076 [00:04<00:00, 120878.74it/s] 88%|████████▊ | 486901/552076 [00:05<00:00, 101986.92it/s] 90%|█████████ | 497636/552076 [00:05<00:00, 58138.27it/s]  92%|█████████▏| 506021/552076 [00:05<00:00, 48434.22it/s] 93%|█████████▎| 512936/552076 [00:05<00:00, 40681.27it/s] 94%|█████████▍| 518666/552076 [00:06<00:00, 42705.22it/s] 95%|█████████▌| 524837/552076 [00:06<00:00, 46401.82it/s] 96%|█████████▌| 530404/552076 [00:06<00:00, 39983.28it/s] 97%|█████████▋| 535208/552076 [00:06<00:00, 36526.50it/s] 98%|█████████▊| 540375/552076 [00:06<00:00, 40047.58it/s] 99%|█████████▉| 547000/552076 [00:06<00:00, 45438.98it/s]100%|██████████| 552076/552076 [00:06<00:00, 81718.75it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5954/552076 [00:00<00:09, 59536.37it/s]  2%|▏         | 12017/552076 [00:00<00:09, 59858.87it/s]  3%|▎         | 17769/552076 [00:00<00:09, 58020.53it/s]  4%|▍         | 23794/552076 [00:00<00:09, 58671.79it/s]  5%|▌         | 29467/552076 [00:00<00:09, 57825.47it/s]  6%|▋         | 35539/552076 [00:00<00:08, 58664.00it/s]  8%|▊         | 41445/552076 [00:00<00:08, 57641.82it/s]  9%|▊         | 47870/552076 [00:00<00:08, 59476.43it/s] 10%|▉         | 53555/552076 [00:00<00:08, 57155.69it/s] 11%|█         | 59585/552076 [00:01<00:08, 58063.74it/s] 12%|█▏        | 65698/552076 [00:01<00:08, 58949.54it/s] 13%|█▎        | 71868/552076 [00:01<00:08, 59748.02it/s] 14%|█▍        | 77780/552076 [00:01<00:08, 57825.16it/s] 15%|█▌        | 83768/552076 [00:01<00:08, 58425.28it/s] 16%|█▋        | 89865/552076 [00:01<00:07, 59164.77it/s] 17%|█▋        | 95770/552076 [00:01<00:07, 57308.37it/s] 18%|█▊        | 101721/552076 [00:01<00:07, 57951.01it/s] 20%|█▉        | 107910/552076 [00:01<00:07, 59078.16it/s] 21%|██        | 113871/552076 [00:01<00:07, 57274.78it/s] 22%|██▏       | 119950/552076 [00:02<00:07, 58285.84it/s] 23%|██▎       | 126004/552076 [00:02<00:07, 58943.13it/s] 24%|██▍       | 132205/552076 [00:02<00:07, 59829.76it/s] 25%|██▌       | 138201/552076 [00:02<00:07, 58750.66it/s] 26%|██▌       | 144090/552076 [00:02<00:07, 57725.75it/s] 27%|██▋       | 150077/552076 [00:02<00:06, 57738.82it/s] 28%|██▊       | 156062/552076 [00:02<00:06, 58356.02it/s] 29%|██▉       | 162027/552076 [00:02<00:06, 57402.33it/s] 30%|███       | 168104/552076 [00:02<00:06, 58372.36it/s] 32%|███▏      | 173952/552076 [00:02<00:06, 57920.58it/s] 33%|███▎      | 180046/552076 [00:03<00:06, 58794.05it/s] 34%|███▎      | 185935/552076 [00:03<00:06, 57897.66it/s] 35%|███▍      | 191735/552076 [00:03<00:06, 57047.34it/s] 36%|███▌      | 197450/552076 [00:03<00:06, 53637.40it/s] 37%|███▋      | 203488/552076 [00:03<00:06, 54890.04it/s] 38%|███▊      | 209790/552076 [00:03<00:05, 57099.81it/s] 39%|███▉      | 215736/552076 [00:03<00:05, 57328.84it/s] 40%|████      | 222021/552076 [00:03<00:05, 58880.12it/s] 41%|████▏     | 227945/552076 [00:04<00:07, 40897.22it/s] 42%|████▏     | 232809/552076 [00:04<00:10, 29573.96it/s] 43%|████▎     | 237322/552076 [00:04<00:09, 32426.70it/s] 44%|████▎     | 241450/552076 [00:04<00:08, 34656.41it/s] 45%|████▍     | 245782/552076 [00:04<00:08, 36868.20it/s] 45%|████▌     | 250054/552076 [00:04<00:08, 37246.18it/s] 46%|████▌     | 254112/552076 [00:04<00:07, 38186.62it/s] 47%|████▋     | 258157/552076 [00:04<00:07, 38685.22it/s] 47%|████▋     | 262186/552076 [00:05<00:07, 37693.22it/s] 48%|████▊     | 266213/552076 [00:05<00:07, 38430.78it/s] 49%|████▉     | 270260/552076 [00:05<00:07, 39019.65it/s] 50%|█████     | 276509/552076 [00:05<00:06, 43973.96it/s] 51%|█████     | 282113/552076 [00:05<00:05, 47008.79it/s] 52%|█████▏    | 287049/552076 [00:05<00:06, 43487.28it/s] 53%|█████▎    | 291615/552076 [00:05<00:06, 40399.61it/s] 54%|█████▎    | 295851/552076 [00:05<00:06, 39014.75it/s] 54%|█████▍    | 299900/552076 [00:05<00:06, 38370.98it/s] 55%|█████▌    | 303843/552076 [00:06<00:06, 37757.88it/s] 56%|█████▌    | 307695/552076 [00:06<00:06, 36876.54it/s] 56%|█████▋    | 311441/552076 [00:06<00:06, 37029.55it/s] 57%|█████▋    | 315238/552076 [00:06<00:06, 37306.01it/s] 58%|█████▊    | 319154/552076 [00:06<00:06, 36701.88it/s] 58%|█████▊    | 322914/552076 [00:06<00:06, 36115.86it/s] 59%|█████▉    | 326582/552076 [00:06<00:06, 36282.12it/s] 60%|█████▉    | 330536/552076 [00:06<00:05, 37200.37it/s] 61%|██████    | 334271/552076 [00:06<00:06, 35934.74it/s] 61%|██████    | 338104/552076 [00:07<00:05, 35844.29it/s] 62%|██████▏   | 341886/552076 [00:07<00:05, 36414.19it/s] 63%|██████▎   | 348063/552076 [00:07<00:04, 41527.85it/s] 65%|██████▍   | 357458/552076 [00:07<00:03, 49876.34it/s] 66%|██████▌   | 363364/552076 [00:07<00:03, 51708.88it/s] 68%|██████▊   | 374106/552076 [00:07<00:02, 61235.92it/s] 69%|██████▉   | 383248/552076 [00:07<00:02, 67401.39it/s] 71%|███████   | 391004/552076 [00:07<00:02, 69903.07it/s] 73%|███████▎  | 403343/552076 [00:07<00:01, 80351.46it/s] 75%|███████▌  | 415750/552076 [00:07<00:01, 89848.08it/s] 78%|███████▊  | 428179/552076 [00:08<00:01, 97994.23it/s] 80%|███████▉  | 440598/552076 [00:08<00:01, 104613.79it/s] 82%|████████▏ | 453046/552076 [00:08<00:00, 109872.65it/s] 84%|████████▍ | 465531/552076 [00:08<00:00, 113974.19it/s] 87%|████████▋ | 478017/552076 [00:08<00:00, 117035.07it/s] 89%|████████▉ | 490437/552076 [00:08<00:00, 119094.21it/s] 91%|█████████ | 502893/552076 [00:08<00:00, 120681.44it/s] 93%|█████████▎| 515371/552076 [00:08<00:00, 121882.32it/s] 96%|█████████▌| 527785/552076 [00:08<00:00, 122549.43it/s] 98%|█████████▊| 540268/552076 [00:08<00:00, 123222.49it/s]100%|██████████| 552076/552076 [00:09<00:00, 61157.08it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5699/552076 [00:00<00:09, 56987.07it/s]  3%|▎         | 17807/552076 [00:00<00:07, 67744.71it/s]  5%|▍         | 27176/552076 [00:00<00:07, 73331.86it/s]  6%|▋         | 35068/552076 [00:00<00:06, 74923.07it/s]  8%|▊         | 46542/552076 [00:00<00:06, 83629.07it/s] 10%|▉         | 54633/552076 [00:00<00:06, 82241.26it/s] 11%|█▏        | 62672/552076 [00:00<00:06, 79333.90it/s] 13%|█▎        | 72944/552076 [00:00<00:05, 84160.23it/s] 15%|█▍        | 81365/552076 [00:00<00:05, 83312.44it/s] 16%|█▌        | 89702/552076 [00:01<00:05, 83106.86it/s] 18%|█▊        | 98443/552076 [00:01<00:05, 84350.58it/s] 19%|█▉        | 106886/552076 [00:01<00:06, 64698.66it/s] 21%|██        | 114053/552076 [00:01<00:06, 63102.08it/s] 22%|██▏       | 120860/552076 [00:01<00:07, 61237.89it/s] 23%|██▎       | 127344/552076 [00:01<00:07, 60243.13it/s] 25%|██▌       | 139151/552076 [00:01<00:05, 70618.43it/s] 27%|██▋       | 151019/552076 [00:01<00:04, 80384.21it/s] 29%|██▉       | 162694/552076 [00:01<00:04, 88668.77it/s] 31%|███▏      | 173753/552076 [00:02<00:04, 94274.79it/s] 34%|███▎      | 185941/552076 [00:02<00:03, 101146.21it/s] 36%|███▌      | 198259/552076 [00:02<00:03, 105442.10it/s] 38%|███▊      | 209346/552076 [00:02<00:03, 105453.98it/s] 40%|███▉      | 220271/552076 [00:02<00:03, 104751.72it/s] 42%|████▏     | 232457/552076 [00:02<00:02, 107543.43it/s] 44%|████▍     | 243417/552076 [00:02<00:03, 100817.88it/s] 46%|████▋     | 255877/552076 [00:02<00:02, 106940.88it/s] 49%|████▊     | 268312/552076 [00:02<00:02, 111627.72it/s] 51%|█████     | 280751/552076 [00:03<00:02, 115171.21it/s] 53%|█████▎    | 293231/552076 [00:03<00:02, 117897.38it/s] 55%|█████▌    | 305698/552076 [00:03<00:02, 119848.35it/s] 58%|█████▊    | 318193/552076 [00:03<00:01, 121333.75it/s] 60%|█████▉    | 330679/552076 [00:03<00:01, 122370.40it/s] 62%|██████▏   | 343152/552076 [00:03<00:01, 123066.80it/s] 64%|██████▍   | 355624/552076 [00:03<00:01, 123555.72it/s] 67%|██████▋   | 368087/552076 [00:03<00:01, 123875.48it/s] 69%|██████▉   | 380592/552076 [00:03<00:01, 124225.10it/s] 71%|███████   | 393126/552076 [00:03<00:01, 124556.63it/s] 73%|███████▎  | 405593/552076 [00:04<00:01, 108535.53it/s] 76%|███████▌  | 416825/552076 [00:04<00:01, 98905.33it/s]  78%|███████▊  | 428311/552076 [00:04<00:01, 103205.73it/s] 80%|███████▉  | 440742/552076 [00:04<00:01, 108743.91it/s] 82%|████████▏ | 453237/552076 [00:04<00:00, 113144.73it/s] 84%|████████▍ | 464824/552076 [00:04<00:00, 94831.96it/s]  86%|████████▋ | 477170/552076 [00:04<00:00, 101920.50it/s] 88%|████████▊ | 487997/552076 [00:04<00:00, 86551.52it/s]  90%|█████████ | 498409/552076 [00:05<00:00, 91165.00it/s] 92%|█████████▏| 510495/552076 [00:05<00:00, 98417.27it/s] 95%|█████████▍| 522077/552076 [00:05<00:00, 103062.74it/s] 97%|█████████▋| 533469/552076 [00:05<00:00, 106094.20it/s] 99%|█████████▊| 544982/552076 [00:05<00:00, 108651.87it/s]100%|██████████| 552076/552076 [00:05<00:00, 99052.36it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12223/552076 [00:00<00:04, 122226.62it/s]  4%|▍         | 22159/552076 [00:00<00:04, 112003.17it/s]  5%|▍         | 27538/552076 [00:00<00:06, 81768.15it/s]   7%|▋         | 39695/552076 [00:00<00:05, 90673.51it/s]  9%|▉         | 52090/552076 [00:00<00:05, 98615.97it/s] 12%|█▏        | 64467/552076 [00:00<00:04, 105018.39it/s] 14%|█▍        | 76897/552076 [00:00<00:04, 110143.99it/s] 16%|█▌        | 87881/552076 [00:00<00:04, 110049.89it/s] 18%|█▊        | 98643/552076 [00:00<00:04, 106246.90it/s] 20%|█▉        | 109126/552076 [00:01<00:05, 86619.42it/s] 21%|██▏       | 118533/552076 [00:01<00:04, 87535.60it/s] 23%|██▎       | 129027/552076 [00:01<00:04, 92118.46it/s] 25%|██▌       | 138546/552076 [00:01<00:04, 91490.29it/s] 27%|██▋       | 149029/552076 [00:01<00:04, 95120.80it/s] 29%|██▉       | 161275/552076 [00:01<00:03, 100344.66it/s] 31%|███       | 171518/552076 [00:01<00:03, 96994.07it/s]  33%|███▎      | 183698/552076 [00:01<00:03, 103304.22it/s] 35%|███▌      | 195314/552076 [00:01<00:03, 106851.66it/s] 38%|███▊      | 207584/552076 [00:02<00:03, 111156.82it/s] 40%|███▉      | 219403/552076 [00:02<00:02, 113176.78it/s] 42%|████▏     | 231698/552076 [00:02<00:02, 115939.30it/s] 44%|████▍     | 243404/552076 [00:02<00:02, 114135.18it/s] 46%|████▋     | 255734/552076 [00:02<00:02, 116735.97it/s] 49%|████▉     | 269251/552076 [00:02<00:02, 121713.79it/s] 51%|█████     | 281529/552076 [00:02<00:02, 112462.24it/s] 53%|█████▎    | 292990/552076 [00:02<00:02, 106883.18it/s] 55%|█████▌    | 305241/552076 [00:02<00:02, 111135.29it/s] 57%|█████▋    | 316544/552076 [00:02<00:02, 106647.07it/s] 59%|█████▉    | 327605/552076 [00:03<00:02, 107803.13it/s] 62%|██████▏   | 340177/552076 [00:03<00:01, 112617.63it/s] 64%|██████▍   | 352114/552076 [00:03<00:01, 114560.91it/s] 66%|██████▌   | 364222/552076 [00:03<00:01, 116440.15it/s] 68%|██████▊   | 375949/552076 [00:03<00:01, 102840.92it/s] 70%|███████   | 386583/552076 [00:03<00:01, 99216.18it/s]  72%|███████▏  | 398934/552076 [00:03<00:01, 105437.36it/s] 74%|███████▍  | 409775/552076 [00:03<00:01, 103363.97it/s] 77%|███████▋  | 423537/552076 [00:03<00:01, 111705.12it/s] 79%|███████▉  | 435053/552076 [00:04<00:01, 102332.38it/s] 81%|████████  | 447565/552076 [00:04<00:00, 108246.37it/s] 83%|████████▎ | 459917/552076 [00:04<00:00, 112415.28it/s] 86%|████████▌ | 472112/552076 [00:04<00:00, 115114.02it/s] 88%|████████▊ | 484422/552076 [00:04<00:00, 117397.13it/s] 90%|████████▉ | 496712/552076 [00:04<00:00, 118993.51it/s] 92%|█████████▏| 509127/552076 [00:04<00:00, 120492.27it/s] 94%|█████████▍| 521390/552076 [00:04<00:00, 121124.99it/s] 97%|█████████▋| 533803/552076 [00:04<00:00, 122010.71it/s] 99%|█████████▉| 546253/552076 [00:05<00:00, 122745.37it/s]100%|██████████| 552076/552076 [00:05<00:00, 109319.44it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10597/552076 [00:00<00:05, 105963.28it/s]  4%|▎         | 19866/552076 [00:00<00:05, 101596.70it/s]  6%|▌         | 31825/552076 [00:00<00:04, 106397.02it/s]  8%|▊         | 43829/552076 [00:00<00:04, 110152.11it/s] 10%|█         | 55875/552076 [00:00<00:04, 113052.57it/s] 12%|█▏        | 67832/552076 [00:00<00:04, 114928.91it/s] 14%|█▍        | 78146/552076 [00:00<00:04, 107998.84it/s] 16%|█▌        | 88206/552076 [00:00<00:04, 104615.95it/s] 18%|█▊        | 100640/552076 [00:00<00:04, 109841.92it/s] 20%|██        | 112466/552076 [00:01<00:03, 112237.27it/s] 22%|██▏       | 123509/552076 [00:01<00:04, 103620.81it/s] 24%|██▍       | 134752/552076 [00:01<00:03, 106112.80it/s] 27%|██▋       | 146969/552076 [00:01<00:03, 110468.17it/s] 29%|██▉       | 158762/552076 [00:01<00:03, 112604.61it/s] 31%|███       | 170916/552076 [00:01<00:03, 115143.57it/s] 33%|███▎      | 183164/552076 [00:01<00:03, 117249.59it/s] 35%|███▌      | 194934/552076 [00:01<00:03, 114999.11it/s] 37%|███▋      | 206475/552076 [00:01<00:03, 110038.02it/s] 40%|███▉      | 218827/552076 [00:01<00:02, 113761.88it/s] 42%|████▏     | 231170/552076 [00:02<00:02, 116497.37it/s] 44%|████▍     | 243622/552076 [00:02<00:02, 118793.42it/s] 46%|████▋     | 255888/552076 [00:02<00:02, 119927.17it/s] 49%|████▊     | 268197/552076 [00:02<00:02, 120856.05it/s] 51%|█████     | 280437/552076 [00:02<00:02, 121313.19it/s] 53%|█████▎    | 292826/552076 [00:02<00:02, 122073.82it/s] 55%|█████▌    | 305288/552076 [00:02<00:02, 122824.81it/s] 58%|█████▊    | 317665/552076 [00:02<00:01, 123106.80it/s] 60%|█████▉    | 330072/552076 [00:02<00:01, 123391.67it/s] 62%|██████▏   | 342549/552076 [00:02<00:01, 123800.86it/s] 64%|██████▍   | 354935/552076 [00:03<00:01, 121510.01it/s] 67%|██████▋   | 367657/552076 [00:03<00:01, 123165.67it/s] 69%|██████▉   | 380103/552076 [00:03<00:01, 123549.24it/s] 71%|███████   | 392581/552076 [00:03<00:01, 123912.87it/s] 73%|███████▎  | 404980/552076 [00:03<00:01, 123738.66it/s] 76%|███████▌  | 417388/552076 [00:03<00:01, 123840.11it/s] 78%|███████▊  | 429776/552076 [00:03<00:00, 122638.37it/s] 80%|████████  | 442289/552076 [00:03<00:00, 123375.15it/s] 82%|████████▏ | 454987/552076 [00:03<00:00, 124432.78it/s] 85%|████████▍ | 467944/552076 [00:03<00:00, 125930.08it/s] 87%|████████▋ | 480546/552076 [00:04<00:00, 125265.47it/s] 89%|████████▉ | 493080/552076 [00:04<00:00, 123867.00it/s] 92%|█████████▏| 505475/552076 [00:04<00:00, 89263.06it/s]  93%|█████████▎| 515773/552076 [00:04<00:00, 70967.09it/s] 95%|█████████▍| 524422/552076 [00:04<00:00, 68457.42it/s] 97%|█████████▋| 536727/552076 [00:04<00:00, 78967.45it/s] 99%|█████████▉| 549057/552076 [00:04<00:00, 88514.79it/s]100%|██████████| 552076/552076 [00:04<00:00, 110821.71it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11574/552076 [00:00<00:04, 115733.49it/s]  4%|▍         | 23276/552076 [00:00<00:04, 116116.33it/s]  6%|▋         | 35109/552076 [00:00<00:04, 116770.65it/s]  8%|▊         | 44664/552076 [00:00<00:04, 108489.90it/s] 10%|▉         | 52853/552076 [00:00<00:05, 87018.56it/s]  12%|█▏        | 68885/552076 [00:00<00:04, 100851.67it/s] 16%|█▋        | 90976/552076 [00:00<00:03, 120497.18it/s] 20%|██        | 112861/552076 [00:00<00:03, 139274.06it/s] 24%|██▍       | 134543/552076 [00:00<00:02, 156012.58it/s] 28%|██▊       | 157135/552076 [00:01<00:02, 171975.83it/s] 32%|███▏      | 178328/552076 [00:01<00:02, 182283.70it/s] 36%|███▌      | 198153/552076 [00:01<00:02, 167766.40it/s] 40%|███▉      | 220629/552076 [00:01<00:01, 181578.63it/s] 44%|████▍     | 244189/552076 [00:01<00:01, 194990.69it/s] 48%|████▊     | 264857/552076 [00:01<00:01, 198319.41it/s] 52%|█████▏    | 288703/552076 [00:01<00:01, 208866.29it/s] 56%|█████▌    | 310322/552076 [00:01<00:01, 182449.93it/s] 60%|██████    | 333079/552076 [00:01<00:01, 193987.84it/s] 64%|██████▍   | 355990/552076 [00:02<00:00, 203339.10it/s] 68%|██████▊   | 377129/552076 [00:02<00:00, 202195.33it/s] 72%|███████▏  | 400006/552076 [00:02<00:00, 209494.46it/s] 77%|███████▋  | 423139/552076 [00:02<00:00, 215598.30it/s] 81%|████████  | 445448/552076 [00:02<00:00, 217791.89it/s] 85%|████████▍ | 467491/552076 [00:02<00:00, 213296.79it/s] 89%|████████▉ | 490963/552076 [00:02<00:00, 219300.75it/s] 93%|█████████▎| 513547/552076 [00:02<00:00, 221221.24it/s] 97%|█████████▋| 537046/552076 [00:02<00:00, 225177.47it/s]100%|██████████| 552076/552076 [00:02<00:00, 188727.95it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 23064/552076 [00:00<00:02, 230634.17it/s]  8%|▊         | 46423/552076 [00:00<00:02, 231511.95it/s] 13%|█▎        | 69713/552076 [00:00<00:02, 231924.21it/s] 16%|█▋        | 90465/552076 [00:00<00:02, 224020.01it/s] 21%|██        | 113713/552076 [00:00<00:01, 226490.02it/s] 25%|██▍       | 136839/552076 [00:00<00:01, 227897.88it/s] 29%|██▉       | 159324/552076 [00:00<00:01, 226973.14it/s] 33%|███▎      | 182226/552076 [00:00<00:01, 227581.95it/s] 37%|███▋      | 206255/552076 [00:00<00:01, 231248.95it/s] 41%|████▏     | 228484/552076 [00:01<00:01, 228485.91it/s] 45%|████▌     | 250708/552076 [00:01<00:01, 200507.64it/s] 49%|████▉     | 270944/552076 [00:01<00:01, 179839.17it/s] 52%|█████▏    | 289458/552076 [00:01<00:01, 154175.81it/s] 56%|█████▋    | 310578/552076 [00:01<00:01, 167763.89it/s] 61%|██████    | 334064/552076 [00:01<00:01, 183489.96it/s] 64%|██████▍   | 356000/552076 [00:01<00:01, 192954.02it/s] 68%|██████▊   | 378041/552076 [00:01<00:00, 200443.19it/s] 73%|███████▎  | 400832/552076 [00:01<00:00, 207960.58it/s] 77%|███████▋  | 424882/552076 [00:02<00:00, 216757.28it/s] 81%|████████  | 448006/552076 [00:02<00:00, 220907.27it/s] 85%|████████▌ | 470475/552076 [00:02<00:00, 221485.66it/s] 90%|████████▉ | 494552/552076 [00:02<00:00, 226938.53it/s] 94%|█████████▎| 517465/552076 [00:02<00:00, 196977.23it/s] 97%|█████████▋| 538022/552076 [00:02<00:00, 168979.19it/s]100%|██████████| 552076/552076 [00:02<00:00, 199625.30it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8277/552076 [00:00<00:06, 82768.50it/s]  4%|▎         | 20500/552076 [00:00<00:05, 91643.73it/s]  6%|▌         | 32792/552076 [00:00<00:05, 99217.21it/s]  8%|▊         | 45253/552076 [00:00<00:04, 105676.46it/s] 10%|█         | 57169/552076 [00:00<00:04, 109388.74it/s] 12%|█▏        | 67022/552076 [00:00<00:04, 97606.20it/s]  14%|█▍        | 77622/552076 [00:00<00:04, 99981.32it/s] 16%|█▌        | 88123/552076 [00:00<00:04, 101437.17it/s] 18%|█▊        | 100582/552076 [00:00<00:04, 107424.84it/s] 20%|██        | 113006/552076 [00:01<00:03, 111969.10it/s] 22%|██▏       | 124202/552076 [00:01<00:04, 92248.11it/s]  25%|██▍       | 136671/552076 [00:01<00:04, 100057.67it/s] 27%|██▋       | 149150/552076 [00:01<00:03, 106382.64it/s] 29%|██▉       | 161620/552076 [00:01<00:03, 111286.36it/s] 31%|███▏      | 173176/552076 [00:01<00:04, 88131.68it/s]  34%|███▎      | 185578/552076 [00:01<00:03, 96508.37it/s] 36%|███▌      | 197607/552076 [00:01<00:03, 102591.96it/s] 38%|███▊      | 210101/552076 [00:01<00:03, 108409.15it/s] 40%|████      | 222575/552076 [00:02<00:02, 112840.58it/s] 43%|████▎     | 235080/552076 [00:02<00:02, 116244.31it/s] 45%|████▍     | 247564/552076 [00:02<00:02, 118695.98it/s] 47%|████▋     | 259708/552076 [00:02<00:02, 118182.06it/s] 49%|████▉     | 271719/552076 [00:02<00:02, 113676.30it/s] 52%|█████▏    | 284363/552076 [00:02<00:02, 117224.08it/s] 54%|█████▍    | 296871/552076 [00:02<00:02, 119473.24it/s] 56%|█████▌    | 309425/552076 [00:02<00:02, 121229.07it/s] 58%|█████▊    | 321944/552076 [00:02<00:01, 122388.76it/s] 61%|██████    | 334524/552076 [00:03<00:01, 123392.41it/s] 63%|██████▎   | 347154/552076 [00:03<00:01, 124249.08it/s] 65%|██████▌   | 359725/552076 [00:03<00:01, 124682.66it/s] 68%|██████▊   | 373283/552076 [00:03<00:01, 127762.90it/s] 70%|███████   | 386702/552076 [00:03<00:01, 129622.53it/s] 72%|███████▏  | 399696/552076 [00:03<00:01, 104780.88it/s] 74%|███████▍  | 410990/552076 [00:03<00:01, 107101.39it/s] 77%|███████▋  | 423468/552076 [00:03<00:01, 111855.39it/s] 79%|███████▉  | 435904/552076 [00:03<00:01, 115333.85it/s] 81%|████████  | 448439/552076 [00:03<00:00, 118165.81it/s] 83%|████████▎ | 460934/552076 [00:04<00:00, 120121.81it/s] 86%|████████▌ | 473470/552076 [00:04<00:00, 121644.64it/s] 88%|████████▊ | 485771/552076 [00:04<00:00, 121263.66it/s] 90%|█████████ | 497993/552076 [00:04<00:00, 114866.31it/s] 92%|█████████▏| 510427/552076 [00:04<00:00, 117550.93it/s] 95%|█████████▍| 522294/552076 [00:04<00:00, 107134.95it/s] 97%|█████████▋| 533264/552076 [00:04<00:00, 98409.60it/s]  99%|█████████▉| 545770/552076 [00:04<00:00, 105129.71it/s]100%|██████████| 552076/552076 [00:04<00:00, 112015.50it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12067/552076 [00:00<00:04, 120662.92it/s]  4%|▍         | 24319/552076 [00:00<00:04, 121213.37it/s]  6%|▋         | 35426/552076 [00:00<00:04, 117858.56it/s]  8%|▊         | 43094/552076 [00:00<00:05, 97421.54it/s]  10%|▉         | 53737/552076 [00:00<00:04, 99958.40it/s] 12%|█▏        | 66098/552076 [00:00<00:04, 106045.02it/s] 14%|█▍        | 77910/552076 [00:00<00:04, 109399.11it/s] 16%|█▌        | 89071/552076 [00:00<00:04, 110052.07it/s] 18%|█▊        | 101513/552076 [00:00<00:03, 113999.60it/s] 21%|██        | 113984/552076 [00:01<00:03, 117013.14it/s] 23%|██▎       | 126576/552076 [00:01<00:03, 119549.98it/s] 25%|██▌       | 139111/552076 [00:01<00:03, 121232.11it/s] 27%|██▋       | 151644/552076 [00:01<00:03, 122432.33it/s] 30%|██▉       | 163837/552076 [00:01<00:03, 109828.65it/s] 32%|███▏      | 175029/552076 [00:01<00:03, 101128.90it/s] 34%|███▍      | 187464/552076 [00:01<00:03, 107128.48it/s] 36%|███▌      | 199978/552076 [00:01<00:03, 111962.84it/s] 38%|███▊      | 212482/552076 [00:01<00:02, 115587.60it/s] 41%|████      | 224981/552076 [00:01<00:02, 118254.95it/s] 43%|████▎     | 237471/552076 [00:02<00:02, 120170.82it/s] 45%|████▌     | 249611/552076 [00:02<00:02, 119658.48it/s] 47%|████▋     | 262137/552076 [00:02<00:02, 121282.54it/s] 50%|████▉     | 274688/552076 [00:02<00:02, 122517.79it/s] 52%|█████▏    | 287171/552076 [00:02<00:02, 123199.48it/s] 54%|█████▍    | 299629/552076 [00:02<00:02, 123607.99it/s] 57%|█████▋    | 312076/552076 [00:02<00:01, 123862.73it/s] 59%|█████▉    | 324522/552076 [00:02<00:01, 124039.66it/s] 61%|██████    | 336976/552076 [00:02<00:01, 124187.61it/s] 63%|██████▎   | 349513/552076 [00:02<00:01, 124537.44it/s] 66%|██████▌   | 362049/552076 [00:03<00:01, 124781.33it/s] 68%|██████▊   | 374575/552076 [00:03<00:01, 124923.07it/s] 70%|███████   | 387132/552076 [00:03<00:01, 125116.22it/s] 72%|███████▏  | 399646/552076 [00:03<00:01, 124872.35it/s] 75%|███████▍  | 412278/552076 [00:03<00:01, 125301.59it/s] 77%|███████▋  | 424845/552076 [00:03<00:01, 125409.23it/s] 79%|███████▉  | 437784/552076 [00:03<00:00, 126575.95it/s] 82%|████████▏ | 450445/552076 [00:03<00:00, 125842.41it/s] 84%|████████▍ | 463033/552076 [00:03<00:00, 125705.67it/s] 86%|████████▌ | 475623/552076 [00:03<00:00, 125763.49it/s] 88%|████████▊ | 488225/552076 [00:04<00:00, 125839.92it/s] 91%|█████████ | 500821/552076 [00:04<00:00, 125872.90it/s] 93%|█████████▎| 513410/552076 [00:04<00:00, 125724.49it/s] 95%|█████████▌| 525984/552076 [00:04<00:00, 125566.54it/s] 98%|█████████▊| 538545/552076 [00:04<00:00, 125576.56it/s]100%|█████████▉| 551103/552076 [00:04<00:00, 125313.76it/s]100%|██████████| 552076/552076 [00:04<00:00, 120148.74it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11822/552076 [00:00<00:04, 118211.38it/s]  4%|▍         | 24095/552076 [00:00<00:04, 119529.92it/s]  7%|▋         | 36458/552076 [00:00<00:04, 120729.20it/s]  9%|▉         | 48875/552076 [00:00<00:04, 121740.51it/s] 11%|█         | 61363/552076 [00:00<00:04, 122665.18it/s] 13%|█▎        | 73921/552076 [00:00<00:03, 123525.09it/s] 16%|█▌        | 86450/552076 [00:00<00:03, 124047.42it/s] 18%|█▊        | 99006/552076 [00:00<00:03, 124496.60it/s] 20%|██        | 111597/552076 [00:00<00:03, 124914.74it/s] 22%|██▏       | 124203/552076 [00:01<00:03, 125253.31it/s] 25%|██▍       | 136427/552076 [00:01<00:03, 124330.71it/s] 27%|██▋       | 149001/552076 [00:01<00:03, 124748.61it/s] 30%|██▉       | 163948/552076 [00:01<00:02, 131260.44it/s] 34%|███▎      | 185872/552076 [00:01<00:02, 149225.27it/s] 38%|███▊      | 208944/552076 [00:01<00:02, 166911.08it/s] 42%|████▏     | 231286/552076 [00:01<00:01, 180614.23it/s] 45%|████▌     | 250551/552076 [00:01<00:01, 182770.86it/s] 49%|████▉     | 269677/552076 [00:01<00:01, 173362.45it/s] 52%|█████▏    | 287709/552076 [00:02<00:01, 134579.08it/s] 55%|█████▌    | 306197/552076 [00:02<00:01, 146537.42it/s] 59%|█████▊    | 324237/552076 [00:02<00:01, 155280.14it/s] 62%|██████▏   | 345003/552076 [00:02<00:01, 167990.48it/s] 67%|██████▋   | 367779/552076 [00:02<00:01, 182344.61it/s] 70%|███████   | 387194/552076 [00:02<00:00, 172900.50it/s] 74%|███████▎  | 407002/552076 [00:02<00:00, 179753.84it/s] 77%|███████▋  | 427728/552076 [00:02<00:00, 187205.90it/s] 82%|████████▏ | 451268/552076 [00:02<00:00, 199455.57it/s] 86%|████████▌ | 473998/552076 [00:02<00:00, 207063.70it/s] 90%|████████▉ | 495956/552076 [00:03<00:00, 210665.35it/s] 94%|█████████▍| 518991/552076 [00:03<00:00, 216206.08it/s] 98%|█████████▊| 540911/552076 [00:03<00:00, 208349.65it/s]100%|██████████| 552076/552076 [00:03<00:00, 166291.80it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 17878/552076 [00:00<00:02, 178778.04it/s]  7%|▋         | 37971/552076 [00:00<00:02, 184890.84it/s] 11%|█         | 58930/552076 [00:00<00:02, 191666.12it/s] 15%|█▍        | 80869/552076 [00:00<00:02, 199214.74it/s] 18%|█▊        | 99296/552076 [00:00<00:02, 194480.69it/s] 22%|██▏       | 121482/552076 [00:00<00:02, 201956.39it/s] 26%|██▌       | 144466/552076 [00:00<00:01, 209582.54it/s] 30%|███       | 166505/552076 [00:00<00:01, 212710.26it/s] 34%|███▍      | 187708/552076 [00:00<00:01, 212503.65it/s] 38%|███▊      | 208337/552076 [00:01<00:01, 205032.46it/s] 42%|████▏     | 231632/552076 [00:01<00:01, 212677.17it/s] 46%|████▌     | 253626/552076 [00:01<00:01, 214804.76it/s] 50%|████▉     | 275846/552076 [00:01<00:01, 216970.58it/s] 54%|█████▍    | 297458/552076 [00:01<00:01, 205356.74it/s] 58%|█████▊    | 319966/552076 [00:01<00:01, 210899.34it/s] 62%|██████▏   | 341613/552076 [00:01<00:00, 212534.58it/s] 66%|██████▌   | 363480/552076 [00:01<00:00, 214338.36it/s] 70%|██████▉   | 384962/552076 [00:01<00:00, 207666.75it/s] 74%|███████▎  | 406710/552076 [00:01<00:00, 210514.04it/s] 78%|███████▊  | 429442/552076 [00:02<00:00, 215286.71it/s] 82%|████████▏ | 451503/552076 [00:02<00:00, 216855.37it/s] 86%|████████▌ | 474514/552076 [00:02<00:00, 220666.25it/s] 90%|████████▉ | 496865/552076 [00:02<00:00, 221508.98it/s] 94%|█████████▍| 520312/552076 [00:02<00:00, 225243.74it/s] 98%|█████████▊| 542879/552076 [00:02<00:00, 222907.50it/s]100%|██████████| 552076/552076 [00:02<00:00, 212957.26it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 16803/552076 [00:00<00:03, 168025.75it/s]  7%|▋         | 38329/552076 [00:00<00:02, 179865.39it/s] 11%|█         | 59723/552076 [00:00<00:02, 188889.02it/s] 15%|█▍        | 82435/552076 [00:00<00:02, 198932.69it/s] 19%|█▉        | 104328/552076 [00:00<00:02, 204535.64it/s] 23%|██▎       | 124981/552076 [00:00<00:02, 205127.47it/s] 27%|██▋       | 147573/552076 [00:00<00:01, 210951.02it/s] 31%|███       | 171000/552076 [00:00<00:01, 217441.73it/s] 35%|███▍      | 191951/552076 [00:00<00:01, 201725.64it/s] 38%|███▊      | 211795/552076 [00:01<00:01, 192177.46it/s] 42%|████▏     | 233566/552076 [00:01<00:01, 199182.13it/s] 46%|████▋     | 256327/552076 [00:01<00:01, 206934.42it/s] 51%|█████     | 279945/552076 [00:01<00:01, 214918.03it/s] 55%|█████▌    | 303943/552076 [00:01<00:01, 221868.83it/s] 59%|█████▉    | 326270/552076 [00:01<00:01, 200970.35it/s] 63%|██████▎   | 346947/552076 [00:01<00:01, 202673.43it/s] 67%|██████▋   | 370456/552076 [00:01<00:00, 211418.72it/s] 71%|███████▏  | 394490/552076 [00:01<00:00, 219336.23it/s] 76%|███████▌  | 418455/552076 [00:01<00:00, 225057.42it/s] 80%|███████▉  | 441508/552076 [00:02<00:00, 226670.51it/s] 84%|████████▍ | 464356/552076 [00:02<00:00, 224371.91it/s] 88%|████████▊ | 488034/552076 [00:02<00:00, 227955.36it/s] 93%|█████████▎| 512070/552076 [00:02<00:00, 231537.55it/s] 97%|█████████▋| 536076/552076 [00:02<00:00, 234028.82it/s]100%|██████████| 552076/552076 [00:02<00:00, 216747.80it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11852/552076 [00:00<00:04, 118513.33it/s]  4%|▍         | 23261/552076 [00:00<00:04, 117148.96it/s]  6%|▌         | 32244/552076 [00:00<00:04, 107351.89it/s]  8%|▊         | 44485/552076 [00:00<00:04, 111464.14it/s] 10%|█         | 56787/552076 [00:00<00:04, 114695.07it/s] 13%|█▎        | 69211/552076 [00:00<00:04, 117399.13it/s] 15%|█▍        | 81701/552076 [00:00<00:03, 119550.96it/s] 17%|█▋        | 92766/552076 [00:00<00:04, 111043.68it/s] 19%|█▉        | 104419/552076 [00:00<00:03, 112632.87it/s] 21%|██        | 116886/552076 [00:01<00:03, 115990.85it/s] 23%|██▎       | 129349/552076 [00:01<00:03, 118453.23it/s] 26%|██▌       | 141929/552076 [00:01<00:03, 120562.94it/s] 28%|██▊       | 154428/552076 [00:01<00:03, 121855.43it/s] 30%|███       | 166960/552076 [00:01<00:03, 122874.30it/s] 32%|███▏      | 179398/552076 [00:01<00:03, 123321.59it/s] 35%|███▍      | 191704/552076 [00:01<00:03, 119683.04it/s] 37%|███▋      | 203677/552076 [00:01<00:03, 113388.83it/s] 39%|███▉      | 216159/552076 [00:01<00:02, 116589.51it/s] 41%|████▏     | 228748/552076 [00:01<00:02, 119230.51it/s] 44%|████▎     | 241013/552076 [00:02<00:02, 120235.19it/s] 46%|████▌     | 253489/552076 [00:02<00:02, 121556.64it/s] 48%|████▊     | 265793/552076 [00:02<00:02, 121997.74it/s] 50%|█████     | 278269/552076 [00:02<00:02, 122811.10it/s] 53%|█████▎    | 290900/552076 [00:02<00:02, 123838.89it/s] 55%|█████▍    | 303300/552076 [00:02<00:02, 123552.24it/s] 57%|█████▋    | 316199/552076 [00:02<00:01, 125134.06it/s] 60%|█████▉    | 328726/552076 [00:02<00:01, 124120.44it/s] 62%|██████▏   | 341149/552076 [00:02<00:01, 123589.95it/s] 64%|██████▍   | 353764/552076 [00:02<00:01, 124346.50it/s] 66%|██████▋   | 366206/552076 [00:03<00:01, 99086.85it/s]  68%|██████▊   | 377782/552076 [00:03<00:01, 103560.41it/s] 71%|███████   | 390100/552076 [00:03<00:01, 108757.02it/s] 73%|███████▎  | 402704/552076 [00:03<00:01, 113422.77it/s] 75%|███████▌  | 415777/552076 [00:03<00:01, 118113.28it/s] 78%|███████▊  | 428179/552076 [00:03<00:01, 119824.07it/s] 80%|███████▉  | 440402/552076 [00:03<00:00, 119209.96it/s] 82%|████████▏ | 452492/552076 [00:03<00:00, 119455.51it/s] 84%|████████▍ | 464556/552076 [00:04<00:00, 96569.22it/s]  86%|████████▋ | 476688/552076 [00:04<00:00, 102863.09it/s] 89%|████████▊ | 488866/552076 [00:04<00:00, 107889.23it/s] 91%|█████████ | 500594/552076 [00:04<00:00, 110544.40it/s] 93%|█████████▎| 512772/552076 [00:04<00:00, 113690.92it/s] 95%|█████████▍| 524443/552076 [00:04<00:00, 114017.62it/s] 97%|█████████▋| 536051/552076 [00:04<00:00, 113365.35it/s] 99%|█████████▉| 547789/552076 [00:04<00:00, 114538.40it/s]100%|██████████| 552076/552076 [00:04<00:00, 115969.46it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11993/552076 [00:00<00:04, 119921.54it/s]  4%|▍         | 22634/552076 [00:00<00:04, 115520.15it/s]  5%|▌         | 30216/552076 [00:00<00:05, 99835.72it/s]   8%|▊         | 42441/552076 [00:00<00:04, 105646.72it/s] 10%|▉         | 54843/552076 [00:00<00:04, 110558.84it/s] 12%|█▏        | 67275/552076 [00:00<00:04, 114355.60it/s] 14%|█▍        | 79757/552076 [00:00<00:04, 117305.81it/s] 17%|█▋        | 92177/552076 [00:00<00:03, 119290.73it/s] 19%|█▉        | 104571/552076 [00:00<00:03, 120646.74it/s] 21%|██        | 116969/552076 [00:01<00:03, 121626.59it/s] 23%|██▎       | 129418/552076 [00:01<00:03, 122470.60it/s] 26%|██▌       | 141798/552076 [00:01<00:03, 122863.92it/s] 28%|██▊       | 154135/552076 [00:01<00:03, 123012.80it/s] 30%|███       | 166418/552076 [00:01<00:03, 122956.44it/s] 32%|███▏      | 178790/552076 [00:01<00:03, 123184.11it/s] 35%|███▍      | 191280/552076 [00:01<00:02, 123693.68it/s] 37%|███▋      | 203746/552076 [00:01<00:02, 123979.30it/s] 39%|███▉      | 216124/552076 [00:01<00:02, 123673.38it/s] 41%|████▏     | 228477/552076 [00:01<00:02, 123369.49it/s] 44%|████▎     | 240890/552076 [00:02<00:02, 123595.99it/s] 46%|████▌     | 253243/552076 [00:02<00:02, 123384.91it/s] 48%|████▊     | 265577/552076 [00:02<00:02, 123369.70it/s] 50%|█████     | 278012/552076 [00:02<00:02, 123660.62it/s] 53%|█████▎    | 290376/552076 [00:02<00:02, 123574.64it/s] 55%|█████▍    | 302845/552076 [00:02<00:02, 123906.57it/s] 57%|█████▋    | 315395/552076 [00:02<00:01, 124379.31it/s] 59%|█████▉    | 327880/552076 [00:02<00:01, 124519.65it/s] 62%|██████▏   | 340332/552076 [00:02<00:01, 124187.14it/s] 64%|██████▍   | 352751/552076 [00:02<00:01, 124067.08it/s] 66%|██████▌   | 365158/552076 [00:03<00:01, 123785.82it/s] 68%|██████▊   | 377537/552076 [00:03<00:01, 123454.84it/s] 71%|███████   | 389883/552076 [00:03<00:01, 116478.82it/s] 73%|███████▎  | 401613/552076 [00:03<00:01, 115582.32it/s] 75%|███████▍  | 413230/552076 [00:03<00:01, 100209.67it/s] 77%|███████▋  | 424101/552076 [00:03<00:01, 102615.83it/s] 79%|███████▉  | 436017/552076 [00:03<00:01, 107074.26it/s] 81%|████████  | 446984/552076 [00:03<00:01, 104429.98it/s] 83%|████████▎ | 457623/552076 [00:03<00:00, 100224.22it/s] 85%|████████▌ | 469556/552076 [00:04<00:00, 105280.58it/s] 87%|████████▋ | 480273/552076 [00:04<00:00, 97919.69it/s]  89%|████████▉ | 492160/552076 [00:04<00:00, 103384.38it/s] 91%|█████████▏| 503854/552076 [00:04<00:00, 107109.08it/s] 93%|█████████▎| 514772/552076 [00:04<00:00, 100550.81it/s] 95%|█████████▌| 526972/552076 [00:04<00:00, 106149.25it/s] 98%|█████████▊| 538909/552076 [00:04<00:00, 109797.23it/s]100%|██████████| 552076/552076 [00:04<00:00, 116050.55it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11841/552076 [00:00<00:04, 118402.49it/s]  4%|▍         | 24016/552076 [00:00<00:04, 119385.45it/s]  7%|▋         | 36079/552076 [00:00<00:04, 119753.42it/s]  9%|▉         | 48344/552076 [00:00<00:04, 120605.92it/s] 11%|█         | 58636/552076 [00:00<00:04, 114690.32it/s] 12%|█▏        | 68480/552076 [00:00<00:04, 108072.69it/s] 14%|█▍        | 78017/552076 [00:00<00:05, 90156.26it/s]  16%|█▌        | 86643/552076 [00:00<00:06, 77151.80it/s] 17%|█▋        | 94413/552076 [00:01<00:07, 64866.21it/s] 18%|█▊        | 101271/552076 [00:01<00:07, 60493.82it/s] 20%|█▉        | 107749/552076 [00:01<00:07, 61718.85it/s] 22%|██▏       | 118780/552076 [00:01<00:06, 71116.12it/s] 24%|██▎       | 130458/552076 [00:01<00:05, 80567.24it/s] 26%|██▌       | 141202/552076 [00:01<00:04, 87102.84it/s] 28%|██▊       | 153389/552076 [00:01<00:04, 95254.51it/s] 30%|██▉       | 165438/552076 [00:01<00:03, 101640.78it/s] 32%|███▏      | 177810/552076 [00:01<00:03, 107388.11it/s] 34%|███▍      | 189938/552076 [00:01<00:03, 111209.22it/s] 37%|███▋      | 202334/552076 [00:02<00:03, 114748.46it/s] 39%|███▉      | 215175/552076 [00:02<00:02, 118529.55it/s] 41%|████▏     | 228045/552076 [00:02<00:02, 121405.71it/s] 44%|████▎     | 240568/552076 [00:02<00:02, 122526.82it/s] 46%|████▌     | 252962/552076 [00:02<00:02, 122930.76it/s] 48%|████▊     | 265354/552076 [00:02<00:02, 122326.10it/s] 50%|█████     | 277657/552076 [00:02<00:02, 121445.58it/s] 53%|█████▎    | 289852/552076 [00:02<00:02, 121566.76it/s] 55%|█████▍    | 302239/552076 [00:02<00:02, 122248.12it/s] 57%|█████▋    | 314723/552076 [00:03<00:01, 123013.13it/s] 59%|█████▉    | 327044/552076 [00:03<00:01, 122979.99it/s] 61%|██████▏   | 339356/552076 [00:03<00:02, 101046.32it/s] 63%|██████▎   | 350115/552076 [00:03<00:01, 101167.38it/s] 66%|██████▌   | 362493/552076 [00:03<00:01, 107031.34it/s] 68%|██████▊   | 374669/552076 [00:03<00:01, 111059.20it/s] 70%|███████   | 387069/552076 [00:03<00:01, 114646.80it/s] 72%|███████▏  | 399281/552076 [00:03<00:01, 116789.76it/s] 75%|███████▍  | 411300/552076 [00:03<00:01, 117788.17it/s] 77%|███████▋  | 423668/552076 [00:03<00:01, 119495.79it/s] 79%|███████▉  | 435719/552076 [00:04<00:01, 95629.63it/s]  81%|████████  | 448055/552076 [00:04<00:01, 102543.96it/s] 83%|████████▎ | 460162/552076 [00:04<00:00, 107477.63it/s] 86%|████████▌ | 472429/552076 [00:04<00:00, 111622.53it/s] 88%|████████▊ | 484978/552076 [00:04<00:00, 115449.35it/s] 90%|█████████ | 497309/552076 [00:04<00:00, 117700.21it/s] 92%|█████████▏| 509718/552076 [00:04<00:00, 119544.69it/s] 95%|█████████▍| 522206/552076 [00:04<00:00, 121094.90it/s] 97%|█████████▋| 534802/552076 [00:04<00:00, 122512.07it/s] 99%|█████████▉| 547312/552076 [00:05<00:00, 123274.22it/s]100%|██████████| 552076/552076 [00:05<00:00, 108074.34it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5416/552076 [00:00<00:10, 54158.63it/s]  2%|▏         | 9733/552076 [00:00<00:10, 50297.60it/s]  3%|▎         | 15748/552076 [00:00<00:10, 52896.66it/s]  4%|▍         | 22943/552076 [00:00<00:09, 57460.71it/s]  5%|▌         | 30264/552076 [00:00<00:08, 61424.12it/s]  7%|▋         | 39238/552076 [00:00<00:07, 67845.54it/s]  9%|▊         | 47360/552076 [00:00<00:07, 71370.92it/s] 10%|█         | 56169/552076 [00:00<00:06, 75679.78it/s] 12%|█▏        | 63698/552076 [00:00<00:06, 73950.36it/s] 13%|█▎        | 71074/552076 [00:01<00:07, 67139.67it/s] 14%|█▍        | 77896/552076 [00:01<00:07, 66448.40it/s] 16%|█▋        | 89844/552076 [00:01<00:06, 76654.50it/s] 18%|█▊        | 102066/552076 [00:01<00:05, 86306.25it/s] 21%|██        | 113689/552076 [00:01<00:04, 93529.99it/s] 22%|██▏       | 123804/552076 [00:01<00:04, 85891.99it/s] 24%|██▍       | 133049/552076 [00:01<00:04, 85013.95it/s] 26%|██▋       | 144979/552076 [00:01<00:04, 92640.71it/s] 28%|██▊       | 157238/552076 [00:01<00:03, 99967.14it/s] 31%|███       | 169065/552076 [00:02<00:03, 103642.73it/s] 33%|███▎      | 179837/552076 [00:02<00:03, 102495.66it/s] 35%|███▍      | 191412/552076 [00:02<00:03, 106139.35it/s] 37%|███▋      | 203662/552076 [00:02<00:03, 110567.84it/s] 39%|███▉      | 215963/552076 [00:02<00:02, 114025.62it/s] 41%|████▏     | 228387/552076 [00:02<00:02, 116907.66it/s] 44%|████▎     | 240756/552076 [00:02<00:02, 118862.17it/s] 46%|████▌     | 252973/552076 [00:02<00:02, 119834.50it/s] 48%|████▊     | 265282/552076 [00:02<00:02, 120792.28it/s] 50%|█████     | 277417/552076 [00:02<00:02, 117962.31it/s] 52%|█████▏    | 289267/552076 [00:03<00:02, 112404.04it/s] 55%|█████▍    | 301323/552076 [00:03<00:02, 114732.28it/s] 57%|█████▋    | 313640/552076 [00:03<00:02, 117138.02it/s] 59%|█████▉    | 326105/552076 [00:03<00:01, 119292.46it/s] 61%|██████▏   | 338211/552076 [00:03<00:01, 119815.87it/s] 63%|██████▎   | 350419/552076 [00:03<00:01, 120483.73it/s] 66%|██████▌   | 362783/552076 [00:03<00:01, 121410.78it/s] 68%|██████▊   | 375174/552076 [00:03<00:01, 122149.15it/s] 70%|███████   | 387535/552076 [00:03<00:01, 122583.11it/s] 72%|███████▏  | 399806/552076 [00:03<00:01, 117605.41it/s] 75%|███████▍  | 411618/552076 [00:04<00:01, 113691.49it/s] 77%|███████▋  | 424010/552076 [00:04<00:01, 116578.12it/s] 79%|███████▉  | 436432/552076 [00:04<00:00, 118767.86it/s] 81%|████████▏ | 448893/552076 [00:04<00:00, 120461.11it/s] 84%|████████▎ | 461361/552076 [00:04<00:00, 121694.66it/s] 86%|████████▌ | 473809/552076 [00:04<00:00, 122516.95it/s] 88%|████████▊ | 486163/552076 [00:04<00:00, 122822.03it/s] 90%|█████████ | 498463/552076 [00:04<00:00, 121320.06it/s] 92%|█████████▏| 510612/552076 [00:04<00:00, 113127.70it/s] 95%|█████████▍| 522619/552076 [00:04<00:00, 115122.74it/s] 97%|█████████▋| 534822/552076 [00:05<00:00, 117110.71it/s] 99%|█████████▉| 547006/552076 [00:05<00:00, 118490.36it/s]100%|██████████| 552076/552076 [00:05<00:00, 105478.23it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 10405/552076 [00:00<00:05, 104041.42it/s]  3%|▎         | 17326/552076 [00:00<00:06, 88620.06it/s]   4%|▍         | 23760/552076 [00:00<00:06, 78452.10it/s]  6%|▌         | 30432/552076 [00:00<00:07, 74519.25it/s]  8%|▊         | 41578/552076 [00:00<00:06, 82745.26it/s] 10%|▉         | 53997/552076 [00:00<00:05, 91950.38it/s] 12%|█▏        | 65467/552076 [00:00<00:04, 97765.70it/s] 14%|█▎        | 74986/552076 [00:00<00:05, 88188.37it/s] 15%|█▌        | 83803/552076 [00:00<00:05, 83489.51it/s] 17%|█▋        | 96142/552076 [00:01<00:04, 92457.60it/s] 19%|█▉        | 105723/552076 [00:01<00:04, 91962.21it/s] 21%|██        | 115155/552076 [00:01<00:04, 88237.22it/s] 22%|██▏       | 124176/552076 [00:01<00:05, 78040.55it/s] 24%|██▍       | 134056/552076 [00:01<00:05, 83288.68it/s] 26%|██▌       | 143343/552076 [00:01<00:04, 85947.12it/s] 28%|██▊       | 152202/552076 [00:01<00:05, 78614.56it/s] 29%|██▉       | 162678/552076 [00:01<00:04, 84975.68it/s] 32%|███▏      | 174654/552076 [00:01<00:04, 93086.67it/s] 33%|███▎      | 184449/552076 [00:02<00:04, 85965.64it/s] 36%|███▌      | 196315/552076 [00:02<00:03, 93710.45it/s] 38%|███▊      | 208573/552076 [00:02<00:03, 100833.29it/s] 40%|███▉      | 220772/552076 [00:02<00:03, 106367.44it/s] 42%|████▏     | 231853/552076 [00:02<00:03, 87344.47it/s]  44%|████▎     | 241458/552076 [00:02<00:03, 84760.74it/s] 46%|████▌     | 252942/552076 [00:02<00:03, 91988.29it/s] 48%|████▊     | 265131/552076 [00:02<00:02, 99294.40it/s] 50%|█████     | 277414/552076 [00:03<00:02, 105348.11it/s] 53%|█████▎    | 289856/552076 [00:03<00:02, 110425.91it/s] 55%|█████▍    | 302282/552076 [00:03<00:02, 114239.82it/s] 57%|█████▋    | 314831/552076 [00:03<00:02, 117395.13it/s] 59%|█████▉    | 326939/552076 [00:03<00:01, 118474.95it/s] 61%|██████▏   | 339108/552076 [00:03<00:01, 119416.66it/s] 64%|██████▎   | 351178/552076 [00:03<00:02, 92038.82it/s]  66%|██████▌   | 363217/552076 [00:03<00:01, 99034.14it/s] 68%|██████▊   | 374874/552076 [00:03<00:01, 103713.65it/s] 70%|███████   | 386980/552076 [00:04<00:01, 108370.79it/s] 72%|███████▏  | 399230/552076 [00:04<00:01, 112253.10it/s] 75%|███████▍  | 411531/552076 [00:04<00:01, 115276.72it/s] 77%|███████▋  | 423997/552076 [00:04<00:01, 117937.76it/s] 79%|███████▉  | 436273/552076 [00:04<00:00, 119343.05it/s] 81%|████████▏ | 448756/552076 [00:04<00:00, 120937.09it/s] 84%|████████▎ | 461178/552076 [00:04<00:00, 121901.23it/s] 86%|████████▌ | 473454/552076 [00:04<00:00, 121471.94it/s] 88%|████████▊ | 485662/552076 [00:04<00:00, 121025.85it/s] 90%|█████████ | 497808/552076 [00:04<00:00, 112542.03it/s] 92%|█████████▏| 509212/552076 [00:05<00:00, 108666.08it/s] 94%|█████████▍| 520212/552076 [00:05<00:00, 92438.15it/s]  96%|█████████▌| 529984/552076 [00:05<00:00, 92770.21it/s] 98%|█████████▊| 539621/552076 [00:05<00:00, 82003.47it/s] 99%|█████████▉| 549038/552076 [00:05<00:00, 85309.82it/s]100%|██████████| 552076/552076 [00:05<00:00, 98865.29it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6257/552076 [00:00<00:08, 62566.33it/s]  2%|▏         | 12375/552076 [00:00<00:08, 62024.93it/s]  3%|▎         | 19016/552076 [00:00<00:08, 63277.96it/s]  5%|▌         | 28595/552076 [00:00<00:07, 70450.59it/s]  7%|▋         | 38459/552076 [00:00<00:06, 75318.07it/s]  9%|▉         | 48550/552076 [00:00<00:06, 81519.73it/s] 10%|█         | 56308/552076 [00:00<00:06, 80175.19it/s] 12%|█▏        | 64692/552076 [00:00<00:05, 81240.23it/s] 13%|█▎        | 73317/552076 [00:00<00:05, 82679.69it/s] 15%|█▍        | 82095/552076 [00:01<00:05, 84145.43it/s] 16%|█▋        | 90429/552076 [00:01<00:05, 78162.95it/s] 18%|█▊        | 101992/552076 [00:01<00:05, 86579.07it/s] 21%|██        | 113354/552076 [00:01<00:04, 92509.87it/s] 22%|██▏       | 122930/552076 [00:01<00:07, 58684.44it/s] 24%|██▍       | 134088/552076 [00:01<00:06, 68413.78it/s] 27%|██▋       | 146559/552076 [00:01<00:05, 79128.97it/s] 29%|██▉       | 158965/552076 [00:01<00:04, 88773.06it/s] 31%|███       | 170844/552076 [00:02<00:03, 96052.51it/s] 33%|███▎      | 183115/552076 [00:02<00:03, 102748.69it/s] 35%|███▌      | 195123/552076 [00:02<00:03, 107398.14it/s] 38%|███▊      | 207304/552076 [00:02<00:03, 111349.16it/s] 40%|███▉      | 219964/552076 [00:02<00:02, 115522.28it/s] 42%|████▏     | 233427/552076 [00:02<00:02, 120659.26it/s] 45%|████▍     | 246014/552076 [00:02<00:02, 122174.44it/s] 47%|████▋     | 258508/552076 [00:02<00:02, 122757.57it/s] 49%|████▉     | 271030/552076 [00:02<00:02, 123483.41it/s] 51%|█████▏    | 283516/552076 [00:02<00:02, 123703.58it/s] 54%|█████▎    | 295983/552076 [00:03<00:02, 123628.23it/s] 56%|█████▌    | 308413/552076 [00:03<00:01, 123531.25it/s] 58%|█████▊    | 320824/552076 [00:03<00:01, 123703.73it/s] 60%|██████    | 333228/552076 [00:03<00:01, 120241.49it/s] 63%|██████▎   | 346398/552076 [00:03<00:01, 123463.77it/s] 65%|██████▍   | 358797/552076 [00:03<00:01, 122259.27it/s] 67%|██████▋   | 371063/552076 [00:03<00:01, 122312.13it/s] 69%|██████▉   | 383322/552076 [00:03<00:01, 122365.77it/s] 72%|███████▏  | 395578/552076 [00:03<00:01, 122224.99it/s] 74%|███████▍  | 407815/552076 [00:03<00:01, 122034.85it/s] 76%|███████▌  | 420181/552076 [00:04<00:01, 122517.23it/s] 78%|███████▊  | 432440/552076 [00:04<00:01, 115548.66it/s] 81%|████████  | 444915/552076 [00:04<00:00, 118161.99it/s] 83%|████████▎ | 456807/552076 [00:04<00:00, 104181.36it/s] 85%|████████▍ | 467581/552076 [00:04<00:00, 95034.20it/s]  86%|████████▋ | 477489/552076 [00:04<00:00, 94759.36it/s] 88%|████████▊ | 487249/552076 [00:04<00:00, 90215.60it/s] 90%|█████████ | 498822/552076 [00:04<00:00, 96603.35it/s] 92%|█████████▏| 510554/552076 [00:04<00:00, 102005.15it/s] 94%|█████████▍| 521520/552076 [00:05<00:00, 104185.88it/s] 97%|█████████▋| 533228/552076 [00:05<00:00, 107743.41it/s] 99%|█████████▊| 544286/552076 [00:05<00:00, 108578.64it/s]100%|██████████| 552076/552076 [00:05<00:00, 103026.46it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12121/552076 [00:00<00:04, 121205.78it/s]  4%|▍         | 22858/552076 [00:00<00:04, 116691.53it/s]  6%|▋         | 35213/552076 [00:00<00:04, 118665.51it/s]  9%|▊         | 47414/552076 [00:00<00:04, 119647.89it/s] 11%|█         | 59695/552076 [00:00<00:04, 120576.70it/s] 13%|█▎        | 71843/552076 [00:00<00:03, 120845.45it/s] 15%|█▌        | 83815/552076 [00:00<00:03, 120499.82it/s] 17%|█▋        | 95660/552076 [00:00<00:03, 119877.24it/s] 20%|█▉        | 108010/552076 [00:00<00:03, 120940.23it/s] 22%|██▏       | 120292/552076 [00:01<00:03, 121496.49it/s] 24%|██▍       | 132783/552076 [00:01<00:03, 122498.16it/s] 26%|██▋       | 144929/552076 [00:01<00:03, 122183.75it/s] 28%|██▊       | 157034/552076 [00:01<00:03, 121840.56it/s] 31%|███       | 169312/552076 [00:01<00:03, 122117.96it/s] 33%|███▎      | 181713/552076 [00:01<00:03, 122676.74it/s] 36%|███▌      | 199345/552076 [00:01<00:02, 134997.66it/s] 40%|████      | 221381/552076 [00:01<00:02, 152747.91it/s] 44%|████▍     | 243677/552076 [00:01<00:01, 168682.87it/s] 48%|████▊     | 263524/552076 [00:01<00:01, 176634.62it/s] 52%|█████▏    | 286209/552076 [00:02<00:01, 189197.60it/s] 56%|█████▌    | 307659/552076 [00:02<00:01, 194525.00it/s] 59%|█████▉    | 327794/552076 [00:02<00:01, 181969.83it/s] 63%|██████▎   | 350218/552076 [00:02<00:01, 192875.79it/s] 67%|██████▋   | 372012/552076 [00:02<00:00, 199767.49it/s] 72%|███████▏  | 394853/552076 [00:02<00:00, 207576.41it/s] 75%|███████▌  | 416461/552076 [00:02<00:00, 210055.41it/s] 79%|███████▉  | 437775/552076 [00:02<00:00, 168610.51it/s] 83%|████████▎ | 456158/552076 [00:02<00:00, 152845.09it/s] 86%|████████▋ | 477024/552076 [00:03<00:00, 166179.03it/s] 91%|█████████ | 500580/552076 [00:03<00:00, 182285.11it/s] 95%|█████████▍| 523797/552076 [00:03<00:00, 194844.20it/s] 99%|█████████▊| 544845/552076 [00:03<00:00, 199285.38it/s]100%|██████████| 552076/552076 [00:03<00:00, 162717.62it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22198/552076 [00:00<00:02, 221973.86it/s]  8%|▊         | 43581/552076 [00:00<00:02, 219464.76it/s] 12%|█▏        | 65138/552076 [00:00<00:02, 218279.80it/s] 16%|█▌        | 87228/552076 [00:00<00:02, 219058.75it/s] 20%|█▉        | 108330/552076 [00:00<00:02, 216583.29it/s] 24%|██▍       | 131377/552076 [00:00<00:01, 220567.85it/s] 27%|██▋       | 150847/552076 [00:00<00:02, 187777.37it/s] 31%|███       | 172209/552076 [00:00<00:01, 194846.55it/s] 35%|███▌      | 194739/552076 [00:00<00:01, 203081.54it/s] 39%|███▉      | 217537/552076 [00:01<00:01, 209960.47it/s] 44%|████▎     | 240981/552076 [00:01<00:01, 216747.67it/s] 48%|████▊     | 262721/552076 [00:01<00:01, 216942.40it/s] 52%|█████▏    | 284368/552076 [00:01<00:01, 174733.83it/s] 56%|█████▌    | 307380/552076 [00:01<00:01, 188332.00it/s] 60%|█████▉    | 330594/552076 [00:01<00:01, 199632.07it/s] 64%|██████▍   | 353266/552076 [00:01<00:00, 207053.46it/s] 68%|██████▊   | 375598/552076 [00:01<00:00, 211677.38it/s] 72%|███████▏  | 398653/552076 [00:01<00:00, 217005.31it/s] 76%|███████▋  | 421822/552076 [00:02<00:00, 221208.82it/s] 80%|████████  | 444269/552076 [00:02<00:00, 221667.85it/s] 85%|████████▍ | 466665/552076 [00:02<00:00, 221734.64it/s] 89%|████████▊ | 488999/552076 [00:02<00:00, 222196.65it/s] 93%|█████████▎| 511996/552076 [00:02<00:00, 224471.25it/s] 97%|█████████▋| 534528/552076 [00:02<00:00, 222954.42it/s]100%|██████████| 552076/552076 [00:02<00:00, 211980.72it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22086/552076 [00:00<00:02, 220856.00it/s]  8%|▊         | 44914/552076 [00:00<00:02, 223031.90it/s] 12%|█▏        | 67038/552076 [00:00<00:02, 222490.08it/s] 16%|█▋        | 90394/552076 [00:00<00:02, 225699.03it/s] 21%|██        | 113467/552076 [00:00<00:01, 227182.64it/s] 25%|██▍       | 136000/552076 [00:00<00:01, 226622.91it/s] 29%|██▊       | 158561/552076 [00:00<00:01, 226315.22it/s] 33%|███▎      | 180011/552076 [00:00<00:01, 222634.29it/s] 36%|███▋      | 201020/552076 [00:00<00:01, 179687.76it/s] 40%|███▉      | 219444/552076 [00:01<00:02, 158360.24it/s] 43%|████▎     | 236061/552076 [00:01<00:02, 146975.14it/s] 46%|████▌     | 251469/552076 [00:01<00:02, 141047.46it/s] 48%|████▊     | 266122/552076 [00:01<00:02, 136011.32it/s] 51%|█████     | 280146/552076 [00:01<00:02, 131740.16it/s] 53%|█████▎    | 293645/552076 [00:01<00:02, 99965.98it/s]  55%|█████▌    | 306189/552076 [00:01<00:02, 106450.13it/s] 58%|█████▊    | 318717/552076 [00:02<00:02, 111476.22it/s] 60%|██████    | 331253/552076 [00:02<00:01, 115305.03it/s] 62%|██████▏   | 343388/552076 [00:02<00:01, 112482.22it/s] 64%|██████▍   | 355075/552076 [00:02<00:01, 108380.63it/s] 67%|██████▋   | 367245/552076 [00:02<00:01, 112058.63it/s] 69%|██████▉   | 379666/552076 [00:02<00:01, 115444.96it/s] 71%|███████   | 391425/552076 [00:02<00:01, 94424.41it/s]  73%|███████▎  | 403751/552076 [00:02<00:01, 101551.38it/s] 75%|███████▌  | 414603/552076 [00:02<00:01, 99130.34it/s]  77%|███████▋  | 425676/552076 [00:03<00:01, 101086.29it/s] 79%|███████▉  | 436144/552076 [00:03<00:01, 100938.80it/s] 81%|████████  | 447238/552076 [00:03<00:01, 102178.76it/s] 83%|████████▎ | 459559/552076 [00:03<00:00, 107692.11it/s] 85%|████████▌ | 471841/552076 [00:03<00:00, 111821.72it/s] 88%|████████▊ | 483208/552076 [00:03<00:00, 109962.24it/s] 90%|████████▉ | 494341/552076 [00:03<00:00, 108234.86it/s] 92%|█████████▏| 505266/552076 [00:03<00:00, 107282.19it/s] 93%|█████████▎| 516068/552076 [00:03<00:00, 77096.89it/s]  95%|█████████▌| 525025/552076 [00:04<00:00, 51558.42it/s] 96%|█████████▋| 532168/552076 [00:04<00:00, 45334.67it/s] 97%|█████████▋| 538229/552076 [00:04<00:00, 40108.60it/s] 98%|█████████▊| 543420/552076 [00:04<00:00, 38161.84it/s] 99%|█████████▉| 548082/552076 [00:04<00:00, 36405.58it/s]100%|██████████| 552076/552076 [00:05<00:00, 107768.53it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 4395/552076 [00:00<00:13, 40836.51it/s]  2%|▏         | 9004/552076 [00:00<00:13, 40747.70it/s]  2%|▏         | 12943/552076 [00:00<00:13, 40329.96it/s]  3%|▎         | 16770/552076 [00:00<00:13, 39688.39it/s]  4%|▍         | 21081/552076 [00:00<00:13, 39737.86it/s]  5%|▍         | 25397/552076 [00:00<00:13, 40333.73it/s]  5%|▌         | 30023/552076 [00:00<00:12, 40603.17it/s]  6%|▌         | 34214/552076 [00:00<00:12, 40653.71it/s]  7%|▋         | 38711/552076 [00:00<00:12, 41858.58it/s]  8%|▊         | 42743/552076 [00:01<00:12, 40658.68it/s]  8%|▊         | 46710/552076 [00:01<00:12, 40345.83it/s]  9%|▉         | 50838/552076 [00:01<00:12, 40621.39it/s] 10%|█         | 55491/552076 [00:01<00:11, 42229.44it/s] 11%|█         | 59697/552076 [00:01<00:11, 41035.40it/s] 12%|█▏        | 63962/552076 [00:01<00:12, 40450.12it/s] 12%|█▏        | 68490/552076 [00:01<00:11, 40563.38it/s] 13%|█▎        | 72546/552076 [00:01<00:11, 40529.67it/s] 14%|█▍        | 76632/552076 [00:01<00:11, 40627.32it/s] 15%|█▍        | 80808/552076 [00:01<00:11, 40334.28it/s] 15%|█▌        | 85028/552076 [00:02<00:11, 40249.28it/s] 16%|█▌        | 89308/552076 [00:02<00:11, 40981.97it/s] 17%|█▋        | 93513/552076 [00:02<00:11, 40165.09it/s] 18%|█▊        | 97689/552076 [00:02<00:11, 40297.09it/s] 18%|█▊        | 101903/552076 [00:02<00:11, 40309.45it/s] 19%|█▉        | 106047/552076 [00:02<00:11, 40367.75it/s] 20%|█▉        | 110206/552076 [00:02<00:10, 40556.08it/s] 21%|██        | 114510/552076 [00:02<00:10, 40385.96it/s] 22%|██▏       | 118842/552076 [00:02<00:10, 40710.06it/s] 22%|██▏       | 123303/552076 [00:03<00:10, 41090.19it/s] 23%|██▎       | 127778/552076 [00:03<00:10, 41030.13it/s] 24%|██▍       | 132129/552076 [00:03<00:10, 41743.84it/s] 25%|██▍       | 136308/552076 [00:03<00:10, 41545.72it/s] 25%|██▌       | 140705/552076 [00:03<00:10, 40638.49it/s] 26%|██▌       | 144839/552076 [00:03<00:09, 40741.38it/s] 27%|██▋       | 149434/552076 [00:03<00:09, 42175.40it/s] 28%|██▊       | 153668/552076 [00:03<00:09, 40459.57it/s] 29%|██▊       | 157846/552076 [00:03<00:09, 40621.69it/s] 29%|██▉       | 162462/552076 [00:03<00:09, 40754.93it/s] 30%|███       | 166627/552076 [00:04<00:09, 40690.20it/s] 31%|███       | 170861/552076 [00:04<00:09, 41170.86it/s] 32%|███▏      | 175037/552076 [00:04<00:09, 40241.36it/s] 32%|███▏      | 179072/552076 [00:04<00:09, 40212.15it/s] 33%|███▎      | 183189/552076 [00:04<00:09, 40494.21it/s] 34%|███▍      | 189491/552076 [00:04<00:08, 44434.80it/s] 35%|███▌      | 194983/552076 [00:04<00:07, 45968.31it/s] 36%|███▌      | 199677/552076 [00:04<00:08, 42731.58it/s] 37%|███▋      | 204064/552076 [00:04<00:08, 39225.59it/s] 38%|███▊      | 208440/552076 [00:05<00:08, 39948.90it/s] 39%|███▊      | 213031/552076 [00:05<00:08, 41567.60it/s] 39%|███▉      | 217299/552076 [00:05<00:07, 41894.31it/s] 40%|████      | 221550/552076 [00:05<00:08, 38977.82it/s] 41%|████      | 227015/552076 [00:05<00:07, 42489.70it/s] 42%|████▏     | 231497/552076 [00:05<00:07, 43162.45it/s] 43%|████▎     | 235923/552076 [00:05<00:07, 40268.82it/s] 43%|████▎     | 240066/552076 [00:05<00:08, 37112.37it/s] 44%|████▍     | 243907/552076 [00:05<00:08, 35995.18it/s] 45%|████▍     | 247605/552076 [00:06<00:08, 34047.71it/s] 45%|████▌     | 251101/552076 [00:06<00:08, 33938.60it/s] 46%|████▌     | 254559/552076 [00:06<00:09, 32230.19it/s] 47%|████▋     | 257845/552076 [00:06<00:09, 31725.92it/s] 47%|████▋     | 261364/552076 [00:06<00:08, 32690.89it/s] 48%|████▊     | 264673/552076 [00:06<00:09, 31382.69it/s] 49%|████▊     | 268245/552076 [00:06<00:08, 32568.96it/s] 49%|████▉     | 271541/552076 [00:06<00:08, 31881.20it/s] 50%|████▉     | 274760/552076 [00:06<00:08, 31901.72it/s] 50%|█████     | 278388/552076 [00:07<00:08, 33100.00it/s] 51%|█████     | 281725/552076 [00:07<00:08, 33072.33it/s] 52%|█████▏    | 285051/552076 [00:07<00:08, 31876.18it/s] 52%|█████▏    | 288583/552076 [00:07<00:08, 31626.02it/s] 53%|█████▎    | 292082/552076 [00:07<00:08, 30912.43it/s] 53%|█████▎    | 295353/552076 [00:07<00:08, 30875.25it/s] 54%|█████▍    | 298759/552076 [00:07<00:08, 30908.32it/s] 55%|█████▍    | 302162/552076 [00:07<00:07, 31426.79it/s] 55%|█████▌    | 305690/552076 [00:07<00:07, 32491.24it/s] 56%|█████▌    | 309034/552076 [00:08<00:07, 32375.12it/s] 57%|█████▋    | 312592/552076 [00:08<00:07, 33273.84it/s] 57%|█████▋    | 315933/552076 [00:08<00:07, 32917.58it/s] 59%|█████▊    | 323206/552076 [00:08<00:05, 39385.33it/s] 60%|█████▉    | 330673/552076 [00:08<00:04, 45890.85it/s] 62%|██████▏   | 339594/552076 [00:08<00:04, 52800.30it/s] 63%|██████▎   | 348451/552076 [00:08<00:03, 60078.93it/s] 64%|██████▍   | 355457/552076 [00:08<00:03, 62598.52it/s] 66%|██████▋   | 366508/552076 [00:08<00:02, 71957.11it/s] 68%|██████▊   | 376599/552076 [00:08<00:02, 78732.67it/s] 70%|██████▉   | 385421/552076 [00:09<00:02, 81356.79it/s] 71%|███████▏  | 394207/552076 [00:09<00:02, 73480.64it/s] 73%|███████▎  | 402156/552076 [00:09<00:02, 67024.82it/s] 74%|███████▍  | 409389/552076 [00:09<00:02, 53078.38it/s] 75%|███████▌  | 415524/552076 [00:09<00:02, 47760.45it/s] 76%|███████▋  | 420980/552076 [00:09<00:02, 44280.90it/s] 77%|███████▋  | 425935/552076 [00:10<00:03, 38232.07it/s] 78%|███████▊  | 430273/552076 [00:10<00:03, 35918.95it/s] 79%|███████▊  | 434254/552076 [00:10<00:03, 31727.20it/s] 80%|███████▉  | 439211/552076 [00:10<00:03, 35085.02it/s] 80%|████████  | 443224/552076 [00:10<00:03, 35542.53it/s] 81%|████████  | 447035/552076 [00:10<00:02, 35586.44it/s] 82%|████████▏ | 451069/552076 [00:10<00:02, 36033.61it/s] 82%|████████▏ | 455159/552076 [00:10<00:02, 36804.86it/s] 83%|████████▎ | 459819/552076 [00:10<00:02, 39172.59it/s] 84%|████████▍ | 464565/552076 [00:11<00:02, 40858.79it/s] 85%|████████▍ | 469069/552076 [00:11<00:01, 41509.40it/s] 86%|████████▌ | 473288/552076 [00:11<00:02, 38764.16it/s] 86%|████████▋ | 477249/552076 [00:11<00:02, 36540.26it/s] 87%|████████▋ | 481920/552076 [00:11<00:01, 39093.21it/s] 88%|████████▊ | 485939/552076 [00:11<00:01, 38033.35it/s] 89%|████████▊ | 489826/552076 [00:11<00:01, 35558.54it/s] 89%|████████▉ | 493473/552076 [00:11<00:01, 31738.82it/s] 90%|█████████ | 498193/552076 [00:11<00:01, 35196.70it/s] 91%|█████████ | 502128/552076 [00:12<00:01, 36347.24it/s] 92%|█████████▏| 505986/552076 [00:12<00:01, 36987.67it/s] 92%|█████████▏| 509800/552076 [00:12<00:01, 35492.48it/s] 93%|█████████▎| 514026/552076 [00:12<00:01, 36806.43it/s] 94%|█████████▍| 518179/552076 [00:12<00:00, 36954.97it/s] 95%|█████████▍| 522546/552076 [00:12<00:00, 38741.16it/s] 95%|█████████▌| 526482/552076 [00:12<00:00, 36296.81it/s] 96%|█████████▌| 530760/552076 [00:12<00:00, 37549.91it/s] 97%|█████████▋| 534578/552076 [00:12<00:00, 35888.90it/s] 98%|█████████▊| 538938/552076 [00:13<00:00, 37340.04it/s] 98%|█████████▊| 542729/552076 [00:13<00:00, 34992.68it/s] 99%|█████████▉| 546299/552076 [00:13<00:00, 34819.47it/s]100%|█████████▉| 549830/552076 [00:13<00:00, 33743.13it/s]100%|██████████| 552076/552076 [00:13<00:00, 40965.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6315/552076 [00:00<00:08, 63144.64it/s]  2%|▏         | 12170/552076 [00:00<00:08, 60192.70it/s]  3%|▎         | 17862/552076 [00:00<00:09, 59170.70it/s]  4%|▍         | 23540/552076 [00:00<00:09, 58254.64it/s]  5%|▌         | 29272/552076 [00:00<00:09, 57970.45it/s]  6%|▋         | 35058/552076 [00:00<00:08, 57936.25it/s]  7%|▋         | 40765/552076 [00:00<00:08, 57673.52it/s]  8%|▊         | 46639/552076 [00:00<00:08, 57989.27it/s]  9%|▉         | 52439/552076 [00:00<00:08, 57991.34it/s] 11%|█         | 58068/552076 [00:01<00:08, 57224.91it/s] 12%|█▏        | 63812/552076 [00:01<00:08, 57053.43it/s] 13%|█▎        | 69810/552076 [00:01<00:08, 57900.54it/s] 14%|█▎        | 75519/552076 [00:01<00:08, 56807.92it/s] 15%|█▍        | 81655/552076 [00:01<00:08, 58100.44it/s] 16%|█▌        | 87472/552076 [00:01<00:07, 58120.89it/s] 17%|█▋        | 93264/552076 [00:01<00:08, 56972.61it/s] 18%|█▊        | 99033/552076 [00:01<00:08, 55747.28it/s] 19%|█▉        | 104607/552076 [00:01<00:08, 55390.46it/s] 20%|█▉        | 110147/552076 [00:01<00:08, 54910.04it/s] 21%|██        | 115639/552076 [00:02<00:08, 54231.60it/s] 22%|██▏       | 121065/552076 [00:02<00:07, 54159.78it/s] 23%|██▎       | 126678/552076 [00:02<00:07, 54735.46it/s] 24%|██▍       | 132155/552076 [00:02<00:07, 54489.15it/s] 25%|██▍       | 137778/552076 [00:02<00:07, 54998.96it/s] 26%|██▌       | 143496/552076 [00:02<00:07, 55634.91it/s] 27%|██▋       | 149064/552076 [00:02<00:07, 54300.73it/s] 28%|██▊       | 154792/552076 [00:02<00:07, 55160.78it/s] 29%|██▉       | 160319/552076 [00:02<00:07, 54227.71it/s] 30%|███       | 165753/552076 [00:03<00:08, 47963.23it/s] 31%|███       | 170690/552076 [00:03<00:08, 47555.63it/s] 32%|███▏      | 175545/552076 [00:03<00:08, 42225.38it/s] 33%|███▎      | 179948/552076 [00:03<00:10, 36425.00it/s] 33%|███▎      | 184127/552076 [00:03<00:09, 37567.46it/s] 34%|███▍      | 188080/552076 [00:03<00:09, 37991.30it/s] 35%|███▍      | 192018/552076 [00:03<00:09, 38134.29it/s] 36%|███▌      | 196536/552076 [00:03<00:08, 40005.64it/s] 36%|███▋      | 200629/552076 [00:03<00:08, 39200.44it/s] 37%|███▋      | 204618/552076 [00:04<00:09, 35855.52it/s] 38%|███▊      | 208712/552076 [00:04<00:09, 37242.99it/s] 39%|███▉      | 214266/552076 [00:04<00:08, 41327.12it/s] 40%|███▉      | 219194/552076 [00:04<00:07, 43429.54it/s] 41%|████      | 223742/552076 [00:04<00:07, 42931.16it/s] 41%|████▏     | 228155/552076 [00:04<00:08, 39156.51it/s] 42%|████▏     | 232692/552076 [00:04<00:07, 40833.05it/s] 43%|████▎     | 237043/552076 [00:04<00:07, 39547.10it/s] 44%|████▎     | 241092/552076 [00:04<00:08, 34947.57it/s] 44%|████▍     | 244751/552076 [00:05<00:09, 32364.06it/s] 45%|████▌     | 248690/552076 [00:05<00:08, 33788.17it/s] 46%|████▌     | 252400/552076 [00:05<00:08, 34717.33it/s] 46%|████▋     | 255965/552076 [00:05<00:08, 34803.20it/s] 47%|████▋     | 259983/552076 [00:05<00:08, 36055.83it/s] 48%|████▊     | 265312/552076 [00:05<00:07, 39929.15it/s] 49%|████▉     | 269475/552076 [00:05<00:07, 40027.26it/s] 50%|████▉     | 273597/552076 [00:05<00:07, 39331.16it/s] 50%|█████     | 277616/552076 [00:05<00:07, 37669.53it/s] 51%|█████     | 281588/552076 [00:06<00:07, 37089.60it/s] 52%|█████▏    | 285434/552076 [00:06<00:07, 37490.21it/s] 52%|█████▏    | 289245/552076 [00:06<00:06, 37673.28it/s] 53%|█████▎    | 293102/552076 [00:06<00:06, 37027.58it/s] 54%|█████▍    | 297300/552076 [00:06<00:06, 38385.67it/s] 55%|█████▍    | 301167/552076 [00:06<00:06, 36982.65it/s] 55%|█████▌    | 305006/552076 [00:06<00:06, 36366.25it/s] 56%|█████▌    | 308667/552076 [00:06<00:07, 33933.11it/s] 57%|█████▋    | 312110/552076 [00:06<00:07, 32397.70it/s] 57%|█████▋    | 315400/552076 [00:07<00:08, 29074.80it/s] 58%|█████▊    | 319674/552076 [00:07<00:07, 32158.98it/s] 59%|█████▊    | 323143/552076 [00:07<00:07, 32272.07it/s] 59%|█████▉    | 326490/552076 [00:07<00:07, 30289.28it/s] 60%|█████▉    | 330230/552076 [00:07<00:06, 32120.95it/s] 61%|██████    | 334369/552076 [00:07<00:06, 34433.94it/s] 61%|██████▏   | 338239/552076 [00:07<00:06, 33716.74it/s] 62%|██████▏   | 341699/552076 [00:07<00:06, 31983.34it/s] 62%|██████▏   | 344978/552076 [00:07<00:06, 29591.07it/s] 63%|██████▎   | 348029/552076 [00:08<00:06, 29609.80it/s] 64%|██████▎   | 351055/552076 [00:08<00:07, 28641.54it/s] 64%|██████▍   | 354863/552076 [00:08<00:06, 30764.63it/s] 65%|██████▍   | 358228/552076 [00:08<00:06, 30635.46it/s] 66%|██████▌   | 362011/552076 [00:08<00:05, 32488.15it/s] 66%|██████▋   | 365944/552076 [00:08<00:05, 32319.41it/s] 67%|██████▋   | 371343/552076 [00:08<00:04, 36560.43it/s] 68%|██████▊   | 375221/552076 [00:08<00:04, 36808.19it/s] 69%|██████▊   | 379407/552076 [00:08<00:04, 38189.75it/s] 69%|██████▉   | 383349/552076 [00:09<00:04, 36342.39it/s] 70%|███████   | 387088/552076 [00:09<00:04, 34438.62it/s] 71%|███████   | 390626/552076 [00:09<00:04, 33271.40it/s] 71%|███████▏  | 394028/552076 [00:09<00:05, 30663.66it/s] 72%|███████▏  | 398562/552076 [00:09<00:04, 33961.43it/s] 73%|███████▎  | 402269/552076 [00:09<00:04, 34252.74it/s] 74%|███████▎  | 405818/552076 [00:09<00:04, 32577.00it/s] 74%|███████▍  | 410144/552076 [00:09<00:04, 34568.13it/s] 75%|███████▌  | 414246/552076 [00:09<00:03, 35486.45it/s] 76%|███████▌  | 417875/552076 [00:10<00:03, 33895.85it/s] 76%|███████▋  | 422283/552076 [00:10<00:03, 36419.14it/s] 77%|███████▋  | 426028/552076 [00:10<00:03, 34073.23it/s] 78%|███████▊  | 430573/552076 [00:10<00:03, 36838.77it/s] 79%|███████▊  | 434394/552076 [00:10<00:03, 35375.25it/s] 80%|███████▉  | 438995/552076 [00:10<00:02, 38010.25it/s] 80%|████████  | 442927/552076 [00:10<00:02, 37909.91it/s] 81%|████████  | 447401/552076 [00:10<00:02, 38798.73it/s] 82%|████████▏ | 451351/552076 [00:10<00:02, 38135.76it/s] 82%|████████▏ | 455216/552076 [00:11<00:02, 33097.66it/s] 83%|████████▎ | 459609/552076 [00:11<00:02, 34649.13it/s] 84%|████████▍ | 463909/552076 [00:11<00:02, 36792.73it/s] 85%|████████▍ | 468494/552076 [00:11<00:02, 39109.31it/s] 86%|████████▌ | 472533/552076 [00:11<00:02, 38680.00it/s] 86%|████████▋ | 476828/552076 [00:11<00:01, 38157.32it/s] 87%|████████▋ | 480709/552076 [00:11<00:02, 35028.64it/s] 88%|████████▊ | 484931/552076 [00:11<00:01, 36360.81it/s] 89%|████████▊ | 488797/552076 [00:11<00:01, 37019.82it/s] 89%|████████▉ | 492573/552076 [00:12<00:01, 37237.53it/s] 90%|████████▉ | 496339/552076 [00:12<00:01, 37336.66it/s] 91%|█████████ | 500102/552076 [00:12<00:01, 36265.46it/s] 91%|█████████▏| 503960/552076 [00:12<00:01, 36930.09it/s] 92%|█████████▏| 508049/552076 [00:12<00:01, 38034.67it/s] 93%|█████████▎| 511877/552076 [00:12<00:01, 37195.78it/s] 93%|█████████▎| 515685/552076 [00:12<00:00, 37455.35it/s] 94%|█████████▍| 519514/552076 [00:12<00:00, 37701.67it/s] 95%|█████████▍| 523616/552076 [00:12<00:00, 38639.27it/s] 96%|█████████▌| 527494/552076 [00:13<00:00, 37687.34it/s] 97%|█████████▋| 534966/552076 [00:13<00:00, 44268.70it/s] 98%|█████████▊| 542410/552076 [00:13<00:00, 50396.07it/s] 99%|█████████▉| 548066/552076 [00:13<00:00, 49166.61it/s]100%|██████████| 552076/552076 [00:13<00:00, 41104.84it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5001/552076 [00:00<00:10, 50005.28it/s]  2%|▏         | 8789/552076 [00:00<00:12, 44532.90it/s]  3%|▎         | 16889/552076 [00:00<00:10, 51242.35it/s]  4%|▍         | 22386/552076 [00:00<00:10, 51711.82it/s]  5%|▌         | 28752/552076 [00:00<00:09, 54797.23it/s]  7%|▋         | 40013/552076 [00:00<00:07, 64773.38it/s]  8%|▊         | 46826/552076 [00:00<00:08, 59063.03it/s] 10%|█         | 57757/552076 [00:00<00:07, 68509.98it/s] 13%|█▎        | 69132/552076 [00:00<00:06, 77791.20it/s] 14%|█▍        | 79676/552076 [00:01<00:05, 84433.28it/s] 16%|█▋        | 90400/552076 [00:01<00:05, 90186.90it/s] 18%|█▊        | 100127/552076 [00:01<00:05, 77859.43it/s] 20%|█▉        | 108707/552076 [00:01<00:06, 67049.39it/s] 21%|██        | 116232/552076 [00:01<00:09, 45543.40it/s] 22%|██▏       | 122281/552076 [00:01<00:09, 44651.67it/s] 23%|██▎       | 127797/552076 [00:02<00:09, 43537.26it/s] 24%|██▍       | 132892/552076 [00:02<00:10, 39966.72it/s] 25%|██▍       | 137646/552076 [00:02<00:09, 41896.69it/s] 26%|██▌       | 143298/552076 [00:02<00:08, 45421.52it/s] 27%|██▋       | 148658/552076 [00:02<00:08, 47480.56it/s] 28%|██▊       | 154314/552076 [00:02<00:07, 49882.12it/s] 29%|██▉       | 159705/552076 [00:02<00:07, 50856.80it/s] 30%|███       | 165703/552076 [00:02<00:07, 53287.58it/s] 31%|███       | 171271/552076 [00:02<00:07, 53696.66it/s] 32%|███▏      | 176747/552076 [00:03<00:06, 53630.88it/s] 33%|███▎      | 182526/552076 [00:03<00:06, 54251.95it/s] 34%|███▍      | 188450/552076 [00:03<00:06, 55656.89it/s] 35%|███▌      | 194308/552076 [00:03<00:06, 56502.08it/s] 37%|███▋      | 202005/552076 [00:03<00:05, 61399.47it/s] 38%|███▊      | 208524/552076 [00:03<00:05, 62488.98it/s] 39%|███▉      | 215014/552076 [00:03<00:05, 61302.09it/s] 40%|████      | 221571/552076 [00:03<00:05, 61105.65it/s] 41%|████▏     | 228069/552076 [00:03<00:05, 61433.53it/s] 42%|████▏     | 234267/552076 [00:03<00:05, 61595.99it/s] 44%|████▎     | 240455/552076 [00:04<00:05, 61277.83it/s] 45%|████▍     | 246685/552076 [00:04<00:04, 61579.95it/s] 46%|████▌     | 252858/552076 [00:04<00:04, 60701.40it/s] 47%|████▋     | 259200/552076 [00:04<00:04, 61490.84it/s] 48%|████▊     | 265361/552076 [00:04<00:04, 60272.46it/s] 49%|████▉     | 271402/552076 [00:04<00:05, 50736.14it/s] 50%|█████     | 276743/552076 [00:04<00:05, 48451.00it/s] 51%|█████     | 281797/552076 [00:04<00:05, 46295.93it/s] 52%|█████▏    | 286593/552076 [00:04<00:06, 43825.92it/s] 53%|█████▎    | 291398/552076 [00:05<00:06, 43065.82it/s] 54%|█████▎    | 295809/552076 [00:05<00:06, 41837.85it/s] 54%|█████▍    | 300073/552076 [00:05<00:06, 40974.63it/s] 55%|█████▌    | 304231/552076 [00:05<00:06, 39988.81it/s] 56%|█████▌    | 308338/552076 [00:05<00:06, 39557.44it/s] 57%|█████▋    | 312817/552076 [00:05<00:05, 40501.48it/s] 57%|█████▋    | 316897/552076 [00:05<00:05, 39981.97it/s] 58%|█████▊    | 322613/552076 [00:05<00:05, 43943.30it/s] 59%|█████▉    | 327142/552076 [00:05<00:05, 42369.92it/s] 60%|██████    | 331989/552076 [00:06<00:04, 44031.64it/s] 61%|██████    | 336484/552076 [00:06<00:05, 38324.00it/s] 62%|██████▏   | 340513/552076 [00:06<00:05, 38389.03it/s] 62%|██████▏   | 344490/552076 [00:06<00:05, 38285.69it/s] 63%|██████▎   | 348415/552076 [00:06<00:06, 33785.70it/s] 64%|██████▍   | 352494/552076 [00:06<00:05, 34634.39it/s] 64%|██████▍   | 356078/552076 [00:06<00:06, 31047.82it/s] 65%|██████▌   | 361283/552076 [00:06<00:05, 34744.30it/s] 67%|██████▋   | 369346/552076 [00:07<00:04, 41896.92it/s] 68%|██████▊   | 377539/552076 [00:07<00:03, 49093.17it/s] 69%|██████▉   | 383515/552076 [00:07<00:03, 51144.07it/s] 71%|███████   | 389399/552076 [00:07<00:03, 52348.82it/s] 72%|███████▏  | 395180/552076 [00:07<00:02, 52633.90it/s] 73%|███████▎  | 400826/552076 [00:07<00:02, 52958.27it/s] 74%|███████▎  | 406391/552076 [00:07<00:02, 53736.84it/s] 75%|███████▍  | 411955/552076 [00:07<00:02, 53323.47it/s] 76%|███████▌  | 417422/552076 [00:07<00:02, 53131.32it/s] 77%|███████▋  | 422830/552076 [00:07<00:02, 50449.48it/s] 78%|███████▊  | 427969/552076 [00:08<00:02, 50421.89it/s] 78%|███████▊  | 433077/552076 [00:08<00:02, 49659.51it/s] 79%|███████▉  | 438647/552076 [00:08<00:02, 51078.32it/s] 81%|████████  | 444429/552076 [00:08<00:02, 52928.53it/s] 82%|████████▏ | 450120/552076 [00:08<00:01, 54063.02it/s] 83%|████████▎ | 455566/552076 [00:08<00:01, 53243.15it/s] 84%|████████▎ | 461275/552076 [00:08<00:01, 54025.27it/s] 85%|████████▍ | 467068/552076 [00:08<00:01, 55139.13it/s] 86%|████████▌ | 472867/552076 [00:08<00:01, 55964.46it/s] 87%|████████▋ | 478483/552076 [00:09<00:01, 54780.01it/s] 88%|████████▊ | 484028/552076 [00:09<00:01, 54913.74it/s] 89%|████████▊ | 489809/552076 [00:09<00:01, 55750.73it/s] 90%|████████▉ | 495568/552076 [00:09<00:01, 56288.85it/s] 91%|█████████ | 501207/552076 [00:09<00:00, 55139.20it/s] 92%|█████████▏| 506734/552076 [00:09<00:00, 54345.56it/s] 93%|█████████▎| 512404/552076 [00:09<00:00, 55030.97it/s] 94%|█████████▍| 517917/552076 [00:09<00:00, 54004.57it/s] 95%|█████████▍| 523431/552076 [00:09<00:00, 54150.30it/s] 96%|█████████▌| 528854/552076 [00:09<00:00, 53686.15it/s] 97%|█████████▋| 534230/552076 [00:10<00:00, 53053.40it/s] 98%|█████████▊| 539623/552076 [00:10<00:00, 53312.94it/s] 99%|█████████▉| 545186/552076 [00:10<00:00, 52797.09it/s]100%|█████████▉| 550732/552076 [00:10<00:00, 53563.19it/s]100%|██████████| 552076/552076 [00:10<00:00, 53227.83it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6843/552076 [00:00<00:08, 66847.61it/s]  2%|▏         | 12799/552076 [00:00<00:08, 64479.62it/s]  3%|▎         | 16318/552076 [00:00<00:10, 51594.76it/s]  4%|▍         | 21114/552076 [00:00<00:10, 49826.69it/s]  5%|▍         | 27301/552076 [00:00<00:09, 52916.35it/s]  6%|▌         | 33045/552076 [00:00<00:09, 54196.03it/s]  7%|▋         | 39144/552076 [00:00<00:09, 55466.16it/s]  8%|▊         | 44285/552076 [00:00<00:10, 50696.36it/s]  9%|▉         | 49272/552076 [00:00<00:10, 49378.12it/s] 10%|▉         | 54355/552076 [00:01<00:12, 39813.74it/s] 11%|█         | 61481/552076 [00:01<00:10, 45888.73it/s] 13%|█▎        | 73786/552076 [00:01<00:08, 56521.51it/s] 16%|█▌        | 86106/552076 [00:01<00:06, 67477.01it/s] 18%|█▊        | 98540/552076 [00:01<00:05, 78206.28it/s] 20%|██        | 110445/552076 [00:01<00:05, 87178.44it/s] 22%|██▏       | 122811/552076 [00:01<00:04, 95641.63it/s] 24%|██▍       | 135153/552076 [00:01<00:04, 102566.97it/s] 27%|██▋       | 147532/552076 [00:01<00:03, 108126.55it/s] 29%|██▉       | 159918/552076 [00:02<00:03, 112408.90it/s] 31%|███       | 172406/552076 [00:02<00:03, 115878.49it/s] 33%|███▎      | 184785/552076 [00:02<00:03, 118142.43it/s] 36%|███▌      | 196961/552076 [00:02<00:03, 109102.39it/s] 38%|███▊      | 209470/552076 [00:02<00:03, 113451.98it/s] 40%|████      | 221924/552076 [00:02<00:02, 116542.87it/s] 42%|████▏     | 234137/552076 [00:02<00:02, 118162.33it/s] 45%|████▍     | 246419/552076 [00:02<00:02, 119520.65it/s] 47%|████▋     | 258498/552076 [00:02<00:02, 114247.13it/s] 49%|████▉     | 270858/552076 [00:02<00:02, 116899.13it/s] 51%|█████     | 282801/552076 [00:03<00:02, 117645.93it/s] 53%|█████▎    | 294985/552076 [00:03<00:02, 118870.89it/s] 56%|█████▌    | 307314/552076 [00:03<00:02, 120162.45it/s] 58%|█████▊    | 319375/552076 [00:03<00:02, 106238.81it/s] 60%|█████▉    | 330327/552076 [00:03<00:02, 96148.43it/s]  62%|██████▏   | 342576/552076 [00:03<00:02, 102778.98it/s] 64%|██████▍   | 354962/552076 [00:03<00:01, 108308.68it/s] 66%|██████▋   | 366164/552076 [00:03<00:02, 89776.81it/s]  68%|██████▊   | 375930/552076 [00:04<00:02, 72554.01it/s] 70%|██████▉   | 384270/552076 [00:04<00:03, 48858.73it/s] 71%|███████   | 390940/552076 [00:04<00:03, 43240.48it/s] 72%|███████▏  | 396632/552076 [00:04<00:04, 37820.53it/s] 73%|███████▎  | 401494/552076 [00:04<00:04, 36355.77it/s] 74%|███████▎  | 406380/552076 [00:05<00:03, 39378.44it/s] 76%|███████▌  | 417262/552076 [00:05<00:02, 48701.81it/s] 77%|███████▋  | 424546/552076 [00:05<00:02, 54077.35it/s] 79%|███████▉  | 436058/552076 [00:05<00:01, 64306.51it/s] 81%|████████  | 445551/552076 [00:05<00:01, 71172.30it/s] 82%|████████▏ | 455230/552076 [00:05<00:01, 77309.32it/s] 84%|████████▍ | 464114/552076 [00:05<00:01, 77639.64it/s] 86%|████████▌ | 474303/552076 [00:05<00:00, 83609.07it/s] 88%|████████▊ | 485385/552076 [00:05<00:00, 90257.48it/s] 90%|████████▉ | 496091/552076 [00:05<00:00, 94716.16it/s] 92%|█████████▏| 506068/552076 [00:06<00:00, 92094.12it/s] 94%|█████████▎| 517026/552076 [00:06<00:00, 96722.96it/s] 95%|█████████▌| 527019/552076 [00:06<00:00, 92682.38it/s] 97%|█████████▋| 536548/552076 [00:06<00:00, 89281.59it/s] 99%|█████████▉| 545685/552076 [00:06<00:00, 86083.57it/s]100%|██████████| 552076/552076 [00:06<00:00, 83365.69it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5608/552076 [00:00<00:09, 56079.92it/s]  2%|▏         | 11108/552076 [00:00<00:09, 54880.18it/s]  3%|▎         | 16384/552076 [00:00<00:09, 54225.35it/s]  4%|▍         | 21801/552076 [00:00<00:09, 54182.92it/s]  5%|▍         | 27175/552076 [00:00<00:09, 54033.01it/s]  6%|▌         | 32625/552076 [00:00<00:09, 54139.41it/s]  7%|▋         | 38230/552076 [00:00<00:09, 54698.48it/s]  8%|▊         | 43695/552076 [00:00<00:09, 54682.53it/s]  9%|▉         | 49508/552076 [00:00<00:09, 54678.50it/s] 10%|▉         | 55067/552076 [00:01<00:09, 54780.88it/s] 11%|█         | 61229/552076 [00:01<00:08, 56666.95it/s] 12%|█▏        | 66802/552076 [00:01<00:08, 55026.56it/s] 13%|█▎        | 72442/552076 [00:01<00:08, 55431.41it/s] 14%|█▍        | 77948/552076 [00:01<00:08, 55184.80it/s] 15%|█▌        | 83441/552076 [00:01<00:08, 55070.87it/s] 16%|█▌        | 89303/552076 [00:01<00:08, 54418.49it/s] 17%|█▋        | 95175/552076 [00:01<00:08, 54362.36it/s] 18%|█▊        | 100839/552076 [00:01<00:08, 55026.05it/s] 19%|█▉        | 106339/552076 [00:01<00:08, 54428.99it/s] 20%|██        | 111864/552076 [00:02<00:08, 54672.62it/s] 21%|██▏       | 117507/552076 [00:02<00:07, 55188.17it/s] 22%|██▏       | 123355/552076 [00:02<00:07, 56135.07it/s] 23%|██▎       | 128974/552076 [00:02<00:07, 55028.26it/s] 24%|██▍       | 134518/552076 [00:02<00:07, 55150.29it/s] 25%|██▌       | 140187/552076 [00:02<00:07, 55602.59it/s] 26%|██▋       | 145967/552076 [00:02<00:07, 55647.55it/s] 28%|██▊       | 151872/552076 [00:02<00:07, 56626.29it/s] 29%|██▊       | 157542/552076 [00:02<00:07, 50455.72it/s] 30%|██▉       | 163354/552076 [00:02<00:07, 52533.22it/s] 31%|███       | 168721/552076 [00:03<00:07, 51712.38it/s] 33%|███▎      | 180025/552076 [00:03<00:06, 61764.69it/s] 34%|███▍      | 188826/552076 [00:03<00:05, 67833.08it/s] 36%|███▌      | 196415/552076 [00:03<00:05, 64190.16it/s] 37%|███▋      | 203438/552076 [00:03<00:05, 62302.88it/s] 38%|███▊      | 210104/552076 [00:03<00:05, 61000.96it/s] 39%|███▉      | 216518/552076 [00:03<00:05, 61908.62it/s] 40%|████      | 222930/552076 [00:03<00:05, 60010.93it/s] 41%|████▏     | 229099/552076 [00:03<00:05, 60164.72it/s] 43%|████▎     | 235233/552076 [00:04<00:05, 60321.71it/s] 44%|████▎     | 241348/552076 [00:04<00:05, 58997.10it/s] 45%|████▍     | 247312/552076 [00:04<00:05, 54246.11it/s] 46%|████▋     | 256708/552076 [00:04<00:04, 62123.16it/s] 48%|████▊     | 263408/552076 [00:04<00:04, 60647.13it/s] 49%|████▉     | 269822/552076 [00:04<00:04, 61488.34it/s] 50%|█████     | 276218/552076 [00:04<00:04, 60721.48it/s] 51%|█████     | 282466/552076 [00:04<00:04, 59704.89it/s] 52%|█████▏    | 288563/552076 [00:05<00:05, 50552.76it/s] 53%|█████▎    | 293948/552076 [00:05<00:06, 40733.92it/s] 54%|█████▍    | 298559/552076 [00:05<00:06, 42055.46it/s] 55%|█████▌    | 303902/552076 [00:05<00:05, 44924.58it/s] 56%|█████▌    | 309630/552076 [00:05<00:05, 48032.71it/s] 57%|█████▋    | 315667/552076 [00:05<00:04, 51169.40it/s] 58%|█████▊    | 321388/552076 [00:05<00:04, 52360.98it/s] 59%|█████▉    | 326833/552076 [00:05<00:04, 52969.82it/s] 60%|██████    | 332535/552076 [00:05<00:04, 54122.43it/s] 61%|██████▏   | 338382/552076 [00:06<00:03, 55260.99it/s] 62%|██████▏   | 344187/552076 [00:06<00:03, 56068.70it/s] 63%|██████▎   | 349850/552076 [00:06<00:03, 55694.02it/s] 64%|██████▍   | 355459/552076 [00:06<00:03, 54734.89it/s] 67%|██████▋   | 367673/552076 [00:06<00:02, 65594.64it/s] 68%|██████▊   | 375191/552076 [00:06<00:03, 56643.15it/s] 69%|██████▉   | 381743/552076 [00:06<00:03, 51382.25it/s] 70%|███████   | 387596/552076 [00:06<00:03, 48541.61it/s] 71%|███████   | 392983/552076 [00:07<00:03, 46078.27it/s] 72%|███████▏  | 397990/552076 [00:07<00:03, 43588.82it/s] 73%|███████▎  | 402656/552076 [00:07<00:03, 43228.56it/s] 74%|███████▍  | 407195/552076 [00:07<00:03, 41690.78it/s] 75%|███████▍  | 411527/552076 [00:07<00:03, 39372.38it/s] 75%|███████▌  | 415605/552076 [00:07<00:03, 39764.67it/s] 76%|███████▌  | 419729/552076 [00:07<00:03, 40196.02it/s] 77%|███████▋  | 423856/552076 [00:07<00:03, 38966.27it/s] 78%|███████▊  | 428218/552076 [00:07<00:03, 40253.68it/s] 78%|███████▊  | 432295/552076 [00:08<00:03, 37006.57it/s] 79%|███████▉  | 436083/552076 [00:08<00:03, 37066.52it/s] 80%|███████▉  | 440298/552076 [00:08<00:02, 37940.43it/s] 81%|████████  | 444642/552076 [00:08<00:02, 39437.20it/s] 81%|████████▏ | 448635/552076 [00:08<00:02, 36323.60it/s] 82%|████████▏ | 452350/552076 [00:08<00:02, 34445.18it/s] 83%|████████▎ | 456056/552076 [00:08<00:02, 35189.55it/s] 83%|████████▎ | 460534/552076 [00:08<00:02, 37605.50it/s] 84%|████████▍ | 464992/552076 [00:08<00:02, 39274.41it/s] 85%|████████▌ | 469361/552076 [00:09<00:02, 40501.65it/s] 86%|████████▌ | 473592/552076 [00:09<00:01, 41026.87it/s] 87%|████████▋ | 477909/552076 [00:09<00:01, 41645.70it/s] 87%|████████▋ | 482110/552076 [00:09<00:01, 40522.27it/s] 88%|████████▊ | 486593/552076 [00:09<00:01, 41723.96it/s] 89%|████████▉ | 490797/552076 [00:09<00:01, 37684.58it/s] 90%|████████▉ | 494938/552076 [00:09<00:01, 37931.79it/s] 90%|█████████ | 499314/552076 [00:09<00:01, 39510.01it/s] 91%|█████████ | 503738/552076 [00:09<00:01, 40818.57it/s] 92%|█████████▏| 508089/552076 [00:09<00:01, 41589.65it/s] 93%|█████████▎| 512291/552076 [00:10<00:00, 41122.13it/s] 94%|█████████▎| 516863/552076 [00:10<00:00, 42400.90it/s] 94%|█████████▍| 521135/552076 [00:10<00:00, 39627.97it/s] 95%|█████████▌| 525157/552076 [00:10<00:00, 32937.84it/s] 96%|█████████▌| 529010/552076 [00:10<00:00, 33975.57it/s] 97%|█████████▋| 533351/552076 [00:10<00:00, 36345.09it/s] 97%|█████████▋| 537502/552076 [00:10<00:00, 37497.69it/s] 98%|█████████▊| 541804/552076 [00:10<00:00, 38999.51it/s] 99%|█████████▉| 545829/552076 [00:10<00:00, 38659.55it/s]100%|█████████▉| 550194/552076 [00:11<00:00, 40031.41it/s]100%|██████████| 552076/552076 [00:11<00:00, 49582.53it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5798/552076 [00:00<00:09, 57350.80it/s]  2%|▏         | 11382/552076 [00:00<00:09, 56638.54it/s]  3%|▎         | 16692/552076 [00:00<00:09, 55527.86it/s]  4%|▍         | 22645/552076 [00:00<00:09, 56670.47it/s]  5%|▌         | 28380/552076 [00:00<00:09, 55769.43it/s]  6%|▌         | 34232/552076 [00:00<00:09, 56355.39it/s]  7%|▋         | 40131/552076 [00:00<00:08, 57120.39it/s]  8%|▊         | 45996/552076 [00:00<00:08, 57569.75it/s]  9%|▉         | 51876/552076 [00:00<00:08, 56812.66it/s] 10%|█         | 57823/552076 [00:01<00:08, 57355.24it/s] 11%|█▏        | 63403/552076 [00:01<00:09, 52760.99it/s] 12%|█▏        | 68643/552076 [00:01<00:10, 47583.47it/s] 13%|█▎        | 73473/552076 [00:01<00:10, 46998.93it/s] 14%|█▍        | 78225/552076 [00:01<00:10, 44440.77it/s] 15%|█▍        | 82734/552076 [00:01<00:11, 42106.73it/s] 16%|█▌        | 87016/552076 [00:01<00:11, 40455.74it/s] 17%|█▋        | 91125/552076 [00:01<00:11, 40431.46it/s] 17%|█▋        | 95213/552076 [00:01<00:11, 39599.60it/s] 18%|█▊        | 99253/552076 [00:02<00:11, 39688.14it/s] 19%|█▊        | 103247/552076 [00:02<00:11, 38880.64it/s] 19%|█▉        | 107156/552076 [00:02<00:11, 37738.91it/s] 20%|██        | 113052/552076 [00:02<00:10, 42306.85it/s] 21%|██▏       | 117478/552076 [00:02<00:10, 42460.71it/s] 22%|██▏       | 123252/552076 [00:02<00:09, 46121.79it/s] 23%|██▎       | 128053/552076 [00:02<00:09, 43023.81it/s] 24%|██▍       | 133787/552076 [00:02<00:08, 46506.35it/s] 25%|██▌       | 138641/552076 [00:02<00:09, 44782.21it/s] 26%|██▌       | 144532/552076 [00:03<00:08, 48043.77it/s] 27%|██▋       | 149513/552076 [00:03<00:09, 43264.98it/s] 28%|██▊       | 155202/552076 [00:03<00:08, 46613.53it/s] 29%|██▉       | 160087/552076 [00:03<00:08, 46512.24it/s] 30%|██▉       | 165615/552076 [00:03<00:08, 48205.38it/s] 31%|███       | 170616/552076 [00:03<00:08, 47096.36it/s] 32%|███▏      | 175767/552076 [00:03<00:07, 48338.08it/s] 33%|███▎      | 180675/552076 [00:03<00:08, 45503.34it/s] 34%|███▎      | 185311/552076 [00:03<00:08, 44038.43it/s] 35%|███▍      | 190556/552076 [00:04<00:07, 45920.54it/s] 35%|███▌      | 195758/552076 [00:04<00:07, 47594.38it/s] 36%|███▋      | 200840/552076 [00:04<00:07, 48517.42it/s] 37%|███▋      | 205742/552076 [00:04<00:07, 45097.23it/s] 38%|███▊      | 210335/552076 [00:04<00:08, 42172.47it/s] 39%|███▉      | 214649/552076 [00:04<00:08, 40467.69it/s] 40%|███▉      | 219950/552076 [00:04<00:07, 42829.51it/s] 41%|████      | 224328/552076 [00:04<00:07, 41480.75it/s] 41%|████▏     | 228552/552076 [00:04<00:08, 39839.68it/s] 42%|████▏     | 232768/552076 [00:05<00:07, 39969.83it/s] 43%|████▎     | 238542/552076 [00:05<00:07, 44035.32it/s] 44%|████▍     | 243105/552076 [00:05<00:07, 43504.39it/s] 45%|████▌     | 248940/552076 [00:05<00:06, 46660.70it/s] 46%|████▌     | 253750/552076 [00:05<00:06, 46476.09it/s] 47%|████▋     | 258499/552076 [00:05<00:06, 45442.66it/s] 48%|████▊     | 264147/552076 [00:05<00:06, 47035.66it/s] 49%|████▊     | 268918/552076 [00:05<00:06, 46324.72it/s] 50%|████▉     | 275165/552076 [00:05<00:05, 48150.68it/s] 51%|█████     | 280034/552076 [00:06<00:06, 43235.01it/s] 52%|█████▏    | 284490/552076 [00:06<00:06, 39215.89it/s] 53%|█████▎    | 290007/552076 [00:06<00:06, 42939.82it/s] 53%|█████▎    | 294522/552076 [00:06<00:06, 39512.32it/s] 54%|█████▍    | 300254/552076 [00:06<00:05, 42564.62it/s] 55%|█████▌    | 305024/552076 [00:06<00:05, 43948.65it/s] 56%|█████▋    | 310681/552076 [00:06<00:05, 47100.20it/s] 57%|█████▋    | 315567/552076 [00:06<00:05, 44567.50it/s] 58%|█████▊    | 320175/552076 [00:06<00:05, 44910.58it/s] 59%|█████▉    | 324773/552076 [00:07<00:05, 43412.81it/s] 60%|█████▉    | 329642/552076 [00:07<00:05, 44177.14it/s] 61%|██████    | 335440/552076 [00:07<00:04, 47573.80it/s] 62%|██████▏   | 340574/552076 [00:07<00:04, 48644.15it/s] 63%|██████▎   | 345528/552076 [00:07<00:06, 30070.60it/s] 63%|██████▎   | 349473/552076 [00:07<00:06, 30569.70it/s] 64%|██████▍   | 353189/552076 [00:07<00:06, 29987.00it/s] 65%|██████▍   | 356651/552076 [00:08<00:06, 31213.64it/s] 65%|██████▌   | 360110/552076 [00:08<00:06, 31337.91it/s] 66%|██████▋   | 366011/552076 [00:08<00:05, 36468.13it/s] 67%|██████▋   | 371428/552076 [00:08<00:04, 39956.73it/s] 68%|██████▊   | 375862/552076 [00:08<00:04, 39911.82it/s] 69%|██████▉   | 381879/552076 [00:08<00:03, 44394.68it/s] 70%|███████   | 386693/552076 [00:08<00:04, 39963.57it/s] 71%|███████   | 391035/552076 [00:08<00:04, 36000.06it/s] 72%|███████▏  | 394952/552076 [00:08<00:04, 36037.30it/s] 72%|███████▏  | 398778/552076 [00:09<00:04, 31589.18it/s] 73%|███████▎  | 403444/552076 [00:09<00:04, 34977.38it/s] 74%|███████▍  | 410078/552076 [00:09<00:03, 40757.72it/s] 75%|███████▌  | 414863/552076 [00:09<00:03, 42652.76it/s] 76%|███████▋  | 421187/552076 [00:09<00:02, 47268.64it/s] 77%|███████▋  | 426364/552076 [00:09<00:03, 39409.87it/s] 78%|███████▊  | 431129/552076 [00:09<00:02, 41565.99it/s] 79%|███████▉  | 437531/552076 [00:09<00:02, 45588.28it/s] 80%|████████  | 442492/552076 [00:10<00:03, 35673.64it/s] 81%|████████  | 446675/552076 [00:10<00:03, 33123.22it/s] 82%|████████▏ | 451456/552076 [00:10<00:02, 34651.48it/s] 82%|████████▏ | 455267/552076 [00:10<00:02, 34581.32it/s] 83%|████████▎ | 458967/552076 [00:10<00:02, 32278.26it/s] 84%|████████▍ | 462395/552076 [00:10<00:03, 27206.72it/s] 84%|████████▍ | 465813/552076 [00:10<00:02, 28980.20it/s] 85%|████████▍ | 468974/552076 [00:11<00:02, 29721.06it/s] 86%|████████▌ | 473767/552076 [00:11<00:02, 33505.98it/s] 87%|████████▋ | 478142/552076 [00:11<00:02, 35656.33it/s] 87%|████████▋ | 482097/552076 [00:11<00:01, 36658.04it/s] 88%|████████▊ | 485931/552076 [00:11<00:01, 35303.27it/s] 89%|████████▊ | 489590/552076 [00:11<00:01, 34451.85it/s] 89%|████████▉ | 493130/552076 [00:11<00:01, 34496.09it/s] 90%|████████▉ | 496646/552076 [00:11<00:01, 33730.88it/s] 91%|█████████ | 500070/552076 [00:11<00:01, 33365.82it/s] 92%|█████████▏| 505837/552076 [00:11<00:01, 38194.30it/s] 92%|█████████▏| 510095/552076 [00:12<00:01, 39411.66it/s] 93%|█████████▎| 514236/552076 [00:12<00:01, 29118.24it/s] 94%|█████████▍| 517678/552076 [00:12<00:01, 29752.24it/s] 94%|█████████▍| 521028/552076 [00:12<00:01, 29029.91it/s] 95%|█████████▍| 524394/552076 [00:12<00:00, 29643.91it/s] 96%|█████████▌| 528037/552076 [00:12<00:00, 30631.75it/s] 96%|█████████▋| 531456/552076 [00:12<00:00, 31268.77it/s] 97%|█████████▋| 534871/552076 [00:12<00:00, 32080.75it/s] 97%|█████████▋| 538156/552076 [00:13<00:00, 32055.67it/s] 98%|█████████▊| 541459/552076 [00:13<00:00, 32274.17it/s] 99%|█████████▊| 544890/552076 [00:13<00:00, 32486.20it/s] 99%|█████████▉| 548377/552076 [00:13<00:00, 33165.33it/s]100%|█████████▉| 551750/552076 [00:13<00:00, 32578.12it/s]100%|██████████| 552076/552076 [00:13<00:00, 41003.04it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5084/552076 [00:00<00:10, 50836.29it/s]  2%|▏         | 10219/552076 [00:00<00:10, 50989.30it/s]  3%|▎         | 15132/552076 [00:00<00:10, 50415.43it/s]  4%|▎         | 20299/552076 [00:00<00:10, 50703.75it/s]  5%|▍         | 25827/552076 [00:00<00:10, 51994.43it/s]  6%|▌         | 31521/552076 [00:00<00:09, 53385.13it/s]  7%|▋         | 37095/552076 [00:00<00:09, 53214.56it/s]  8%|▊         | 42042/552076 [00:00<00:09, 52031.79it/s]  9%|▊         | 47389/552076 [00:00<00:09, 52092.12it/s] 10%|▉         | 53029/552076 [00:01<00:09, 53312.84it/s] 11%|█         | 58427/552076 [00:01<00:09, 52335.20it/s] 12%|█▏        | 63938/552076 [00:01<00:09, 53136.69it/s] 13%|█▎        | 69194/552076 [00:01<00:09, 52814.15it/s] 14%|█▎        | 74803/552076 [00:01<00:08, 53755.77it/s] 15%|█▍        | 80179/552076 [00:01<00:08, 52778.96it/s] 16%|█▌        | 85944/552076 [00:01<00:08, 54151.13it/s] 17%|█▋        | 91360/552076 [00:01<00:08, 54040.57it/s] 18%|█▊        | 96812/552076 [00:01<00:08, 54182.76it/s] 19%|█▊        | 102418/552076 [00:01<00:08, 54731.35it/s] 20%|█▉        | 107893/552076 [00:02<00:08, 54111.81it/s] 21%|██        | 113307/552076 [00:02<00:08, 54085.78it/s] 22%|██▏       | 118718/552076 [00:02<00:08, 53225.04it/s] 22%|██▏       | 124045/552076 [00:02<00:08, 52790.64it/s] 23%|██▎       | 129578/552076 [00:02<00:07, 53257.12it/s] 25%|██▍       | 135433/552076 [00:02<00:07, 53905.50it/s] 26%|██▌       | 141215/552076 [00:02<00:07, 55022.46it/s] 27%|██▋       | 146727/552076 [00:02<00:07, 54609.20it/s] 28%|██▊       | 152426/552076 [00:02<00:07, 55301.65it/s] 29%|██▊       | 158062/552076 [00:02<00:07, 54906.03it/s] 30%|██▉       | 163746/552076 [00:03<00:07, 55471.00it/s] 31%|███       | 169299/552076 [00:03<00:06, 55406.61it/s] 32%|███▏      | 175157/552076 [00:03<00:06, 56321.25it/s] 33%|███▎      | 181055/552076 [00:03<00:06, 57091.48it/s] 34%|███▍      | 186772/552076 [00:03<00:06, 56015.45it/s] 35%|███▍      | 192564/552076 [00:03<00:06, 55560.03it/s] 36%|███▌      | 198362/552076 [00:03<00:06, 56264.17it/s] 37%|███▋      | 203996/552076 [00:03<00:06, 55832.96it/s] 38%|███▊      | 209820/552076 [00:03<00:06, 56532.44it/s] 39%|███▉      | 215480/552076 [00:03<00:06, 55559.46it/s] 40%|████      | 221195/552076 [00:04<00:05, 55494.51it/s] 41%|████      | 226827/552076 [00:04<00:05, 55739.34it/s] 42%|████▏     | 232706/552076 [00:04<00:05, 56620.40it/s] 43%|████▎     | 238429/552076 [00:04<00:05, 56800.92it/s] 44%|████▍     | 244114/552076 [00:04<00:05, 54672.44it/s] 45%|████▌     | 249677/552076 [00:04<00:05, 54954.92it/s] 46%|████▌     | 255188/552076 [00:04<00:05, 53308.98it/s] 47%|████▋     | 260725/552076 [00:04<00:05, 53909.62it/s] 48%|████▊     | 266133/552076 [00:04<00:05, 51662.54it/s] 49%|████▉     | 271671/552076 [00:05<00:05, 52432.64it/s] 50%|█████     | 277475/552076 [00:05<00:05, 53996.91it/s] 51%|█████     | 282904/552076 [00:05<00:05, 53187.95it/s] 52%|█████▏    | 288602/552076 [00:05<00:04, 54271.17it/s] 53%|█████▎    | 294096/552076 [00:05<00:04, 53163.72it/s] 54%|█████▍    | 299534/552076 [00:05<00:04, 53517.44it/s] 55%|█████▌    | 305070/552076 [00:05<00:04, 54056.12it/s] 56%|█████▋    | 310562/552076 [00:05<00:04, 54311.74it/s] 57%|█████▋    | 316002/552076 [00:05<00:04, 52927.75it/s] 58%|█████▊    | 321309/552076 [00:05<00:04, 52922.68it/s] 59%|█████▉    | 326808/552076 [00:06<00:04, 52938.48it/s] 60%|██████    | 332482/552076 [00:06<00:04, 54023.81it/s] 61%|██████    | 338064/552076 [00:06<00:03, 53792.59it/s] 62%|██████▏   | 343451/552076 [00:06<00:03, 53051.63it/s] 63%|██████▎   | 349338/552076 [00:06<00:03, 53099.13it/s] 64%|██████▍   | 354800/552076 [00:06<00:03, 53545.16it/s] 65%|██████▌   | 360160/552076 [00:06<00:03, 53414.56it/s] 66%|██████▋   | 365835/552076 [00:06<00:03, 53527.87it/s] 67%|██████▋   | 371465/552076 [00:06<00:03, 54330.09it/s] 68%|██████▊   | 376903/552076 [00:06<00:03, 53100.94it/s] 69%|██████▉   | 382316/552076 [00:07<00:03, 52642.76it/s] 70%|███████   | 388124/552076 [00:07<00:03, 54163.89it/s] 71%|███████▏  | 393557/552076 [00:07<00:02, 52921.40it/s] 72%|███████▏  | 398962/552076 [00:07<00:02, 53254.15it/s] 73%|███████▎  | 405252/552076 [00:07<00:02, 55821.78it/s] 75%|███████▍  | 411353/552076 [00:07<00:02, 56732.94it/s] 76%|███████▌  | 417774/552076 [00:07<00:02, 58785.73it/s] 77%|███████▋  | 425440/552076 [00:07<00:02, 63206.26it/s] 78%|███████▊  | 433107/552076 [00:07<00:01, 66377.90it/s] 80%|███████▉  | 439874/552076 [00:08<00:01, 65630.38it/s] 81%|████████  | 447129/552076 [00:08<00:01, 67563.56it/s] 82%|████████▏ | 454696/552076 [00:08<00:01, 69807.04it/s] 84%|████████▎ | 461751/552076 [00:08<00:01, 68802.18it/s] 85%|████████▍ | 468687/552076 [00:08<00:01, 60019.33it/s] 86%|████████▋ | 476602/552076 [00:08<00:01, 64315.01it/s] 88%|████████▊ | 483467/552076 [00:08<00:01, 65556.13it/s] 89%|████████▉ | 491178/552076 [00:08<00:00, 68639.85it/s] 90%|█████████ | 498209/552076 [00:08<00:00, 68963.74it/s] 92%|█████████▏| 506012/552076 [00:08<00:00, 71453.08it/s] 93%|█████████▎| 513263/552076 [00:09<00:00, 71511.88it/s] 94%|█████████▍| 521242/552076 [00:09<00:00, 73807.08it/s] 96%|█████████▌| 529217/552076 [00:09<00:00, 74307.86it/s] 97%|█████████▋| 536698/552076 [00:09<00:00, 73956.07it/s] 99%|█████████▊| 544129/552076 [00:09<00:00, 73344.67it/s]100%|█████████▉| 551565/552076 [00:09<00:00, 73644.49it/s]100%|██████████| 552076/552076 [00:09<00:00, 57623.64it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 8028/552076 [00:00<00:06, 80276.82it/s]  3%|▎         | 16019/552076 [00:00<00:06, 80166.27it/s]  4%|▍         | 23049/552076 [00:00<00:06, 76924.43it/s]  6%|▌         | 31048/552076 [00:00<00:06, 75986.99it/s]  8%|▊         | 46882/552076 [00:00<00:05, 90035.19it/s] 12%|█▏        | 64274/552076 [00:00<00:04, 105265.76it/s] 14%|█▍        | 79518/552076 [00:00<00:04, 116037.53it/s] 18%|█▊        | 97550/552076 [00:00<00:03, 129932.54it/s] 21%|██        | 115425/552076 [00:00<00:03, 141525.76it/s] 24%|██▍       | 133503/552076 [00:01<00:02, 151385.22it/s] 27%|██▋       | 149620/552076 [00:01<00:02, 141863.90it/s] 30%|██▉       | 164613/552076 [00:01<00:02, 135774.99it/s] 32%|███▏      | 178811/552076 [00:01<00:03, 116403.51it/s] 35%|███▍      | 191370/552076 [00:01<00:03, 106140.15it/s] 37%|███▋      | 202908/552076 [00:01<00:03, 108750.36it/s] 39%|███▉      | 214372/552076 [00:01<00:03, 97637.68it/s]  42%|████▏     | 230459/552076 [00:01<00:02, 110689.63it/s] 45%|████▍     | 245871/552076 [00:02<00:02, 120910.19it/s] 47%|████▋     | 261409/552076 [00:02<00:02, 129528.98it/s] 50%|████▉     | 275235/552076 [00:02<00:02, 123552.35it/s] 52%|█████▏    | 288729/552076 [00:02<00:02, 126760.26it/s] 55%|█████▍    | 301895/552076 [00:02<00:02, 122967.52it/s] 57%|█████▋    | 314559/552076 [00:02<00:02, 99200.21it/s]  59%|█████▉    | 326706/552076 [00:02<00:02, 104972.77it/s] 61%|██████▏   | 338956/552076 [00:02<00:01, 109679.38it/s] 64%|██████▎   | 350709/552076 [00:02<00:01, 111922.07it/s] 66%|██████▌   | 362894/552076 [00:03<00:01, 114723.88it/s] 68%|██████▊   | 375506/552076 [00:03<00:01, 117918.51it/s] 70%|███████   | 387573/552076 [00:03<00:01, 118729.38it/s] 72%|███████▏  | 399792/552076 [00:03<00:01, 119744.24it/s] 75%|███████▍  | 412074/552076 [00:03<00:01, 120650.37it/s] 77%|███████▋  | 424409/552076 [00:03<00:01, 121447.54it/s] 79%|███████▉  | 436824/552076 [00:03<00:00, 122245.02it/s] 81%|████████▏ | 449216/552076 [00:03<00:00, 122741.38it/s] 84%|████████▎ | 461523/552076 [00:03<00:00, 115390.42it/s] 86%|████████▌ | 473175/552076 [00:03<00:00, 112083.41it/s] 88%|████████▊ | 484484/552076 [00:04<00:00, 110201.04it/s] 90%|█████████ | 496953/552076 [00:04<00:00, 114179.33it/s] 92%|█████████▏| 509352/552076 [00:04<00:00, 116953.22it/s] 95%|█████████▍| 521715/552076 [00:04<00:00, 118877.11it/s] 97%|█████████▋| 534085/552076 [00:04<00:00, 120282.63it/s] 99%|█████████▉| 546531/552076 [00:04<00:00, 121504.44it/s]100%|██████████| 552076/552076 [00:04<00:00, 119450.59it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11524/552076 [00:00<00:04, 115232.42it/s]  4%|▍         | 20961/552076 [00:00<00:04, 108064.02it/s]  5%|▌         | 28974/552076 [00:00<00:05, 97830.26it/s]   7%|▋         | 41157/552076 [00:00<00:04, 103972.91it/s] 10%|▉         | 53506/552076 [00:00<00:04, 109147.78it/s] 12%|█▏        | 65520/552076 [00:00<00:04, 112226.36it/s] 14%|█▍        | 77706/552076 [00:00<00:04, 114952.12it/s] 16%|█▋        | 90089/552076 [00:00<00:03, 117478.52it/s] 18%|█▊        | 101962/552076 [00:00<00:03, 117849.54it/s] 21%|██        | 113523/552076 [00:01<00:03, 117166.70it/s] 23%|██▎       | 125629/552076 [00:01<00:03, 118305.70it/s] 25%|██▍       | 137941/552076 [00:01<00:03, 119709.43it/s] 27%|██▋       | 150395/552076 [00:01<00:03, 121118.66it/s] 29%|██▉       | 162835/552076 [00:01<00:03, 122083.06it/s] 32%|███▏      | 175289/552076 [00:01<00:03, 122807.17it/s] 34%|███▍      | 187532/552076 [00:01<00:02, 122665.85it/s] 36%|███▌      | 199773/552076 [00:01<00:02, 122208.92it/s] 38%|███▊      | 212367/552076 [00:01<00:02, 123303.05it/s] 41%|████      | 224750/552076 [00:01<00:02, 123458.50it/s] 43%|████▎     | 237235/552076 [00:02<00:02, 123870.60it/s] 45%|████▌     | 249753/552076 [00:02<00:02, 124258.54it/s] 48%|████▊     | 262293/552076 [00:02<00:02, 124595.29it/s] 50%|████▉     | 274824/552076 [00:02<00:02, 124808.43it/s] 52%|█████▏    | 287310/552076 [00:02<00:02, 124822.86it/s] 54%|█████▍    | 299868/552076 [00:02<00:02, 125046.59it/s] 57%|█████▋    | 312403/552076 [00:02<00:01, 125135.08it/s] 59%|█████▉    | 324981/552076 [00:02<00:01, 125325.22it/s] 61%|██████    | 337514/552076 [00:02<00:02, 100301.67it/s] 63%|██████▎   | 349883/552076 [00:02<00:01, 106333.37it/s] 66%|██████▌   | 362371/552076 [00:03<00:01, 111290.56it/s] 68%|██████▊   | 374020/552076 [00:03<00:01, 92595.65it/s]  70%|██████▉   | 386433/552076 [00:03<00:01, 100234.11it/s] 72%|███████▏  | 398233/552076 [00:03<00:01, 104973.22it/s] 74%|███████▍  | 410703/552076 [00:03<00:01, 110202.25it/s] 76%|███████▋  | 422228/552076 [00:03<00:01, 90957.10it/s]  79%|███████▊  | 434710/552076 [00:03<00:01, 99014.49it/s] 81%|████████  | 447133/552076 [00:03<00:00, 105434.42it/s] 83%|████████▎ | 458384/552076 [00:04<00:01, 87164.58it/s]  85%|████████▌ | 470775/552076 [00:04<00:00, 95675.27it/s] 88%|████████▊ | 483233/552076 [00:04<00:00, 102831.92it/s] 90%|████████▉ | 496016/552076 [00:04<00:00, 109238.59it/s] 92%|█████████▏| 508615/552076 [00:04<00:00, 113776.52it/s] 94%|█████████▍| 520524/552076 [00:04<00:00, 109770.87it/s] 97%|█████████▋| 533260/552076 [00:04<00:00, 114515.39it/s] 99%|█████████▉| 545867/552076 [00:04<00:00, 117751.47it/s]100%|██████████| 552076/552076 [00:04<00:00, 112984.81it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11603/552076 [00:00<00:04, 116025.13it/s]  3%|▎         | 18594/552076 [00:00<00:05, 94750.63it/s]   5%|▍         | 24969/552076 [00:00<00:06, 81453.50it/s]  6%|▌         | 31431/552076 [00:00<00:06, 75548.15it/s]  7%|▋         | 36828/552076 [00:00<00:07, 66803.13it/s]  9%|▉         | 49294/552076 [00:00<00:06, 77608.16it/s] 11%|█         | 60857/552076 [00:00<00:05, 86100.95it/s] 13%|█▎        | 72052/552076 [00:00<00:05, 92508.80it/s] 15%|█▌        | 83335/552076 [00:00<00:04, 97790.45it/s] 17%|█▋        | 94276/552076 [00:01<00:04, 101007.61it/s] 19%|█▉        | 104561/552076 [00:01<00:04, 97064.09it/s] 21%|██        | 114430/552076 [00:01<00:05, 78458.26it/s] 22%|██▏       | 122965/552076 [00:01<00:05, 76282.25it/s] 24%|██▍       | 132868/552076 [00:01<00:05, 81798.64it/s] 27%|██▋       | 149035/552076 [00:01<00:04, 96031.20it/s] 31%|███       | 169368/552076 [00:01<00:03, 114093.41it/s] 34%|███▎      | 185761/552076 [00:01<00:02, 125542.40it/s] 38%|███▊      | 207862/552076 [00:01<00:02, 144233.15it/s] 41%|████      | 227233/552076 [00:02<00:02, 156201.75it/s] 45%|████▌     | 249925/552076 [00:02<00:01, 172311.67it/s] 49%|████▊     | 269033/552076 [00:02<00:01, 162886.36it/s] 53%|█████▎    | 291364/552076 [00:02<00:01, 177276.46it/s] 57%|█████▋    | 313608/552076 [00:02<00:01, 188772.82it/s] 61%|██████    | 334913/552076 [00:02<00:01, 195452.33it/s] 65%|██████▍   | 356852/552076 [00:02<00:00, 202062.91it/s] 68%|██████▊   | 377727/552076 [00:02<00:01, 166806.77it/s] 73%|███████▎  | 400464/552076 [00:02<00:00, 181292.31it/s] 76%|███████▋  | 421062/552076 [00:03<00:00, 188053.26it/s] 81%|████████  | 444684/552076 [00:03<00:00, 200304.72it/s] 84%|████████▍ | 465670/552076 [00:03<00:00, 200863.35it/s] 88%|████████▊ | 486426/552076 [00:03<00:00, 201917.29it/s] 92%|█████████▏| 507088/552076 [00:03<00:00, 196846.92it/s] 95%|█████████▌| 527130/552076 [00:03<00:00, 192897.67it/s] 99%|█████████▉| 546688/552076 [00:03<00:00, 190591.12it/s]100%|██████████| 552076/552076 [00:03<00:00, 149406.28it/s]actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3907759189605713 seconds.
Run epoch 1
Epoch 1 ends in 0.47632884979248047 seconds.
39434 sentences created
mode 1: time used = 0.6901800632476807
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
epoch 5: {'train_loss': '1.23347'}; time used = 18.228896379470825s
epoch 10: {'train_loss': '1.17108'}; time used = 20.085537910461426s
epoch 15: {'train_loss': '1.16157'}; time used = 17.79292368888855s
epoch 20: {'train_loss': '1.15911'}; time used = 18.347989797592163s
epoch 25: {'train_loss': '1.15516'}; time used = 17.847416162490845s
epoch 30: {'train_loss': '1.15765'}; time used = 30.488120555877686s
epoch 35: {'train_loss': '1.15612'}; time used = 32.5998637676239s
epoch 40: {'train_loss': '1.15576'}; time used = 20.975528478622437s
epoch 45: {'train_loss': '1.15519'}; time used = 20.18012762069702s
epoch 50: {'train_loss': '1.15547'}; time used = 17.006672859191895s
epoch 55: {'train_loss': '1.15573'}; time used = 17.887754678726196s
epoch 60: {'train_loss': '1.15478'}; time used = 18.465065479278564s
epoch 65: {'train_loss': '1.15608'}; time used = 16.843101978302002s
epoch 70: {'train_loss': '1.15614'}; time used = 17.37608790397644s
epoch 75: {'train_loss': '1.15710'}; time used = 20.150105714797974s
epoch 80: {'train_loss': '1.15636'}; time used = 17.54683828353882s
epoch 85: {'train_loss': '1.15724'}; time used = 20.10057497024536s
epoch 90: {'train_loss': '1.15703'}; time used = 16.764341592788696s
epoch 95: {'train_loss': '1.15634'}; time used = 21.74405288696289s
epoch 100: {'train_loss': '1.15665'}; time used = 19.168099880218506s
epoch 105: {'train_loss': '1.15558'}; time used = 18.005300998687744s
epoch 110: {'train_loss': '1.15601'}; time used = 18.503369092941284s
epoch 115: {'train_loss': '1.15584'}; time used = 17.864665985107422s
epoch 120: {'train_loss': '1.15774'}; time used = 18.702481508255005s
epoch 125: {'train_loss': '1.15672'}; time used = 17.716826915740967s
epoch 130: {'train_loss': '1.15691'}; time used = 18.70907950401306s
epoch 135: {'train_loss': '1.15644'}; time used = 18.713838577270508s
epoch 140: {'train_loss': '1.15651'}; time used = 17.682026386260986s
epoch 145: {'train_loss': '1.15592'}; time used = 18.001648664474487s
epoch 150: {'train_loss': '1.15525'}; time used = 18.347392797470093s
epoch 155: {'train_loss': '1.15608'}; time used = 19.060875415802002s
epoch 160: {'train_loss': '1.15633'}; time used = 19.299564123153687s
epoch 165: {'train_loss': '1.15643'}; time used = 19.83695340156555s
epoch 170: {'train_loss': '1.15562'}; time used = 18.777742624282837s
epoch 175: {'train_loss': '1.15679'}; time used = 18.199117422103882s
epoch 180: {'train_loss': '1.15676'}; time used = 19.773929357528687s
epoch 185: {'train_loss': '1.15743'}; time used = 17.318061351776123s
epoch 190: {'train_loss': '1.15744'}; time used = 17.168704748153687s
epoch 195: {'train_loss': '1.15548'}; time used = 18.504133939743042s
epoch 200: {'train_loss': '1.15646'}; time used = 17.032127618789673s
epoch 205: {'train_loss': '1.15684'}; time used = 18.1235773563385s
epoch 210: {'train_loss': '1.15783'}; time used = 18.188149213790894s
epoch 215: {'train_loss': '1.15567'}; time used = 17.696442127227783s
epoch 220: {'train_loss': '1.15712'}; time used = 19.236945390701294s
epoch 225: {'train_loss': '1.15708'}; time used = 16.758002281188965s
epoch 230: {'train_loss': '1.15592'}; time used = 16.858065366744995s
epoch 235: {'train_loss': '1.15538'}; time used = 19.511685848236084s
epoch 240: {'train_loss': '1.15701'}; time used = 31.193763971328735s
epoch 245: {'train_loss': '1.15613'}; time used = 29.893635034561157s
epoch 250: {'train_loss': '1.15669'}; time used = 15.925559520721436s
epoch 255: {'train_loss': '1.15688'}; time used = 17.080320596694946s
epoch 260: {'train_loss': '1.15554'}; time used = 26.58072280883789s
epoch 265: {'train_loss': '1.15613'}; time used = 22.977949380874634s
epoch 270: {'train_loss': '1.15636'}; time used = 20.831178665161133s
epoch 275: {'train_loss': '1.15552'}; time used = 27.289443731307983s
epoch 280: {'train_loss': '1.15656'}; time used = 27.203287839889526s
epoch 285: {'train_loss': '1.15592'}; time used = 27.10596776008606s
epoch 290: {'train_loss': '1.15580'}; time used = 26.69077777862549s
epoch 295: {'train_loss': '1.15643'}; time used = 15.484358549118042s
epoch 300: {'train_loss': '1.15694'}; time used = 16.20651936531067s
epoch 305: {'train_loss': '1.15642'}; time used = 17.390652656555176s
epoch 310: {'train_loss': '1.15694'}; time used = 27.542526721954346s
epoch 315: {'train_loss': '1.15522'}; time used = 29.875120401382446s
epoch 320: {'train_loss': '1.15632'}; time used = 31.92946457862854s
epoch 325: {'train_loss': '1.15557'}; time used = 33.86698865890503s
epoch 330: {'train_loss': '1.15705'}; time used = 19.646313428878784s
epoch 335: {'train_loss': '1.15706'}; time used = 31.46649169921875s
epoch 340: {'train_loss': '1.15611'}; time used = 35.85916471481323s
epoch 345: {'train_loss': '1.15567'}; time used = 25.98086643218994s
epoch 350: {'train_loss': '1.15624'}; time used = 20.875151872634888s
epoch 355: {'train_loss': '1.15524'}; time used = 21.43836545944214s
epoch 360: {'train_loss': '1.15680'}; time used = 17.19776964187622s
epoch 365: {'train_loss': '1.15690'}; time used = 18.342055559158325s
epoch 370: {'train_loss': '1.15541'}; time used = 23.056703567504883s
epoch 375: {'train_loss': '1.15629'}; time used = 16.519587516784668s
epoch 380: {'train_loss': '1.15544'}; time used = 21.43359923362732s
epoch 385: {'train_loss': '1.15556'}; time used = 28.378473043441772s
epoch 390: {'train_loss': '1.15568'}; time used = 16.81828260421753s
epoch 395: {'train_loss': '1.15553'}; time used = 15.808383464813232s
epoch 400: {'train_loss': '1.15549'}; time used = 20.39634943008423s
epoch 405: {'train_loss': '1.15586'}; time used = 28.450544357299805s
epoch 410: {'train_loss': '1.15648'}; time used = 27.776236295700073s
epoch 415: {'train_loss': '1.15672'}; time used = 16.877140522003174s
epoch 420: {'train_loss': '1.15634'}; time used = 18.684693813323975s
epoch 425: {'train_loss': '1.15666'}; time used = 29.664417266845703s
epoch 430: {'train_loss': '1.15624'}; time used = 23.92489790916443s
epoch 435: {'train_loss': '1.15579'}; time used = 14.010680198669434s
epoch 440: {'train_loss': '1.15642'}; time used = 14.735710620880127s
epoch 445: {'train_loss': '1.15596'}; time used = 24.132022380828857s
epoch 450: {'train_loss': '1.15635'}; time used = 25.66196346282959s
epoch 455: {'train_loss': '1.15633'}; time used = 18.101216554641724s
epoch 460: {'train_loss': '1.15603'}; time used = 20.989109754562378s
epoch 465: {'train_loss': '1.15517'}; time used = 45.72841787338257s
epoch 470: {'train_loss': '1.15568'}; time used = 28.536619901657104s
epoch 475: {'train_loss': '1.15573'}; time used = 18.869815587997437s
epoch 480: {'train_loss': '1.15553'}; time used = 23.12162709236145s
epoch 485: {'train_loss': '1.15489'}; time used = 22.77872920036316s
epoch 490: {'train_loss': '1.15513'}; time used = 56.193222522735596s
epoch 495: {'train_loss': '1.15513'}; time used = 37.27247929573059s
  0%|          | 0/552076 [00:00<?, ?it/s]  3%|▎         | 14396/552076 [00:00<00:03, 143952.93it/s]  5%|▌         | 28911/552076 [00:00<00:03, 144309.09it/s]  8%|▊         | 43726/552076 [00:00<00:03, 145439.21it/s] 11%|█         | 59006/552076 [00:00<00:03, 147571.21it/s] 15%|█▍        | 80859/552076 [00:00<00:02, 163496.84it/s] 19%|█▉        | 103845/552076 [00:00<00:02, 178999.04it/s] 23%|██▎       | 126852/552076 [00:00<00:02, 191769.23it/s] 27%|██▋       | 149500/552076 [00:00<00:02, 201010.74it/s] 31%|███       | 170945/552076 [00:00<00:01, 204861.20it/s] 35%|███▌      | 194772/552076 [00:01<00:01, 213855.19it/s] 39%|███▉      | 217978/552076 [00:01<00:01, 219007.19it/s] 44%|████▍     | 241885/552076 [00:01<00:01, 224662.79it/s] 48%|████▊     | 264434/552076 [00:01<00:01, 222253.87it/s] 52%|█████▏    | 288519/552076 [00:01<00:01, 227521.33it/s] 57%|█████▋    | 312811/552076 [00:01<00:01, 231930.77it/s] 61%|██████    | 337079/552076 [00:01<00:00, 235052.64it/s] 65%|██████▌   | 360646/552076 [00:01<00:00, 234324.48it/s] 70%|██████▉   | 385021/552076 [00:01<00:00, 237071.80it/s] 74%|███████▍  | 409366/552076 [00:01<00:00, 238948.61it/s] 79%|███████▊  | 433670/552076 [00:02<00:00, 240161.39it/s] 83%|████████▎ | 457709/552076 [00:02<00:00, 200957.81it/s] 87%|████████▋ | 478903/552076 [00:02<00:00, 125983.43it/s] 90%|████████▉ | 495759/552076 [00:02<00:00, 99465.38it/s]  92%|█████████▏| 509560/552076 [00:02<00:00, 86898.57it/s] 94%|█████████▍| 521234/552076 [00:03<00:00, 66895.44it/s] 96%|█████████▌| 530712/552076 [00:03<00:00, 66301.46it/s] 98%|█████████▊| 539295/552076 [00:03<00:00, 55554.93it/s] 99%|█████████▉| 546513/552076 [00:03<00:00, 58404.39it/s]100%|██████████| 552076/552076 [00:03<00:00, 146755.01it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 6984/552076 [00:00<00:07, 69833.24it/s]  2%|▏         | 13714/552076 [00:00<00:07, 69053.39it/s]  4%|▎         | 20421/552076 [00:00<00:07, 68445.03it/s]  5%|▍         | 27094/552076 [00:00<00:07, 67920.27it/s]  6%|▌         | 32213/552076 [00:00<00:09, 54769.33it/s]  7%|▋         | 37032/552076 [00:00<00:09, 52613.92it/s]  8%|▊         | 43588/552076 [00:00<00:09, 55925.22it/s]  9%|▉         | 50274/552076 [00:00<00:08, 58809.37it/s] 10%|█         | 56914/552076 [00:00<00:08, 60896.76it/s] 11%|█▏        | 62902/552076 [00:01<00:08, 59247.59it/s] 12%|█▏        | 68765/552076 [00:01<00:08, 56471.87it/s] 13%|█▎        | 74397/552076 [00:01<00:08, 56296.33it/s] 15%|█▍        | 81073/552076 [00:01<00:07, 59073.64it/s] 16%|█▌        | 87660/552076 [00:01<00:07, 60958.34it/s] 17%|█▋        | 94404/552076 [00:01<00:07, 62767.44it/s] 18%|█▊        | 101101/552076 [00:01<00:07, 63971.13it/s] 20%|█▉        | 107812/552076 [00:01<00:06, 64879.07it/s] 21%|██        | 114394/552076 [00:01<00:06, 65155.90it/s] 22%|██▏       | 121117/552076 [00:01<00:06, 65762.93it/s] 23%|██▎       | 127708/552076 [00:02<00:07, 56185.84it/s] 24%|██▍       | 133580/552076 [00:02<00:08, 50549.33it/s] 25%|██▌       | 138919/552076 [00:02<00:09, 42737.02it/s] 26%|██▌       | 143599/552076 [00:02<00:09, 42754.85it/s] 27%|██▋       | 148159/552076 [00:02<00:09, 42620.08it/s] 28%|██▊       | 152620/552076 [00:02<00:10, 39701.57it/s] 29%|██▉       | 159221/552076 [00:02<00:08, 45092.01it/s] 30%|██▉       | 164106/552076 [00:03<00:09, 42712.80it/s] 31%|███       | 170295/552076 [00:03<00:08, 47089.83it/s] 32%|███▏      | 175893/552076 [00:03<00:07, 49444.76it/s] 33%|███▎      | 181531/552076 [00:03<00:07, 51339.20it/s] 34%|███▍      | 188249/552076 [00:03<00:06, 55246.99it/s] 35%|███▌      | 194942/552076 [00:03<00:06, 58299.76it/s] 37%|███▋      | 201646/552076 [00:03<00:05, 60670.89it/s] 38%|███▊      | 208342/552076 [00:03<00:05, 62428.00it/s] 39%|███▉      | 215068/552076 [00:03<00:05, 63801.43it/s] 40%|████      | 221548/552076 [00:03<00:05, 56290.83it/s] 42%|████▏     | 231666/552076 [00:04<00:04, 64932.64it/s] 44%|████▍     | 243048/552076 [00:04<00:04, 74536.73it/s] 46%|████▌     | 254024/552076 [00:04<00:03, 82476.98it/s] 48%|████▊     | 263205/552076 [00:04<00:03, 79487.97it/s] 50%|████▉     | 275426/552076 [00:04<00:03, 88799.75it/s] 52%|█████▏    | 285130/552076 [00:04<00:03, 88902.62it/s] 53%|█████▎    | 294705/552076 [00:04<00:02, 90849.49it/s] 55%|█████▌    | 304509/552076 [00:04<00:02, 92892.67it/s] 57%|█████▋    | 315759/552076 [00:04<00:02, 96876.11it/s] 59%|█████▉    | 326706/552076 [00:04<00:02, 100337.85it/s] 61%|██████    | 336950/552076 [00:05<00:02, 93722.22it/s]  63%|██████▎   | 348440/552076 [00:05<00:02, 99207.16it/s] 65%|██████▌   | 359912/552076 [00:05<00:01, 103400.43it/s] 67%|██████▋   | 371524/552076 [00:05<00:01, 106911.61it/s] 70%|██████▉   | 385215/552076 [00:05<00:01, 110274.15it/s] 72%|███████▏  | 396399/552076 [00:05<00:01, 108602.48it/s] 74%|███████▍  | 407375/552076 [00:05<00:01, 108490.06it/s] 76%|███████▌  | 418808/552076 [00:05<00:01, 110176.79it/s] 78%|███████▊  | 430283/552076 [00:05<00:01, 111509.04it/s] 80%|███████▉  | 441482/552076 [00:06<00:00, 110886.23it/s] 82%|████████▏ | 452944/552076 [00:06<00:00, 111979.03it/s] 84%|████████▍ | 464458/552076 [00:06<00:00, 112906.21it/s] 86%|████████▌ | 475770/552076 [00:06<00:00, 90605.53it/s]  88%|████████▊ | 485549/552076 [00:06<00:00, 84811.91it/s] 90%|████████▉ | 494934/552076 [00:06<00:00, 87334.27it/s] 92%|█████████▏| 506265/552076 [00:06<00:00, 93783.65it/s] 94%|█████████▎| 516758/552076 [00:06<00:00, 96868.57it/s] 96%|█████████▌| 528140/552076 [00:06<00:00, 101398.54it/s] 98%|█████████▊| 539623/552076 [00:07<00:00, 105085.20it/s]100%|█████████▉| 550501/552076 [00:07<00:00, 106164.60it/s]100%|██████████| 552076/552076 [00:07<00:00, 76979.37it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6617/552076 [00:00<00:08, 66169.43it/s]  3%|▎         | 16320/552076 [00:00<00:07, 73148.05it/s]  5%|▍         | 26869/552076 [00:00<00:06, 80556.70it/s]  7%|▋         | 37324/552076 [00:00<00:05, 86511.83it/s]  9%|▊         | 47896/552076 [00:00<00:05, 91498.04it/s] 11%|█         | 58948/552076 [00:00<00:05, 96478.43it/s] 13%|█▎        | 69862/552076 [00:00<00:04, 99956.48it/s] 15%|█▍        | 81105/552076 [00:00<00:04, 103395.63it/s] 17%|█▋        | 92331/552076 [00:00<00:04, 105902.13it/s] 19%|█▉        | 103597/552076 [00:01<00:04, 107841.21it/s] 21%|██        | 114678/552076 [00:01<00:04, 108713.74it/s] 23%|██▎       | 125914/552076 [00:01<00:03, 109780.71it/s] 25%|██▍       | 137074/552076 [00:01<00:03, 110319.02it/s] 27%|██▋       | 148087/552076 [00:01<00:03, 107750.59it/s] 29%|██▉       | 159282/552076 [00:01<00:03, 108976.60it/s] 31%|███       | 170183/552076 [00:01<00:03, 104766.77it/s] 33%|███▎      | 181204/552076 [00:01<00:03, 106341.87it/s] 35%|███▍      | 193065/552076 [00:01<00:03, 107611.35it/s] 37%|███▋      | 203951/552076 [00:01<00:03, 107981.50it/s] 39%|███▉      | 216388/552076 [00:02<00:02, 112423.66it/s] 41%|████▏     | 228544/552076 [00:02<00:02, 115014.88it/s] 44%|████▎     | 240725/552076 [00:02<00:02, 116970.80it/s] 46%|████▌     | 253029/552076 [00:02<00:02, 118725.98it/s] 48%|████▊     | 265354/552076 [00:02<00:02, 120046.45it/s] 50%|█████     | 277686/552076 [00:02<00:02, 121007.44it/s] 52%|█████▏    | 289811/552076 [00:02<00:02, 120474.27it/s] 55%|█████▍    | 301876/552076 [00:02<00:02, 120187.32it/s] 57%|█████▋    | 314129/552076 [00:02<00:01, 120877.72it/s] 59%|█████▉    | 326227/552076 [00:02<00:02, 105464.18it/s] 61%|██████    | 337889/552076 [00:03<00:01, 108579.65it/s] 63%|██████▎   | 349847/552076 [00:03<00:01, 111659.83it/s] 66%|██████▌   | 362123/552076 [00:03<00:01, 114772.11it/s] 68%|██████▊   | 374375/552076 [00:03<00:01, 116989.39it/s] 70%|███████   | 386728/552076 [00:03<00:01, 118876.23it/s] 72%|███████▏  | 399215/552076 [00:03<00:01, 120610.68it/s] 75%|███████▍  | 411352/552076 [00:03<00:01, 120256.55it/s] 77%|███████▋  | 423431/552076 [00:03<00:01, 109859.25it/s] 79%|███████▊  | 434629/552076 [00:03<00:01, 100770.62it/s] 81%|████████  | 446298/552076 [00:04<00:01, 105070.72it/s] 83%|████████▎ | 458575/552076 [00:04<00:00, 109819.13it/s] 85%|████████▌ | 470794/552076 [00:04<00:00, 113256.54it/s] 88%|████████▊ | 483151/552076 [00:04<00:00, 116163.32it/s] 90%|████████▉ | 495601/552076 [00:04<00:00, 118542.63it/s] 92%|█████████▏| 508124/552076 [00:04<00:00, 120471.41it/s] 94%|█████████▍| 520644/552076 [00:04<00:00, 121847.85it/s] 97%|█████████▋| 532896/552076 [00:04<00:00, 116774.87it/s] 99%|█████████▊| 544666/552076 [00:04<00:00, 95386.94it/s] 100%|██████████| 552076/552076 [00:05<00:00, 109665.13it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7637/552076 [00:00<00:07, 76368.25it/s]  3%|▎         | 14290/552076 [00:00<00:07, 71120.72it/s]  4%|▍         | 23432/552076 [00:00<00:06, 76195.52it/s]  6%|▌         | 32530/552076 [00:00<00:06, 80098.89it/s]  8%|▊         | 41656/552076 [00:00<00:06, 81430.14it/s]  9%|▉         | 52187/552076 [00:00<00:05, 87373.15it/s] 12%|█▏        | 63933/552076 [00:00<00:05, 94175.43it/s] 13%|█▎        | 73016/552076 [00:00<00:05, 89512.07it/s] 15%|█▌        | 85479/552076 [00:00<00:04, 97776.12it/s] 17%|█▋        | 96110/552076 [00:01<00:04, 100187.48it/s] 19%|█▉        | 106293/552076 [00:01<00:04, 99238.88it/s] 21%|██        | 116277/552076 [00:01<00:04, 97943.02it/s] 23%|██▎       | 128364/552076 [00:01<00:04, 103850.67it/s] 25%|██▌       | 138878/552076 [00:01<00:04, 92671.19it/s]  27%|██▋       | 148652/552076 [00:01<00:04, 93780.21it/s] 29%|██▉       | 159048/552076 [00:01<00:04, 96617.99it/s] 31%|███       | 168888/552076 [00:01<00:04, 91032.74it/s] 33%|███▎      | 180223/552076 [00:01<00:03, 96543.05it/s] 35%|███▍      | 191766/552076 [00:02<00:03, 101526.12it/s] 37%|███▋      | 203014/552076 [00:02<00:03, 104579.33it/s] 39%|███▉      | 214584/552076 [00:02<00:03, 107684.14it/s] 41%|████      | 225503/552076 [00:02<00:03, 95725.62it/s]  43%|████▎     | 235427/552076 [00:02<00:03, 90212.40it/s] 44%|████▍     | 244760/552076 [00:02<00:03, 90040.11it/s] 46%|████▋     | 256387/552076 [00:02<00:03, 96575.74it/s] 48%|████▊     | 267283/552076 [00:02<00:02, 99983.84it/s] 51%|█████     | 278941/552076 [00:02<00:02, 104443.43it/s] 52%|█████▏    | 289599/552076 [00:03<00:03, 67131.61it/s]  54%|█████▍    | 298158/552076 [00:03<00:05, 49809.20it/s] 55%|█████▌    | 306130/552076 [00:03<00:04, 56126.62it/s] 57%|█████▋    | 315040/552076 [00:03<00:03, 63135.23it/s] 59%|█████▊    | 323904/552076 [00:03<00:03, 69099.70it/s] 60%|██████    | 332868/552076 [00:03<00:02, 74199.13it/s] 62%|██████▏   | 343996/552076 [00:03<00:02, 82439.98it/s] 64%|██████▍   | 353546/552076 [00:04<00:02, 84085.41it/s] 66%|██████▌   | 362657/552076 [00:04<00:02, 86075.22it/s] 68%|██████▊   | 373999/552076 [00:04<00:01, 92785.41it/s] 70%|██████▉   | 384875/552076 [00:04<00:01, 97060.82it/s] 72%|███████▏  | 396679/552076 [00:04<00:01, 102527.17it/s] 74%|███████▍  | 407287/552076 [00:04<00:01, 95726.66it/s]  76%|███████▌  | 419730/552076 [00:04<00:01, 102843.11it/s] 78%|███████▊  | 431400/552076 [00:04<00:01, 106640.45it/s] 80%|████████  | 443641/552076 [00:04<00:00, 110927.29it/s] 83%|████████▎ | 456065/552076 [00:04<00:00, 114609.65it/s] 85%|████████▍ | 468469/552076 [00:05<00:00, 117283.36it/s] 87%|████████▋ | 480362/552076 [00:05<00:00, 117163.30it/s] 89%|████████▉ | 492437/552076 [00:05<00:00, 118215.44it/s] 91%|█████████▏| 504524/552076 [00:05<00:00, 118999.27it/s] 94%|█████████▎| 517513/552076 [00:05<00:00, 122067.43it/s] 96%|█████████▌| 529994/552076 [00:05<00:00, 122874.04it/s] 98%|█████████▊| 542326/552076 [00:05<00:00, 121420.01it/s]100%|██████████| 552076/552076 [00:05<00:00, 95698.29it/s] 
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3929/552076 [00:00<00:15, 36534.71it/s]  3%|▎         | 14714/552076 [00:00<00:11, 45575.72it/s]  4%|▍         | 24752/552076 [00:00<00:09, 54471.07it/s]  6%|▌         | 34258/552076 [00:00<00:08, 61261.86it/s]  8%|▊         | 45661/552076 [00:00<00:07, 71137.07it/s] 10%|█         | 57270/552076 [00:00<00:06, 80486.58it/s] 12%|█▏        | 67961/552076 [00:00<00:05, 86931.64it/s] 14%|█▍        | 79319/552076 [00:00<00:05, 93203.83it/s] 16%|█▌        | 89404/552076 [00:00<00:04, 93158.15it/s] 18%|█▊        | 99255/552076 [00:01<00:05, 89657.37it/s] 20%|█▉        | 108624/552076 [00:01<00:05, 81729.56it/s] 21%|██        | 117215/552076 [00:01<00:05, 76520.00it/s] 23%|██▎       | 129673/552076 [00:01<00:04, 86534.39it/s] 25%|██▌       | 139019/552076 [00:01<00:04, 84242.47it/s] 27%|██▋       | 151420/552076 [00:01<00:04, 93208.12it/s] 30%|██▉       | 163968/552076 [00:01<00:03, 101000.65it/s] 32%|███▏      | 175227/552076 [00:01<00:03, 104218.16it/s] 34%|███▍      | 187566/552076 [00:01<00:03, 109312.90it/s] 36%|███▌      | 199991/552076 [00:02<00:03, 113402.41it/s] 38%|███▊      | 211649/552076 [00:02<00:03, 95716.46it/s]  40%|████      | 222313/552076 [00:02<00:03, 98750.20it/s] 42%|████▏     | 232949/552076 [00:02<00:03, 100915.37it/s] 44%|████▍     | 244720/552076 [00:02<00:02, 104970.66it/s] 47%|████▋     | 257099/552076 [00:02<00:02, 109986.05it/s] 49%|████▉     | 269504/552076 [00:02<00:02, 113856.54it/s] 51%|█████     | 281353/552076 [00:02<00:02, 115205.23it/s] 53%|█████▎    | 293697/552076 [00:02<00:02, 117556.93it/s] 55%|█████▌    | 305578/552076 [00:03<00:02, 111752.25it/s] 57%|█████▋    | 316901/552076 [00:03<00:02, 111278.71it/s] 60%|█████▉    | 329062/552076 [00:03<00:01, 114186.46it/s] 62%|██████▏   | 341168/552076 [00:03<00:01, 116164.06it/s] 64%|██████▍   | 353311/552076 [00:03<00:01, 117693.74it/s] 66%|██████▌   | 365734/552076 [00:03<00:01, 119579.05it/s] 68%|██████▊   | 377739/552076 [00:03<00:01, 119189.98it/s] 71%|███████   | 389976/552076 [00:03<00:01, 120126.11it/s] 73%|███████▎  | 402014/552076 [00:03<00:01, 98450.56it/s]  75%|███████▍  | 412519/552076 [00:04<00:01, 83303.86it/s] 77%|███████▋  | 424616/552076 [00:04<00:01, 91886.37it/s] 79%|███████▉  | 436983/552076 [00:04<00:01, 99560.73it/s] 81%|████████▏ | 448928/552076 [00:04<00:00, 104793.41it/s] 83%|████████▎ | 460040/552076 [00:04<00:00, 101403.46it/s] 86%|████████▌ | 472487/552076 [00:04<00:00, 107371.67it/s] 88%|████████▊ | 484778/552076 [00:04<00:00, 111603.26it/s] 90%|█████████ | 497286/552076 [00:04<00:00, 115329.52it/s] 92%|█████████▏| 509706/552076 [00:04<00:00, 117853.22it/s] 95%|█████████▍| 522115/552076 [00:04<00:00, 119657.21it/s] 97%|█████████▋| 534554/552076 [00:05<00:00, 121036.38it/s] 99%|█████████▉| 547020/552076 [00:05<00:00, 122100.42it/s]100%|██████████| 552076/552076 [00:05<00:00, 105635.03it/s]

epoch 500: {'train_loss': '1.15578'}; time used = 27.803402185440063s
Finished training. Time used = 2216.570324897766.
Training classifier using 20.00% nodes...
{'micro': 0.397996703436034, 'macro': 0.27608874400670574, 'samples': 0.397996703436034, 'weighted': 0.32682274580384524}
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 0 bytes already allocated; 27.44 MiB free; 0 bytes reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 26%|██▋       | 10436/39434 [00:00<00:00, 104355.87it/s] 49%|████▉     | 19392/39434 [00:00<00:00, 99426.48it/s]  66%|██████▌   | 26077/39434 [00:00<00:00, 86743.46it/s] 87%|████████▋ | 34277/39434 [00:00<00:00, 85260.89it/s]100%|██████████| 39434/39434 [00:00<00:00, 84562.21it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11610/552076 [00:00<00:04, 116092.08it/s]  4%|▍         | 24476/552076 [00:00<00:04, 119595.54it/s]  7%|▋         | 38862/552076 [00:00<00:04, 125967.29it/s]  9%|▉         | 50154/552076 [00:00<00:04, 121745.19it/s] 11%|█         | 61724/552076 [00:00<00:04, 119865.65it/s] 13%|█▎        | 73417/552076 [00:00<00:04, 118969.54it/s] 15%|█▌        | 84007/552076 [00:00<00:04, 105455.77it/s] 17%|█▋        | 94380/552076 [00:00<00:04, 104929.03it/s] 19%|█▉        | 106390/552076 [00:00<00:04, 109061.42it/s] 21%|██▏       | 117481/552076 [00:01<00:04, 97823.77it/s]  23%|██▎       | 127294/552076 [00:01<00:04, 96289.25it/s] 25%|██▌       | 138060/552076 [00:01<00:04, 99438.08it/s] 27%|██▋       | 149949/552076 [00:01<00:03, 104569.86it/s] 29%|██▉       | 162009/552076 [00:01<00:03, 108910.92it/s] 32%|███▏      | 173973/552076 [00:01<00:03, 111921.21it/s] 34%|███▎      | 185847/552076 [00:01<00:03, 113880.47it/s] 36%|███▌      | 197927/552076 [00:01<00:03, 115870.56it/s] 38%|███▊      | 210283/552076 [00:01<00:02, 118074.37it/s] 40%|████      | 222830/552076 [00:01<00:02, 120198.09it/s] 43%|████▎     | 234959/552076 [00:02<00:02, 120522.34it/s] 45%|████▍     | 247053/552076 [00:02<00:02, 120645.91it/s] 47%|████▋     | 259142/552076 [00:02<00:02, 119955.59it/s] 49%|████▉     | 271374/552076 [00:02<00:02, 120654.87it/s] 51%|█████▏    | 283500/552076 [00:02<00:02, 120835.03it/s] 54%|█████▎    | 295593/552076 [00:02<00:02, 118854.22it/s] 56%|█████▌    | 307730/552076 [00:02<00:02, 119595.78it/s] 58%|█████▊    | 320015/552076 [00:02<00:01, 120552.56it/s] 60%|██████    | 332606/552076 [00:02<00:01, 122108.88it/s] 62%|██████▏   | 344829/552076 [00:02<00:01, 118099.65it/s] 65%|██████▍   | 356754/552076 [00:03<00:01, 118440.69it/s] 67%|██████▋   | 368786/552076 [00:03<00:01, 118997.82it/s] 69%|██████▉   | 380850/552076 [00:03<00:01, 119484.52it/s] 71%|███████   | 393045/552076 [00:03<00:01, 120212.74it/s] 73%|███████▎  | 405209/552076 [00:03<00:01, 120634.34it/s] 76%|███████▌  | 417361/552076 [00:03<00:01, 120897.51it/s] 78%|███████▊  | 429538/552076 [00:03<00:01, 121155.13it/s] 80%|████████  | 441753/552076 [00:03<00:00, 121450.37it/s] 82%|████████▏ | 453910/552076 [00:03<00:00, 121485.14it/s] 84%|████████▍ | 466448/552076 [00:03<00:00, 122626.95it/s] 87%|████████▋ | 478715/552076 [00:04<00:00, 121922.72it/s] 89%|████████▉ | 490991/552076 [00:04<00:00, 122172.13it/s] 91%|█████████ | 503211/552076 [00:04<00:00, 121870.34it/s] 93%|█████████▎| 515401/552076 [00:04<00:00, 96280.08it/s]  96%|█████████▌| 527321/552076 [00:04<00:00, 102172.25it/s] 98%|█████████▊| 538876/552076 [00:04<00:00, 105848.44it/s]100%|█████████▉| 549977/552076 [00:04<00:00, 106374.95it/s]100%|██████████| 552076/552076 [00:04<00:00, 114892.79it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 42, in forward
    hneg = self.embed(neg)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 870.25 MiB already allocated; 32.44 MiB free; 884.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.2790381908416748 seconds.
Run epoch 1
Epoch 1 ends in 0.37623023986816406 seconds.
39434 sentences created
mode 1: time used = 0.5967082977294922
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 48%|████▊     | 18973/39434 [00:00<00:00, 189723.40it/s] 91%|█████████ | 35882/39434 [00:00<00:00, 183017.56it/s]100%|██████████| 39434/39434 [00:00<00:00, 163962.37it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 21951/552076 [00:00<00:02, 219503.93it/s]  8%|▊         | 43861/552076 [00:00<00:02, 219382.19it/s] 12%|█▏        | 65561/552076 [00:00<00:02, 218659.60it/s] 16%|█▌        | 86506/552076 [00:00<00:02, 215812.05it/s] 20%|█▉        | 108046/552076 [00:00<00:02, 215687.10it/s] 23%|██▎       | 129199/552076 [00:00<00:01, 214422.51it/s] 27%|██▋       | 150440/552076 [00:00<00:01, 213813.59it/s] 31%|███       | 171702/552076 [00:00<00:01, 213451.26it/s] 35%|███▍      | 191786/552076 [00:00<00:01, 208164.98it/s] 39%|███▊      | 213286/552076 [00:01<00:01, 210169.18it/s] 42%|████▏     | 234179/552076 [00:01<00:01, 209794.14it/s] 46%|████▌     | 255132/552076 [00:01<00:01, 209714.74it/s] 50%|████▉     | 275853/552076 [00:01<00:01, 208956.44it/s] 54%|█████▍    | 296817/552076 [00:01<00:01, 209159.31it/s] 58%|█████▊    | 318282/552076 [00:01<00:01, 210774.19it/s] 62%|██████▏   | 339762/552076 [00:01<00:01, 211963.21it/s] 65%|██████▌   | 360893/552076 [00:01<00:00, 208197.30it/s] 69%|██████▉   | 382170/552076 [00:01<00:00, 209545.60it/s] 73%|███████▎  | 403105/552076 [00:01<00:00, 193785.87it/s] 77%|███████▋  | 422706/552076 [00:02<00:00, 178308.95it/s] 80%|███████▉  | 440936/552076 [00:02<00:00, 168106.83it/s] 83%|████████▎ | 458146/552076 [00:02<00:00, 163311.74it/s] 86%|████████▌ | 474787/552076 [00:02<00:00, 158978.42it/s] 89%|████████▉ | 490927/552076 [00:02<00:00, 156084.38it/s] 92%|█████████▏| 509015/552076 [00:02<00:00, 162777.75it/s] 95%|█████████▌| 527178/552076 [00:02<00:00, 168008.89it/s] 99%|█████████▊| 544163/552076 [00:02<00:00, 163677.51it/s]100%|██████████| 552076/552076 [00:02<00:00, 191524.36it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 89.00 MiB already allocated; 145.44 MiB free; 100.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.22368884086608887 seconds.
Run epoch 1
Epoch 1 ends in 0.20681238174438477 seconds.
39434 sentences created
mode 1: time used = 0.3415806293487549
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 22%|██▏       | 8734/39434 [00:00<00:00, 87339.46it/s] 43%|████▎     | 16929/39434 [00:00<00:00, 85649.27it/s] 60%|█████▉    | 23528/39434 [00:00<00:00, 78622.10it/s] 78%|███████▊  | 30677/39434 [00:00<00:00, 76335.20it/s] 99%|█████████▊| 38927/39434 [00:00<00:00, 78083.69it/s]100%|██████████| 39434/39434 [00:00<00:00, 77896.61it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11596/552076 [00:00<00:04, 115958.18it/s]  4%|▍         | 22232/552076 [00:00<00:04, 111518.82it/s]  6%|▌         | 34091/552076 [00:00<00:04, 113547.33it/s]  8%|▊         | 45925/552076 [00:00<00:04, 114943.58it/s] 11%|█         | 58213/552076 [00:00<00:04, 106721.55it/s] 12%|█▏        | 67074/552076 [00:00<00:05, 90519.32it/s]  14%|█▍        | 79595/552076 [00:00<00:04, 98724.18it/s] 17%|█▋        | 92301/552076 [00:00<00:04, 105801.95it/s] 19%|█▉        | 104962/552076 [00:00<00:04, 111286.83it/s] 21%|██▏       | 117577/552076 [00:01<00:03, 115362.40it/s] 24%|██▎       | 130102/552076 [00:01<00:03, 118159.14it/s] 26%|██▌       | 142785/552076 [00:01<00:03, 120631.12it/s] 28%|██▊       | 155171/552076 [00:01<00:03, 121578.59it/s] 30%|███       | 167834/552076 [00:01<00:03, 123048.82it/s] 33%|███▎      | 180503/552076 [00:01<00:02, 124118.70it/s] 35%|███▍      | 192935/552076 [00:01<00:03, 96758.82it/s]  37%|███▋      | 205154/552076 [00:01<00:03, 103201.41it/s] 39%|███▉      | 217373/552076 [00:01<00:03, 108247.96it/s] 42%|████▏     | 229526/552076 [00:02<00:02, 111917.14it/s] 44%|████▍     | 242004/552076 [00:02<00:02, 115487.01it/s] 46%|████▌     | 254400/552076 [00:02<00:02, 117902.60it/s] 48%|████▊     | 266812/552076 [00:02<00:02, 119700.05it/s] 51%|█████     | 278969/552076 [00:02<00:04, 66528.50it/s]  52%|█████▏    | 288459/552076 [00:03<00:05, 51453.18it/s] 54%|█████▎    | 296112/552076 [00:03<00:05, 48762.72it/s] 55%|█████▍    | 302773/552076 [00:03<00:05, 46696.31it/s] 56%|█████▌    | 308711/552076 [00:03<00:05, 40968.90it/s] 57%|█████▋    | 313823/552076 [00:03<00:05, 40863.07it/s] 58%|█████▊    | 318620/552076 [00:03<00:06, 38365.76it/s] 59%|█████▊    | 322986/552076 [00:03<00:06, 35387.74it/s] 60%|██████    | 333691/552076 [00:04<00:04, 44280.39it/s] 62%|██████▏   | 344752/552076 [00:04<00:03, 53993.55it/s] 64%|██████▍   | 355991/552076 [00:04<00:03, 63963.72it/s] 67%|██████▋   | 367251/552076 [00:04<00:02, 73485.71it/s] 69%|██████▊   | 378534/552076 [00:04<00:02, 82070.83it/s] 71%|███████   | 389793/552076 [00:04<00:01, 89334.81it/s] 73%|███████▎  | 401012/552076 [00:04<00:01, 95149.69it/s] 75%|███████▍  | 412224/552076 [00:04<00:01, 99675.42it/s] 77%|███████▋  | 423021/552076 [00:05<00:02, 58707.18it/s] 78%|███████▊  | 431478/552076 [00:05<00:02, 52314.42it/s] 79%|███████▉  | 438649/552076 [00:05<00:02, 47043.54it/s] 81%|████████  | 444812/552076 [00:05<00:02, 44370.99it/s] 82%|████████▏ | 450301/552076 [00:05<00:02, 45437.38it/s] 83%|████████▎ | 455588/552076 [00:05<00:02, 42375.88it/s] 83%|████████▎ | 460388/552076 [00:06<00:02, 40270.46it/s] 84%|████████▍ | 465447/552076 [00:06<00:02, 42471.03it/s] 85%|████████▌ | 470017/552076 [00:06<00:01, 41667.66it/s] 86%|████████▌ | 474413/552076 [00:06<00:01, 41294.43it/s] 87%|████████▋ | 478704/552076 [00:06<00:01, 39311.79it/s] 88%|████████▊ | 483158/552076 [00:06<00:01, 38911.72it/s] 88%|████████▊ | 487144/552076 [00:06<00:01, 37886.76it/s] 89%|████████▉ | 491223/552076 [00:06<00:01, 38713.16it/s] 90%|████████▉ | 495781/552076 [00:06<00:01, 39270.43it/s] 91%|█████████ | 500644/552076 [00:07<00:01, 40039.55it/s] 91%|█████████▏| 505054/552076 [00:07<00:01, 41176.32it/s] 92%|█████████▏| 509238/552076 [00:07<00:01, 41303.48it/s] 93%|█████████▎| 513390/552076 [00:07<00:01, 37854.60it/s] 94%|█████████▎| 517247/552076 [00:07<00:00, 37758.41it/s] 94%|█████████▍| 521073/552076 [00:07<00:00, 37522.00it/s] 95%|█████████▌| 524920/552076 [00:07<00:00, 37801.42it/s] 96%|█████████▌| 529426/552076 [00:07<00:00, 39006.46it/s] 97%|█████████▋| 534867/552076 [00:07<00:00, 42625.87it/s] 98%|█████████▊| 539249/552076 [00:08<00:00, 40149.17it/s] 99%|█████████▊| 544350/552076 [00:08<00:00, 42888.39it/s] 99%|█████████▉| 548770/552076 [00:08<00:00, 37219.28it/s]100%|██████████| 552076/552076 [00:08<00:00, 65986.12it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 42, in forward
    hneg = self.embed(neg)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 870.25 MiB already allocated; 32.44 MiB free; 884.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.2889692783355713 seconds.
Run epoch 1
Epoch 1 ends in 0.39287757873535156 seconds.
39434 sentences created
mode 1: time used = 0.6242854595184326
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 12%|█▏        | 4727/39434 [00:00<00:00, 47268.02it/s] 31%|███▏      | 12384/39434 [00:00<00:00, 52131.85it/s] 42%|████▏     | 16667/39434 [00:00<00:00, 47671.55it/s] 56%|█████▌    | 21931/39434 [00:00<00:00, 48481.21it/s] 67%|██████▋   | 26512/39434 [00:00<00:00, 47212.99it/s] 77%|███████▋  | 30538/39434 [00:00<00:00, 43952.08it/s] 90%|█████████ | 35646/39434 [00:00<00:00, 45872.14it/s]100%|██████████| 39434/39434 [00:00<00:00, 50139.43it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 12416/552076 [00:00<00:04, 124158.34it/s]  5%|▍         | 24858/552076 [00:00<00:04, 124234.98it/s]  6%|▌         | 33757/552076 [00:00<00:04, 108927.66it/s]  8%|▊         | 46225/552076 [00:00<00:04, 113217.07it/s] 10%|▉         | 54849/552076 [00:00<00:04, 103312.93it/s] 12%|█▏        | 67271/552076 [00:00<00:04, 108805.54it/s] 14%|█▍        | 79470/552076 [00:00<00:04, 112450.23it/s] 16%|█▋        | 91014/552076 [00:00<00:04, 113328.66it/s] 19%|█▊        | 103260/552076 [00:00<00:03, 115919.79it/s] 21%|██        | 114497/552076 [00:01<00:04, 88712.36it/s]  22%|██▏       | 124083/552076 [00:01<00:04, 88350.09it/s] 24%|██▍       | 133419/552076 [00:01<00:04, 83791.48it/s] 26%|██▌       | 142198/552076 [00:01<00:05, 76179.81it/s] 28%|██▊       | 154178/552076 [00:01<00:04, 85520.82it/s] 30%|███       | 165778/552076 [00:01<00:04, 92838.70it/s] 32%|███▏      | 176083/552076 [00:01<00:03, 95682.93it/s] 34%|███▎      | 186126/552076 [00:01<00:03, 91574.45it/s] 36%|███▌      | 198045/552076 [00:01<00:03, 98414.83it/s] 38%|███▊      | 210553/552076 [00:02<00:03, 105138.88it/s] 40%|████      | 223095/552076 [00:02<00:02, 110499.21it/s] 43%|████▎     | 235735/552076 [00:02<00:02, 114831.30it/s] 45%|████▌     | 248485/552076 [00:02<00:02, 118357.75it/s] 47%|████▋     | 261540/552076 [00:02<00:02, 121767.50it/s] 50%|████▉     | 274325/552076 [00:02<00:02, 123528.16it/s] 52%|█████▏    | 286816/552076 [00:02<00:02, 123721.50it/s] 54%|█████▍    | 299546/552076 [00:02<00:02, 124771.33it/s] 57%|█████▋    | 312301/552076 [00:02<00:01, 125591.55it/s] 59%|█████▉    | 324911/552076 [00:03<00:01, 119543.81it/s] 61%|██████    | 336962/552076 [00:03<00:02, 87729.45it/s]  63%|██████▎   | 347022/552076 [00:03<00:02, 84997.89it/s] 65%|██████▍   | 356441/552076 [00:03<00:02, 79070.29it/s] 66%|██████▌   | 365075/552076 [00:03<00:02, 72537.61it/s] 68%|██████▊   | 372943/552076 [00:03<00:02, 70542.33it/s] 69%|██████▉   | 380439/552076 [00:03<00:02, 68417.31it/s] 70%|███████   | 387604/552076 [00:03<00:02, 68825.96it/s] 72%|███████▏  | 397621/552076 [00:04<00:02, 75955.02it/s] 74%|███████▍  | 408651/552076 [00:04<00:01, 83780.33it/s] 76%|███████▌  | 417547/552076 [00:04<00:01, 77595.60it/s] 77%|███████▋  | 426322/552076 [00:04<00:01, 80385.72it/s] 79%|███████▉  | 436703/552076 [00:04<00:01, 86200.59it/s] 81%|████████▏ | 448681/552076 [00:04<00:01, 94115.76it/s] 83%|████████▎ | 458560/552076 [00:04<00:00, 94590.11it/s] 85%|████████▍ | 468347/552076 [00:04<00:00, 87289.46it/s] 87%|████████▋ | 477557/552076 [00:04<00:00, 88677.15it/s] 88%|████████▊ | 486669/552076 [00:05<00:00, 79231.60it/s] 90%|████████▉ | 494951/552076 [00:05<00:00, 72385.28it/s] 91%|█████████ | 502556/552076 [00:05<00:00, 69570.89it/s] 93%|█████████▎| 515010/552076 [00:05<00:00, 80188.75it/s] 95%|█████████▍| 523812/552076 [00:05<00:00, 76212.37it/s] 96%|█████████▋| 532023/552076 [00:05<00:00, 77116.32it/s] 98%|█████████▊| 541566/552076 [00:05<00:00, 81826.71it/s]100%|█████████▉| 550118/552076 [00:05<00:00, 77116.93it/s]100%|██████████| 552076/552076 [00:05<00:00, 92658.03it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 354, in _apply
    module._apply(fn)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 376, in _apply
    param_applied = fn(param)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 10.76 GiB total capacity; 38.00 MiB already allocated; 9.44 MiB free; 38.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.4090092182159424 seconds.
Run epoch 1
Epoch 1 ends in 0.5786402225494385 seconds.
39434 sentences created
mode 1: time used = 0.936826229095459
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
  0%|          | 0/39434 [00:00<?, ?it/s] 21%|██        | 8128/39434 [00:00<00:00, 81271.55it/s] 39%|███▉      | 15434/39434 [00:00<00:00, 78619.59it/s] 60%|██████    | 23682/39434 [00:00<00:00, 79737.04it/s] 80%|████████  | 31624/39434 [00:00<00:00, 79640.60it/s]100%|██████████| 39434/39434 [00:00<00:00, 79334.82it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11921/552076 [00:00<00:04, 119202.44it/s]  4%|▍         | 23740/552076 [00:00<00:04, 118894.02it/s]  6%|▋         | 35677/552076 [00:00<00:04, 119034.92it/s]  9%|▊         | 47668/552076 [00:00<00:04, 119294.10it/s] 11%|█         | 59561/552076 [00:00<00:04, 119182.45it/s] 13%|█▎        | 70115/552076 [00:00<00:04, 114423.80it/s] 15%|█▍        | 80518/552076 [00:00<00:04, 111092.95it/s] 16%|█▋        | 90696/552076 [00:00<00:05, 86379.31it/s]  18%|█▊        | 99526/552076 [00:00<00:05, 84212.05it/s] 20%|██        | 111056/552076 [00:01<00:04, 90579.97it/s] 22%|██▏       | 120353/552076 [00:01<00:04, 88453.29it/s] 23%|██▎       | 129377/552076 [00:01<00:05, 83573.87it/s] 25%|██▌       | 139017/552076 [00:01<00:04, 87046.21it/s] 27%|██▋       | 148304/552076 [00:01<00:04, 88714.84it/s] 28%|██▊       | 157298/552076 [00:01<00:05, 74236.72it/s] 30%|██▉       | 165207/552076 [00:01<00:05, 70585.75it/s] 31%|███▏      | 172643/552076 [00:01<00:05, 66101.18it/s] 33%|███▎      | 182478/552076 [00:02<00:05, 73312.14it/s] 35%|███▌      | 194241/552076 [00:02<00:04, 82654.07it/s] 37%|███▋      | 206141/552076 [00:02<00:03, 90991.09it/s] 40%|███▉      | 218098/552076 [00:02<00:03, 98018.67it/s] 42%|████▏     | 229312/552076 [00:02<00:03, 100608.52it/s] 44%|████▎     | 240468/552076 [00:02<00:03, 103659.59it/s] 46%|████▌     | 251902/552076 [00:02<00:02, 106647.13it/s] 48%|████▊     | 262850/552076 [00:02<00:02, 105545.65it/s] 50%|████▉     | 273606/552076 [00:02<00:03, 91649.27it/s]  52%|█████▏    | 285609/552076 [00:03<00:02, 98645.55it/s] 54%|█████▍    | 297611/552076 [00:03<00:02, 104212.11it/s] 56%|█████▌    | 309540/552076 [00:03<00:02, 108317.55it/s] 58%|█████▊    | 321635/552076 [00:03<00:02, 111818.99it/s] 60%|██████    | 333854/552076 [00:03<00:01, 114740.48it/s] 63%|██████▎   | 346077/552076 [00:03<00:01, 116887.36it/s] 65%|██████▍   | 357918/552076 [00:03<00:01, 110994.82it/s] 67%|██████▋   | 369186/552076 [00:03<00:01, 111466.21it/s] 69%|██████▉   | 381328/552076 [00:03<00:01, 114275.09it/s] 71%|███████   | 392856/552076 [00:03<00:01, 106145.62it/s] 73%|███████▎  | 403657/552076 [00:04<00:01, 98070.95it/s]  75%|███████▍  | 413717/552076 [00:04<00:01, 87259.47it/s] 77%|███████▋  | 424654/552076 [00:04<00:01, 92891.33it/s] 79%|███████▉  | 436353/552076 [00:04<00:01, 99009.72it/s] 81%|████████  | 448414/552076 [00:04<00:00, 104631.14it/s] 83%|████████▎ | 460625/552076 [00:04<00:00, 109324.30it/s] 86%|████████▌ | 472749/552076 [00:04<00:00, 112644.37it/s] 88%|████████▊ | 484919/552076 [00:04<00:00, 115215.89it/s] 90%|█████████ | 497173/552076 [00:04<00:00, 117317.22it/s] 92%|█████████▏| 509091/552076 [00:05<00:00, 117869.02it/s] 94%|█████████▍| 521541/552076 [00:05<00:00, 119782.73it/s] 97%|█████████▋| 533594/552076 [00:05<00:00, 97087.10it/s]  99%|█████████▉| 545701/552076 [00:05<00:00, 103220.35it/s]100%|██████████| 552076/552076 [00:05<00:00, 101379.08it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 47, in forward
    loss = self.estimator(self.decoder(hx, hpos), self.decoder(hx, hneg))
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_decoder.py", line 51, in forward
    h = torch.cat([x, y], dim=1)
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 1.98 GiB already allocated; 103.44 MiB free; 1.99 GiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.37568140029907227 seconds.
Run epoch 1
Epoch 1 ends in 0.41042065620422363 seconds.
39434 sentences created
mode 1: time used = 0.6225771903991699
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 24%|██▍       | 9485/39434 [00:00<00:00, 94849.64it/s] 46%|████▌     | 17952/39434 [00:00<00:00, 91547.28it/s] 66%|██████▌   | 26095/39434 [00:00<00:00, 88255.38it/s] 86%|████████▋ | 34047/39434 [00:00<00:00, 85188.96it/s]100%|██████████| 39434/39434 [00:00<00:00, 84785.36it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9313/552076 [00:00<00:05, 92025.81it/s]  4%|▎         | 19349/552076 [00:00<00:05, 94376.66it/s]  6%|▌         | 31369/552076 [00:00<00:05, 100877.18it/s]  8%|▊         | 42033/552076 [00:00<00:04, 102537.18it/s] 10%|▉         | 54243/552076 [00:00<00:04, 107712.91it/s] 12%|█▏        | 63665/552076 [00:00<00:04, 99634.72it/s]  13%|█▎        | 72764/552076 [00:00<00:05, 88355.94it/s] 15%|█▍        | 81231/552076 [00:00<00:06, 78409.61it/s] 16%|█▌        | 89021/552076 [00:01<00:06, 69554.25it/s] 18%|█▊        | 97029/552076 [00:01<00:06, 72406.58it/s] 19%|█▉        | 104404/552076 [00:01<00:06, 68827.12it/s] 20%|██        | 111418/552076 [00:01<00:06, 67164.84it/s] 21%|██▏       | 118235/552076 [00:01<00:06, 66340.04it/s] 23%|██▎       | 124942/552076 [00:01<00:06, 63381.05it/s] 24%|██▍       | 131359/552076 [00:01<00:06, 61913.60it/s] 25%|██▍       | 137987/552076 [00:01<00:06, 63161.10it/s] 26%|██▌       | 144354/552076 [00:01<00:06, 60802.07it/s] 27%|██▋       | 151551/552076 [00:01<00:06, 63769.12it/s] 29%|██▊       | 158182/552076 [00:02<00:06, 64510.40it/s] 30%|██▉       | 164759/552076 [00:02<00:05, 64880.32it/s] 31%|███       | 171287/552076 [00:02<00:06, 55523.59it/s] 32%|███▏      | 177458/552076 [00:02<00:06, 57243.12it/s] 33%|███▎      | 183662/552076 [00:02<00:06, 58602.35it/s] 34%|███▍      | 190379/552076 [00:02<00:05, 60933.24it/s] 36%|███▌      | 197192/552076 [00:02<00:05, 62925.88it/s] 37%|███▋      | 203590/552076 [00:02<00:06, 55104.62it/s] 38%|███▊      | 210454/552076 [00:03<00:05, 58567.71it/s] 39%|███▉      | 217204/552076 [00:03<00:05, 60987.82it/s] 41%|████      | 223849/552076 [00:03<00:05, 62527.59it/s] 42%|████▏     | 230245/552076 [00:03<00:05, 59469.11it/s] 43%|████▎     | 236323/552076 [00:03<00:05, 55530.65it/s] 44%|████▍     | 242021/552076 [00:03<00:06, 50879.46it/s] 45%|████▌     | 248655/552076 [00:03<00:05, 54702.98it/s] 46%|████▌     | 255297/552076 [00:03<00:05, 57759.74it/s] 47%|████▋     | 261263/552076 [00:03<00:05, 50296.13it/s] 48%|████▊     | 267124/552076 [00:04<00:05, 52531.03it/s] 50%|████▉     | 273862/552076 [00:04<00:04, 56248.18it/s] 51%|█████     | 280540/552076 [00:04<00:04, 59041.20it/s] 52%|█████▏    | 287247/552076 [00:04<00:04, 61240.11it/s] 53%|█████▎    | 293536/552076 [00:04<00:04, 61697.00it/s] 54%|█████▍    | 300283/552076 [00:04<00:03, 63321.77it/s] 56%|█████▌    | 306932/552076 [00:04<00:03, 64238.10it/s] 57%|█████▋    | 313613/552076 [00:04<00:03, 64988.24it/s] 58%|█████▊    | 320254/552076 [00:04<00:03, 65407.94it/s] 59%|█████▉    | 326831/552076 [00:04<00:03, 59117.52it/s] 60%|██████    | 332883/552076 [00:05<00:03, 58421.77it/s] 62%|██████▏   | 339609/552076 [00:05<00:03, 60817.90it/s] 63%|██████▎   | 345986/552076 [00:05<00:03, 61672.27it/s] 64%|██████▍   | 352578/552076 [00:05<00:03, 62886.10it/s] 65%|██████▌   | 359196/552076 [00:05<00:03, 63838.24it/s] 66%|██████▌   | 365663/552076 [00:05<00:02, 64083.62it/s] 67%|██████▋   | 372101/552076 [00:05<00:02, 63960.27it/s] 69%|██████▊   | 378518/552076 [00:05<00:02, 64020.92it/s] 70%|██████▉   | 385424/552076 [00:05<00:02, 65453.63it/s] 71%|███████   | 391988/552076 [00:05<00:02, 63885.24it/s] 72%|███████▏  | 398400/552076 [00:06<00:02, 63953.95it/s] 73%|███████▎  | 405164/552076 [00:06<00:02, 65014.93it/s] 75%|███████▍  | 411973/552076 [00:06<00:02, 65906.95it/s] 76%|███████▌  | 418577/552076 [00:06<00:02, 61106.05it/s] 77%|███████▋  | 425267/552076 [00:06<00:02, 62733.75it/s] 78%|███████▊  | 431664/552076 [00:06<00:01, 63097.19it/s] 79%|███████▉  | 438162/552076 [00:06<00:01, 63648.00it/s] 81%|████████  | 444561/552076 [00:06<00:01, 59519.49it/s] 82%|████████▏ | 451045/552076 [00:06<00:01, 61020.43it/s] 83%|████████▎ | 457212/552076 [00:07<00:01, 60896.84it/s] 84%|████████▍ | 463347/552076 [00:07<00:01, 59266.73it/s] 85%|████████▌ | 469315/552076 [00:07<00:01, 58951.84it/s] 86%|████████▌ | 475240/552076 [00:07<00:01, 57624.30it/s] 87%|████████▋ | 481030/552076 [00:07<00:01, 47852.77it/s] 88%|████████▊ | 486112/552076 [00:07<00:01, 46611.24it/s] 89%|████████▉ | 492079/552076 [00:07<00:01, 49884.70it/s] 90%|█████████ | 497282/552076 [00:07<00:01, 48360.49it/s] 91%|█████████ | 502279/552076 [00:08<00:01, 42338.58it/s] 92%|█████████▏| 509038/552076 [00:08<00:00, 47682.79it/s] 93%|█████████▎| 514203/552076 [00:08<00:00, 43716.97it/s] 94%|█████████▍| 518917/552076 [00:08<00:00, 34296.19it/s] 95%|█████████▍| 522902/552076 [00:08<00:00, 33911.79it/s] 96%|█████████▌| 527951/552076 [00:08<00:00, 37615.92it/s] 96%|█████████▋| 532112/552076 [00:08<00:00, 35574.36it/s] 98%|█████████▊| 538999/552076 [00:08<00:00, 41608.47it/s] 99%|█████████▉| 545517/552076 [00:09<00:00, 46671.48it/s]100%|██████████| 552076/552076 [00:09<00:00, 60588.37it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 41, in forward
    hpos = self.embed(pos)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 479.62 MiB already allocated; 206.44 MiB free; 492.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3153717517852783 seconds.
Run epoch 1
Epoch 1 ends in 0.47754478454589844 seconds.
39434 sentences created
mode 1: time used = 0.583249568939209
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 27%|██▋       | 10517/39434 [00:00<00:00, 105161.58it/s] 55%|█████▍    | 21497/39434 [00:00<00:00, 106509.83it/s] 80%|███████▉  | 31459/39434 [00:00<00:00, 104341.83it/s]100%|██████████| 39434/39434 [00:00<00:00, 105833.70it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5426/552076 [00:00<00:10, 54255.14it/s]  2%|▏         | 9018/552076 [00:00<00:11, 47045.85it/s]  2%|▏         | 11235/552076 [00:00<00:15, 33901.72it/s]  3%|▎         | 16705/552076 [00:00<00:13, 38266.67it/s]  4%|▍         | 23328/552076 [00:00<00:12, 43815.12it/s]  5%|▌         | 29511/552076 [00:00<00:10, 48010.65it/s]  6%|▌         | 34444/552076 [00:00<00:10, 47278.96it/s]  7%|▋         | 41167/552076 [00:00<00:09, 51898.67it/s]  9%|▊         | 47386/552076 [00:00<00:09, 54593.00it/s] 10%|▉         | 53886/552076 [00:01<00:08, 57346.24it/s] 11%|█         | 60589/552076 [00:01<00:08, 59942.71it/s] 12%|█▏        | 67404/552076 [00:01<00:07, 62188.92it/s] 13%|█▎        | 74227/552076 [00:01<00:07, 63885.53it/s] 15%|█▍        | 81076/552076 [00:01<00:07, 65197.84it/s] 16%|█▌        | 87884/552076 [00:01<00:07, 66035.31it/s] 17%|█▋        | 94687/552076 [00:01<00:06, 66621.11it/s] 18%|█▊        | 101531/552076 [00:01<00:06, 67155.86it/s] 20%|█▉        | 108393/552076 [00:01<00:06, 67587.71it/s] 21%|██        | 115171/552076 [00:01<00:06, 67290.47it/s] 22%|██▏       | 121914/552076 [00:02<00:06, 67266.09it/s] 23%|██▎       | 128651/552076 [00:02<00:06, 67128.04it/s] 25%|██▍       | 135423/552076 [00:02<00:06, 67303.65it/s] 26%|██▌       | 142159/552076 [00:02<00:06, 67221.05it/s] 27%|██▋       | 148889/552076 [00:02<00:05, 67243.00it/s] 28%|██▊       | 155616/552076 [00:02<00:05, 67250.49it/s] 29%|██▉       | 162428/552076 [00:02<00:05, 67507.97it/s] 31%|███       | 169255/552076 [00:02<00:05, 67733.80it/s] 32%|███▏      | 176206/552076 [00:02<00:05, 68255.01it/s] 33%|███▎      | 183034/552076 [00:02<00:05, 67727.09it/s] 34%|███▍      | 189809/552076 [00:03<00:05, 67386.55it/s] 36%|███▌      | 196550/552076 [00:03<00:05, 66865.07it/s] 37%|███▋      | 203239/552076 [00:03<00:05, 66777.92it/s] 38%|███▊      | 210016/552076 [00:03<00:05, 67072.45it/s] 39%|███▉      | 216725/552076 [00:03<00:05, 66509.55it/s] 40%|████      | 223379/552076 [00:03<00:04, 66398.49it/s] 42%|████▏     | 230082/552076 [00:03<00:04, 66584.91it/s] 43%|████▎     | 236752/552076 [00:03<00:04, 66617.08it/s] 44%|████▍     | 243442/552076 [00:03<00:04, 66699.68it/s] 45%|████▌     | 250189/552076 [00:03<00:04, 66927.99it/s] 47%|████▋     | 256972/552076 [00:04<00:04, 67193.13it/s] 48%|████▊     | 263692/552076 [00:04<00:04, 66142.34it/s] 49%|████▉     | 270347/552076 [00:04<00:04, 66262.48it/s] 50%|█████     | 277130/552076 [00:04<00:04, 66724.62it/s] 51%|█████▏    | 283900/552076 [00:04<00:04, 67013.15it/s] 53%|█████▎    | 290634/552076 [00:04<00:03, 67110.46it/s] 54%|█████▍    | 297463/552076 [00:04<00:03, 67457.90it/s] 55%|█████▌    | 304211/552076 [00:04<00:03, 67270.06it/s] 56%|█████▋    | 311023/552076 [00:04<00:03, 67520.67it/s] 58%|█████▊    | 317777/552076 [00:04<00:03, 66891.34it/s] 59%|█████▉    | 324469/552076 [00:05<00:03, 66871.50it/s] 60%|█████▉    | 331192/552076 [00:05<00:03, 66977.24it/s] 61%|██████    | 337891/552076 [00:05<00:03, 66902.33it/s] 62%|██████▏   | 344688/552076 [00:05<00:03, 67217.26it/s] 64%|██████▎   | 351411/552076 [00:05<00:02, 66967.75it/s] 65%|██████▍   | 358109/552076 [00:05<00:03, 54442.42it/s] 66%|██████▌   | 364937/552076 [00:05<00:03, 57966.29it/s] 67%|██████▋   | 371771/552076 [00:05<00:02, 60730.92it/s] 69%|██████▊   | 378487/552076 [00:05<00:02, 62525.14it/s] 70%|██████▉   | 385261/552076 [00:06<00:02, 64003.10it/s] 71%|███████   | 392086/552076 [00:06<00:02, 65218.27it/s] 72%|███████▏  | 398822/552076 [00:06<00:02, 65844.53it/s] 73%|███████▎  | 405618/552076 [00:06<00:02, 66462.67it/s] 75%|███████▍  | 412321/552076 [00:06<00:02, 58158.03it/s] 76%|███████▌  | 419227/552076 [00:06<00:02, 61047.17it/s] 77%|███████▋  | 426029/552076 [00:06<00:02, 62982.25it/s] 78%|███████▊  | 432870/552076 [00:06<00:01, 64517.51it/s] 80%|███████▉  | 439752/552076 [00:06<00:01, 65748.96it/s] 81%|████████  | 446531/552076 [00:06<00:01, 66347.80it/s] 82%|████████▏ | 453343/552076 [00:07<00:01, 66869.39it/s] 83%|████████▎ | 460133/552076 [00:07<00:01, 67173.96it/s] 85%|████████▍ | 466882/552076 [00:07<00:01, 66647.67it/s] 86%|████████▌ | 473726/552076 [00:07<00:01, 67173.28it/s] 87%|████████▋ | 480461/552076 [00:07<00:01, 67181.09it/s] 88%|████████▊ | 487310/552076 [00:07<00:00, 67567.83it/s] 89%|████████▉ | 494076/552076 [00:07<00:00, 67096.60it/s] 91%|█████████ | 500884/552076 [00:07<00:00, 67388.45it/s] 92%|█████████▏| 507629/552076 [00:07<00:00, 52884.00it/s] 94%|█████████▎| 516740/552076 [00:08<00:00, 60498.34it/s] 95%|█████████▌| 526087/552076 [00:08<00:00, 67657.83it/s] 97%|█████████▋| 537627/552076 [00:08<00:00, 77244.80it/s]100%|█████████▉| 550023/552076 [00:08<00:00, 87090.73it/s]100%|██████████| 552076/552076 [00:08<00:00, 65838.03it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 41, in forward
    hpos = self.embed(pos)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 479.62 MiB already allocated; 206.44 MiB free; 492.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13101410865783691 seconds.
Run epoch 1
Epoch 1 ends in 0.27265238761901855 seconds.
39434 sentences created
mode 1: time used = 0.46104931831359863
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 12%|█▏        | 4808/39434 [00:00<00:00, 48076.26it/s] 22%|██▏       | 8847/39434 [00:00<00:00, 43673.96it/s] 39%|███▉      | 15385/39434 [00:00<00:00, 46756.08it/s] 51%|█████     | 20099/39434 [00:00<00:00, 46870.21it/s] 61%|██████    | 23912/39434 [00:00<00:00, 43721.83it/s] 82%|████████▏ | 32197/39434 [00:00<00:00, 50937.90it/s] 96%|█████████▋| 37987/39434 [00:00<00:00, 52009.56it/s]100%|██████████| 39434/39434 [00:00<00:00, 45628.03it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6046/552076 [00:00<00:09, 58395.34it/s]  2%|▏         | 12063/552076 [00:00<00:09, 58915.68it/s]  3%|▎         | 17968/552076 [00:00<00:09, 58955.17it/s]  4%|▍         | 23589/552076 [00:00<00:09, 57395.34it/s]  5%|▌         | 29747/552076 [00:00<00:08, 58589.28it/s]  6%|▋         | 35308/552076 [00:00<00:08, 57585.73it/s]  7%|▋         | 41093/552076 [00:00<00:08, 57663.29it/s]  9%|▊         | 47109/552076 [00:00<00:08, 57442.91it/s] 10%|▉         | 53229/552076 [00:00<00:08, 58520.23it/s] 11%|█         | 59051/552076 [00:01<00:08, 57698.74it/s] 12%|█▏        | 65110/552076 [00:01<00:08, 58536.62it/s] 13%|█▎        | 70947/552076 [00:01<00:08, 57829.06it/s] 14%|█▍        | 77180/552076 [00:01<00:08, 59108.47it/s] 15%|█▌        | 83205/552076 [00:01<00:07, 58708.28it/s] 16%|█▌        | 89369/552076 [00:01<00:07, 59557.12it/s] 17%|█▋        | 95307/552076 [00:01<00:07, 58698.67it/s] 18%|█▊        | 101452/552076 [00:01<00:07, 59497.66it/s] 19%|█▉        | 107398/552076 [00:01<00:07, 59046.70it/s] 21%|██        | 113478/552076 [00:01<00:07, 59561.74it/s] 22%|██▏       | 119434/552076 [00:02<00:07, 57839.99it/s] 23%|██▎       | 125246/552076 [00:02<00:07, 57923.19it/s] 24%|██▍       | 131264/552076 [00:02<00:07, 58581.42it/s] 25%|██▍       | 137335/552076 [00:02<00:07, 59202.85it/s] 26%|██▌       | 143262/552076 [00:02<00:07, 58225.81it/s] 27%|██▋       | 149229/552076 [00:02<00:06, 57626.48it/s] 28%|██▊       | 154999/552076 [00:02<00:07, 55783.54it/s] 29%|██▉       | 160837/552076 [00:02<00:07, 55764.14it/s] 30%|███       | 166734/552076 [00:02<00:06, 56687.93it/s] 31%|███       | 172439/552076 [00:02<00:06, 56397.94it/s] 32%|███▏      | 178552/552076 [00:03<00:06, 57737.96it/s] 33%|███▎      | 184619/552076 [00:03<00:06, 57259.53it/s] 35%|███▍      | 190984/552076 [00:03<00:06, 58768.20it/s] 36%|███▌      | 197385/552076 [00:03<00:05, 60247.81it/s] 37%|███▋      | 204055/552076 [00:03<00:05, 62047.42it/s] 38%|███▊      | 212114/552076 [00:03<00:05, 66647.81it/s] 40%|████      | 222957/552076 [00:03<00:04, 75358.92it/s] 42%|████▏     | 230957/552076 [00:03<00:05, 64167.68it/s] 43%|████▎     | 237987/552076 [00:04<00:05, 54717.11it/s] 44%|████▍     | 244624/552076 [00:04<00:05, 57758.66it/s] 46%|████▋     | 256674/552076 [00:04<00:04, 68450.04it/s] 49%|████▉     | 269139/552076 [00:04<00:03, 79155.63it/s] 51%|█████     | 281631/552076 [00:04<00:03, 88928.83it/s] 53%|█████▎    | 294146/552076 [00:04<00:02, 97382.84it/s] 56%|█████▌    | 306925/552076 [00:04<00:02, 104868.25it/s] 58%|█████▊    | 318431/552076 [00:04<00:02, 80529.07it/s]  59%|█████▉    | 328053/552076 [00:04<00:02, 79520.27it/s] 62%|██████▏   | 340689/552076 [00:05<00:02, 89469.22it/s] 64%|██████▎   | 351463/552076 [00:05<00:02, 94264.11it/s] 66%|██████▌   | 362433/552076 [00:05<00:01, 98417.80it/s] 68%|██████▊   | 375157/552076 [00:05<00:01, 105590.85it/s] 70%|██████▉   | 386335/552076 [00:05<00:01, 104085.88it/s] 72%|███████▏  | 399006/552076 [00:05<00:01, 109974.99it/s] 75%|███████▍  | 411601/552076 [00:05<00:01, 114323.63it/s] 77%|███████▋  | 423355/552076 [00:05<00:01, 112551.20it/s] 79%|███████▉  | 436001/552076 [00:05<00:00, 116389.82it/s] 81%|████████  | 447836/552076 [00:06<00:01, 92181.21it/s]  83%|████████▎ | 457982/552076 [00:06<00:01, 93738.36it/s] 85%|████████▌ | 469540/552076 [00:06<00:00, 99369.86it/s] 87%|████████▋ | 481034/552076 [00:06<00:00, 103577.64it/s] 89%|████████▉ | 492975/552076 [00:06<00:00, 103946.55it/s] 91%|█████████ | 503673/552076 [00:06<00:00, 88695.58it/s]  93%|█████████▎| 515624/552076 [00:06<00:00, 96131.34it/s] 96%|█████████▌| 527587/552076 [00:06<00:00, 102148.83it/s] 98%|█████████▊| 539607/552076 [00:06<00:00, 106966.64it/s]100%|█████████▉| 551682/552076 [00:07<00:00, 110758.69it/s]100%|██████████| 552076/552076 [00:07<00:00, 78182.48it/s] 
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 47, in forward
    loss = self.estimator(self.decoder(hx, hpos), self.decoder(hx, hneg))
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_decoder.py", line 51, in forward
    h = torch.cat([x, y], dim=1)
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 1.21 GiB already allocated; 194.44 MiB free; 1.23 GiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.4098186492919922 seconds.
Run epoch 1
Epoch 1 ends in 0.6995139122009277 seconds.
39434 sentences created
mode 1: time used = 1.063551425933838
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 14%|█▍        | 5587/39434 [00:00<00:00, 55866.46it/s] 34%|███▎      | 13225/39434 [00:00<00:00, 60761.35it/s] 56%|█████▋    | 22207/39434 [00:00<00:00, 67291.19it/s] 69%|██████▉   | 27327/39434 [00:00<00:00, 59868.52it/s] 90%|█████████ | 35589/39434 [00:00<00:00, 65259.44it/s]100%|██████████| 39434/39434 [00:00<00:00, 68624.11it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11881/552076 [00:00<00:04, 118808.98it/s]  4%|▍         | 24072/552076 [00:00<00:04, 119721.62it/s]  7%|▋         | 36485/552076 [00:00<00:04, 121010.85it/s]  9%|▊         | 47774/552076 [00:00<00:04, 118452.94it/s] 11%|█         | 59821/552076 [00:00<00:04, 119048.53it/s] 13%|█▎        | 71495/552076 [00:00<00:04, 118345.44it/s] 15%|█▌        | 83575/552076 [00:00<00:03, 119069.46it/s] 17%|█▋        | 94511/552076 [00:00<00:04, 106067.71it/s] 19%|█▉        | 106082/552076 [00:00<00:04, 108786.85it/s] 21%|██▏       | 118206/552076 [00:01<00:03, 112244.93it/s] 23%|██▎       | 129718/552076 [00:01<00:03, 113091.33it/s] 26%|██▌       | 141809/552076 [00:01<00:03, 115326.25it/s] 28%|██▊       | 153352/552076 [00:01<00:03, 115356.15it/s] 30%|██▉       | 165020/552076 [00:01<00:03, 115747.96it/s] 32%|███▏      | 176881/552076 [00:01<00:03, 116590.35it/s] 34%|███▍      | 188959/552076 [00:01<00:03, 117815.13it/s] 36%|███▋      | 200729/552076 [00:01<00:03, 116156.24it/s] 39%|███▊      | 212817/552076 [00:01<00:02, 117533.11it/s] 41%|████      | 224572/552076 [00:01<00:02, 116542.44it/s] 43%|████▎     | 236230/552076 [00:02<00:02, 112458.59it/s] 45%|████▍     | 247509/552076 [00:02<00:03, 92281.56it/s]  47%|████▋     | 258216/552076 [00:02<00:03, 96270.33it/s] 49%|████▊     | 268321/552076 [00:02<00:03, 80318.38it/s] 50%|█████     | 277858/552076 [00:02<00:03, 84309.92it/s] 52%|█████▏    | 289218/552076 [00:02<00:02, 91376.35it/s] 55%|█████▍    | 301172/552076 [00:02<00:02, 98325.08it/s] 57%|█████▋    | 313165/552076 [00:02<00:02, 103939.85it/s] 59%|█████▊    | 324040/552076 [00:02<00:02, 104526.43it/s] 61%|██████    | 334830/552076 [00:03<00:02, 101415.60it/s] 63%|██████▎   | 345228/552076 [00:03<00:02, 85298.37it/s]  64%|██████▍   | 355799/552076 [00:03<00:02, 90542.09it/s] 66%|██████▌   | 365372/552076 [00:03<00:02, 78750.72it/s] 68%|██████▊   | 373885/552076 [00:03<00:02, 73080.45it/s] 69%|██████▉   | 382670/552076 [00:03<00:02, 76961.03it/s] 71%|███████▏  | 393408/552076 [00:03<00:01, 83394.36it/s] 73%|███████▎  | 402201/552076 [00:04<00:01, 78637.48it/s] 74%|███████▍  | 410438/552076 [00:04<00:01, 75010.39it/s] 76%|███████▌  | 418236/552076 [00:04<00:01, 71145.37it/s] 77%|███████▋  | 425600/552076 [00:04<00:01, 69586.95it/s] 78%|███████▊  | 432741/552076 [00:04<00:01, 68489.75it/s] 80%|████████  | 443715/552076 [00:04<00:01, 77194.11it/s] 83%|████████▎ | 455827/552076 [00:04<00:01, 86617.05it/s] 85%|████████▍ | 467907/552076 [00:04<00:00, 94650.96it/s] 87%|████████▋ | 480172/552076 [00:04<00:00, 101609.08it/s] 89%|████████▉ | 492249/552076 [00:04<00:00, 106686.81it/s] 91%|█████████▏| 504772/552076 [00:05<00:00, 111644.61it/s] 94%|█████████▎| 517158/552076 [00:05<00:00, 115048.02it/s] 96%|█████████▌| 529336/552076 [00:05<00:00, 116986.73it/s] 98%|█████████▊| 541268/552076 [00:05<00:00, 114726.99it/s]100%|██████████| 552076/552076 [00:05<00:00, 100086.37it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 41, in forward
    hpos = self.embed(pos)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 392.00 MiB (GPU 0; 10.76 GiB total capacity; 479.62 MiB already allocated; 206.44 MiB free; 492.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3383333683013916 seconds.
Run epoch 1
Epoch 1 ends in 0.4557535648345947 seconds.
39434 sentences created
mode 1: time used = 0.8041329383850098
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 25%|██▍       | 9670/39434 [00:00<00:00, 96697.56it/s] 47%|████▋     | 18653/39434 [00:00<00:00, 94529.11it/s] 70%|███████   | 27723/39434 [00:00<00:00, 93343.03it/s] 86%|████████▌ | 33752/39434 [00:00<00:00, 59013.02it/s]100%|██████████| 39434/39434 [00:00<00:00, 67307.40it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 11812/552076 [00:00<00:04, 118116.45it/s]  4%|▍         | 23740/552076 [00:00<00:04, 118462.49it/s]  6%|▋         | 35591/552076 [00:00<00:04, 118474.74it/s]  9%|▊         | 47542/552076 [00:00<00:04, 118780.51it/s] 11%|█         | 59742/552076 [00:00<00:04, 119726.72it/s] 13%|█▎        | 71476/552076 [00:00<00:04, 118999.05it/s] 15%|█▌        | 83210/552076 [00:00<00:03, 118496.04it/s] 17%|█▋        | 95176/552076 [00:00<00:03, 118842.20it/s] 19%|█▉        | 107250/552076 [00:00<00:03, 119402.66it/s] 22%|██▏       | 118749/552076 [00:01<00:03, 118042.79it/s] 24%|██▍       | 131187/552076 [00:01<00:03, 119874.14it/s] 26%|██▌       | 142952/552076 [00:01<00:03, 112435.75it/s] 28%|██▊       | 154134/552076 [00:01<00:03, 104601.88it/s] 30%|███       | 166620/552076 [00:01<00:03, 109951.51it/s] 32%|███▏      | 179165/552076 [00:01<00:03, 114182.92it/s] 35%|███▍      | 191483/552076 [00:01<00:03, 116740.04it/s] 37%|███▋      | 203259/552076 [00:01<00:03, 109787.68it/s] 39%|███▉      | 215665/552076 [00:01<00:02, 113711.90it/s] 41%|████▏     | 227911/552076 [00:01<00:02, 116201.62it/s] 43%|████▎     | 240083/552076 [00:02<00:02, 117801.70it/s] 46%|████▌     | 252623/552076 [00:02<00:02, 119981.27it/s] 48%|████▊     | 265118/552076 [00:02<00:02, 121429.25it/s] 50%|█████     | 277590/552076 [00:02<00:02, 122395.73it/s] 53%|█████▎    | 290046/552076 [00:02<00:02, 123034.76it/s] 55%|█████▍    | 302465/552076 [00:02<00:02, 123377.26it/s] 57%|█████▋    | 314823/552076 [00:02<00:01, 123392.38it/s] 59%|█████▉    | 327342/552076 [00:02<00:01, 123923.89it/s] 62%|██████▏   | 339745/552076 [00:02<00:01, 123857.55it/s] 64%|██████▍   | 352145/552076 [00:02<00:01, 123897.81it/s] 66%|██████▌   | 364540/552076 [00:03<00:01, 121581.09it/s] 68%|██████▊   | 377066/552076 [00:03<00:01, 122661.73it/s] 71%|███████   | 389509/552076 [00:03<00:01, 123183.98it/s] 73%|███████▎  | 402105/552076 [00:03<00:01, 124001.88it/s] 75%|███████▌  | 414705/552076 [00:03<00:01, 124591.76it/s] 77%|███████▋  | 427215/552076 [00:03<00:01, 124741.07it/s] 80%|███████▉  | 439766/552076 [00:03<00:00, 124967.86it/s] 82%|████████▏ | 452269/552076 [00:03<00:00, 124986.35it/s] 84%|████████▍ | 464770/552076 [00:03<00:00, 124971.23it/s] 86%|████████▋ | 477269/552076 [00:04<00:00, 100729.75it/s] 89%|████████▊ | 489779/552076 [00:04<00:00, 106981.22it/s] 91%|█████████ | 502297/552076 [00:04<00:00, 111859.29it/s] 93%|█████████▎| 514419/552076 [00:04<00:00, 114510.67it/s] 95%|█████████▌| 526573/552076 [00:04<00:00, 116529.98it/s] 98%|█████████▊| 538492/552076 [00:04<00:00, 109028.35it/s]100%|█████████▉| 549679/552076 [00:04<00:00, 107963.22it/s]100%|██████████| 552076/552076 [00:04<00:00, 116375.08it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 126.16 MiB already allocated; 558.44 MiB free; 140.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.34268856048583984 seconds.
Run epoch 1
Epoch 1 ends in 0.5485811233520508 seconds.
39434 sentences created
mode 1: time used = 0.7480638027191162
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 10%|█         | 4047/39434 [00:00<00:00, 40468.69it/s] 23%|██▎       | 8988/39434 [00:00<00:00, 41665.66it/s] 35%|███▍      | 13731/39434 [00:00<00:00, 41623.88it/s] 44%|████▍     | 17483/39434 [00:00<00:00, 40300.90it/s] 57%|█████▋    | 22402/39434 [00:00<00:00, 42132.32it/s] 66%|██████▌   | 25967/39434 [00:00<00:00, 39758.86it/s] 75%|███████▍  | 29521/39434 [00:00<00:00, 36515.11it/s] 88%|████████▊ | 34535/39434 [00:00<00:00, 39429.80it/s]100%|██████████| 39434/39434 [00:01<00:00, 39238.89it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 3625/552076 [00:00<00:15, 35564.49it/s]  1%|▏         | 8081/552076 [00:00<00:14, 37147.27it/s]  2%|▏         | 11823/552076 [00:00<00:14, 37227.49it/s]  3%|▎         | 16519/552076 [00:00<00:13, 39694.84it/s]  4%|▎         | 20089/552076 [00:00<00:14, 37440.22it/s]  4%|▍         | 24754/552076 [00:00<00:13, 39797.27it/s]  5%|▌         | 28453/552076 [00:00<00:13, 37794.55it/s]  6%|▌         | 32206/552076 [00:00<00:13, 37232.21it/s]  7%|▋         | 37135/552076 [00:00<00:13, 39211.15it/s]  8%|▊         | 43257/552076 [00:01<00:11, 43951.05it/s]  9%|▊         | 47905/552076 [00:01<00:11, 44680.07it/s] 10%|▉         | 53772/552076 [00:01<00:10, 48122.37it/s] 11%|█         | 58923/552076 [00:01<00:10, 47302.75it/s] 12%|█▏        | 63757/552076 [00:01<00:10, 44846.68it/s] 12%|█▏        | 68341/552076 [00:01<00:11, 42360.55it/s] 13%|█▎        | 72675/552076 [00:01<00:12, 38194.16it/s] 14%|█▍        | 77010/552076 [00:01<00:11, 39606.92it/s] 15%|█▌        | 83300/552076 [00:01<00:10, 44557.00it/s] 16%|█▌        | 88597/552076 [00:02<00:10, 45395.68it/s] 17%|█▋        | 93340/552076 [00:02<00:10, 42391.00it/s] 18%|█▊        | 97762/552076 [00:02<00:11, 40270.54it/s] 19%|█▊        | 102634/552076 [00:02<00:11, 40667.13it/s] 20%|█▉        | 108000/552076 [00:02<00:10, 43851.72it/s] 20%|██        | 112531/552076 [00:02<00:09, 44123.57it/s] 21%|██        | 117046/552076 [00:02<00:10, 40655.90it/s] 22%|██▏       | 121237/552076 [00:02<00:10, 39167.46it/s] 23%|██▎       | 125254/552076 [00:02<00:11, 37801.55it/s] 24%|██▎       | 129866/552076 [00:03<00:10, 39740.69it/s] 25%|██▍       | 135944/552076 [00:03<00:09, 43197.37it/s] 25%|██▌       | 140410/552076 [00:03<00:09, 42619.13it/s] 26%|██▋       | 145886/552076 [00:03<00:09, 44599.45it/s] 27%|██▋       | 150443/552076 [00:03<00:09, 42603.68it/s] 28%|██▊       | 154790/552076 [00:03<00:09, 41052.31it/s] 29%|██▉       | 159812/552076 [00:03<00:09, 43430.17it/s] 30%|██▉       | 164244/552076 [00:03<00:09, 40393.23it/s] 31%|███       | 168388/552076 [00:03<00:10, 38141.28it/s] 31%|███▏      | 172675/552076 [00:04<00:09, 39418.58it/s] 32%|███▏      | 178581/552076 [00:04<00:08, 43786.30it/s] 33%|███▎      | 184512/552076 [00:04<00:07, 47074.91it/s] 35%|███▍      | 190952/552076 [00:04<00:07, 51207.30it/s] 36%|███▌      | 197115/552076 [00:04<00:06, 53509.49it/s] 37%|███▋      | 203542/552076 [00:04<00:06, 56338.89it/s] 38%|███▊      | 209877/552076 [00:04<00:05, 57492.46it/s] 39%|███▉      | 215921/552076 [00:04<00:05, 58345.58it/s] 40%|████      | 222128/552076 [00:04<00:05, 58865.28it/s] 41%|████▏     | 228085/552076 [00:05<00:06, 51169.61it/s] 42%|████▏     | 233431/552076 [00:05<00:07, 45159.09it/s] 43%|████▎     | 238237/552076 [00:05<00:06, 45874.27it/s] 44%|████▍     | 243030/552076 [00:05<00:06, 45843.96it/s] 45%|████▌     | 249341/552076 [00:05<00:06, 49942.73it/s] 46%|████▌     | 254544/552076 [00:05<00:06, 45937.09it/s] 47%|████▋     | 259491/552076 [00:05<00:06, 46533.86it/s] 48%|████▊     | 264952/552076 [00:05<00:05, 48693.97it/s] 49%|████▉     | 269952/552076 [00:06<00:06, 40856.62it/s] 50%|████▉     | 274916/552076 [00:06<00:06, 42621.97it/s] 51%|█████     | 279620/552076 [00:06<00:06, 43856.74it/s] 52%|█████▏    | 284755/552076 [00:06<00:06, 44516.92it/s] 53%|█████▎    | 290020/552076 [00:06<00:05, 46678.72it/s] 54%|█████▎    | 295866/552076 [00:06<00:05, 49032.19it/s] 55%|█████▍    | 301641/552076 [00:06<00:04, 50781.01it/s] 56%|█████▌    | 306813/552076 [00:06<00:05, 44760.50it/s] 56%|█████▋    | 311486/552076 [00:06<00:05, 42541.13it/s] 57%|█████▋    | 316461/552076 [00:07<00:05, 44473.67it/s] 58%|█████▊    | 322043/552076 [00:07<00:04, 46637.38it/s] 59%|█████▉    | 326829/552076 [00:07<00:04, 45632.84it/s] 60%|██████    | 332137/552076 [00:07<00:04, 47636.96it/s] 61%|██████    | 337168/552076 [00:07<00:04, 48407.68it/s] 62%|██████▏   | 343131/552076 [00:07<00:04, 51303.57it/s] 63%|██████▎   | 348791/552076 [00:07<00:03, 52784.33it/s] 64%|██████▍   | 354405/552076 [00:07<00:03, 52519.57it/s] 65%|██████▌   | 360519/552076 [00:07<00:03, 53684.06it/s] 66%|██████▋   | 366647/552076 [00:07<00:03, 55757.17it/s] 67%|██████▋   | 372274/552076 [00:08<00:03, 55817.66it/s] 68%|██████▊   | 378155/552076 [00:08<00:03, 54865.86it/s] 70%|██████▉   | 383971/552076 [00:08<00:03, 53743.12it/s] 71%|███████   | 389371/552076 [00:08<00:03, 53608.04it/s] 72%|███████▏  | 395915/552076 [00:08<00:02, 56681.68it/s] 73%|███████▎  | 402519/552076 [00:08<00:02, 59197.76it/s] 74%|███████▍  | 408740/552076 [00:08<00:02, 58839.45it/s] 75%|███████▌  | 415135/552076 [00:08<00:02, 60267.29it/s] 76%|███████▋  | 421740/552076 [00:08<00:02, 61891.89it/s] 78%|███████▊  | 428331/552076 [00:08<00:01, 63043.48it/s] 79%|███████▊  | 434670/552076 [00:09<00:01, 59325.40it/s] 80%|███████▉  | 440672/552076 [00:09<00:02, 52920.19it/s] 81%|████████  | 446142/552076 [00:09<00:02, 52650.32it/s] 82%|████████▏ | 452650/552076 [00:09<00:01, 55850.30it/s] 83%|████████▎ | 459175/552076 [00:09<00:01, 58372.28it/s] 84%|████████▍ | 465416/552076 [00:09<00:01, 58183.31it/s] 85%|████████▌ | 471864/552076 [00:09<00:01, 59938.91it/s] 87%|████████▋ | 478486/552076 [00:09<00:01, 61693.49it/s] 88%|████████▊ | 485132/552076 [00:09<00:01, 63049.92it/s] 89%|████████▉ | 491491/552076 [00:10<00:00, 62066.91it/s] 90%|█████████ | 497970/552076 [00:10<00:00, 61785.35it/s] 91%|█████████▏| 504571/552076 [00:10<00:00, 62994.70it/s] 93%|█████████▎| 510897/552076 [00:10<00:00, 62515.40it/s] 94%|█████████▎| 517473/552076 [00:10<00:00, 63454.19it/s] 95%|█████████▍| 523879/552076 [00:10<00:00, 62697.70it/s] 96%|█████████▌| 530513/552076 [00:10<00:00, 63747.09it/s] 97%|█████████▋| 536902/552076 [00:10<00:00, 63216.13it/s] 98%|█████████▊| 543504/552076 [00:10<00:00, 64031.04it/s]100%|█████████▉| 549918/552076 [00:11<00:00, 59101.40it/s]100%|██████████| 552076/552076 [00:11<00:00, 49933.30it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 126.16 MiB already allocated; 558.44 MiB free; 140.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3303515911102295 seconds.
Run epoch 1
Epoch 1 ends in 0.6868524551391602 seconds.
39434 sentences created
mode 1: time used = 1.2143797874450684
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s]  8%|▊         | 3276/39434 [00:00<00:01, 31584.33it/s] 21%|██▏       | 8419/39434 [00:00<00:00, 35719.00it/s] 30%|██▉       | 11724/39434 [00:00<00:00, 34873.30it/s] 43%|████▎     | 16793/39434 [00:00<00:00, 38431.90it/s] 53%|█████▎    | 21037/39434 [00:00<00:00, 39551.53it/s] 73%|███████▎  | 28642/39434 [00:00<00:00, 46203.79it/s] 85%|████████▌ | 33698/39434 [00:00<00:00, 47428.73it/s] 98%|█████████▊| 38564/39434 [00:00<00:00, 45930.23it/s]100%|██████████| 39434/39434 [00:00<00:00, 45004.52it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6134/552076 [00:00<00:08, 61335.38it/s]  2%|▏         | 12255/552076 [00:00<00:08, 61010.44it/s]  3%|▎         | 16092/552076 [00:00<00:10, 50432.08it/s]  4%|▎         | 20295/552076 [00:00<00:11, 45526.31it/s]  4%|▍         | 23680/552076 [00:00<00:13, 39691.99it/s]  5%|▍         | 27014/552076 [00:00<00:14, 36673.14it/s]  6%|▌         | 30956/552076 [00:00<00:13, 37456.00it/s]  7%|▋         | 39632/552076 [00:00<00:11, 45153.57it/s]  8%|▊         | 46752/552076 [00:00<00:09, 50719.76it/s] 10%|▉         | 52774/552076 [00:01<00:09, 53110.24it/s] 12%|█▏        | 64652/552076 [00:01<00:07, 63669.06it/s] 14%|█▍        | 76505/552076 [00:01<00:06, 73934.62it/s] 16%|█▌        | 88435/552076 [00:01<00:05, 83454.56it/s] 18%|█▊        | 98219/552076 [00:01<00:05, 84386.91it/s] 20%|█▉        | 107667/552076 [00:01<00:05, 78659.34it/s] 22%|██▏       | 120089/552076 [00:01<00:04, 88383.86it/s] 24%|██▎       | 130847/552076 [00:01<00:04, 93380.53it/s] 26%|██▌       | 140922/552076 [00:01<00:04, 91593.89it/s] 28%|██▊       | 152744/552076 [00:02<00:04, 98229.34it/s] 30%|██▉       | 164899/552076 [00:02<00:03, 104228.38it/s] 32%|███▏      | 176875/552076 [00:02<00:03, 108445.45it/s] 34%|███▍      | 188079/552076 [00:02<00:03, 101054.89it/s] 36%|███▌      | 200034/552076 [00:02<00:03, 105972.99it/s] 38%|███▊      | 211675/552076 [00:02<00:03, 108900.07it/s] 41%|████      | 224329/552076 [00:02<00:02, 113652.05it/s] 43%|████▎     | 235915/552076 [00:02<00:03, 95332.17it/s]  45%|████▍     | 246103/552076 [00:02<00:03, 97132.72it/s] 47%|████▋     | 258189/552076 [00:03<00:02, 103210.93it/s] 49%|████▉     | 270275/552076 [00:03<00:02, 107937.31it/s] 51%|█████     | 282422/552076 [00:03<00:02, 111668.86it/s] 53%|█████▎    | 294580/552076 [00:03<00:02, 114443.65it/s] 56%|█████▌    | 306977/552076 [00:03<00:02, 117142.49it/s] 58%|█████▊    | 319594/552076 [00:03<00:01, 119709.72it/s] 60%|██████    | 331814/552076 [00:03<00:01, 120443.99it/s] 62%|██████▏   | 344035/552076 [00:03<00:01, 120968.10it/s] 65%|██████▍   | 356215/552076 [00:03<00:01, 121214.61it/s] 67%|██████▋   | 368383/552076 [00:03<00:01, 111096.40it/s] 69%|██████▉   | 380314/552076 [00:04<00:01, 113439.04it/s] 71%|███████   | 391808/552076 [00:04<00:01, 104519.54it/s] 73%|███████▎  | 404032/552076 [00:04<00:01, 109270.40it/s] 75%|███████▌  | 416667/552076 [00:04<00:01, 113887.65it/s] 78%|███████▊  | 428265/552076 [00:04<00:01, 106038.66it/s] 80%|███████▉  | 439143/552076 [00:04<00:01, 106844.45it/s] 82%|████████▏ | 451210/552076 [00:04<00:00, 110646.64it/s] 84%|████████▍ | 462436/552076 [00:04<00:00, 102420.92it/s] 86%|████████▌ | 473132/552076 [00:04<00:00, 103739.40it/s] 88%|████████▊ | 483674/552076 [00:05<00:00, 102120.23it/s] 90%|████████▉ | 495803/552076 [00:05<00:00, 107201.51it/s] 92%|█████████▏| 508074/552076 [00:05<00:00, 111425.25it/s] 94%|█████████▍| 519367/552076 [00:05<00:00, 102257.77it/s] 96%|█████████▌| 529846/552076 [00:05<00:00, 100225.92it/s] 98%|█████████▊| 541981/552076 [00:05<00:00, 105747.95it/s]100%|██████████| 552076/552076 [00:05<00:00, 97126.88it/s] 
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 42, in forward
    hneg = self.embed(neg)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 1.65 GiB already allocated; 384.44 MiB free; 1.66 GiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.6412246227264404 seconds.
Run epoch 1
Epoch 1 ends in 0.9322171211242676 seconds.
39434 sentences created
mode 1: time used = 1.0810256004333496
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 47%|████▋     | 18345/39434 [00:00<00:00, 183448.86it/s] 90%|████████▉ | 35479/39434 [00:00<00:00, 179640.01it/s]100%|██████████| 39434/39434 [00:00<00:00, 177462.24it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▍         | 22115/552076 [00:00<00:02, 221146.52it/s]  8%|▊         | 45399/552076 [00:00<00:02, 224528.02it/s] 12%|█▏        | 68001/552076 [00:00<00:02, 224971.68it/s] 17%|█▋        | 91728/552076 [00:00<00:02, 228524.63it/s] 21%|██        | 115457/552076 [00:00<00:01, 231083.94it/s] 25%|██▌       | 138761/552076 [00:00<00:01, 231666.71it/s] 29%|██▉       | 162459/552076 [00:00<00:01, 233232.62it/s] 34%|███▎      | 186157/552076 [00:00<00:01, 234342.74it/s] 38%|███▊      | 209996/552076 [00:00<00:01, 235542.15it/s] 42%|████▏     | 233593/552076 [00:01<00:01, 235667.21it/s] 47%|████▋     | 258105/552076 [00:01<00:01, 238425.33it/s] 51%|█████     | 282755/552076 [00:01<00:01, 240789.18it/s] 56%|█████▌    | 307335/552076 [00:01<00:01, 242269.20it/s] 60%|██████    | 331360/552076 [00:01<00:00, 235708.83it/s] 64%|██████▍   | 354829/552076 [00:01<00:00, 229833.70it/s] 68%|██████▊   | 377773/552076 [00:01<00:01, 172860.38it/s] 72%|███████▏  | 397120/552076 [00:01<00:00, 155980.89it/s] 75%|███████▌  | 414474/552076 [00:02<00:00, 146085.56it/s] 78%|███████▊  | 430439/552076 [00:02<00:00, 127927.34it/s] 81%|████████  | 444590/552076 [00:02<00:00, 127304.16it/s] 83%|████████▎ | 458272/552076 [00:02<00:00, 126842.69it/s] 85%|████████▌ | 471623/552076 [00:02<00:00, 126766.47it/s] 88%|████████▊ | 484766/552076 [00:02<00:00, 126920.97it/s] 90%|█████████ | 497785/552076 [00:02<00:00, 126515.47it/s] 92%|█████████▏| 510666/552076 [00:02<00:00, 126296.53it/s] 95%|█████████▍| 523456/552076 [00:02<00:00, 126222.31it/s] 97%|█████████▋| 536208/552076 [00:03<00:00, 126607.16it/s] 99%|█████████▉| 548948/552076 [00:03<00:00, 126842.30it/s]100%|██████████| 552076/552076 [00:03<00:00, 175943.56it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 126.16 MiB already allocated; 558.44 MiB free; 140.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.14790105819702148 seconds.
Run epoch 1
Epoch 1 ends in 0.20528364181518555 seconds.
39434 sentences created
mode 1: time used = 0.2719576358795166
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 23%|██▎       | 9232/39434 [00:00<00:00, 92314.15it/s] 41%|████      | 16250/39434 [00:00<00:00, 84331.61it/s] 60%|█████▉    | 23599/39434 [00:00<00:00, 76945.11it/s] 81%|████████  | 31923/39434 [00:00<00:00, 78730.72it/s] 98%|█████████▊| 38687/39434 [00:00<00:00, 74842.85it/s]100%|██████████| 39434/39434 [00:00<00:00, 74700.09it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  2%|▏         | 9377/552076 [00:00<00:05, 90455.77it/s]  3%|▎         | 14361/552076 [00:00<00:07, 71250.78it/s]  4%|▍         | 21512/552076 [00:00<00:07, 71083.07it/s]  5%|▌         | 30217/552076 [00:00<00:06, 74968.91it/s]  7%|▋         | 35911/552076 [00:00<00:08, 64015.96it/s]  7%|▋         | 41329/552076 [00:00<00:09, 52510.67it/s]  8%|▊         | 46232/552076 [00:00<00:10, 49264.48it/s]  9%|▉         | 52111/552076 [00:00<00:09, 51781.35it/s] 11%|█         | 58218/552076 [00:00<00:09, 54256.37it/s] 12%|█▏        | 64467/552076 [00:01<00:08, 56488.62it/s] 13%|█▎        | 70505/552076 [00:01<00:08, 56522.09it/s] 14%|█▍        | 76646/552076 [00:01<00:08, 57708.86it/s] 15%|█▌        | 82952/552076 [00:01<00:07, 59215.05it/s] 16%|█▌        | 89279/552076 [00:01<00:07, 60375.74it/s] 17%|█▋        | 95331/552076 [00:01<00:07, 59226.43it/s] 18%|█▊        | 101589/552076 [00:01<00:07, 59512.01it/s] 20%|█▉        | 107866/552076 [00:01<00:07, 60452.14it/s] 21%|██        | 113923/552076 [00:01<00:07, 59713.63it/s] 22%|██▏       | 120266/552076 [00:02<00:07, 60780.68it/s] 23%|██▎       | 126356/552076 [00:02<00:08, 52869.49it/s] 24%|██▍       | 131836/552076 [00:02<00:09, 44372.20it/s] 25%|██▌       | 138320/552076 [00:02<00:08, 49013.57it/s] 26%|██▌       | 144499/552076 [00:02<00:07, 51572.46it/s] 27%|██▋       | 150588/552076 [00:02<00:07, 54053.57it/s] 28%|██▊       | 156751/552076 [00:02<00:07, 56122.40it/s] 29%|██▉       | 162627/552076 [00:02<00:06, 56503.14it/s] 31%|███       | 169067/552076 [00:02<00:06, 58660.10it/s] 32%|███▏      | 175210/552076 [00:03<00:06, 58514.29it/s] 33%|███▎      | 181145/552076 [00:03<00:06, 58666.90it/s] 34%|███▍      | 187071/552076 [00:03<00:07, 46984.96it/s] 35%|███▍      | 192182/552076 [00:03<00:07, 45500.04it/s] 36%|███▌      | 197031/552076 [00:03<00:08, 43618.51it/s] 37%|███▋      | 201619/552076 [00:03<00:08, 42586.13it/s] 37%|███▋      | 206051/552076 [00:03<00:08, 43091.68it/s] 38%|███▊      | 210476/552076 [00:03<00:08, 42416.32it/s] 39%|███▉      | 214904/552076 [00:03<00:07, 42524.30it/s] 40%|███▉      | 219215/552076 [00:04<00:08, 38271.13it/s] 41%|████▏     | 228105/552076 [00:04<00:07, 46156.72it/s] 42%|████▏     | 233941/552076 [00:04<00:06, 49245.81it/s] 43%|████▎     | 239494/552076 [00:04<00:06, 46090.76it/s] 44%|████▍     | 244584/552076 [00:04<00:06, 44363.30it/s] 45%|████▌     | 249371/552076 [00:04<00:07, 41870.24it/s] 46%|████▌     | 253833/552076 [00:04<00:07, 41450.70it/s] 47%|████▋     | 258171/552076 [00:04<00:07, 41601.75it/s] 48%|████▊     | 262467/552076 [00:05<00:06, 41386.19it/s] 48%|████▊     | 266787/552076 [00:05<00:06, 41912.29it/s] 49%|████▉     | 271150/552076 [00:05<00:06, 42412.83it/s] 50%|████▉     | 275441/552076 [00:05<00:06, 41126.57it/s] 51%|█████     | 279663/552076 [00:05<00:06, 41369.11it/s] 51%|█████▏    | 284069/552076 [00:05<00:06, 42140.11it/s] 52%|█████▏    | 288308/552076 [00:05<00:06, 39201.50it/s] 53%|█████▎    | 292287/552076 [00:05<00:06, 38482.05it/s] 54%|█████▎    | 296616/552076 [00:05<00:06, 39808.26it/s] 55%|█████▍    | 301052/552076 [00:06<00:06, 39778.53it/s] 55%|█████▌    | 305452/552076 [00:06<00:06, 40956.29it/s] 56%|█████▌    | 309848/552076 [00:06<00:05, 41812.62it/s] 57%|█████▋    | 314301/552076 [00:06<00:05, 42592.25it/s] 58%|█████▊    | 318582/552076 [00:06<00:05, 41352.51it/s] 59%|█████▊    | 323013/552076 [00:06<00:05, 42197.03it/s] 59%|█████▉    | 327453/552076 [00:06<00:05, 42833.60it/s] 60%|██████    | 331753/552076 [00:06<00:05, 41620.13it/s] 61%|██████    | 335934/552076 [00:06<00:05, 41308.88it/s] 62%|██████▏   | 340403/552076 [00:06<00:05, 42267.26it/s] 62%|██████▏   | 344645/552076 [00:07<00:05, 41128.63it/s] 63%|██████▎   | 349273/552076 [00:07<00:04, 42548.28it/s] 64%|██████▍   | 353553/552076 [00:07<00:04, 42368.03it/s] 65%|██████▍   | 357808/552076 [00:07<00:04, 42225.21it/s] 66%|██████▌   | 362269/552076 [00:07<00:04, 42913.18it/s] 66%|██████▋   | 366648/552076 [00:07<00:04, 42235.03it/s] 67%|██████▋   | 371042/552076 [00:07<00:04, 41673.34it/s] 68%|██████▊   | 375705/552076 [00:07<00:04, 43045.09it/s] 69%|██████▉   | 381488/552076 [00:07<00:03, 46119.12it/s] 71%|███████   | 390407/552076 [00:07<00:02, 53931.82it/s] 72%|███████▏  | 396692/552076 [00:08<00:02, 56328.35it/s] 73%|███████▎  | 402747/552076 [00:08<00:02, 52469.82it/s] 74%|███████▍  | 408343/552076 [00:08<00:02, 48959.09it/s] 75%|███████▍  | 413531/552076 [00:08<00:02, 47456.65it/s] 76%|███████▌  | 418491/552076 [00:08<00:02, 45946.91it/s] 77%|███████▋  | 423246/552076 [00:08<00:02, 46154.46it/s] 78%|███████▊  | 427974/552076 [00:08<00:02, 44618.74it/s] 78%|███████▊  | 432553/552076 [00:08<00:02, 43031.68it/s] 79%|███████▉  | 436994/552076 [00:08<00:02, 43435.97it/s] 80%|███████▉  | 441608/552076 [00:09<00:02, 44213.22it/s] 81%|████████  | 446143/552076 [00:09<00:02, 44546.89it/s] 82%|████████▏ | 450627/552076 [00:09<00:02, 43671.51it/s] 82%|████████▏ | 455085/552076 [00:09<00:02, 43939.91it/s] 83%|████████▎ | 459658/552076 [00:09<00:02, 44461.75it/s] 84%|████████▍ | 464240/552076 [00:09<00:01, 44859.45it/s] 85%|████████▍ | 468737/552076 [00:09<00:01, 44008.57it/s] 86%|████████▌ | 473776/552076 [00:09<00:01, 44439.76it/s] 87%|████████▋ | 478417/552076 [00:09<00:01, 44640.14it/s] 87%|████████▋ | 482888/552076 [00:10<00:01, 42633.25it/s] 88%|████████▊ | 487499/552076 [00:10<00:01, 43618.96it/s] 89%|████████▉ | 491986/552076 [00:10<00:01, 43986.53it/s] 90%|████████▉ | 496401/552076 [00:10<00:01, 43684.88it/s] 91%|█████████ | 500827/552076 [00:10<00:01, 43855.73it/s] 92%|█████████▏| 505221/552076 [00:10<00:01, 43403.61it/s] 92%|█████████▏| 509695/552076 [00:10<00:00, 43794.70it/s] 93%|█████████▎| 514081/552076 [00:10<00:00, 43093.65it/s] 94%|█████████▍| 518541/552076 [00:10<00:00, 43533.38it/s] 95%|█████████▍| 522900/552076 [00:10<00:00, 42848.07it/s] 95%|█████████▌| 527192/552076 [00:11<00:00, 42106.71it/s] 96%|█████████▋| 531975/552076 [00:11<00:00, 43673.59it/s] 97%|█████████▋| 536363/552076 [00:11<00:00, 43135.19it/s] 98%|█████████▊| 540801/552076 [00:11<00:00, 43259.04it/s] 99%|█████████▉| 545445/552076 [00:11<00:00, 44165.76it/s]100%|█████████▉| 550422/552076 [00:11<00:00, 45708.39it/s]100%|██████████| 552076/552076 [00:11<00:00, 47541.23it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 126.16 MiB already allocated; 558.44 MiB free; 140.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3073875904083252 seconds.
Run epoch 1
Epoch 1 ends in 0.39731669425964355 seconds.
39434 sentences created
mode 1: time used = 0.6952333450317383
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 13%|█▎        | 5070/39434 [00:00<00:00, 50695.58it/s] 23%|██▎       | 9259/39434 [00:00<00:00, 46992.78it/s] 37%|███▋      | 14517/39434 [00:00<00:00, 48539.53it/s] 49%|████▊     | 19170/39434 [00:00<00:00, 47918.48it/s] 60%|█████▉    | 23640/39434 [00:00<00:00, 46675.75it/s] 70%|███████   | 27749/39434 [00:00<00:00, 44016.72it/s] 82%|████████▏ | 32413/39434 [00:00<00:00, 43978.23it/s] 92%|█████████▏| 36432/39434 [00:00<00:00, 42539.64it/s]100%|██████████| 39434/39434 [00:00<00:00, 41601.80it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 5290/552076 [00:00<00:10, 52897.91it/s]  2%|▏         | 9988/552076 [00:00<00:10, 50970.24it/s]  3%|▎         | 15040/552076 [00:00<00:10, 50833.03it/s]  3%|▎         | 19156/552076 [00:00<00:11, 46626.85it/s]  4%|▍         | 23735/552076 [00:00<00:11, 44803.38it/s]  5%|▌         | 28805/552076 [00:00<00:11, 46422.58it/s]  6%|▌         | 32888/552076 [00:00<00:12, 42737.77it/s]  7%|▋         | 37106/552076 [00:00<00:12, 41692.70it/s]  8%|▊         | 41806/552076 [00:00<00:12, 41719.17it/s]  8%|▊         | 46899/552076 [00:01<00:11, 44112.49it/s] 10%|▉         | 53031/552076 [00:01<00:10, 47658.59it/s] 11%|█         | 59229/552076 [00:01<00:09, 51207.85it/s] 12%|█▏        | 65147/552076 [00:01<00:09, 52667.25it/s] 13%|█▎        | 70491/552076 [00:01<00:09, 50840.52it/s] 14%|█▍        | 76186/552076 [00:01<00:09, 51727.22it/s] 15%|█▍        | 81410/552076 [00:01<00:09, 49507.74it/s] 16%|█▌        | 86417/552076 [00:01<00:09, 47766.95it/s] 17%|█▋        | 91247/552076 [00:01<00:09, 46907.31it/s] 17%|█▋        | 95978/552076 [00:02<00:10, 45108.14it/s] 18%|█▊        | 101058/552076 [00:02<00:09, 46676.76it/s] 19%|█▉        | 105770/552076 [00:02<00:09, 45668.61it/s] 20%|█▉        | 110376/552076 [00:02<00:09, 44646.58it/s] 21%|██        | 114871/552076 [00:02<00:09, 44373.86it/s] 22%|██▏       | 119382/552076 [00:02<00:09, 44590.89it/s] 22%|██▏       | 124054/552076 [00:02<00:09, 44019.81it/s] 23%|██▎       | 129086/552076 [00:02<00:09, 45736.31it/s] 24%|██▍       | 133686/552076 [00:02<00:10, 41291.38it/s] 25%|██▍       | 137947/552076 [00:02<00:09, 41677.95it/s] 26%|██▌       | 142186/552076 [00:03<00:09, 41771.31it/s] 27%|██▋       | 146483/552076 [00:03<00:09, 42123.58it/s] 27%|██▋       | 150731/552076 [00:03<00:10, 38179.93it/s] 28%|██▊       | 155707/552076 [00:03<00:09, 41044.32it/s] 29%|██▉       | 159940/552076 [00:03<00:09, 39650.08it/s] 30%|██▉       | 164183/552076 [00:03<00:09, 39616.59it/s] 30%|███       | 168215/552076 [00:03<00:10, 37542.93it/s] 31%|███       | 172422/552076 [00:03<00:09, 38794.63it/s] 32%|███▏      | 177270/552076 [00:03<00:09, 41267.85it/s] 33%|███▎      | 181812/552076 [00:04<00:08, 42431.27it/s] 34%|███▎      | 186278/552076 [00:04<00:08, 42168.44it/s] 35%|███▍      | 190927/552076 [00:04<00:08, 43377.30it/s] 36%|███▋      | 200567/552076 [00:04<00:06, 51948.57it/s] 38%|███▊      | 207723/552076 [00:04<00:06, 56601.63it/s] 39%|███▉      | 214041/552076 [00:04<00:06, 53719.84it/s] 40%|███▉      | 220104/552076 [00:04<00:06, 52481.43it/s] 41%|████      | 225702/552076 [00:04<00:06, 52587.57it/s] 42%|████▏     | 231892/552076 [00:04<00:05, 54518.13it/s] 43%|████▎     | 237534/552076 [00:05<00:06, 47610.15it/s] 44%|████▍     | 242793/552076 [00:05<00:06, 48027.07it/s] 45%|████▍     | 247800/552076 [00:05<00:07, 42498.46it/s] 46%|████▌     | 252310/552076 [00:05<00:07, 41998.38it/s] 46%|████▋     | 256694/552076 [00:05<00:07, 41910.55it/s] 47%|████▋     | 261111/552076 [00:05<00:06, 42562.98it/s] 48%|████▊     | 265460/552076 [00:05<00:06, 42465.05it/s] 49%|████▉     | 269772/552076 [00:05<00:07, 38173.60it/s] 50%|████▉     | 275279/552076 [00:06<00:06, 42043.32it/s] 51%|█████     | 281682/552076 [00:06<00:05, 46871.18it/s] 52%|█████▏    | 287119/552076 [00:06<00:05, 48674.55it/s] 53%|█████▎    | 292883/552076 [00:06<00:05, 51056.69it/s] 54%|█████▍    | 298191/552076 [00:06<00:05, 49281.81it/s] 55%|█████▍    | 303274/552076 [00:06<00:05, 45153.34it/s] 56%|█████▌    | 309078/552076 [00:06<00:05, 48375.58it/s] 57%|█████▋    | 315151/552076 [00:06<00:04, 51035.22it/s] 58%|█████▊    | 321175/552076 [00:06<00:04, 53485.96it/s] 59%|█████▉    | 327132/552076 [00:06<00:04, 54469.00it/s] 60%|██████    | 333185/552076 [00:07<00:03, 56155.88it/s] 62%|██████▏   | 342420/552076 [00:07<00:03, 63637.66it/s] 64%|██████▎   | 351121/552076 [00:07<00:02, 69213.51it/s] 65%|██████▍   | 358466/552076 [00:07<00:02, 64861.85it/s] 66%|██████▌   | 365305/552076 [00:07<00:03, 61060.12it/s] 67%|██████▋   | 371704/552076 [00:07<00:02, 60626.32it/s] 68%|██████▊   | 377972/552076 [00:07<00:02, 58592.07it/s] 70%|██████▉   | 383990/552076 [00:07<00:02, 59004.60it/s] 71%|███████   | 390003/552076 [00:07<00:02, 57213.94it/s] 72%|███████▏  | 396013/552076 [00:08<00:02, 58048.92it/s] 73%|███████▎  | 401916/552076 [00:08<00:02, 58339.28it/s] 74%|███████▍  | 407797/552076 [00:08<00:02, 57348.53it/s] 75%|███████▍  | 413744/552076 [00:08<00:02, 57821.74it/s] 76%|███████▌  | 419822/552076 [00:08<00:02, 58678.39it/s] 77%|███████▋  | 426001/552076 [00:08<00:02, 59578.31it/s] 78%|███████▊  | 431978/552076 [00:08<00:02, 58253.42it/s] 79%|███████▉  | 437823/552076 [00:08<00:01, 57989.55it/s] 80%|████████  | 443834/552076 [00:08<00:01, 58609.75it/s] 82%|████████▏ | 450078/552076 [00:08<00:01, 58181.43it/s] 83%|████████▎ | 456297/552076 [00:09<00:01, 59151.82it/s] 84%|████████▍ | 462748/552076 [00:09<00:01, 60663.20it/s] 85%|████████▍ | 468831/552076 [00:09<00:01, 53215.70it/s] 86%|████████▌ | 474330/552076 [00:09<00:01, 47892.70it/s] 87%|████████▋ | 479364/552076 [00:09<00:01, 48601.18it/s] 88%|████████▊ | 484385/552076 [00:09<00:01, 46256.57it/s] 89%|████████▊ | 489147/552076 [00:09<00:01, 45927.05it/s] 89%|████████▉ | 493836/552076 [00:09<00:01, 40178.27it/s] 90%|█████████ | 498051/552076 [00:10<00:01, 36674.75it/s] 91%|█████████ | 501916/552076 [00:10<00:01, 34366.13it/s] 92%|█████████▏| 505521/552076 [00:10<00:01, 31781.75it/s] 92%|█████████▏| 508855/552076 [00:10<00:01, 30727.71it/s] 93%|█████████▎| 512045/552076 [00:10<00:01, 30915.60it/s] 93%|█████████▎| 515219/552076 [00:10<00:01, 29986.51it/s] 94%|█████████▍| 518282/552076 [00:10<00:01, 29617.07it/s] 95%|█████████▍| 522935/552076 [00:10<00:00, 33241.01it/s] 95%|█████████▌| 526887/552076 [00:11<00:00, 33799.84it/s] 96%|█████████▋| 532152/552076 [00:11<00:00, 37733.88it/s] 97%|█████████▋| 536548/552076 [00:11<00:00, 38019.75it/s] 98%|█████████▊| 540790/552076 [00:11<00:00, 38524.74it/s] 99%|█████████▊| 544760/552076 [00:11<00:00, 38471.54it/s]100%|█████████▉| 550072/552076 [00:11<00:00, 41941.27it/s]100%|██████████| 552076/552076 [00:11<00:00, 47612.41it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 41, in embed
    return self.embedding(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/sparse.py", line 126, in forward
    self.norm_type, self.scale_grad_by_freq, self.sparse)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/functional.py", line 1814, in embedding
    return torch.embedding(weight, input, padding_idx, scale_grad_by_freq, sparse)
RuntimeError: CUDA out of memory. Tried to allocate 40.00 MiB (GPU 0; 10.76 GiB total capacity; 87.65 MiB already allocated; 43.44 MiB free; 100.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.5875587463378906 seconds.
Run epoch 1
Epoch 1 ends in 0.7846159934997559 seconds.
39434 sentences created
mode 1: time used = 1.1835148334503174
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 22%|██▏       | 8782/39434 [00:00<00:00, 80793.27it/s] 37%|███▋      | 14688/39434 [00:00<00:00, 72652.48it/s] 48%|████▊     | 18892/39434 [00:00<00:00, 59433.93it/s] 67%|██████▋   | 26288/39434 [00:00<00:00, 63154.47it/s] 90%|████████▉ | 35427/39434 [00:00<00:00, 69604.58it/s]100%|██████████| 39434/39434 [00:00<00:00, 71117.71it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|▏         | 7960/552076 [00:00<00:06, 79599.70it/s]  3%|▎         | 14766/552076 [00:00<00:07, 71622.31it/s]  3%|▎         | 19021/552076 [00:00<00:09, 58286.05it/s]  4%|▍         | 24469/552076 [00:00<00:09, 57088.11it/s]  6%|▌         | 31062/552076 [00:00<00:08, 59480.20it/s]  7%|▋         | 36015/552076 [00:00<00:09, 55726.12it/s]  8%|▊         | 44441/552076 [00:00<00:08, 62027.47it/s] 10%|▉         | 53532/552076 [00:00<00:07, 68555.11it/s] 11%|█         | 60419/552076 [00:00<00:08, 56467.55it/s] 12%|█▏        | 66440/552076 [00:01<00:09, 53209.46it/s] 13%|█▎        | 72062/552076 [00:01<00:09, 52602.69it/s] 14%|█▍        | 77535/552076 [00:01<00:09, 51314.11it/s] 15%|█▌        | 83017/552076 [00:01<00:08, 52317.10it/s] 16%|█▌        | 88363/552076 [00:01<00:08, 52597.13it/s] 17%|█▋        | 93760/552076 [00:01<00:08, 52737.42it/s] 18%|█▊        | 99178/552076 [00:01<00:08, 53161.55it/s] 19%|█▉        | 104535/552076 [00:01<00:08, 50271.53it/s] 20%|█▉        | 109623/552076 [00:02<00:09, 46106.71it/s] 21%|██        | 114344/552076 [00:02<00:09, 45985.54it/s] 22%|██▏       | 119020/552076 [00:02<00:09, 44199.02it/s] 22%|██▏       | 124094/552076 [00:02<00:09, 45976.24it/s] 23%|██▎       | 128759/552076 [00:02<00:09, 45744.61it/s] 24%|██▍       | 133381/552076 [00:02<00:09, 43607.07it/s] 25%|██▌       | 138158/552076 [00:02<00:09, 44777.34it/s] 26%|██▌       | 142682/552076 [00:02<00:09, 43321.31it/s] 27%|██▋       | 147057/552076 [00:02<00:10, 37981.66it/s] 27%|██▋       | 151475/552076 [00:03<00:10, 39650.35it/s] 28%|██▊       | 155564/552076 [00:03<00:10, 36607.89it/s] 29%|██▉       | 159358/552076 [00:03<00:10, 36231.14it/s] 30%|██▉       | 163075/552076 [00:03<00:11, 34191.50it/s] 30%|███       | 167207/552076 [00:03<00:10, 35512.19it/s] 31%|███       | 170834/552076 [00:03<00:10, 34735.11it/s] 32%|███▏      | 174365/552076 [00:03<00:12, 30316.28it/s] 32%|███▏      | 177538/552076 [00:03<00:12, 29944.95it/s] 33%|███▎      | 180633/552076 [00:03<00:13, 28463.98it/s] 33%|███▎      | 184343/552076 [00:04<00:12, 30599.43it/s] 34%|███▍      | 188543/552076 [00:04<00:10, 33311.34it/s] 35%|███▍      | 192723/552076 [00:04<00:10, 35471.18it/s] 36%|███▌      | 196663/552076 [00:04<00:09, 36037.77it/s] 36%|███▋      | 200367/552076 [00:04<00:09, 35625.24it/s] 37%|███▋      | 204426/552076 [00:04<00:09, 36980.29it/s] 38%|███▊      | 208641/552076 [00:04<00:09, 37852.46it/s] 38%|███▊      | 212476/552076 [00:04<00:09, 35785.33it/s] 39%|███▉      | 216113/552076 [00:04<00:09, 35823.63it/s] 40%|███▉      | 220554/552076 [00:05<00:09, 35888.47it/s] 41%|████      | 225671/552076 [00:05<00:08, 39418.98it/s] 42%|████▏     | 229738/552076 [00:05<00:08, 38863.64it/s] 42%|████▏     | 233714/552076 [00:05<00:08, 37079.81it/s] 43%|████▎     | 237502/552076 [00:05<00:08, 36319.80it/s] 44%|████▎     | 241194/552076 [00:05<00:10, 29913.44it/s] 44%|████▍     | 244414/552076 [00:05<00:13, 22736.47it/s] 45%|████▍     | 247177/552076 [00:05<00:12, 23799.09it/s] 45%|████▌     | 250116/552076 [00:06<00:11, 25238.34it/s] 46%|████▌     | 253899/552076 [00:06<00:10, 27285.18it/s] 47%|████▋     | 257774/552076 [00:06<00:09, 29705.56it/s] 47%|████▋     | 261546/552076 [00:06<00:09, 31727.82it/s] 48%|████▊     | 264906/552076 [00:06<00:09, 31442.07it/s] 49%|████▊     | 268347/552076 [00:06<00:08, 32277.18it/s] 49%|████▉     | 271673/552076 [00:06<00:08, 31786.81it/s] 50%|████▉     | 274922/552076 [00:06<00:10, 26836.13it/s] 50%|█████     | 277818/552076 [00:06<00:10, 26451.61it/s] 51%|█████     | 282132/552076 [00:07<00:09, 29924.34it/s] 52%|█████▏    | 286703/552076 [00:07<00:07, 33382.49it/s] 53%|█████▎    | 290339/552076 [00:07<00:08, 32210.59it/s] 54%|█████▎    | 295890/552076 [00:07<00:06, 36850.43it/s] 54%|█████▍    | 299963/552076 [00:07<00:06, 36481.40it/s] 55%|█████▌    | 303883/552076 [00:07<00:06, 36164.32it/s] 56%|█████▌    | 307987/552076 [00:07<00:06, 36959.33it/s] 56%|█████▋    | 311821/552076 [00:07<00:06, 34905.54it/s] 57%|█████▋    | 315432/552076 [00:07<00:06, 35092.03it/s] 58%|█████▊    | 319026/552076 [00:08<00:06, 34301.51it/s] 58%|█████▊    | 322551/552076 [00:08<00:06, 34578.92it/s] 59%|█████▉    | 326124/552076 [00:08<00:06, 34915.95it/s] 60%|█████▉    | 329648/552076 [00:08<00:06, 34717.23it/s] 60%|██████    | 333243/552076 [00:08<00:06, 35076.73it/s] 61%|██████    | 336884/552076 [00:08<00:06, 35465.02it/s] 62%|██████▏   | 340444/552076 [00:08<00:06, 34619.67it/s] 62%|██████▏   | 344096/552076 [00:08<00:05, 35168.44it/s] 63%|██████▎   | 347811/552076 [00:08<00:05, 35739.33it/s] 64%|██████▎   | 351652/552076 [00:08<00:05, 36499.25it/s] 64%|██████▍   | 355314/552076 [00:09<00:05, 35788.97it/s] 65%|██████▌   | 358941/552076 [00:09<00:05, 35920.08it/s] 66%|██████▌   | 362588/552076 [00:09<00:05, 36083.09it/s] 66%|██████▋   | 366322/552076 [00:09<00:05, 36450.89it/s] 68%|██████▊   | 375639/552076 [00:09<00:03, 44595.05it/s] 70%|███████   | 387653/552076 [00:09<00:02, 54963.17it/s] 72%|███████▏  | 398814/552076 [00:09<00:02, 64834.38it/s] 74%|███████▍  | 411061/552076 [00:09<00:01, 75492.58it/s] 76%|███████▋  | 421862/552076 [00:09<00:01, 82987.28it/s] 78%|███████▊  | 432326/552076 [00:09<00:01, 88478.92it/s] 80%|████████  | 442447/552076 [00:10<00:01, 87714.44it/s] 82%|████████▏ | 452111/552076 [00:10<00:01, 88691.51it/s] 84%|████████▍ | 463132/552076 [00:10<00:00, 93816.49it/s] 86%|████████▌ | 473033/552076 [00:10<00:00, 81968.33it/s] 87%|████████▋ | 481863/552076 [00:10<00:01, 60435.37it/s] 89%|████████▊ | 489168/552076 [00:10<00:01, 62516.13it/s] 90%|█████████ | 499279/552076 [00:10<00:00, 70599.43it/s] 92%|█████████▏| 509159/552076 [00:11<00:00, 76398.90it/s] 94%|█████████▍| 518326/552076 [00:11<00:00, 79585.32it/s] 95%|█████████▌| 526896/552076 [00:11<00:00, 77510.10it/s] 98%|█████████▊| 539225/552076 [00:11<00:00, 87225.08it/s]100%|█████████▉| 551536/552076 [00:11<00:00, 95581.96it/s]100%|██████████| 552076/552076 [00:11<00:00, 48295.96it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 42, in forward
    hneg = self.embed(neg)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 1.65 GiB already allocated; 41.44 MiB free; 1.66 GiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.8575327396392822 seconds.
Run epoch 1
Epoch 1 ends in 1.0482430458068848 seconds.
39434 sentences created
mode 1: time used = 0.713416337966919
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 13%|█▎        | 5190/39434 [00:00<00:00, 51895.84it/s] 34%|███▍      | 13405/39434 [00:00<00:00, 58340.95it/s] 55%|█████▍    | 21611/39434 [00:00<00:00, 63879.00it/s] 76%|███████▌  | 29920/39434 [00:00<00:00, 68639.67it/s] 97%|█████████▋| 38266/39434 [00:00<00:00, 72500.37it/s]100%|██████████| 39434/39434 [00:00<00:00, 76628.33it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  1%|          | 6663/552076 [00:00<00:08, 66628.95it/s]  2%|▏         | 13432/552076 [00:00<00:08, 66943.35it/s]  4%|▎         | 19454/552076 [00:00<00:08, 64772.94it/s]  5%|▍         | 27279/552076 [00:00<00:07, 68301.86it/s]  6%|▌         | 33555/552076 [00:00<00:07, 66538.91it/s]  7%|▋         | 41162/552076 [00:00<00:07, 69137.50it/s]  9%|▊         | 47356/552076 [00:00<00:07, 64206.83it/s] 10%|█         | 56665/552076 [00:00<00:07, 70606.32it/s] 12%|█▏        | 64140/552076 [00:00<00:07, 69463.92it/s] 13%|█▎        | 71912/552076 [00:01<00:06, 71749.62it/s] 15%|█▌        | 83542/552076 [00:01<00:05, 81064.51it/s] 17%|█▋        | 95474/552076 [00:01<00:05, 89691.00it/s] 19%|█▉        | 107199/552076 [00:01<00:04, 96493.41it/s] 22%|██▏       | 118808/552076 [00:01<00:04, 101639.72it/s] 24%|██▎       | 130693/552076 [00:01<00:04, 100851.77it/s] 26%|██▌       | 141093/552076 [00:01<00:04, 101006.77it/s] 28%|██▊       | 153491/552076 [00:01<00:03, 106951.61it/s] 30%|███       | 165737/552076 [00:01<00:03, 111173.70it/s] 32%|███▏      | 178015/552076 [00:01<00:03, 114417.20it/s] 34%|███▍      | 190404/552076 [00:02<00:03, 117102.84it/s] 37%|███▋      | 203026/552076 [00:02<00:02, 119694.39it/s] 39%|███▉      | 215352/552076 [00:02<00:02, 120741.33it/s] 41%|████      | 227506/552076 [00:02<00:02, 117915.31it/s] 43%|████▎     | 240102/552076 [00:02<00:02, 120216.78it/s] 46%|████▌     | 252748/552076 [00:02<00:02, 122021.38it/s] 48%|████▊     | 265218/552076 [00:02<00:02, 122810.59it/s] 50%|█████     | 277683/552076 [00:02<00:02, 123354.63it/s] 53%|█████▎    | 290308/552076 [00:02<00:02, 124208.01it/s] 55%|█████▍    | 302953/552076 [00:02<00:01, 124869.78it/s] 57%|█████▋    | 315612/552076 [00:03<00:01, 125378.73it/s] 59%|█████▉    | 328191/552076 [00:03<00:01, 125498.82it/s] 62%|██████▏   | 340803/552076 [00:03<00:01, 125683.22it/s] 64%|██████▍   | 353377/552076 [00:03<00:01, 117646.72it/s] 66%|██████▌   | 365250/552076 [00:03<00:01, 115811.71it/s] 68%|██████▊   | 377855/552076 [00:03<00:01, 118703.52it/s] 71%|███████   | 390493/552076 [00:03<00:01, 120904.94it/s] 73%|███████▎  | 402647/552076 [00:03<00:01, 118731.15it/s] 75%|███████▌  | 415278/552076 [00:03<00:01, 120907.51it/s] 77%|███████▋  | 427626/552076 [00:03<00:01, 121665.22it/s] 80%|███████▉  | 440259/552076 [00:04<00:00, 123027.60it/s] 82%|████████▏ | 452590/552076 [00:04<00:00, 119554.23it/s] 84%|████████▍ | 464710/552076 [00:04<00:00, 120040.05it/s] 86%|████████▋ | 476959/552076 [00:04<00:00, 120762.84it/s] 89%|████████▊ | 489057/552076 [00:04<00:00, 120812.75it/s] 91%|█████████ | 501639/552076 [00:04<00:00, 122271.16it/s] 93%|█████████▎| 514213/552076 [00:04<00:00, 123291.07it/s] 95%|█████████▌| 526793/552076 [00:04<00:00, 124030.41it/s] 98%|█████████▊| 539206/552076 [00:04<00:00, 123607.01it/s]100%|█████████▉| 551574/552076 [00:05<00:00, 123419.98it/s]100%|██████████| 552076/552076 [00:05<00:00, 110226.54it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 126.16 MiB already allocated; 558.44 MiB free; 140.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3394200801849365 seconds.
Run epoch 1
Epoch 1 ends in 0.44020605087280273 seconds.
39434 sentences created
mode 1: time used = 0.6467792987823486
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 93, in build
    features = torch.from_numpy(graph.features()).to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 46%|████▌     | 18147/39434 [00:00<00:00, 181461.52it/s] 74%|███████▍  | 29172/39434 [00:00<00:00, 152001.85it/s]100%|██████████| 39434/39434 [00:00<00:00, 142616.36it/s]
  0%|          | 0/552076 [00:00<?, ?it/s]  4%|▎         | 19545/552076 [00:00<00:02, 195441.33it/s]  6%|▌         | 31015/552076 [00:00<00:03, 161363.91it/s] 10%|▉         | 52625/552076 [00:00<00:02, 174633.08it/s] 13%|█▎        | 73596/552076 [00:00<00:02, 183856.71it/s] 17%|█▋        | 95203/552076 [00:00<00:02, 192463.27it/s] 21%|██▏       | 118136/552076 [00:00<00:02, 202214.66it/s] 25%|██▍       | 136671/552076 [00:00<00:02, 177521.51it/s] 28%|██▊       | 155478/552076 [00:00<00:02, 180559.11it/s] 32%|███▏      | 177480/552076 [00:00<00:01, 190825.01it/s] 36%|███▌      | 199425/552076 [00:01<00:01, 198593.82it/s] 40%|████      | 220867/552076 [00:01<00:01, 203088.25it/s] 44%|████▍     | 242843/552076 [00:01<00:01, 207815.23it/s] 48%|████▊     | 264623/552076 [00:01<00:01, 210711.22it/s] 52%|█████▏    | 285784/552076 [00:01<00:01, 210977.40it/s] 56%|█████▌    | 306906/552076 [00:01<00:01, 209496.51it/s] 59%|█████▉    | 327875/552076 [00:01<00:01, 205633.01it/s] 63%|██████▎   | 349995/552076 [00:01<00:00, 210066.00it/s] 67%|██████▋   | 371450/552076 [00:01<00:00, 211389.67it/s] 71%|███████▏  | 393522/552076 [00:01<00:00, 214102.41it/s] 75%|███████▌  | 415286/552076 [00:02<00:00, 215150.85it/s] 79%|███████▉  | 437841/552076 [00:02<00:00, 218167.50it/s] 83%|████████▎ | 460561/552076 [00:02<00:00, 220798.84it/s] 88%|████████▊ | 483149/552076 [00:02<00:00, 222298.77it/s] 92%|█████████▏| 505400/552076 [00:02<00:00, 221845.54it/s] 96%|█████████▌| 527600/552076 [00:02<00:00, 213910.25it/s]100%|█████████▉| 551403/552076 [00:02<00:00, 220614.11it/s]100%|██████████| 552076/552076 [00:02<00:00, 207589.34it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 82, in forward
    return self.embed(x)[indices]
RuntimeError: CUDA out of memory. Tried to allocate 782.00 MiB (GPU 0; 10.76 GiB total capacity; 126.16 MiB already allocated; 151.44 MiB free; 140.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = none
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.3239552974700928 seconds.
Run epoch 1
Epoch 1 ends in 0.37477827072143555 seconds.
39434 sentences created
mode 1: time used = 0.3296957015991211
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.03 MiB already allocated; 369.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.07 MiB already allocated; 9.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.16 MiB already allocated; 477.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.22 MiB already allocated; 713.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.22 MiB already allocated; 593.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.29 MiB already allocated; 293.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.29 MiB already allocated; 1.07 GiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 52, in forward
    pre_sup = torch.mm(x, getattr(self, 'weights_' + str(i)))
RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 10.76 GiB total capacity; 1.54 GiB already allocated; 8.44 MiB free; 1.55 GiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.35 MiB already allocated; 497.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12847/88651 [00:00<00:00, 128464.30it/s] 30%|██▉       | 26387/88651 [00:00<00:00, 130466.67it/s] 46%|████▌     | 40423/88651 [00:00<00:00, 133283.56it/s] 61%|██████▏   | 54342/88651 [00:00<00:00, 134999.78it/s] 77%|███████▋  | 67905/88651 [00:00<00:00, 135186.15it/s] 92%|█████████▏| 81363/88651 [00:00<00:00, 135000.77it/s]100%|██████████| 88651/88651 [00:00<00:00, 136396.94it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 27%|██▋       | 24127/88651 [00:00<00:00, 241263.33it/s] 54%|█████▍    | 47979/88651 [00:00<00:00, 240432.58it/s] 83%|████████▎ | 73258/88651 [00:00<00:00, 244010.62it/s]100%|██████████| 88651/88651 [00:00<00:00, 245763.58it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.03 MiB already allocated; 447.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
  0%|          | 0/88651 [00:00<?, ?it/s] 26%|██▌       | 22910/88651 [00:00<00:00, 229093.66it/s] 52%|█████▏    | 46533/88651 [00:00<00:00, 231188.46it/s] 81%|████████  | 71967/88651 [00:00<00:00, 237677.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 241550.77it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20710/88651 [00:00<00:00, 207097.73it/s] 47%|████▋     | 41966/88651 [00:00<00:00, 208705.15it/s] 72%|███████▏  | 63712/88651 [00:00<00:00, 211256.15it/s] 97%|█████████▋| 86004/88651 [00:00<00:00, 214623.09it/s]100%|██████████| 88651/88651 [00:00<00:00, 215330.99it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 25%|██▌       | 22539/88651 [00:00<00:00, 225382.69it/s] 52%|█████▏    | 45934/88651 [00:00<00:00, 227886.17it/s] 78%|███████▊  | 69199/88651 [00:00<00:00, 229292.19it/s]100%|██████████| 88651/88651 [00:00<00:00, 231601.92it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 12%|█▏        | 10769/88651 [00:00<00:00, 107290.29it/s] 18%|█▊        | 16252/88651 [00:00<00:00, 83360.55it/s]  26%|██▌       | 22756/88651 [00:00<00:00, 76864.36it/s] 38%|███▊      | 33659/88651 [00:00<00:00, 83623.11it/s] 45%|████▌     | 40092/88651 [00:00<00:00, 71700.49it/s] 55%|█████▍    | 48440/88651 [00:00<00:00, 74869.21it/s] 63%|██████▎   | 56201/88651 [00:00<00:00, 74772.72it/s] 71%|███████▏  | 63188/88651 [00:00<00:00, 72433.17it/s] 79%|███████▉  | 70104/88651 [00:00<00:00, 69014.69it/s] 91%|█████████▏| 80959/88651 [00:01<00:00, 77479.54it/s]100%|██████████| 88651/88651 [00:01<00:00, 79422.62it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▍        | 12957/88651 [00:00<00:00, 129565.49it/s] 30%|██▉       | 26535/88651 [00:00<00:00, 131366.32it/s] 45%|████▍     | 39665/88651 [00:00<00:00, 131345.70it/s] 60%|█████▉    | 52821/88651 [00:00<00:00, 131409.39it/s] 75%|███████▍  | 66305/88651 [00:00<00:00, 132419.68it/s] 90%|█████████ | 80068/88651 [00:00<00:00, 133940.63it/s]100%|██████████| 88651/88651 [00:00<00:00, 133848.11it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.07 MiB already allocated; 1.10 GiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▍       | 21529/88651 [00:00<00:00, 215288.67it/s] 50%|█████     | 44517/88651 [00:00<00:00, 219465.31it/s] 77%|███████▋  | 68256/88651 [00:00<00:00, 224549.53it/s]100%|██████████| 88651/88651 [00:00<00:00, 227204.08it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.07 MiB already allocated; 1.10 GiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
  0%|          | 0/88651 [00:00<?, ?it/s] 26%|██▌       | 22991/88651 [00:00<00:00, 229902.55it/s] 54%|█████▍    | 47857/88651 [00:00<00:00, 235223.28it/s] 79%|███████▉  | 69951/88651 [00:00<00:00, 230747.28it/s]100%|██████████| 88651/88651 [00:00<00:00, 234224.62it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.07 MiB already allocated; 1.28 GiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
  0%|          | 0/88651 [00:00<?, ?it/s] 25%|██▌       | 22311/88651 [00:00<00:00, 223105.43it/s] 51%|█████▏    | 45639/88651 [00:00<00:00, 226062.18it/s] 76%|███████▌  | 67329/88651 [00:00<00:00, 223232.18it/s]100%|██████████| 88651/88651 [00:00<00:00, 227167.29it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 26%|██▌       | 22613/88651 [00:00<00:00, 226122.67it/s] 51%|█████     | 45144/88651 [00:00<00:00, 225876.54it/s] 78%|███████▊  | 69056/88651 [00:00<00:00, 229690.64it/s]100%|██████████| 88651/88651 [00:00<00:00, 232410.13it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 24%|██▍       | 21361/88651 [00:00<00:00, 213606.13it/s] 50%|████▉     | 44103/88651 [00:00<00:00, 217568.19it/s] 78%|███████▊  | 68798/88651 [00:00<00:00, 225621.35it/s]100%|██████████| 88651/88651 [00:00<00:00, 233368.76it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20251/88651 [00:00<00:00, 202509.71it/s] 45%|████▍     | 39797/88651 [00:00<00:00, 200341.89it/s] 68%|██████▊   | 60343/88651 [00:00<00:00, 201848.70it/s] 91%|█████████ | 80273/88651 [00:00<00:00, 201075.44it/s]100%|██████████| 88651/88651 [00:00<00:00, 201089.98it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 10%|▉         | 8716/88651 [00:00<00:00, 85041.69it/s] 23%|██▎       | 20657/88651 [00:00<00:00, 93078.10it/s] 36%|███▋      | 32285/88651 [00:00<00:00, 99004.09it/s] 50%|████▉     | 44212/88651 [00:00<00:00, 104320.22it/s] 63%|██████▎   | 56058/88651 [00:00<00:00, 108192.04it/s] 76%|███████▋  | 67649/88651 [00:00<00:00, 110396.21it/s] 90%|████████▉ | 79743/88651 [00:00<00:00, 113358.95it/s]100%|██████████| 88651/88651 [00:00<00:00, 114533.68it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 26%|██▋       | 23485/88651 [00:00<00:00, 234845.74it/s] 52%|█████▏    | 46256/88651 [00:00<00:00, 232657.72it/s] 78%|███████▊  | 68732/88651 [00:00<00:00, 230229.28it/s]100%|██████████| 88651/88651 [00:00<00:00, 227413.49it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 27%|██▋       | 23539/88651 [00:00<00:00, 235389.66it/s] 55%|█████▌    | 48898/88651 [00:00<00:00, 240566.71it/s] 84%|████████▎ | 74114/88651 [00:00<00:00, 243929.24it/s]100%|██████████| 88651/88651 [00:00<00:00, 249153.52it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 19%|█▉        | 16645/88651 [00:00<00:00, 166445.00it/s] 42%|████▏     | 37403/88651 [00:00<00:00, 176964.77it/s] 62%|██████▏   | 55218/88651 [00:00<00:00, 177317.72it/s] 82%|████████▏ | 72952/88651 [00:00<00:00, 177323.32it/s]100%|██████████| 88651/88651 [00:00<00:00, 188561.75it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 28%|██▊       | 24835/88651 [00:00<00:00, 248349.05it/s] 57%|█████▋    | 50387/88651 [00:00<00:00, 250454.80it/s] 86%|████████▌ | 75989/88651 [00:00<00:00, 252096.20it/s]100%|██████████| 88651/88651 [00:00<00:00, 254396.51it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19913/88651 [00:00<00:00, 199126.87it/s] 45%|████▌     | 40262/88651 [00:00<00:00, 200413.41it/s] 69%|██████▉   | 61371/88651 [00:00<00:00, 203499.89it/s] 89%|████████▉ | 79082/88651 [00:00<00:00, 194790.88it/s]100%|██████████| 88651/88651 [00:00<00:00, 194480.01it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 27%|██▋       | 23571/88651 [00:00<00:00, 235702.92it/s] 56%|█████▋    | 50026/88651 [00:00<00:00, 243671.80it/s] 86%|████████▌ | 76279/88651 [00:00<00:00, 249037.74it/s]100%|██████████| 88651/88651 [00:00<00:00, 254230.75it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 26%|██▋       | 23341/88651 [00:00<00:00, 233401.88it/s] 52%|█████▏    | 45928/88651 [00:00<00:00, 231088.81it/s] 78%|███████▊  | 69291/88651 [00:00<00:00, 231843.43it/s]100%|██████████| 88651/88651 [00:00<00:00, 233130.70it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 25%|██▍       | 21841/88651 [00:00<00:00, 218406.04it/s] 51%|█████     | 44792/88651 [00:00<00:00, 221621.44it/s] 77%|███████▋  | 68544/88651 [00:00<00:00, 226160.39it/s]100%|██████████| 88651/88651 [00:00<00:00, 231938.97it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s]  7%|▋         | 6156/88651 [00:00<00:01, 60148.80it/s] 31%|███▏      | 27797/88651 [00:00<00:00, 76780.71it/s] 54%|█████▍    | 48137/88651 [00:00<00:00, 94412.33it/s] 76%|███████▌  | 67030/88651 [00:00<00:00, 111083.21it/s] 97%|█████████▋| 86138/88651 [00:00<00:00, 127038.06it/s]100%|██████████| 88651/88651 [00:00<00:00, 171860.24it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 25%|██▌       | 22437/88651 [00:00<00:00, 224367.54it/s] 52%|█████▏    | 46486/88651 [00:00<00:00, 228970.36it/s] 80%|████████  | 71241/88651 [00:00<00:00, 234243.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 240146.87it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 26%|██▋       | 23318/88651 [00:00<00:00, 233173.00it/s] 52%|█████▏    | 46312/88651 [00:00<00:00, 232192.15it/s] 80%|████████  | 71044/88651 [00:00<00:00, 236532.46it/s]100%|██████████| 88651/88651 [00:00<00:00, 234576.60it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 26%|██▌       | 23165/88651 [00:00<00:00, 231649.67it/s] 51%|█████     | 44790/88651 [00:00<00:00, 226803.00it/s] 77%|███████▋  | 68630/88651 [00:00<00:00, 230160.03it/s]100%|██████████| 88651/88651 [00:00<00:00, 226648.86it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 26%|██▌       | 22985/88651 [00:00<00:00, 229849.12it/s] 53%|█████▎    | 47069/88651 [00:00<00:00, 233036.59it/s] 80%|████████  | 70954/88651 [00:00<00:00, 234748.44it/s]100%|██████████| 88651/88651 [00:00<00:00, 240076.94it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 18%|█▊        | 15741/88651 [00:00<00:00, 157408.27it/s] 43%|████▎     | 37988/88651 [00:00<00:00, 172546.69it/s] 69%|██████▊   | 60875/88651 [00:00<00:00, 186298.99it/s] 94%|█████████▍| 83739/88651 [00:00<00:00, 197257.63it/s]100%|██████████| 88651/88651 [00:00<00:00, 209107.70it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14734/88651 [00:00<00:00, 147337.33it/s] 36%|███▌      | 31481/88651 [00:00<00:00, 152848.90it/s] 60%|██████    | 53455/88651 [00:00<00:00, 168210.33it/s] 88%|████████▊ | 77831/88651 [00:00<00:00, 185452.54it/s]100%|██████████| 88651/88651 [00:00<00:00, 197990.35it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 26%|██▌       | 22761/88651 [00:00<00:00, 227607.50it/s] 50%|█████     | 44419/88651 [00:00<00:00, 224181.52it/s] 75%|███████▌  | 66746/88651 [00:00<00:00, 223905.42it/s]100%|██████████| 88651/88651 [00:00<00:00, 225630.15it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 26%|██▌       | 22756/88651 [00:00<00:00, 227523.87it/s] 52%|█████▏    | 46319/88651 [00:00<00:00, 229895.80it/s] 80%|███████▉  | 70645/88651 [00:00<00:00, 233747.55it/s]100%|██████████| 88651/88651 [00:00<00:00, 237420.66it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 25%|██▌       | 22517/88651 [00:00<00:00, 225160.02it/s] 51%|█████▏    | 45628/88651 [00:00<00:00, 226910.42it/s] 77%|███████▋  | 68231/88651 [00:00<00:00, 226644.34it/s]100%|██████████| 88651/88651 [00:00<00:00, 228381.05it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s]  8%|▊         | 7029/88651 [00:00<00:01, 70288.89it/s] 21%|██        | 18443/88651 [00:00<00:00, 79444.81it/s] 29%|██▉       | 25565/88651 [00:00<00:00, 76634.50it/s] 42%|████▏     | 37553/88651 [00:00<00:00, 85933.11it/s] 56%|█████▌    | 49533/88651 [00:00<00:00, 93894.92it/s] 66%|██████▌   | 58366/88651 [00:00<00:00, 84160.67it/s] 80%|███████▉  | 70514/88651 [00:00<00:00, 92703.98it/s] 91%|█████████▏| 80962/88651 [00:00<00:00, 95946.56it/s]100%|██████████| 88651/88651 [00:00<00:00, 98921.56it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20563/88651 [00:00<00:00, 205625.29it/s] 47%|████▋     | 41515/88651 [00:00<00:00, 206777.31it/s] 71%|███████   | 62979/88651 [00:00<00:00, 209073.85it/s] 94%|█████████▍| 83253/88651 [00:00<00:00, 207131.83it/s]100%|██████████| 88651/88651 [00:00<00:00, 209209.23it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▍        | 12831/88651 [00:00<00:00, 128308.29it/s] 27%|██▋       | 24355/88651 [00:00<00:00, 124086.29it/s] 46%|████▋     | 41211/88651 [00:00<00:00, 134752.14it/s] 69%|██████▊   | 60798/88651 [00:00<00:00, 148667.44it/s] 90%|████████▉ | 79386/88651 [00:00<00:00, 158166.15it/s]100%|██████████| 88651/88651 [00:00<00:00, 162306.07it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18524/88651 [00:00<00:00, 185238.41it/s] 49%|████▉     | 43730/88651 [00:00<00:00, 201243.23it/s] 77%|███████▋  | 68287/88651 [00:00<00:00, 212763.41it/s]100%|██████████| 88651/88651 [00:00<00:00, 231647.37it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 16%|█▋        | 14621/88651 [00:00<00:00, 146205.26it/s] 33%|███▎      | 29605/88651 [00:00<00:00, 147276.76it/s] 50%|█████     | 44685/88651 [00:00<00:00, 148314.70it/s] 68%|██████▊   | 59974/88651 [00:00<00:00, 149656.64it/s] 91%|█████████ | 80408/88651 [00:00<00:00, 162719.87it/s]100%|██████████| 88651/88651 [00:00<00:00, 164044.24it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 15%|█▌        | 13476/88651 [00:00<00:00, 134752.42it/s] 27%|██▋       | 23937/88651 [00:00<00:00, 124024.43it/s] 39%|███▊      | 34154/88651 [00:00<00:00, 116544.79it/s] 48%|████▊     | 42692/88651 [00:00<00:00, 105038.88it/s] 61%|██████    | 53642/88651 [00:00<00:00, 106337.57it/s] 73%|███████▎  | 64897/88651 [00:00<00:00, 108127.06it/s] 85%|████████▌ | 75565/88651 [00:00<00:00, 107687.70it/s]100%|██████████| 88651/88651 [00:00<00:00, 110686.03it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 21%|██        | 18480/88651 [00:00<00:00, 184797.53it/s] 39%|███▉      | 34454/88651 [00:00<00:00, 176491.71it/s] 57%|█████▋    | 50483/88651 [00:00<00:00, 171294.72it/s] 75%|███████▍  | 66068/88651 [00:00<00:00, 166346.42it/s] 93%|█████████▎| 82398/88651 [00:00<00:00, 165417.92it/s]100%|██████████| 88651/88651 [00:00<00:00, 164685.29it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 17%|█▋        | 14684/88651 [00:00<00:00, 146832.44it/s] 34%|███▍      | 30069/88651 [00:00<00:00, 148867.12it/s] 51%|█████     | 45208/88651 [00:00<00:00, 149614.84it/s] 69%|██████▉   | 61512/88651 [00:00<00:00, 151699.07it/s] 88%|████████▊ | 77989/88651 [00:00<00:00, 155394.71it/s]100%|██████████| 88651/88651 [00:00<00:00, 155132.33it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 14%|█▎        | 12077/88651 [00:00<00:00, 120760.33it/s] 24%|██▍       | 21145/88651 [00:00<00:00, 109829.45it/s] 36%|███▌      | 32120/88651 [00:00<00:00, 109803.51it/s] 50%|████▉     | 44030/88651 [00:00<00:00, 112434.40it/s] 59%|█████▉    | 52483/88651 [00:00<00:00, 90414.38it/s]  72%|███████▏  | 64125/88651 [00:00<00:00, 96906.83it/s] 86%|████████▌ | 76260/88651 [00:00<00:00, 103136.92it/s] 97%|█████████▋| 86157/88651 [00:00<00:00, 90077.49it/s] 100%|██████████| 88651/88651 [00:00<00:00, 98636.03it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20427/88651 [00:00<00:00, 204260.94it/s] 47%|████▋     | 41403/88651 [00:00<00:00, 205879.91it/s] 71%|███████▏  | 63360/88651 [00:00<00:00, 209802.47it/s] 96%|█████████▌| 85049/88651 [00:00<00:00, 211875.67it/s]100%|██████████| 88651/88651 [00:00<00:00, 212422.51it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 23%|██▎       | 20432/88651 [00:00<00:00, 204309.48it/s] 46%|████▌     | 40671/88651 [00:00<00:00, 203728.56it/s] 68%|██████▊   | 60580/88651 [00:00<00:00, 202311.57it/s] 91%|█████████▏| 81082/88651 [00:00<00:00, 203116.33it/s]100%|██████████| 88651/88651 [00:00<00:00, 202323.02it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 27%|██▋       | 24051/88651 [00:00<00:00, 240509.08it/s] 42%|████▏     | 37054/88651 [00:00<00:00, 191654.31it/s] 66%|██████▌   | 58601/88651 [00:00<00:00, 198227.19it/s] 93%|█████████▎| 82099/88651 [00:00<00:00, 207984.38it/s]100%|██████████| 88651/88651 [00:00<00:00, 208007.05it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/88651 [00:00<?, ?it/s] 22%|██▏       | 19204/88651 [00:00<00:00, 192039.73it/s] 45%|████▍     | 39721/88651 [00:00<00:00, 195797.47it/s] 69%|██████▉   | 61163/88651 [00:00<00:00, 201033.39it/s] 93%|█████████▎| 82706/88651 [00:00<00:00, 205145.28it/s]100%|██████████| 88651/88651 [00:00<00:00, 206840.70it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
repeating 1 times...
generating negative samples with except_neighbor...
negative samples generated
sampler length = 88651 88651 88651
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 21%|██        | 8353/39434 [00:00<00:00, 83522.31it/s] 44%|████▍     | 17281/39434 [00:00<00:00, 85170.07it/s] 63%|██████▎   | 24934/39434 [00:00<00:00, 82378.55it/s]100%|██████████| 39434/39434 [00:00<00:00, 99437.81it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.28165555000305176 seconds.
Run epoch 1
Epoch 1 ends in 0.45081591606140137 seconds.
39434 sentences created
mode 1: time used = 0.4700140953063965
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 91, in build
    self.preprocess_data(graph)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 185, in preprocess_data
    self.features = self.features.to(self._device)
RuntimeError: CUDA error: out of memory
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
  0%|          | 0/39434 [00:00<?, ?it/s] 22%|██▏       | 8571/39434 [00:00<00:00, 85703.13it/s] 43%|████▎     | 17000/39434 [00:00<00:00, 85273.03it/s] 62%|██████▏   | 24636/39434 [00:00<00:00, 82385.01it/s] 84%|████████▍ | 33165/39434 [00:00<00:00, 83232.34it/s]100%|██████████| 39434/39434 [00:00<00:00, 82596.18it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.03 MiB already allocated; 858.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.4092695713043213 seconds.
Run epoch 1
Epoch 1 ends in 0.37583494186401367 seconds.
39434 sentences created
mode 1: time used = 0.6006596088409424
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
  0%|          | 0/39434 [00:00<?, ?it/s] 49%|████▉     | 19331/39434 [00:00<00:00, 193306.04it/s] 94%|█████████▍| 37087/39434 [00:00<00:00, 188294.50it/s]100%|██████████| 39434/39434 [00:00<00:00, 184794.59it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.05 MiB already allocated; 1.06 GiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13858461380004883 seconds.
Run epoch 1
Epoch 1 ends in 0.2043459415435791 seconds.
39434 sentences created
mode 1: time used = 0.26532649993896484
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
  0%|          | 0/39434 [00:00<?, ?it/s] 49%|████▉     | 19316/39434 [00:00<00:00, 193154.66it/s] 79%|███████▉  | 31188/39434 [00:00<00:00, 162570.34it/s] 98%|█████████▊| 38806/39434 [00:00<00:00, 93737.14it/s] 100%|██████████| 39434/39434 [00:00<00:00, 107923.23it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13713860511779785 seconds.
Run epoch 1
Epoch 1 ends in 0.2082805633544922 seconds.
39434 sentences created
mode 1: time used = 0.42086100578308105
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 43%|████▎     | 17138/39434 [00:00<00:00, 171379.35it/s] 75%|███████▌  | 29696/39434 [00:00<00:00, 154476.78it/s]100%|██████████| 39434/39434 [00:00<00:00, 135776.17it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.18778705596923828 seconds.
Run epoch 1
Epoch 1 ends in 0.37434983253479004 seconds.
39434 sentences created
mode 1: time used = 0.36560559272766113
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 12%|█▏        | 4722/39434 [00:00<00:00, 47218.69it/s] 34%|███▍      | 13516/39434 [00:00<00:00, 54835.51it/s] 48%|████▊     | 19030/39434 [00:00<00:00, 54925.50it/s] 69%|██████▉   | 27368/39434 [00:00<00:00, 61189.37it/s] 91%|█████████ | 35839/39434 [00:00<00:00, 66748.82it/s]100%|██████████| 39434/39434 [00:00<00:00, 72576.49it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.30806708335876465 seconds.
Run epoch 1
Epoch 1 ends in 0.40017199516296387 seconds.
39434 sentences created
mode 1: time used = 0.6861112117767334
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 49%|████▉     | 19443/39434 [00:00<00:00, 194421.84it/s] 97%|█████████▋| 38279/39434 [00:00<00:00, 192560.24it/s]100%|██████████| 39434/39434 [00:00<00:00, 190442.96it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.14276957511901855 seconds.
Run epoch 1
Epoch 1 ends in 0.24397540092468262 seconds.
39434 sentences created
mode 1: time used = 0.25677013397216797
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|████▉     | 19567/39434 [00:00<00:00, 195655.73it/s] 97%|█████████▋| 38128/39434 [00:00<00:00, 192528.71it/s]100%|██████████| 39434/39434 [00:00<00:00, 189297.14it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.07 MiB already allocated; 858.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1673896312713623 seconds.
Run epoch 1
Epoch 1 ends in 0.2280285358428955 seconds.
39434 sentences created
mode 1: time used = 0.26044511795043945
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|█████     | 19903/39434 [00:00<00:00, 199027.82it/s] 95%|█████████▌| 37510/39434 [00:00<00:00, 191533.78it/s]100%|██████████| 39434/39434 [00:00<00:00, 186257.33it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 222, in forward
    self.to(self._device)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 607, in to
    return self._apply(convert)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 397, in _apply
    self._buffers[key] = fn(buf)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 605, in convert
    return t.to(device, dtype if t.is_floating_point() else None, non_blocking)
RuntimeError: CUDA out of memory. Tried to allocate 1.45 GiB (GPU 0; 10.76 GiB total capacity; 42.07 MiB already allocated; 858.44 MiB free; 60.00 MiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13764166831970215 seconds.
Run epoch 1
Epoch 1 ends in 0.19989991188049316 seconds.
39434 sentences created
mode 1: time used = 0.26262402534484863
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
  0%|          | 0/39434 [00:00<?, ?it/s] 48%|████▊     | 18868/39434 [00:00<00:00, 188671.18it/s] 94%|█████████▍| 37172/39434 [00:00<00:00, 186944.06it/s]100%|██████████| 39434/39434 [00:00<00:00, 185320.51it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.23825931549072266 seconds.
Run epoch 1
Epoch 1 ends in 0.24985241889953613 seconds.
39434 sentences created
mode 1: time used = 0.2627091407775879
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 46%|████▌     | 18095/39434 [00:00<00:00, 180945.86it/s] 93%|█████████▎| 36553/39434 [00:00<00:00, 182019.75it/s]100%|██████████| 39434/39434 [00:00<00:00, 181418.33it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 55, in _forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 43, in embed
    return self.features[x]
RuntimeError: CUDA out of memory. Tried to allocate 38.00 MiB (GPU 0; 10.76 GiB total capacity; 1.50 GiB already allocated; 21.44 MiB free; 1.51 GiB reserved in total by PyTorch)
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.2686784267425537 seconds.
Run epoch 1
Epoch 1 ends in 0.25908327102661133 seconds.
39434 sentences created
mode 1: time used = 0.26764917373657227
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|█████     | 19885/39434 [00:00<00:00, 198845.45it/s] 99%|█████████▊| 38884/39434 [00:00<00:00, 196100.49it/s]100%|██████████| 39434/39434 [00:00<00:00, 194116.34it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1667468547821045 seconds.
Run epoch 1
Epoch 1 ends in 0.20067358016967773 seconds.
39434 sentences created
mode 1: time used = 0.2509727478027344
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 45%|████▍     | 17630/39434 [00:00<00:00, 176293.44it/s] 88%|████████▊ | 34852/39434 [00:00<00:00, 175049.97it/s]100%|██████████| 39434/39434 [00:00<00:00, 173875.30it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1500380039215088 seconds.
Run epoch 1
Epoch 1 ends in 0.2480003833770752 seconds.
39434 sentences created
mode 1: time used = 0.28293418884277344
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|████▉     | 19567/39434 [00:00<00:00, 195660.86it/s] 97%|█████████▋| 38304/39434 [00:00<00:00, 192687.86it/s]100%|██████████| 39434/39434 [00:00<00:00, 190967.38it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1379249095916748 seconds.
Run epoch 1
Epoch 1 ends in 0.2035374641418457 seconds.
39434 sentences created
mode 1: time used = 0.25431346893310547
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 45%|████▍     | 17555/39434 [00:00<00:00, 164347.22it/s] 77%|███████▋  | 30326/39434 [00:00<00:00, 151321.51it/s]100%|██████████| 39434/39434 [00:00<00:00, 150936.50it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.15183305740356445 seconds.
Run epoch 1
Epoch 1 ends in 0.23636341094970703 seconds.
39434 sentences created
mode 1: time used = 0.31374669075012207
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 49%|████▉     | 19459/39434 [00:00<00:00, 194588.79it/s] 96%|█████████▌| 37948/39434 [00:00<00:00, 191571.61it/s]100%|██████████| 39434/39434 [00:00<00:00, 188582.30it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1418476104736328 seconds.
Run epoch 1
Epoch 1 ends in 0.20914721488952637 seconds.
39434 sentences created
mode 1: time used = 0.256833553314209
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 51%|█████     | 20201/39434 [00:00<00:00, 202006.34it/s]100%|██████████| 39434/39434 [00:00<00:00, 197836.67it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1295013427734375 seconds.
Run epoch 1
Epoch 1 ends in 0.1934802532196045 seconds.
39434 sentences created
mode 1: time used = 0.2465050220489502
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 24%|██▍       | 9622/39434 [00:00<00:00, 96217.34it/s] 57%|█████▋    | 22444/39434 [00:00<00:00, 104003.55it/s] 99%|█████████▊| 38925/39434 [00:00<00:00, 116947.08it/s]100%|██████████| 39434/39434 [00:00<00:00, 130233.25it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13183212280273438 seconds.
Run epoch 1
Epoch 1 ends in 0.2395927906036377 seconds.
39434 sentences created
mode 1: time used = 0.35941004753112793
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 49%|████▉     | 19467/39434 [00:00<00:00, 194669.26it/s] 97%|█████████▋| 38115/39434 [00:00<00:00, 192137.29it/s]100%|██████████| 39434/39434 [00:00<00:00, 189016.34it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.12682366371154785 seconds.
Run epoch 1
Epoch 1 ends in 0.19576072692871094 seconds.
39434 sentences created
mode 1: time used = 0.2521698474884033
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 54%|█████▍    | 21246/39434 [00:00<00:00, 212456.15it/s]100%|██████████| 39434/39434 [00:00<00:00, 212930.16it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.12682628631591797 seconds.
Run epoch 1
Epoch 1 ends in 0.18757128715515137 seconds.
39434 sentences created
mode 1: time used = 0.22840523719787598
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 47%|████▋     | 18616/39434 [00:00<00:00, 186158.40it/s] 95%|█████████▌| 37529/39434 [00:00<00:00, 187038.23it/s]100%|██████████| 39434/39434 [00:00<00:00, 186927.36it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1588747501373291 seconds.
Run epoch 1
Epoch 1 ends in 0.2181851863861084 seconds.
39434 sentences created
mode 1: time used = 0.25728535652160645
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|████▉     | 19683/39434 [00:00<00:00, 196825.96it/s] 99%|█████████▉| 39179/39434 [00:00<00:00, 196260.23it/s]100%|██████████| 39434/39434 [00:00<00:00, 195703.91it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13654685020446777 seconds.
Run epoch 1
Epoch 1 ends in 0.20029139518737793 seconds.
39434 sentences created
mode 1: time used = 0.24617385864257812
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 52%|█████▏    | 20590/39434 [00:00<00:00, 205899.21it/s]100%|██████████| 39434/39434 [00:00<00:00, 204517.72it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13337492942810059 seconds.
Run epoch 1
Epoch 1 ends in 0.19002890586853027 seconds.
39434 sentences created
mode 1: time used = 0.23522639274597168
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|█████     | 19733/39434 [00:00<00:00, 197325.48it/s] 97%|█████████▋| 38304/39434 [00:00<00:00, 193269.28it/s]100%|██████████| 39434/39434 [00:00<00:00, 190903.02it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1397571563720703 seconds.
Run epoch 1
Epoch 1 ends in 0.21543455123901367 seconds.
39434 sentences created
mode 1: time used = 0.25820207595825195
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 45%|████▍     | 17726/39434 [00:00<00:00, 177255.10it/s] 82%|████████▏ | 32490/39434 [00:00<00:00, 167191.22it/s]100%|██████████| 39434/39434 [00:00<00:00, 163213.57it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.14251255989074707 seconds.
Run epoch 1
Epoch 1 ends in 0.21309399604797363 seconds.
39434 sentences created
mode 1: time used = 0.29286885261535645
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|█████     | 19866/39434 [00:00<00:00, 198656.40it/s]100%|██████████| 39434/39434 [00:00<00:00, 197020.58it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 128, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [128, 128, 128], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1320955753326416 seconds.
Run epoch 1
Epoch 1 ends in 0.19432282447814941 seconds.
39434 sentences created
mode 1: time used = 0.2464275360107422
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 52%|█████▏    | 20335/39434 [00:00<00:00, 203348.74it/s]100%|██████████| 39434/39434 [00:00<00:00, 197412.58it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1260523796081543 seconds.
Run epoch 1
Epoch 1 ends in 0.18808913230895996 seconds.
39434 sentences created
mode 1: time used = 0.24744653701782227
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 23%|██▎       | 9036/39434 [00:00<00:00, 90354.27it/s] 42%|████▏     | 16630/39434 [00:00<00:00, 85485.59it/s] 61%|██████    | 23958/39434 [00:00<00:00, 81415.45it/s] 78%|███████▊  | 30580/39434 [00:00<00:00, 76171.57it/s] 99%|█████████▉| 39155/39434 [00:00<00:00, 78811.66it/s]100%|██████████| 39434/39434 [00:00<00:00, 78240.67it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.41559553146362305 seconds.
Run epoch 1
Epoch 1 ends in 0.3979377746582031 seconds.
39434 sentences created
mode 1: time used = 0.6342236995697021
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 47%|████▋     | 18728/39434 [00:00<00:00, 187272.59it/s] 97%|█████████▋| 38056/39434 [00:00<00:00, 189033.30it/s]100%|██████████| 39434/39434 [00:00<00:00, 189700.75it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1387336254119873 seconds.
Run epoch 1
Epoch 1 ends in 0.2039165496826172 seconds.
39434 sentences created
mode 1: time used = 0.25469326972961426
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 49%|████▉     | 19401/39434 [00:00<00:00, 194003.71it/s] 92%|█████████▏| 36172/39434 [00:00<00:00, 185288.12it/s]100%|██████████| 39434/39434 [00:00<00:00, 179546.44it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13650178909301758 seconds.
Run epoch 1
Epoch 1 ends in 0.19483017921447754 seconds.
39434 sentences created
mode 1: time used = 0.26879072189331055
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 53%|█████▎    | 20902/39434 [00:00<00:00, 209014.22it/s]100%|██████████| 39434/39434 [00:00<00:00, 199223.79it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.12460970878601074 seconds.
Run epoch 1
Epoch 1 ends in 0.1875011920928955 seconds.
39434 sentences created
mode 1: time used = 0.24704575538635254
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 54%|█████▎    | 21151/39434 [00:00<00:00, 211503.65it/s]100%|██████████| 39434/39434 [00:00<00:00, 211786.66it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1293785572052002 seconds.
Run epoch 1
Epoch 1 ends in 0.1977849006652832 seconds.
39434 sentences created
mode 1: time used = 0.23059630393981934
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 26%|██▋       | 10380/39434 [00:00<00:00, 103798.37it/s] 70%|██████▉   | 27418/39434 [00:00<00:00, 117583.02it/s]100%|██████████| 39434/39434 [00:00<00:00, 151927.95it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13269591331481934 seconds.
Run epoch 1
Epoch 1 ends in 0.23630523681640625 seconds.
39434 sentences created
mode 1: time used = 0.30559515953063965
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|█████     | 19814/39434 [00:00<00:00, 198135.94it/s]100%|██████████| 39434/39434 [00:00<00:00, 198999.44it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13344359397888184 seconds.
Run epoch 1
Epoch 1 ends in 0.19353103637695312 seconds.
39434 sentences created
mode 1: time used = 0.24753761291503906
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 51%|█████     | 20195/39434 [00:00<00:00, 201942.49it/s] 99%|█████████▉| 39134/39434 [00:00<00:00, 198005.05it/s]100%|██████████| 39434/39434 [00:00<00:00, 195519.99it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13083648681640625 seconds.
Run epoch 1
Epoch 1 ends in 0.19772672653198242 seconds.
39434 sentences created
mode 1: time used = 0.2483065128326416
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|████▉     | 19618/39434 [00:00<00:00, 196175.04it/s] 94%|█████████▎| 36969/39434 [00:00<00:00, 188774.50it/s]100%|██████████| 39434/39434 [00:00<00:00, 183021.91it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13759231567382812 seconds.
Run epoch 1
Epoch 1 ends in 0.20363569259643555 seconds.
39434 sentences created
mode 1: time used = 0.27304840087890625
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 54%|█████▍    | 21254/39434 [00:00<00:00, 210990.83it/s]100%|██████████| 39434/39434 [00:00<00:00, 210553.22it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.12263631820678711 seconds.
Run epoch 1
Epoch 1 ends in 0.18940329551696777 seconds.
39434 sentences created
mode 1: time used = 0.23160696029663086
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 49%|████▉     | 19347/39434 [00:00<00:00, 193463.27it/s] 97%|█████████▋| 38056/39434 [00:00<00:00, 191505.37it/s]100%|██████████| 39434/39434 [00:00<00:00, 188915.74it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13306403160095215 seconds.
Run epoch 1
Epoch 1 ends in 0.19226717948913574 seconds.
39434 sentences created
mode 1: time used = 0.2591667175292969
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 22%|██▏       | 8820/39434 [00:00<00:00, 88198.19it/s] 44%|████▍     | 17337/39434 [00:00<00:00, 87266.88it/s] 60%|█████▉    | 23641/39434 [00:00<00:00, 75877.73it/s] 76%|███████▌  | 29844/39434 [00:00<00:00, 71112.66it/s] 97%|█████████▋| 38368/39434 [00:00<00:00, 74833.17it/s]100%|██████████| 39434/39434 [00:00<00:00, 75727.82it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.2877044677734375 seconds.
Run epoch 1
Epoch 1 ends in 0.39224886894226074 seconds.
39434 sentences created
mode 1: time used = 0.6335234642028809
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 52%|█████▏    | 20652/39434 [00:00<00:00, 206519.70it/s]100%|██████████| 39434/39434 [00:00<00:00, 199665.35it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 256, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [256, 256, 256], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.12890625 seconds.
Run epoch 1
Epoch 1 ends in 0.19171452522277832 seconds.
39434 sentences created
mode 1: time used = 0.24183988571166992
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 46%|████▋     | 18311/39434 [00:00<00:00, 183106.25it/s] 89%|████████▉ | 34998/39434 [00:00<00:00, 176639.06it/s]100%|██████████| 39434/39434 [00:00<00:00, 172467.09it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.15211749076843262 seconds.
Run epoch 1
Epoch 1 ends in 0.2182445526123047 seconds.
39434 sentences created
mode 1: time used = 0.282041072845459
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 50%|████▉     | 19522/39434 [00:00<00:00, 195216.46it/s] 95%|█████████▌| 37577/39434 [00:00<00:00, 190571.33it/s]100%|██████████| 39434/39434 [00:00<00:00, 186555.44it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13595056533813477 seconds.
Run epoch 1
Epoch 1 ends in 0.20582365989685059 seconds.
39434 sentences created
mode 1: time used = 0.2622249126434326
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 38%|███▊      | 14927/39434 [00:00<00:00, 148926.08it/s] 68%|██████▊   | 26901/39434 [00:00<00:00, 138243.78it/s]100%|██████████| 39434/39434 [00:00<00:00, 139564.16it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13622570037841797 seconds.
Run epoch 1
Epoch 1 ends in 0.23912549018859863 seconds.
39434 sentences created
mode 1: time used = 0.34371399879455566
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 33%|███▎      | 12954/39434 [00:00<00:00, 129528.08it/s] 55%|█████▌    | 21861/39434 [00:00<00:00, 113992.12it/s] 88%|████████▊ | 34617/39434 [00:00<00:00, 117747.44it/s]100%|██████████| 39434/39434 [00:00<00:00, 116575.53it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.17859482765197754 seconds.
Run epoch 1
Epoch 1 ends in 0.26899242401123047 seconds.
39434 sentences created
mode 1: time used = 0.3934762477874756
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 52%|█████▏    | 20312/39434 [00:00<00:00, 203110.99it/s] 98%|█████████▊| 38465/39434 [00:00<00:00, 196113.80it/s]100%|██████████| 39434/39434 [00:00<00:00, 192563.95it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1364283561706543 seconds.
Run epoch 1
Epoch 1 ends in 0.18874788284301758 seconds.
39434 sentences created
mode 1: time used = 0.25049805641174316
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 47%|████▋     | 18554/39434 [00:00<00:00, 185536.20it/s] 93%|█████████▎| 36556/39434 [00:00<00:00, 183844.74it/s]100%|██████████| 39434/39434 [00:00<00:00, 182174.65it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.14684820175170898 seconds.
Run epoch 1
Epoch 1 ends in 0.2175748348236084 seconds.
39434 sentences created
mode 1: time used = 0.26755475997924805
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 48%|████▊     | 18754/39434 [00:00<00:00, 187535.71it/s] 95%|█████████▍| 37335/39434 [00:00<00:00, 187012.54it/s]100%|██████████| 39434/39434 [00:00<00:00, 186172.63it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.13313007354736328 seconds.
Run epoch 1
Epoch 1 ends in 0.20196294784545898 seconds.
39434 sentences created
mode 1: time used = 0.2640209197998047
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 46%|████▌     | 18209/39434 [00:00<00:00, 182087.13it/s] 87%|████████▋ | 34217/39434 [00:00<00:00, 174872.68it/s]100%|██████████| 39434/39434 [00:00<00:00, 169874.55it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.14467287063598633 seconds.
Run epoch 1
Epoch 1 ends in 0.21181726455688477 seconds.
39434 sentences created
mode 1: time used = 0.28662872314453125
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 48%|████▊     | 19047/39434 [00:00<00:00, 190458.83it/s] 96%|█████████▌| 37791/39434 [00:00<00:00, 189542.39it/s]100%|██████████| 39434/39434 [00:00<00:00, 188092.27it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.03, 'early_stopping': 20, 'hiddens': [512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.14862394332885742 seconds.
Run epoch 1
Epoch 1 ends in 0.24339723587036133 seconds.
39434 sentences created
mode 1: time used = 0.26113200187683105
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 46%|████▌     | 18038/39434 [00:00<00:00, 180378.02it/s] 90%|█████████ | 35519/39434 [00:00<00:00, 178669.99it/s]100%|██████████| 39434/39434 [00:00<00:00, 177617.56it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.1526033878326416 seconds.
Run epoch 1
Epoch 1 ends in 0.22966313362121582 seconds.
39434 sentences created
mode 1: time used = 0.27311062812805176
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 53%|█████▎    | 20816/39434 [00:00<00:00, 208151.27it/s]100%|██████████| 39434/39434 [00:00<00:00, 201310.34it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.01, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.12561345100402832 seconds.
Run epoch 1
Epoch 1 ends in 0.18914794921875 seconds.
39434 sentences created
mode 1: time used = 0.24229764938354492
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
  0%|          | 0/39434 [00:00<?, ?it/s] 49%|████▉     | 19481/39434 [00:00<00:00, 194804.61it/s] 99%|█████████▉| 39082/39434 [00:00<00:00, 195163.89it/s]100%|██████████| 39434/39434 [00:00<00:00, 195314.97it/s]
Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 265, in <module>
    main(parse_args())
  File "/home/duyufeng/OpenNE/src/openne/__main__.py", line 249, in main
    res = task.train(model, graph)  # train
  File "/home/duyufeng/OpenNE/src/openne/tasks/tasks.py", line 35, in train
    res = model(graph, **self.train_kwargs())
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/models.py", line 236, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 111, in train_model
    output, train_loss, __ = self.evaluate()
  File "/home/duyufeng/OpenNE/src/openne/models/ss_nodemodel.py", line 151, in evaluate
    loss = self.model(x, pos, neg)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 40, in forward
    hx = self.embed(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_model.py", line 37, in embed
    return self.encoder(x)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 83, in forward
    self.full_embeddings = _forward(x)
  File "/home/duyufeng/OpenNE/src/openne/models/ss_encoder.py", line 58, in _forward
    hx = layer(hx)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/duyufeng/.local/lib/python3.6/site-packages/torch/nn/modules/module.py", line 722, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/duyufeng/OpenNE/src/openne/models/layers/graph_conv.py", line 55, in forward
    support = torch.mm(self.support[i], pre_sup)
RuntimeError: !t.is_cuda() INTERNAL ASSERT FAILED at "/pytorch/aten/src/ATen/native/sparse/SparseTensorMath.cpp":822, please report a bug to PyTorch. 
actual args: {'cpu': False, 'devices': [0], 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 512, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.02, 'early_stopping': 20, 'hiddens': [512, 512, 512], 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'readout': 'mean', 'est': 'jsd'}
Loading PubMed Dataset from root dir: /home/duyufeng/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
encoder = gcn
generating anchors and positive samples...
5 2 2
Walk iteration:
Run epoch 0
Epoch 0 ends in 0.15953564643859863 seconds.
Run epoch 1
Epoch 1 ends in 0.20610904693603516 seconds.
39434 sentences created
mode 1: time used = 0.2481553554534912
anchors and positive samples of len 552076 generated
repeating 1 times...
generating negative samples with random...
negative samples generated
sampler length = 552076 552076 552076
total iter: 500
