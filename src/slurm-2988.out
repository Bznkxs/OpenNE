[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3066.09it/s]100%|██████████| 1500/1500 [00:00<00:00, 5521.84it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3030.73it/s] 82%|████████▏ | 1644/2000 [00:00<00:00, 3856.85it/s]100%|██████████| 2000/2000 [00:00<00:00, 6139.24it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.43943; Allocated: 57209856; Reserved: 113246208; time used = 0.8584098815917969s
epoch 10: train_loss: 0.38423; Allocated: 57209856; Reserved: 113246208; time used = 0.8551630973815918s
epoch 15: train_loss: 0.37751; Allocated: 57209856; Reserved: 113246208; time used = 0.8567469120025635s
epoch 20: train_loss: 0.36318; Allocated: 57209856; Reserved: 113246208; time used = 0.8542721271514893s
epoch 25: train_loss: 0.36060; Allocated: 57209856; Reserved: 113246208; time used = 0.8546552658081055s
epoch 30: train_loss: 0.35964; Allocated: 57209856; Reserved: 113246208; time used = 0.8562536239624023s
epoch 35: train_loss: 0.35436; Allocated: 57209856; Reserved: 113246208; time used = 0.8502771854400635s
epoch 40: train_loss: 0.35212; Allocated: 57209856; Reserved: 113246208; time used = 0.856865406036377s
epoch 45: train_loss: 0.34793; Allocated: 57209856; Reserved: 113246208; time used = 0.8527729511260986s
epoch 50: train_loss: 0.34814; Allocated: 57209856; Reserved: 113246208; time used = 1.0113911628723145s
epoch 55: train_loss: 0.34480; Allocated: 57209856; Reserved: 113246208; time used = 0.8569200038909912s
epoch 60: train_loss: 0.34564; Allocated: 57209856; Reserved: 113246208; time used = 0.8527023792266846s
epoch 65: train_loss: 0.34256; Allocated: 57209856; Reserved: 113246208; time used = 0.8538434505462646s
epoch 70: train_loss: 0.34298; Allocated: 57209856; Reserved: 113246208; time used = 0.8547451496124268s
epoch 75: train_loss: 0.34250; Allocated: 57209856; Reserved: 113246208; time used = 0.855074405670166s
epoch 80: train_loss: 0.33995; Allocated: 57209856; Reserved: 113246208; time used = 0.8543925285339355s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19.459657430648804.
Training classifier using 20.00% nodes...
{'micro': 0.6947955390334573, 'macro': 0.6391970462167974, 'samples': 0.7021036814425244, 'weighted': 0.6859963734067809, 'accuracy': 0.7021036814425244}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3022.95it/s]100%|██████████| 1500/1500 [00:00<00:00, 5487.57it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 761.51057; Allocated: 759808; Reserved: 12582912; time used = 7.429018259048462s
epoch 10: train_loss: 2039.04463; Allocated: 759808; Reserved: 12582912; time used = 7.213815927505493s
epoch 15: train_loss: 1392.79512; Allocated: 759808; Reserved: 12582912; time used = 7.264691114425659s
epoch 20: train_loss: 11.35302; Allocated: 759808; Reserved: 12582912; time used = 7.246184825897217s
epoch 25: train_loss: 228.92886; Allocated: 759808; Reserved: 12582912; time used = 7.3578596115112305s
epoch 30: train_loss: 627.73834; Allocated: 759808; Reserved: 12582912; time used = 7.271890163421631s
epoch 35: train_loss: 455.83160; Allocated: 759808; Reserved: 12582912; time used = 7.222971439361572s
epoch 40: train_loss: 304.91790; Allocated: 759808; Reserved: 12582912; time used = 7.27647066116333s
epoch 45: train_loss: 257.43356; Allocated: 759808; Reserved: 12582912; time used = 7.401588439941406s
epoch 50: train_loss: 186.15785; Allocated: 759808; Reserved: 12582912; time used = 7.252810478210449s
epoch 55: train_loss: 111.69005; Allocated: 759808; Reserved: 12582912; time used = 7.229276418685913s
epoch 60: train_loss: 252.92226; Allocated: 759808; Reserved: 12582912; time used = 7.40978479385376s
epoch 65: train_loss: 214.55633; Allocated: 759808; Reserved: 12582912; time used = 7.210097074508667s
epoch 70: train_loss: 57.83692; Allocated: 759808; Reserved: 12582912; time used = 7.229191541671753s
epoch 75: train_loss: 43.65901; Allocated: 759808; Reserved: 12582912; time used = 7.190133094787598s
epoch 80: train_loss: 147.40101; Allocated: 759808; Reserved: 12582912; time used = 7.350701332092285s
epoch 85: train_loss: 117.24978; Allocated: 759808; Reserved: 12582912; time used = 7.239748954772949s
epoch 90: train_loss: 50.41748; Allocated: 759808; Reserved: 12582912; time used = 7.250534296035767s
epoch 95: train_loss: 44.66882; Allocated: 759808; Reserved: 12582912; time used = 7.434052228927612s
epoch 100: train_loss: 70.87182; Allocated: 759808; Reserved: 12582912; time used = 7.1947667598724365s
epoch 105: train_loss: 54.53327; Allocated: 759808; Reserved: 12582912; time used = 7.219194412231445s
epoch 110: train_loss: 44.91129; Allocated: 759808; Reserved: 12582912; time used = 7.239845037460327s
epoch 115: train_loss: 38.20084; Allocated: 759808; Reserved: 12582912; time used = 7.408447742462158s
epoch 120: train_loss: 35.32153; Allocated: 759808; Reserved: 12582912; time used = 7.2190022468566895s
epoch 125: train_loss: 28.66350; Allocated: 759808; Reserved: 12582912; time used = 7.234693288803101s
epoch 130: train_loss: 28.34630; Allocated: 759808; Reserved: 12582912; time used = 7.2081451416015625s
epoch 135: train_loss: 22.63712; Allocated: 759808; Reserved: 12582912; time used = 7.390703201293945s
epoch 140: train_loss: 21.50173; Allocated: 759808; Reserved: 12582912; time used = 7.19767427444458s
epoch 145: train_loss: 17.50562; Allocated: 759808; Reserved: 12582912; time used = 7.202536344528198s
epoch 150: train_loss: 15.55390; Allocated: 759808; Reserved: 12582912; time used = 7.459947824478149s
epoch 155: train_loss: 12.39762; Allocated: 759808; Reserved: 12582912; time used = 7.22679591178894s
epoch 160: train_loss: 12.23648; Allocated: 759808; Reserved: 12582912; time used = 7.2399516105651855s
epoch 165: train_loss: 9.66730; Allocated: 759808; Reserved: 12582912; time used = 7.291821479797363s
epoch 170: train_loss: 3.27632; Allocated: 759808; Reserved: 12582912; time used = 7.449078798294067s
epoch 175: train_loss: 8.59184; Allocated: 759808; Reserved: 12582912; time used = 7.202899932861328s
epoch 180: train_loss: 4.27173; Allocated: 759808; Reserved: 12582912; time used = 7.20076584815979s
epoch 185: train_loss: 29.87757; Allocated: 759808; Reserved: 12582912; time used = 7.384173393249512s
epoch 190: train_loss: 18.59214; Allocated: 759808; Reserved: 12582912; time used = 7.252277135848999s
epoch 195: train_loss: 8.83845; Allocated: 759808; Reserved: 12582912; time used = 7.255303859710693s
epoch 200: train_loss: 9.00104; Allocated: 759808; Reserved: 12582912; time used = 7.220855236053467s
epoch 205: train_loss: 3.67158; Allocated: 759808; Reserved: 12582912; time used = 7.39560341835022s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 307.6261022090912.
Training classifier using 80.00% nodes...
{'micro': 0.47333333333333333, 'macro': 0.4682539682539682, 'samples': 0.47333333333333333, 'weighted': 0.46520634920634923, 'accuracy': 0.47333333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2492.99it/s]100%|██████████| 1500/1500 [00:00<00:00, 4732.35it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 8.27318; Allocated: 722432; Reserved: 6291456; time used = 0.8816959857940674s
epoch 10: train_loss: 3.81924; Allocated: 722432; Reserved: 6291456; time used = 0.808795690536499s
epoch 15: train_loss: 1.01766; Allocated: 722432; Reserved: 6291456; time used = 0.8087520599365234s
epoch 20: train_loss: 0.91990; Allocated: 722432; Reserved: 6291456; time used = 0.8169674873352051s
epoch 25: train_loss: 0.93264; Allocated: 722432; Reserved: 6291456; time used = 0.8115837574005127s
epoch 30: train_loss: 0.89580; Allocated: 722432; Reserved: 6291456; time used = 0.8349831104278564s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8.43940782546997.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8380681818181819, 'samples': 0.8421052631578947, 'weighted': 0.8421052631578947, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.36192; Allocated: 1077248; Reserved: 8388608; time used = 6.420892000198364s
epoch 10: train_loss: 1.30851; Allocated: 1077248; Reserved: 8388608; time used = 6.263575553894043s
epoch 15: train_loss: 1.23548; Allocated: 1077248; Reserved: 8388608; time used = 6.385818719863892s
epoch 20: train_loss: 1.23692; Allocated: 1077248; Reserved: 8388608; time used = 6.4197564125061035s
epoch 25: train_loss: 1.27472; Allocated: 1077248; Reserved: 8388608; time used = 6.276234149932861s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 34.93348836898804.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.37556561085972856, 'samples': 0.5362318840579711, 'weighted': 0.39851793560233467, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3052.27it/s]100%|██████████| 1000/1000 [00:00<00:00, 4363.62it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69195; Allocated: 425984; Reserved: 8388608; time used = 181.58290815353394s
epoch 10: train_loss: 0.67679; Allocated: 425984; Reserved: 6291456; time used = 184.14209580421448s
epoch 15: train_loss: 0.56476; Allocated: 425984; Reserved: 6291456; time used = 182.36702680587769s
epoch 20: train_loss: 0.49447; Allocated: 425984; Reserved: 6291456; time used = 185.90581631660461s
epoch 25: train_loss: 0.47285; Allocated: 425984; Reserved: 6291456; time used = 186.73215508460999s
epoch 30: train_loss: 0.46297; Allocated: 425984; Reserved: 6291456; time used = 182.83018946647644s
epoch 35: train_loss: 0.45309; Allocated: 425984; Reserved: 6291456; time used = 183.0799469947815s
epoch 40: train_loss: 0.44536; Allocated: 425984; Reserved: 8388608; time used = 178.4510395526886s
epoch 45: train_loss: 0.43926; Allocated: 425984; Reserved: 6291456; time used = 183.04876136779785s
epoch 50: train_loss: 0.43109; Allocated: 425984; Reserved: 8388608; time used = 182.47302722930908s
epoch 55: train_loss: 0.42606; Allocated: 425984; Reserved: 6291456; time used = 183.39335012435913s
epoch 60: train_loss: 0.42194; Allocated: 425984; Reserved: 6291456; time used = 188.10278153419495s
epoch 65: train_loss: 0.41812; Allocated: 425984; Reserved: 6291456; time used = 184.6252157688141s
epoch 70: train_loss: 0.41476; Allocated: 425984; Reserved: 6291456; time used = 183.89596319198608s
epoch 75: train_loss: 0.41563; Allocated: 425984; Reserved: 8388608; time used = 185.32771348953247s
epoch 80: train_loss: 0.41344; Allocated: 425984; Reserved: 6291456; time used = 187.6286654472351s
epoch 85: train_loss: 0.41077; Allocated: 425984; Reserved: 6291456; time used = 186.0828173160553s
epoch 90: train_loss: 0.41113; Allocated: 425984; Reserved: 6291456; time used = 181.1320013999939s
epoch 95: train_loss: 0.41046; Allocated: 425984; Reserved: 6291456; time used = 181.86110830307007s
epoch 100: train_loss: 0.40781; Allocated: 425984; Reserved: 6291456; time used = 181.5243420600891s
epoch 105: train_loss: 0.40785; Allocated: 425984; Reserved: 6291456; time used = 185.27356433868408s
epoch 110: train_loss: 0.40849; Allocated: 425984; Reserved: 6291456; time used = 182.68027663230896s
epoch 115: train_loss: 0.40818; Allocated: 425984; Reserved: 8388608; time used = 182.98561882972717s
epoch 120: train_loss: 0.40665; Allocated: 425984; Reserved: 8388608; time used = 187.66832637786865s
epoch 125: train_loss: 0.41006; Allocated: 425984; Reserved: 6291456; time used = 181.76399970054626s
epoch 130: train_loss: 0.40533; Allocated: 425984; Reserved: 6291456; time used = 184.47867274284363s
epoch 135: train_loss: 0.40559; Allocated: 425984; Reserved: 6291456; time used = 180.21510577201843s
epoch 140: train_loss: 0.40568; Allocated: 425984; Reserved: 8388608; time used = 184.6227457523346s
epoch 145: train_loss: 0.40596; Allocated: 425984; Reserved: 8388608; time used = 184.57005095481873s
epoch 150: train_loss: 0.40420; Allocated: 425984; Reserved: 6291456; time used = 183.09859991073608s
epoch 155: train_loss: 0.40703; Allocated: 425984; Reserved: 8388608; time used = 183.63951563835144s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 5845.240214347839.
Training classifier using 80.00% nodes...
{'micro': 0.72, 'macro': 0.71997199719972, 'samples': 0.72, 'weighted': 0.72002800280028, 'accuracy': 0.72}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.39959; Allocated: 41351168; Reserved: 62914560; time used = 2.5136749744415283s
epoch 10: train_loss: 0.36346; Allocated: 41351168; Reserved: 62914560; time used = 2.7074122428894043s
epoch 15: train_loss: 0.34825; Allocated: 41351168; Reserved: 62914560; time used = 2.4739577770233154s
epoch 20: train_loss: 0.33938; Allocated: 41351168; Reserved: 62914560; time used = 2.5300211906433105s
epoch 25: train_loss: 0.33331; Allocated: 41351168; Reserved: 62914560; time used = 2.543586015701294s
epoch 30: train_loss: 0.33373; Allocated: 41351168; Reserved: 62914560; time used = 2.672192096710205s
epoch 35: train_loss: 0.32840; Allocated: 41351168; Reserved: 62914560; time used = 2.4948291778564453s
epoch 40: train_loss: 0.32380; Allocated: 41351168; Reserved: 62914560; time used = 2.5180981159210205s
epoch 45: train_loss: 0.32772; Allocated: 41351168; Reserved: 62914560; time used = 2.729336977005005s
epoch 50: train_loss: 0.32737; Allocated: 41351168; Reserved: 62914560; time used = 2.5592780113220215s
epoch 55: train_loss: 0.33006; Allocated: 41351168; Reserved: 62914560; time used = 2.5451488494873047s
epoch 60: train_loss: 0.33293; Allocated: 41351168; Reserved: 62914560; time used = 2.492767333984375s
epoch 65: train_loss: 0.32248; Allocated: 41351168; Reserved: 62914560; time used = 2.7168188095092773s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 37.73734951019287.
Training classifier using 20.00% nodes...
{'micro': 0.7715861544313427, 'macro': 0.7689215084755193, 'samples': 0.7715861544313427, 'weighted': 0.7707549216048264, 'accuracy': 0.7715861544313427}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3062.81it/s]100%|██████████| 1500/1500 [00:00<00:00, 5521.94it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.68985; Allocated: 428544; Reserved: 6291456; time used = 12.252523422241211s
epoch 10: train_loss: 0.67420; Allocated: 428544; Reserved: 8388608; time used = 12.331697463989258s
epoch 15: train_loss: 0.66691; Allocated: 428544; Reserved: 8388608; time used = 12.203360795974731s
epoch 20: train_loss: 0.65768; Allocated: 428544; Reserved: 6291456; time used = 12.332080841064453s
epoch 25: train_loss: 0.64446; Allocated: 428544; Reserved: 10485760; time used = 12.240254163742065s
epoch 30: train_loss: 0.64225; Allocated: 428544; Reserved: 8388608; time used = 12.379891395568848s
epoch 35: train_loss: 0.59613; Allocated: 428544; Reserved: 6291456; time used = 12.172664165496826s
epoch 40: train_loss: 0.60954; Allocated: 428544; Reserved: 6291456; time used = 12.28062915802002s
epoch 45: train_loss: 0.48439; Allocated: 428544; Reserved: 6291456; time used = 12.394320011138916s
epoch 50: train_loss: 0.45153; Allocated: 428544; Reserved: 6291456; time used = 12.204394102096558s
epoch 55: train_loss: 0.37678; Allocated: 428544; Reserved: 6291456; time used = 12.136938333511353s
epoch 60: train_loss: 0.38750; Allocated: 428544; Reserved: 6291456; time used = 12.27175760269165s
epoch 65: train_loss: 0.51594; Allocated: 428544; Reserved: 6291456; time used = 12.27053427696228s
epoch 70: train_loss: 0.41488; Allocated: 428544; Reserved: 6291456; time used = 12.23762559890747s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 179.84178376197815.
Training classifier using 80.00% nodes...
{'micro': 0.33, 'macro': 0.26713528664652036, 'samples': 0.33, 'weighted': 0.2591212280471248, 'accuracy': 0.33}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2489.95it/s]100%|██████████| 1500/1500 [00:00<00:00, 4729.88it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.150856018066406s
epoch 10: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.0573525428772s
epoch 15: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.80163025856018s
epoch 20: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.836827516555786s
epoch 25: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.93805909156799s
epoch 30: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.78625226020813s
epoch 35: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.91367220878601s
epoch 40: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 51.184125900268555s
epoch 45: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.48982501029968s
epoch 50: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.9442024230957s
epoch 55: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.94047164916992s
epoch 60: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 50.610243797302246s
epoch 65: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.18999648094177s
epoch 70: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.460519552230835s
epoch 75: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.92257571220398s
epoch 80: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 51.08013105392456s
epoch 85: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.33742070198059s
epoch 90: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.80389142036438s
epoch 95: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 52.81314468383789s
epoch 100: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.604371070861816s
epoch 105: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.247538328170776s
epoch 110: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.67486643791199s
epoch 115: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 50.563955307006836s
epoch 120: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.539546966552734s
epoch 125: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.875025272369385s
epoch 130: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.79884147644043s
epoch 135: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.660606384277344s
epoch 140: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.86800718307495s
epoch 145: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.84236431121826s
epoch 150: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 50.80675911903381s
epoch 155: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.666563749313354s
epoch 160: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.00806665420532s
epoch 165: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.630391359329224s
epoch 170: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.8990318775177s
epoch 175: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.81899046897888s
epoch 180: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.62701940536499s
epoch 185: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.56971478462219s
epoch 190: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.867486000061035s
epoch 195: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.66465425491333s
epoch 200: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.99419331550598s
epoch 205: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.30409598350525s
epoch 210: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.295172929763794s
epoch 215: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.11125087738037s
epoch 220: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.214170694351196s
epoch 225: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 51.093512296676636s
epoch 230: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.92698073387146s
epoch 235: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 51.10244274139404s
epoch 240: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 51.312214851379395s
epoch 245: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 50.9077672958374s
epoch 250: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.329416036605835s
epoch 255: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.07176733016968s
epoch 260: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 51.05636215209961s
epoch 265: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.87835097312927s
epoch 270: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 51.029093980789185s
epoch 275: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.00667595863342s
epoch 280: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.0351836681366s
epoch 285: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.90927076339722s
epoch 290: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.887946128845215s
epoch 295: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 52.43520426750183s
epoch 300: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.8474543094635s
epoch 305: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.55470943450928s
epoch 310: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.08997702598572s
epoch 315: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.53452920913696s
epoch 320: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 50.85467529296875s
epoch 325: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 50.7407169342041s
epoch 330: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.851839542388916s
epoch 335: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 50.64374589920044s
epoch 340: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 50.602529525756836s
epoch 345: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 50.837945222854614s
epoch 350: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 50.576916456222534s
epoch 355: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.965818881988525s
epoch 360: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.75057506561279s
epoch 365: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.70849108695984s
epoch 370: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.555253982543945s
epoch 375: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 51.06998324394226s
epoch 380: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.357905626297s
epoch 385: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.875738859176636s
epoch 390: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.985172510147095s
epoch 395: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.90835618972778s
epoch 400: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.85374975204468s
epoch 405: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.06715941429138s
epoch 410: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.895822286605835s
epoch 415: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 51.03430891036987s
epoch 420: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.681944847106934s
epoch 425: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.57866144180298s
epoch 430: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.630857944488525s
epoch 435: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.62196922302246s
epoch 440: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.89635229110718s
epoch 445: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.94719171524048s
epoch 450: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.56530523300171s
epoch 455: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.725117921829224s
epoch 460: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 51.38218975067139s
epoch 465: train_loss: 0.69315; Allocated: 483840; Reserved: 6291456; time used = 50.73169016838074s
epoch 470: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.56943964958191s
epoch 475: train_loss: 0.69315; Allocated: 483840; Reserved: 8388608; time used = 50.66233849525452s
epoch 480: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 51.01779747009277s
epoch 485: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 51.04370331764221s
epoch 490: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 50.657833099365234s
epoch 495: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 51.10922861099243s
epoch 500: train_loss: 0.69315; Allocated: 483840; Reserved: 4194304; time used = 52.72751212120056s
Finished training. Time used = 5095.140957593918.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 14198.56072; Allocated: 934400; Reserved: 29360128; time used = 1.2083299160003662s
epoch 10: train_loss: 8241.33251; Allocated: 934400; Reserved: 29360128; time used = 1.2117953300476074s
epoch 15: train_loss: 1548.85599; Allocated: 934400; Reserved: 8388608; time used = 1.2159626483917236s
epoch 20: train_loss: 299.67427; Allocated: 934400; Reserved: 8388608; time used = 1.2047858238220215s
epoch 25: train_loss: 177.04418; Allocated: 934400; Reserved: 8388608; time used = 1.207310676574707s
epoch 30: train_loss: 62.81349; Allocated: 934400; Reserved: 8388608; time used = 1.211268424987793s
epoch 35: train_loss: 12.82072; Allocated: 934400; Reserved: 8388608; time used = 1.212385654449463s
epoch 40: train_loss: 12.70999; Allocated: 934400; Reserved: 8388608; time used = 1.2112252712249756s
epoch 45: train_loss: 11.52899; Allocated: 934400; Reserved: 10485760; time used = 1.2194373607635498s
epoch 50: train_loss: 4.63800; Allocated: 934400; Reserved: 29360128; time used = 1.207625150680542s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.276083707809448.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.731764705882353, 'samples': 0.7631578947368421, 'weighted': 0.7462538699690403, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3092.64it/s] 83%|████████▎ | 1665/2000 [00:00<00:00, 3935.30it/s]100%|██████████| 2000/2000 [00:00<00:00, 6262.70it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.50974; Allocated: 3785216; Reserved: 31457280; time used = 777.3058712482452s
epoch 10: train_loss: 1.41869; Allocated: 3785216; Reserved: 33554432; time used = 779.0691397190094s
epoch 15: train_loss: 1.40325; Allocated: 3785216; Reserved: 33554432; time used = 777.5713274478912s
epoch 20: train_loss: 1.39067; Allocated: 3785216; Reserved: 31457280; time used = 778.1353130340576s
epoch 25: train_loss: 1.38867; Allocated: 3785216; Reserved: 31457280; time used = 777.3596196174622s
epoch 30: train_loss: 1.38568; Allocated: 3785216; Reserved: 31457280; time used = 780.5189023017883s
epoch 35: train_loss: 1.38276; Allocated: 3785216; Reserved: 31457280; time used = 780.3484447002411s
epoch 40: train_loss: 1.37674; Allocated: 3785216; Reserved: 31457280; time used = 780.5100808143616s
epoch 45: train_loss: 1.36337; Allocated: 3785216; Reserved: 31457280; time used = 780.2099506855011s
epoch 50: train_loss: 1.34676; Allocated: 3785216; Reserved: 31457280; time used = 779.4497866630554s
epoch 55: train_loss: 1.33199; Allocated: 3785216; Reserved: 33554432; time used = 781.3025782108307s
epoch 60: train_loss: 1.35638; Allocated: 3785216; Reserved: 33554432; time used = 780.185065984726s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9355.583673715591.
Training classifier using 80.00% nodes...
{'micro': 0.595, 'macro': 0.5691374770605602, 'samples': 0.595, 'weighted': 0.5659706375169553, 'accuracy': 0.595}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2458.19it/s]100%|██████████| 1000/1000 [00:00<00:00, 3646.43it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.799147844314575s
epoch 10: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.846447944641113s
epoch 15: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 6.025530815124512s
epoch 20: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.828140020370483s
epoch 25: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.805311441421509s
epoch 30: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.79418158531189s
epoch 35: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.818190574645996s
epoch 40: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.8274335861206055s
epoch 45: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.8664233684539795s
epoch 50: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 6.031059503555298s
epoch 55: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.816661834716797s
epoch 60: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.8040220737457275s
epoch 65: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.828008651733398s
epoch 70: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.783189535140991s
epoch 75: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.786048412322998s
epoch 80: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.7970545291900635s
epoch 85: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.980225086212158s
epoch 90: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.812288761138916s
epoch 95: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.80767297744751s
epoch 100: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.806987762451172s
epoch 105: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.790817737579346s
epoch 110: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.815530061721802s
epoch 115: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.80962872505188s
epoch 120: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 6.012778282165527s
epoch 125: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.8086936473846436s
epoch 130: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.808796167373657s
epoch 135: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.80759596824646s
epoch 140: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.818530797958374s
epoch 145: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.89654016494751s
epoch 150: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.88330078125s
epoch 155: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 6.029063701629639s
epoch 160: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.878841876983643s
epoch 165: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.848272323608398s
epoch 170: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 6.023421764373779s
epoch 175: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 6.844796419143677s
epoch 180: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.85906720161438s
epoch 185: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.784917116165161s
epoch 190: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 6.00458288192749s
epoch 195: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.777629375457764s
epoch 200: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.810289144515991s
epoch 205: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.816429138183594s
epoch 210: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.958057880401611s
epoch 215: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.690454959869385s
epoch 220: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.7431371212005615s
epoch 225: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.872940540313721s
epoch 230: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.682255983352661s
epoch 235: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.697527885437012s
epoch 240: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.944599151611328s
epoch 245: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.862266302108765s
epoch 250: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.661831855773926s
epoch 255: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.6862194538116455s
epoch 260: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.82935357093811s
epoch 265: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.6587233543396s
epoch 270: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.678393363952637s
epoch 275: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.669450521469116s
epoch 280: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.661519765853882s
epoch 285: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.691790342330933s
epoch 290: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.666360855102539s
epoch 295: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.825220346450806s
epoch 300: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.680450201034546s
epoch 305: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.671144247055054s
epoch 310: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.658751964569092s
epoch 315: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.678087472915649s
epoch 320: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.688894510269165s
epoch 325: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.66477370262146s
epoch 330: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.862555980682373s
epoch 335: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.649758815765381s
epoch 340: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.674041032791138s
epoch 345: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.662440061569214s
epoch 350: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.6665894985198975s
epoch 355: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.6808695793151855s
epoch 360: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.6647703647613525s
epoch 365: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.862159252166748s
epoch 370: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.687112808227539s
epoch 375: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.6580870151519775s
epoch 380: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.66007661819458s
epoch 385: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.680502653121948s
epoch 390: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.6692283153533936s
epoch 395: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.6617395877838135s
epoch 400: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.8076605796813965s
epoch 405: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.67268180847168s
epoch 410: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.678638458251953s
epoch 415: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.6954185962677s
epoch 420: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.65174674987793s
epoch 425: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.685988426208496s
epoch 430: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.653580665588379s
epoch 435: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.851667165756226s
epoch 440: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.683618783950806s
epoch 445: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.663057565689087s
epoch 450: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.6615307331085205s
epoch 455: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.678955078125s
epoch 460: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.662393569946289s
epoch 465: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.657071590423584s
epoch 470: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.8612260818481445s
epoch 475: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.662508010864258s
epoch 480: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.688146352767944s
epoch 485: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.660699367523193s
epoch 490: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.6577417850494385s
epoch 495: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.691967725753784s
epoch 500: train_loss: 0.69315; Allocated: 828928; Reserved: 10485760; time used = 5.669156312942505s
Finished training. Time used = 581.0026857852936.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.67956; Allocated: 1204224; Reserved: 8388608; time used = 1.819615364074707s
epoch 10: train_loss: 0.48163; Allocated: 1204224; Reserved: 8388608; time used = 1.7828936576843262s
epoch 15: train_loss: 0.13627; Allocated: 1204224; Reserved: 8388608; time used = 1.7771997451782227s
epoch 20: train_loss: 0.00232; Allocated: 1204224; Reserved: 8388608; time used = 1.7790520191192627s
epoch 25: train_loss: 0.02468; Allocated: 1204224; Reserved: 8388608; time used = 1.7975695133209229s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.362895965576172.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.5132275132275133, 'samples': 0.5362318840579711, 'weighted': 0.5208956368376658, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3066.15it/s]100%|██████████| 1000/1000 [00:00<00:00, 4396.91it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68244; Allocated: 701952; Reserved: 8388608; time used = 51.79456686973572s
epoch 10: train_loss: 0.68242; Allocated: 701952; Reserved: 8388608; time used = 51.30428123474121s
epoch 15: train_loss: 0.68347; Allocated: 701952; Reserved: 8388608; time used = 53.479975938797s
epoch 20: train_loss: 0.63188; Allocated: 701952; Reserved: 8388608; time used = 51.74851632118225s
epoch 25: train_loss: 0.66605; Allocated: 701952; Reserved: 8388608; time used = 51.23069643974304s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 272.9765660762787.
Training classifier using 80.00% nodes...
{'micro': 0.675, 'macro': 0.674601386698706, 'samples': 0.675, 'weighted': 0.674373607669395, 'accuracy': 0.675}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 4.68994; Allocated: 789504; Reserved: 6291456; time used = 0.8090114593505859s
epoch 10: train_loss: 2.06852; Allocated: 789504; Reserved: 8388608; time used = 0.8329102993011475s
epoch 15: train_loss: 1.35381; Allocated: 789504; Reserved: 6291456; time used = 0.8280339241027832s
epoch 20: train_loss: 1.21906; Allocated: 789504; Reserved: 6291456; time used = 0.8410184383392334s
epoch 25: train_loss: 1.17753; Allocated: 789504; Reserved: 6291456; time used = 0.8423306941986084s
epoch 30: train_loss: 1.14665; Allocated: 789504; Reserved: 6291456; time used = 0.8351113796234131s
epoch 35: train_loss: 1.13623; Allocated: 789504; Reserved: 6291456; time used = 0.99029541015625s
epoch 40: train_loss: 1.12006; Allocated: 789504; Reserved: 6291456; time used = 0.836392879486084s
epoch 45: train_loss: 1.09680; Allocated: 789504; Reserved: 6291456; time used = 0.8334953784942627s
epoch 50: train_loss: 1.08279; Allocated: 789504; Reserved: 6291456; time used = 0.8273828029632568s
epoch 55: train_loss: 1.06798; Allocated: 789504; Reserved: 6291456; time used = 0.8322665691375732s
epoch 60: train_loss: 1.05396; Allocated: 789504; Reserved: 6291456; time used = 0.8252215385437012s
epoch 65: train_loss: 1.05145; Allocated: 789504; Reserved: 6291456; time used = 0.830366849899292s
epoch 70: train_loss: 1.06829; Allocated: 789504; Reserved: 8388608; time used = 0.8377552032470703s
epoch 75: train_loss: 1.03864; Allocated: 789504; Reserved: 6291456; time used = 0.9742670059204102s
epoch 80: train_loss: 1.03412; Allocated: 789504; Reserved: 6291456; time used = 0.8455655574798584s
epoch 85: train_loss: 1.05246; Allocated: 789504; Reserved: 6291456; time used = 0.8434805870056152s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 17.654730558395386.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.6086956521739131, 'samples': 0.6086956521739131, 'weighted': 0.6086956521739131, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.49612; Allocated: 1146880; Reserved: 6291456; time used = 1.240771770477295s
epoch 10: train_loss: 0.45477; Allocated: 1146880; Reserved: 8388608; time used = 1.2196660041809082s
epoch 15: train_loss: 0.42317; Allocated: 1146880; Reserved: 8388608; time used = 1.2208340167999268s
epoch 20: train_loss: 0.40737; Allocated: 1146880; Reserved: 6291456; time used = 1.2334110736846924s
epoch 25: train_loss: 0.40904; Allocated: 1146880; Reserved: 6291456; time used = 1.2356500625610352s
epoch 30: train_loss: 0.39490; Allocated: 1146880; Reserved: 6291456; time used = 1.2185139656066895s
epoch 35: train_loss: 0.40288; Allocated: 1146880; Reserved: 6291456; time used = 1.3747835159301758s
epoch 40: train_loss: 0.38684; Allocated: 1146880; Reserved: 6291456; time used = 1.2444677352905273s
epoch 45: train_loss: 0.39014; Allocated: 1146880; Reserved: 6291456; time used = 1.244758129119873s
epoch 50: train_loss: 0.38464; Allocated: 1146880; Reserved: 6291456; time used = 1.232797384262085s
epoch 55: train_loss: 0.38345; Allocated: 1146880; Reserved: 6291456; time used = 1.2288074493408203s
epoch 60: train_loss: 0.38320; Allocated: 1146880; Reserved: 6291456; time used = 1.2309472560882568s
epoch 65: train_loss: 0.38169; Allocated: 1146880; Reserved: 6291456; time used = 1.2148730754852295s
epoch 70: train_loss: 0.37717; Allocated: 1146880; Reserved: 8388608; time used = 1.236443281173706s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 21.230692386627197.
Training classifier using 80.00% nodes...
{'micro': 0.463768115942029, 'macro': 0.44074479737130345, 'samples': 0.463768115942029, 'weighted': 0.4489674111465625, 'accuracy': 0.463768115942029}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.42095; Allocated: 53491712; Reserved: 109051904; time used = 4.631388902664185s
epoch 10: train_loss: 0.29700; Allocated: 53491712; Reserved: 109051904; time used = 4.744073867797852s
epoch 15: train_loss: 0.22376; Allocated: 53491712; Reserved: 109051904; time used = 4.592775821685791s
epoch 20: train_loss: 0.12523; Allocated: 53491712; Reserved: 109051904; time used = 4.60584020614624s
epoch 25: train_loss: 0.11269; Allocated: 53491712; Reserved: 109051904; time used = 4.772877216339111s
epoch 30: train_loss: 0.03824; Allocated: 53491712; Reserved: 109051904; time used = 4.588167190551758s
epoch 35: train_loss: 0.02979; Allocated: 53491712; Reserved: 109051904; time used = 4.724726915359497s
epoch 40: train_loss: 0.01989; Allocated: 53491712; Reserved: 109051904; time used = 4.592460632324219s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.32748198509216.
Training classifier using 20.00% nodes...
{'micro': 0.5486988847583643, 'macro': 0.47702574258065883, 'samples': 0.5544703230653644, 'weighted': 0.5299852622687661, 'accuracy': 0.5544703230653644}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68533; Allocated: 17525248; Reserved: 44040192; time used = 4.077820062637329s
epoch 10: train_loss: 0.51606; Allocated: 17525248; Reserved: 44040192; time used = 4.067429542541504s
epoch 15: train_loss: 0.47883; Allocated: 17525248; Reserved: 44040192; time used = 4.203938007354736s
epoch 20: train_loss: 0.45299; Allocated: 17525248; Reserved: 44040192; time used = 4.067367315292358s
epoch 25: train_loss: 0.46163; Allocated: 17525248; Reserved: 44040192; time used = 4.0688018798828125s
epoch 30: train_loss: 0.44053; Allocated: 17525248; Reserved: 44040192; time used = 4.1003663539886475s
epoch 35: train_loss: 0.44423; Allocated: 17525248; Reserved: 44040192; time used = 4.196086883544922s
epoch 40: train_loss: 0.44043; Allocated: 17525248; Reserved: 44040192; time used = 4.062515735626221s
epoch 45: train_loss: 0.42702; Allocated: 17525248; Reserved: 44040192; time used = 4.071534872055054s
epoch 50: train_loss: 0.43455; Allocated: 17525248; Reserved: 44040192; time used = 4.061298131942749s
epoch 55: train_loss: 0.40469; Allocated: 17525248; Reserved: 44040192; time used = 4.215391635894775s
epoch 60: train_loss: 0.40446; Allocated: 17525248; Reserved: 44040192; time used = 4.076772212982178s
epoch 65: train_loss: 0.40526; Allocated: 17525248; Reserved: 44040192; time used = 4.0732245445251465s
epoch 70: train_loss: 0.40509; Allocated: 17525248; Reserved: 44040192; time used = 4.076465368270874s
epoch 75: train_loss: 0.38737; Allocated: 17525248; Reserved: 44040192; time used = 4.2443132400512695s
epoch 80: train_loss: 0.39958; Allocated: 17525248; Reserved: 44040192; time used = 4.098655462265015s
epoch 85: train_loss: 0.38425; Allocated: 17525248; Reserved: 44040192; time used = 4.100846529006958s
epoch 90: train_loss: 0.39250; Allocated: 17525248; Reserved: 44040192; time used = 4.078792572021484s
epoch 95: train_loss: 0.38325; Allocated: 17525248; Reserved: 44040192; time used = 4.203179121017456s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 83.65566658973694.
Training classifier using 20.00% nodes...
{'micro': 0.7346562067374252, 'macro': 0.7025656682043703, 'samples': 0.734656206737425, 'weighted': 0.7372765894013525, 'accuracy': 0.734656206737425}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.69550; Allocated: 19419648; Reserved: 301989888; time used = 2.9731171131134033s
epoch 10: train_loss: 0.69308; Allocated: 19419648; Reserved: 301989888; time used = 2.8874101638793945s
epoch 15: train_loss: 0.69314; Allocated: 19419648; Reserved: 301989888; time used = 2.899172067642212s
epoch 20: train_loss: 0.69311; Allocated: 19419648; Reserved: 301989888; time used = 2.9033946990966797s
epoch 25: train_loss: 0.69323; Allocated: 19419648; Reserved: 301989888; time used = 2.888418436050415s
epoch 30: train_loss: 0.69313; Allocated: 19419648; Reserved: 301989888; time used = 2.8968100547790527s
epoch 35: train_loss: 0.69317; Allocated: 19419648; Reserved: 301989888; time used = 2.9118247032165527s
epoch 40: train_loss: 0.69316; Allocated: 19419648; Reserved: 301989888; time used = 2.9271368980407715s
epoch 45: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.895164728164673s
epoch 50: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.890536069869995s
epoch 55: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.89819598197937s
epoch 60: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.908928155899048s
epoch 65: train_loss: 0.69314; Allocated: 19419648; Reserved: 301989888; time used = 2.9113402366638184s
epoch 70: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.9009807109832764s
epoch 75: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.915581226348877s
epoch 80: train_loss: 0.69312; Allocated: 19419648; Reserved: 301989888; time used = 2.918147087097168s
epoch 85: train_loss: 0.69317; Allocated: 19419648; Reserved: 301989888; time used = 2.8914952278137207s
epoch 90: train_loss: 0.69314; Allocated: 19419648; Reserved: 301989888; time used = 2.8994140625s
epoch 95: train_loss: 0.69313; Allocated: 19419648; Reserved: 301989888; time used = 2.9265596866607666s
epoch 100: train_loss: 0.69314; Allocated: 19419648; Reserved: 301989888; time used = 2.894442081451416s
epoch 105: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.90682315826416s
epoch 110: train_loss: 0.69314; Allocated: 19419648; Reserved: 301989888; time used = 2.892697811126709s
epoch 115: train_loss: 0.69314; Allocated: 19419648; Reserved: 301989888; time used = 2.883216619491577s
epoch 120: train_loss: 0.69317; Allocated: 19419648; Reserved: 301989888; time used = 2.90337872505188s
epoch 125: train_loss: 0.69314; Allocated: 19419648; Reserved: 301989888; time used = 3.094446897506714s
epoch 130: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.933980941772461s
epoch 135: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.946105480194092s
epoch 140: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.975072145462036s
epoch 145: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.910795211791992s
epoch 150: train_loss: 0.69315; Allocated: 19419648; Reserved: 301989888; time used = 2.9329280853271484s
epoch 155: train_loss: 0.69314; Allocated: 19419648; Reserved: 301989888; time used = 2.9046630859375s
epoch 160: train_loss: 0.69317; Allocated: 19419648; Reserved: 301989888; time used = 2.9030041694641113s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 103.28915739059448.
Training classifier using 20.00% nodes...
{'micro': 0.29487771112136596, 'macro': 0.06506465736686692, 'samples': 0.29487771112136596, 'weighted': 0.13430282067466348, 'accuracy': 0.29487771112136596}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 12.05908; Allocated: 17682432; Reserved: 67108864; time used = 0.2999997138977051s
epoch 10: train_loss: 3.15009; Allocated: 17682432; Reserved: 67108864; time used = 0.28420305252075195s
epoch 15: train_loss: 1.32778; Allocated: 17682432; Reserved: 67108864; time used = 0.2852809429168701s
epoch 20: train_loss: 1.03588; Allocated: 17682432; Reserved: 67108864; time used = 0.28183531761169434s
epoch 25: train_loss: 0.97169; Allocated: 17682432; Reserved: 67108864; time used = 0.28522562980651855s
epoch 30: train_loss: 0.79751; Allocated: 17682432; Reserved: 67108864; time used = 0.2805016040802002s
epoch 35: train_loss: 0.65356; Allocated: 17682432; Reserved: 67108864; time used = 0.28165173530578613s
epoch 40: train_loss: 0.57062; Allocated: 17682432; Reserved: 67108864; time used = 0.2899348735809326s
epoch 45: train_loss: 0.50502; Allocated: 17682432; Reserved: 67108864; time used = 0.29561853408813477s
epoch 50: train_loss: 0.34238; Allocated: 17682432; Reserved: 67108864; time used = 0.28757143020629883s
epoch 55: train_loss: 0.30928; Allocated: 17682432; Reserved: 67108864; time used = 0.28569674491882324s
epoch 60: train_loss: 0.26041; Allocated: 17682432; Reserved: 67108864; time used = 0.2855052947998047s
epoch 65: train_loss: 0.23275; Allocated: 17682432; Reserved: 67108864; time used = 0.28096914291381836s
epoch 70: train_loss: 0.25804; Allocated: 17682432; Reserved: 67108864; time used = 0.2814514636993408s
epoch 75: train_loss: 0.22377; Allocated: 17682432; Reserved: 67108864; time used = 0.2841198444366455s
epoch 80: train_loss: 0.20084; Allocated: 17682432; Reserved: 67108864; time used = 0.2843129634857178s
epoch 85: train_loss: 0.19529; Allocated: 17682432; Reserved: 67108864; time used = 0.28676509857177734s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.894119024276733.
Training classifier using 20.00% nodes...
{'micro': 0.6455929856945085, 'macro': 0.6327139118240966, 'samples': 0.6455929856945085, 'weighted': 0.6374216261983494, 'accuracy': 0.6455929856945085}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3075.64it/s]100%|██████████| 1500/1500 [00:00<00:00, 5554.91it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68762; Allocated: 491008; Reserved: 8388608; time used = 192.25054502487183s
epoch 10: train_loss: 0.66571; Allocated: 491008; Reserved: 8388608; time used = 189.4222629070282s
epoch 15: train_loss: 0.60539; Allocated: 491008; Reserved: 8388608; time used = 191.4428744316101s
epoch 20: train_loss: 0.48074; Allocated: 491008; Reserved: 10485760; time used = 189.92016291618347s
epoch 25: train_loss: 0.35718; Allocated: 491008; Reserved: 8388608; time used = 188.45028948783875s
epoch 30: train_loss: 0.27742; Allocated: 491008; Reserved: 10485760; time used = 189.16415166854858s
epoch 35: train_loss: 0.41686; Allocated: 491008; Reserved: 8388608; time used = 188.73475670814514s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1332.6846804618835.
Training classifier using 80.00% nodes...
{'micro': 0.4933333333333334, 'macro': 0.3993900939452068, 'samples': 0.49333333333333335, 'weighted': 0.3874083911268506, 'accuracy': 0.49333333333333335}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.22288; Allocated: 40698368; Reserved: 62914560; time used = 3.335452079772949s
epoch 10: train_loss: 1.20071; Allocated: 40698368; Reserved: 62914560; time used = 3.533334732055664s
epoch 15: train_loss: 1.12885; Allocated: 40698368; Reserved: 62914560; time used = 3.377285957336426s
epoch 20: train_loss: 1.11121; Allocated: 40698368; Reserved: 65011712; time used = 3.571373701095581s
epoch 25: train_loss: 1.07878; Allocated: 40698368; Reserved: 62914560; time used = 3.557363748550415s
epoch 30: train_loss: 1.07648; Allocated: 40698368; Reserved: 62914560; time used = 3.4821457862854004s
epoch 35: train_loss: 1.00733; Allocated: 40698368; Reserved: 65011712; time used = 3.462354898452759s
epoch 40: train_loss: 1.01282; Allocated: 40698368; Reserved: 62914560; time used = 3.3489744663238525s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.27189350128174.
Training classifier using 20.00% nodes...
{'micro': 0.7502852795739825, 'macro': 0.7441689326756507, 'samples': 0.7502852795739825, 'weighted': 0.749441194458884, 'accuracy': 0.7502852795739825}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3043.53it/s] 78%|███████▊  | 1567/2000 [00:00<00:00, 3838.61it/s]100%|██████████| 2000/2000 [00:00<00:00, 6017.21it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 99480.49633; Allocated: 3930112; Reserved: 31457280; time used = 896.6823265552521s
epoch 10: train_loss: 21415.87035; Allocated: 3930112; Reserved: 31457280; time used = 898.1839392185211s
epoch 15: train_loss: 246.34069; Allocated: 3930112; Reserved: 31457280; time used = 898.4650979042053s
epoch 20: train_loss: 903.00927; Allocated: 3930112; Reserved: 31457280; time used = 899.8041841983795s
epoch 25: train_loss: 2778.39373; Allocated: 3930112; Reserved: 31457280; time used = 899.5749387741089s
epoch 30: train_loss: 951.34248; Allocated: 3930112; Reserved: 31457280; time used = 900.5819194316864s
epoch 35: train_loss: 736.97691; Allocated: 3930112; Reserved: 31457280; time used = 901.1648504734039s
epoch 40: train_loss: 413.24149; Allocated: 3930112; Reserved: 31457280; time used = 900.5531866550446s
epoch 45: train_loss: 59.68527; Allocated: 3930112; Reserved: 31457280; time used = 899.4665756225586s
epoch 50: train_loss: 20.67875; Allocated: 3930112; Reserved: 31457280; time used = 900.603696346283s
epoch 55: train_loss: 8.09371; Allocated: 3930112; Reserved: 31457280; time used = 903.0364775657654s
epoch 60: train_loss: 20.12719; Allocated: 3930112; Reserved: 31457280; time used = 903.5797996520996s
epoch 65: train_loss: 5.82802; Allocated: 3930112; Reserved: 31457280; time used = 905.3916201591492s
epoch 70: train_loss: 7.87203; Allocated: 3930112; Reserved: 33554432; time used = 903.4701240062714s
epoch 75: train_loss: 3.58554; Allocated: 3930112; Reserved: 31457280; time used = 901.7051725387573s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 14059.180070400238.
Training classifier using 80.00% nodes...
{'micro': 0.72, 'macro': 0.7199719971997199, 'samples': 0.72, 'weighted': 0.7198879887988798, 'accuracy': 0.72}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3033.11it/s]100%|██████████| 1000/1000 [00:00<00:00, 4347.16it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.46864; Allocated: 704000; Reserved: 8388608; time used = 52.59960889816284s
epoch 10: train_loss: 1.38945; Allocated: 704000; Reserved: 8388608; time used = 52.28034472465515s
epoch 15: train_loss: 1.38891; Allocated: 704000; Reserved: 8388608; time used = 51.772278785705566s
epoch 20: train_loss: 1.38685; Allocated: 704000; Reserved: 8388608; time used = 51.67401432991028s
epoch 25: train_loss: 1.38649; Allocated: 704000; Reserved: 8388608; time used = 52.044376373291016s
epoch 30: train_loss: 1.38621; Allocated: 704000; Reserved: 8388608; time used = 51.65544271469116s
epoch 35: train_loss: 1.38615; Allocated: 704000; Reserved: 12582912; time used = 52.83220553398132s
epoch 40: train_loss: 1.38623; Allocated: 704000; Reserved: 8388608; time used = 53.590338468551636s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 432.61070680618286.
Training classifier using 80.00% nodes...
{'micro': 0.535, 'macro': 0.5235533697072159, 'samples': 0.535, 'weighted': 0.5220763851533082, 'accuracy': 0.535}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3056.01it/s]100%|██████████| 1500/1500 [00:00<00:00, 5518.82it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.41221; Allocated: 485888; Reserved: 4194304; time used = 195.98960781097412s
epoch 10: train_loss: 1.38766; Allocated: 485888; Reserved: 6291456; time used = 190.99887704849243s
epoch 15: train_loss: 1.38630; Allocated: 485888; Reserved: 6291456; time used = 190.03549122810364s
epoch 20: train_loss: 1.38661; Allocated: 485888; Reserved: 6291456; time used = 189.85203313827515s
epoch 25: train_loss: 1.38658; Allocated: 485888; Reserved: 6291456; time used = 191.49884605407715s
epoch 30: train_loss: 1.38652; Allocated: 485888; Reserved: 6291456; time used = 192.67746901512146s
epoch 35: train_loss: 1.38634; Allocated: 485888; Reserved: 4194304; time used = 193.0210418701172s
epoch 40: train_loss: 1.38630; Allocated: 485888; Reserved: 4194304; time used = 190.71164965629578s
epoch 45: train_loss: 1.38632; Allocated: 485888; Reserved: 8388608; time used = 195.33949828147888s
epoch 50: train_loss: 1.38632; Allocated: 485888; Reserved: 4194304; time used = 191.9112184047699s
epoch 55: train_loss: 1.38630; Allocated: 485888; Reserved: 6291456; time used = 194.57643461227417s
epoch 60: train_loss: 1.38630; Allocated: 485888; Reserved: 6291456; time used = 192.83005547523499s
epoch 65: train_loss: 1.38630; Allocated: 485888; Reserved: 4194304; time used = 193.98824191093445s
epoch 70: train_loss: 1.38630; Allocated: 485888; Reserved: 4194304; time used = 193.29580187797546s
epoch 75: train_loss: 1.38629; Allocated: 485888; Reserved: 6291456; time used = 190.71774435043335s
epoch 80: train_loss: 1.38630; Allocated: 485888; Reserved: 4194304; time used = 194.51513028144836s
epoch 85: train_loss: 1.38629; Allocated: 485888; Reserved: 6291456; time used = 188.43146562576294s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 3389.2089030742645.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 65.37806; Allocated: 984064; Reserved: 8388608; time used = 1.8697741031646729s
epoch 10: train_loss: 21.57274; Allocated: 984064; Reserved: 8388608; time used = 1.8967180252075195s
epoch 15: train_loss: 9.84115; Allocated: 984064; Reserved: 8388608; time used = 1.9142358303070068s
epoch 20: train_loss: 15.82629; Allocated: 984064; Reserved: 8388608; time used = 1.8827242851257324s
epoch 25: train_loss: 4.85705; Allocated: 984064; Reserved: 8388608; time used = 1.8810374736785889s
epoch 30: train_loss: 11.96846; Allocated: 984064; Reserved: 8388608; time used = 1.8804817199707031s
epoch 35: train_loss: 4.47007; Allocated: 984064; Reserved: 8388608; time used = 1.9175875186920166s
epoch 40: train_loss: 6.42082; Allocated: 984064; Reserved: 8388608; time used = 1.898310899734497s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 20.453324556350708.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.5436507936507937, 'samples': 0.5652173913043478, 'weighted': 0.5508396595353117, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.56906; Allocated: 57689088; Reserved: 115343360; time used = 4.314054727554321s
epoch 10: train_loss: 0.33342; Allocated: 57689088; Reserved: 115343360; time used = 4.425320386886597s
epoch 15: train_loss: 0.08889; Allocated: 57689088; Reserved: 115343360; time used = 4.282357692718506s
epoch 20: train_loss: 0.04721; Allocated: 57689088; Reserved: 115343360; time used = 4.447725534439087s
epoch 25: train_loss: 0.02314; Allocated: 57689088; Reserved: 115343360; time used = 4.279721736907959s
epoch 30: train_loss: 0.00989; Allocated: 57689088; Reserved: 115343360; time used = 4.278637170791626s
epoch 35: train_loss: 0.00055; Allocated: 57689088; Reserved: 115343360; time used = 4.411754369735718s
epoch 40: train_loss: 0.00055; Allocated: 57689088; Reserved: 115343360; time used = 4.27851414680481s
epoch 45: train_loss: 0.00640; Allocated: 57689088; Reserved: 115343360; time used = 4.471143007278442s
epoch 50: train_loss: 0.00051; Allocated: 57689088; Reserved: 115343360; time used = 4.326731443405151s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.759323596954346.
Training classifier using 20.00% nodes...
{'micro': 0.27063197026022306, 'macro': 0.13677698342688532, 'samples': 0.2734785875281743, 'weighted': 0.16773973844984882, 'accuracy': 0.2734785875281743}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2930.25it/s]100%|██████████| 1500/1500 [00:00<00:00, 5350.26it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2573.04770; Allocated: 564736; Reserved: 8388608; time used = 52.150946855545044s
epoch 10: train_loss: 3926.76431; Allocated: 564736; Reserved: 8388608; time used = 52.95135474205017s
epoch 15: train_loss: 5411.10762; Allocated: 564736; Reserved: 10485760; time used = 52.25457143783569s
epoch 20: train_loss: 771.00207; Allocated: 564736; Reserved: 8388608; time used = 51.71405243873596s
epoch 25: train_loss: 596.95847; Allocated: 564736; Reserved: 8388608; time used = 51.64659667015076s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 264.09492111206055.
Training classifier using 80.00% nodes...
{'micro': 0.5333333333333333, 'macro': 0.5201499118165785, 'samples': 0.5333333333333333, 'weighted': 0.5161704144620811, 'accuracy': 0.5333333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.63204; Allocated: 843776; Reserved: 4194304; time used = 6.220664739608765s
epoch 10: train_loss: 0.59075; Allocated: 843776; Reserved: 4194304; time used = 5.997167110443115s
epoch 15: train_loss: 0.36435; Allocated: 843776; Reserved: 4194304; time used = 6.094881772994995s
epoch 20: train_loss: 0.18253; Allocated: 843776; Reserved: 4194304; time used = 6.1803297996521s
epoch 25: train_loss: 0.05639; Allocated: 843776; Reserved: 4194304; time used = 6.2224955558776855s
epoch 30: train_loss: 0.03027; Allocated: 843776; Reserved: 6291456; time used = 6.049224376678467s
epoch 35: train_loss: 0.00115; Allocated: 843776; Reserved: 4194304; time used = 6.155581712722778s
epoch 40: train_loss: 0.17892; Allocated: 843776; Reserved: 4194304; time used = 6.20960545539856s
epoch 45: train_loss: 0.23854; Allocated: 843776; Reserved: 4194304; time used = 6.034928798675537s
epoch 50: train_loss: 0.18263; Allocated: 843776; Reserved: 4194304; time used = 6.1377668380737305s
epoch 55: train_loss: 0.21076; Allocated: 843776; Reserved: 4194304; time used = 6.210572242736816s
epoch 60: train_loss: 0.18539; Allocated: 843776; Reserved: 4194304; time used = 5.965532302856445s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 79.12137413024902.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.4645437516724646, 'samples': 0.5797101449275363, 'weighted': 0.4825385006185695, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3025.21it/s]100%|██████████| 1500/1500 [00:00<00:00, 5470.28it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69306; Allocated: 624640; Reserved: 8388608; time used = 33.96784019470215s
epoch 10: train_loss: 0.69180; Allocated: 624640; Reserved: 6291456; time used = 33.920899868011475s
epoch 15: train_loss: 0.68776; Allocated: 624640; Reserved: 6291456; time used = 33.74517822265625s
epoch 20: train_loss: 0.66283; Allocated: 624640; Reserved: 6291456; time used = 33.7667670249939s
epoch 25: train_loss: 0.69315; Allocated: 624640; Reserved: 6291456; time used = 33.894705057144165s
epoch 30: train_loss: 0.69315; Allocated: 624640; Reserved: 6291456; time used = 33.99586749076843s
epoch 35: train_loss: 0.69315; Allocated: 624640; Reserved: 6291456; time used = 34.264705657958984s
epoch 40: train_loss: 0.66021; Allocated: 624640; Reserved: 6291456; time used = 34.71022582054138s
epoch 45: train_loss: 0.60297; Allocated: 624640; Reserved: 6291456; time used = 33.83563733100891s
epoch 50: train_loss: 0.60033; Allocated: 624640; Reserved: 6291456; time used = 33.812783002853394s
epoch 55: train_loss: 0.64591; Allocated: 624640; Reserved: 8388608; time used = 33.80099058151245s
epoch 60: train_loss: 0.21266; Allocated: 624640; Reserved: 10485760; time used = 33.79078006744385s
epoch 65: train_loss: 0.03538; Allocated: 624640; Reserved: 6291456; time used = 33.89342904090881s
epoch 70: train_loss: 0.09462; Allocated: 624640; Reserved: 6291456; time used = 33.636512756347656s
epoch 75: train_loss: 0.05148; Allocated: 624640; Reserved: 8388608; time used = 33.869157552719116s
epoch 80: train_loss: 0.00508; Allocated: 624640; Reserved: 6291456; time used = 33.793909311294556s
epoch 85: train_loss: 0.02144; Allocated: 624640; Reserved: 6291456; time used = 34.031046867370605s
epoch 90: train_loss: 0.11565; Allocated: 624640; Reserved: 6291456; time used = 33.75208902359009s
epoch 95: train_loss: 0.03008; Allocated: 624640; Reserved: 6291456; time used = 34.06575870513916s
epoch 100: train_loss: 0.00906; Allocated: 624640; Reserved: 8388608; time used = 33.82770133018494s
epoch 105: train_loss: 0.01496; Allocated: 624640; Reserved: 6291456; time used = 33.9345121383667s
epoch 110: train_loss: 0.14315; Allocated: 624640; Reserved: 8388608; time used = 34.306703329086304s
epoch 115: train_loss: 0.05618; Allocated: 624640; Reserved: 6291456; time used = 33.85286331176758s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 797.249427318573.
Training classifier using 80.00% nodes...
{'micro': 0.4666666666666667, 'macro': 0.4051993021595898, 'samples': 0.4666666666666667, 'weighted': 0.3966640127499745, 'accuracy': 0.4666666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2504.66it/s]100%|██████████| 1500/1500 [00:00<00:00, 4781.92it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68366; Allocated: 699904; Reserved: 14680064; time used = 8.127115964889526s
epoch 10: train_loss: 0.70572; Allocated: 699904; Reserved: 35651584; time used = 7.897455930709839s
epoch 15: train_loss: 0.70165; Allocated: 699904; Reserved: 14680064; time used = 7.94417405128479s
epoch 20: train_loss: 0.69340; Allocated: 699904; Reserved: 14680064; time used = 7.84398627281189s
epoch 25: train_loss: 0.69165; Allocated: 699904; Reserved: 14680064; time used = 8.173842906951904s
epoch 30: train_loss: 0.69650; Allocated: 699904; Reserved: 37748736; time used = 7.841763257980347s
epoch 35: train_loss: 0.68796; Allocated: 699904; Reserved: 14680064; time used = 7.890207290649414s
epoch 40: train_loss: 0.69428; Allocated: 699904; Reserved: 14680064; time used = 8.062301635742188s
epoch 45: train_loss: 0.69205; Allocated: 699904; Reserved: 14680064; time used = 7.873837232589722s
epoch 50: train_loss: 0.68334; Allocated: 699904; Reserved: 14680064; time used = 7.814005613327026s
epoch 55: train_loss: 0.69446; Allocated: 699904; Reserved: 14680064; time used = 7.830651044845581s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 98.10853314399719.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.37779; Allocated: 17409536; Reserved: 41943040; time used = 3.1989922523498535s
epoch 10: train_loss: 1.36357; Allocated: 17409536; Reserved: 41943040; time used = 3.2056221961975098s
epoch 15: train_loss: 1.35379; Allocated: 17409536; Reserved: 41943040; time used = 3.3380379676818848s
epoch 20: train_loss: 1.33495; Allocated: 17409536; Reserved: 41943040; time used = 3.1969165802001953s
epoch 25: train_loss: 1.32356; Allocated: 17409536; Reserved: 41943040; time used = 3.1855762004852295s
epoch 30: train_loss: 1.32781; Allocated: 17409536; Reserved: 41943040; time used = 3.2252144813537598s
epoch 35: train_loss: 1.30576; Allocated: 17409536; Reserved: 41943040; time used = 3.1959173679351807s
epoch 40: train_loss: 1.31785; Allocated: 17409536; Reserved: 41943040; time used = 3.1895461082458496s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.938234329223633.
Training classifier using 20.00% nodes...
{'micro': 0.32256575911398244, 'macro': 0.12657943460833457, 'samples': 0.32256575911398244, 'weighted': 0.1832508710205368, 'accuracy': 0.32256575911398244}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 11.50489; Allocated: 40919040; Reserved: 65011712; time used = 3.0414721965789795s
epoch 10: train_loss: 2.40644; Allocated: 40919040; Reserved: 62914560; time used = 2.830028772354126s
epoch 15: train_loss: 1.51102; Allocated: 40919040; Reserved: 62914560; time used = 2.8381166458129883s
epoch 20: train_loss: 1.36771; Allocated: 40919040; Reserved: 62914560; time used = 2.988999128341675s
epoch 25: train_loss: 1.37995; Allocated: 40919040; Reserved: 62914560; time used = 2.8656322956085205s
epoch 30: train_loss: 1.36992; Allocated: 40919040; Reserved: 62914560; time used = 2.9980008602142334s
epoch 35: train_loss: 1.38444; Allocated: 40919040; Reserved: 62914560; time used = 2.8305046558380127s
epoch 40: train_loss: 1.36028; Allocated: 40919040; Reserved: 62914560; time used = 3.043362855911255s
epoch 45: train_loss: 1.39212; Allocated: 40919040; Reserved: 62914560; time used = 2.8412272930145264s
epoch 50: train_loss: 1.39115; Allocated: 40919040; Reserved: 62914560; time used = 2.860231399536133s
epoch 55: train_loss: 1.39015; Allocated: 40919040; Reserved: 62914560; time used = 3.006134271621704s
epoch 60: train_loss: 1.38932; Allocated: 40919040; Reserved: 62914560; time used = 2.8040552139282227s
epoch 65: train_loss: 1.38872; Allocated: 40919040; Reserved: 62914560; time used = 2.9814724922180176s
epoch 70: train_loss: 1.38820; Allocated: 40919040; Reserved: 62914560; time used = 2.8038718700408936s
epoch 75: train_loss: 1.38809; Allocated: 40919040; Reserved: 62914560; time used = 2.9689197540283203s
epoch 80: train_loss: 1.38788; Allocated: 40919040; Reserved: 62914560; time used = 2.89601469039917s
epoch 85: train_loss: 1.38771; Allocated: 40919040; Reserved: 62914560; time used = 2.995887517929077s
epoch 90: train_loss: 1.38757; Allocated: 40919040; Reserved: 62914560; time used = 2.841409921646118s
epoch 95: train_loss: 1.38745; Allocated: 40919040; Reserved: 62914560; time used = 3.0045711994171143s
epoch 100: train_loss: 1.38735; Allocated: 40919040; Reserved: 62914560; time used = 2.8782663345336914s
epoch 105: train_loss: 1.38726; Allocated: 40919040; Reserved: 62914560; time used = 2.9411144256591797s
epoch 110: train_loss: 1.38718; Allocated: 40919040; Reserved: 62914560; time used = 2.824979305267334s
epoch 115: train_loss: 1.38711; Allocated: 40919040; Reserved: 62914560; time used = 2.9641828536987305s
epoch 120: train_loss: 1.38705; Allocated: 40919040; Reserved: 62914560; time used = 2.856315851211548s
epoch 125: train_loss: 1.38700; Allocated: 40919040; Reserved: 62914560; time used = 2.937488079071045s
epoch 130: train_loss: 1.38695; Allocated: 40919040; Reserved: 62914560; time used = 2.850463390350342s
epoch 135: train_loss: 1.38691; Allocated: 40919040; Reserved: 62914560; time used = 3.0347096920013428s
epoch 140: train_loss: 1.38687; Allocated: 40919040; Reserved: 62914560; time used = 2.8681693077087402s
epoch 145: train_loss: 1.38684; Allocated: 40919040; Reserved: 62914560; time used = 2.9549968242645264s
epoch 150: train_loss: 1.38680; Allocated: 40919040; Reserved: 65011712; time used = 2.8317863941192627s
epoch 155: train_loss: 1.38678; Allocated: 40919040; Reserved: 62914560; time used = 2.999986410140991s
epoch 160: train_loss: 1.38675; Allocated: 40919040; Reserved: 62914560; time used = 2.814957857131958s
epoch 165: train_loss: 1.38672; Allocated: 40919040; Reserved: 62914560; time used = 2.8713443279266357s
epoch 170: train_loss: 1.38670; Allocated: 40919040; Reserved: 62914560; time used = 3.016374349594116s
epoch 175: train_loss: 1.38668; Allocated: 40919040; Reserved: 62914560; time used = 2.7921547889709473s
epoch 180: train_loss: 1.38666; Allocated: 40919040; Reserved: 65011712; time used = 3.055248260498047s
epoch 185: train_loss: 1.38664; Allocated: 40919040; Reserved: 62914560; time used = 2.8124630451202393s
epoch 190: train_loss: 1.38663; Allocated: 40919040; Reserved: 62914560; time used = 3.096295118331909s
epoch 195: train_loss: 1.38661; Allocated: 40919040; Reserved: 62914560; time used = 2.8114542961120605s
epoch 200: train_loss: 1.38649; Allocated: 40919040; Reserved: 62914560; time used = 2.9916651248931885s
epoch 205: train_loss: 1.38655; Allocated: 40919040; Reserved: 65011712; time used = 2.8497776985168457s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 124.94158554077148.
Training classifier using 20.00% nodes...
{'micro': 0.39653860783567896, 'macro': 0.1922873927042259, 'samples': 0.39653860783567896, 'weighted': 0.22778885968087853, 'accuracy': 0.39653860783567896}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38681; Allocated: 19419648; Reserved: 71303168; time used = 1.3287806510925293s
epoch 10: train_loss: 1.38538; Allocated: 19419648; Reserved: 71303168; time used = 1.285555362701416s
epoch 15: train_loss: 1.34150; Allocated: 19419648; Reserved: 71303168; time used = 1.306318759918213s
epoch 20: train_loss: 1.27320; Allocated: 19419648; Reserved: 71303168; time used = 1.3271071910858154s
epoch 25: train_loss: 0.99555; Allocated: 19419648; Reserved: 71303168; time used = 1.3032002449035645s
epoch 30: train_loss: 0.59332; Allocated: 19419648; Reserved: 71303168; time used = 1.2971265316009521s
epoch 35: train_loss: 0.48332; Allocated: 19419648; Reserved: 71303168; time used = 1.2681689262390137s
epoch 40: train_loss: 0.19207; Allocated: 19419648; Reserved: 71303168; time used = 1.227221965789795s
epoch 45: train_loss: 0.12879; Allocated: 19419648; Reserved: 71303168; time used = 1.3000476360321045s
epoch 50: train_loss: 0.09344; Allocated: 19419648; Reserved: 71303168; time used = 1.288686990737915s
epoch 55: train_loss: 0.08237; Allocated: 19419648; Reserved: 71303168; time used = 1.2744319438934326s
epoch 60: train_loss: 0.07070; Allocated: 19419648; Reserved: 71303168; time used = 1.2883102893829346s
epoch 65: train_loss: 0.04418; Allocated: 19419648; Reserved: 71303168; time used = 1.292278528213501s
epoch 70: train_loss: 0.04243; Allocated: 19419648; Reserved: 71303168; time used = 1.2955870628356934s
epoch 75: train_loss: 0.04649; Allocated: 19419648; Reserved: 71303168; time used = 1.2926216125488281s
epoch 80: train_loss: 0.05227; Allocated: 19419648; Reserved: 71303168; time used = 1.279592752456665s
epoch 85: train_loss: 0.03249; Allocated: 19419648; Reserved: 71303168; time used = 1.2872939109802246s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.607548713684082.
Training classifier using 20.00% nodes...
{'micro': 0.5269958467928011, 'macro': 0.43254820755098233, 'samples': 0.5269958467928011, 'weighted': 0.4855201269672349, 'accuracy': 0.5269958467928011}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.42108; Allocated: 874496; Reserved: 6291456; time used = 4.871418237686157s
epoch 10: train_loss: 1.39385; Allocated: 874496; Reserved: 8388608; time used = 4.753583908081055s
epoch 15: train_loss: 1.38701; Allocated: 874496; Reserved: 6291456; time used = 4.926687002182007s
epoch 20: train_loss: 1.37232; Allocated: 874496; Reserved: 6291456; time used = 4.795518398284912s
epoch 25: train_loss: 1.37562; Allocated: 874496; Reserved: 6291456; time used = 4.690407037734985s
epoch 30: train_loss: 1.36671; Allocated: 874496; Reserved: 6291456; time used = 4.9391350746154785s
epoch 35: train_loss: 1.36405; Allocated: 874496; Reserved: 6291456; time used = 4.784965753555298s
epoch 40: train_loss: 1.36956; Allocated: 874496; Reserved: 8388608; time used = 4.6863226890563965s
epoch 45: train_loss: 1.36563; Allocated: 874496; Reserved: 6291456; time used = 4.794806241989136s
epoch 50: train_loss: 1.36622; Allocated: 874496; Reserved: 6291456; time used = 4.822927951812744s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 52.493964195251465.
Training classifier using 80.00% nodes...
{'micro': 0.5217391304347826, 'macro': 0.47787204769548264, 'samples': 0.5217391304347826, 'weighted': 0.4888388183803076, 'accuracy': 0.5217391304347826}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2.15846; Allocated: 53551616; Reserved: 109051904; time used = 4.726698875427246s
epoch 10: train_loss: 1.48185; Allocated: 53551616; Reserved: 109051904; time used = 4.850194454193115s
epoch 15: train_loss: 1.51497; Allocated: 53551616; Reserved: 109051904; time used = 4.7378880977630615s
epoch 20: train_loss: 1.42000; Allocated: 53551616; Reserved: 109051904; time used = 4.711740016937256s
epoch 25: train_loss: 1.36199; Allocated: 53551616; Reserved: 109051904; time used = 4.813273906707764s
epoch 30: train_loss: 1.36881; Allocated: 53551616; Reserved: 109051904; time used = 4.694863319396973s
epoch 35: train_loss: 1.35644; Allocated: 53551616; Reserved: 109051904; time used = 4.8471715450286865s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 38.81103229522705.
Training classifier using 20.00% nodes...
{'micro': 0.4003717472118959, 'macro': 0.3506530410747934, 'samples': 0.40458302028549964, 'weighted': 0.3904644906424225, 'accuracy': 0.40458302028549964}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3053.75it/s]100%|██████████| 1500/1500 [00:00<00:00, 5507.82it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69150; Allocated: 424960; Reserved: 8388608; time used = 11.551390886306763s
epoch 10: train_loss: 0.68169; Allocated: 424960; Reserved: 6291456; time used = 11.586394786834717s
epoch 15: train_loss: 0.61254; Allocated: 424960; Reserved: 8388608; time used = 11.550043106079102s
epoch 20: train_loss: 0.49863; Allocated: 424960; Reserved: 8388608; time used = 11.64517593383789s
epoch 25: train_loss: 0.45263; Allocated: 424960; Reserved: 6291456; time used = 11.579583168029785s
epoch 30: train_loss: 0.43627; Allocated: 424960; Reserved: 8388608; time used = 11.63530421257019s
epoch 35: train_loss: 0.43109; Allocated: 424960; Reserved: 6291456; time used = 11.413961172103882s
epoch 40: train_loss: 0.42101; Allocated: 424960; Reserved: 6291456; time used = 11.614953517913818s
epoch 45: train_loss: 0.41737; Allocated: 424960; Reserved: 6291456; time used = 11.632812976837158s
epoch 50: train_loss: 0.40687; Allocated: 424960; Reserved: 6291456; time used = 11.42764163017273s
epoch 55: train_loss: 0.40269; Allocated: 424960; Reserved: 6291456; time used = 11.385637760162354s
epoch 60: train_loss: 0.40354; Allocated: 424960; Reserved: 8388608; time used = 11.585763454437256s
epoch 65: train_loss: 0.39771; Allocated: 424960; Reserved: 6291456; time used = 11.597602128982544s
epoch 70: train_loss: 0.39627; Allocated: 424960; Reserved: 6291456; time used = 11.573792457580566s
epoch 75: train_loss: 0.39156; Allocated: 424960; Reserved: 6291456; time used = 11.512569665908813s
epoch 80: train_loss: 0.39086; Allocated: 424960; Reserved: 6291456; time used = 11.602350950241089s
epoch 85: train_loss: 0.39132; Allocated: 424960; Reserved: 6291456; time used = 11.655381679534912s
epoch 90: train_loss: 0.38575; Allocated: 424960; Reserved: 6291456; time used = 11.612439155578613s
epoch 95: train_loss: 0.38662; Allocated: 424960; Reserved: 6291456; time used = 11.461608409881592s
epoch 100: train_loss: 0.38873; Allocated: 424960; Reserved: 6291456; time used = 11.495560884475708s
epoch 105: train_loss: 0.38376; Allocated: 424960; Reserved: 8388608; time used = 11.515865087509155s
epoch 110: train_loss: 0.38940; Allocated: 424960; Reserved: 8388608; time used = 11.595373630523682s
epoch 115: train_loss: 0.38365; Allocated: 424960; Reserved: 6291456; time used = 11.374686241149902s
epoch 120: train_loss: 0.38225; Allocated: 424960; Reserved: 6291456; time used = 11.557802438735962s
epoch 125: train_loss: 0.38127; Allocated: 424960; Reserved: 8388608; time used = 11.662757635116577s
epoch 130: train_loss: 0.38171; Allocated: 424960; Reserved: 6291456; time used = 11.639663457870483s
epoch 135: train_loss: 0.38048; Allocated: 424960; Reserved: 8388608; time used = 11.47659182548523s
epoch 140: train_loss: 0.37914; Allocated: 424960; Reserved: 6291456; time used = 11.627567052841187s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 331.4959750175476.
Training classifier using 80.00% nodes...
{'micro': 0.49666666666666665, 'macro': 0.4020533363980145, 'samples': 0.49666666666666665, 'weighted': 0.38999173630607403, 'accuracy': 0.49666666666666665}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2445.15it/s]100%|██████████| 1500/1500 [00:00<00:00, 4684.41it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1570.11136; Allocated: 559104; Reserved: 4194304; time used = 11.95230746269226s
epoch 10: train_loss: 153.01389; Allocated: 559104; Reserved: 6291456; time used = 12.009191513061523s
epoch 15: train_loss: 38.87231; Allocated: 559104; Reserved: 8388608; time used = 11.877963304519653s
epoch 20: train_loss: 27.80616; Allocated: 559104; Reserved: 8388608; time used = 12.008862018585205s
epoch 25: train_loss: 3.34752; Allocated: 559104; Reserved: 6291456; time used = 11.895150423049927s
epoch 30: train_loss: 1.36552; Allocated: 559104; Reserved: 6291456; time used = 12.019469261169434s
epoch 35: train_loss: 1.41942; Allocated: 559104; Reserved: 4194304; time used = 11.764005661010742s
epoch 40: train_loss: 1.39454; Allocated: 559104; Reserved: 6291456; time used = 11.968398094177246s
epoch 45: train_loss: 1.38674; Allocated: 559104; Reserved: 6291456; time used = 11.976926565170288s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 115.46141505241394.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2499.60it/s]100%|██████████| 1000/1000 [00:00<00:00, 3697.72it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68217; Allocated: 1109504; Reserved: 31457280; time used = 13.752767086029053s
epoch 10: train_loss: 0.69522; Allocated: 1109504; Reserved: 31457280; time used = 14.255005836486816s
epoch 15: train_loss: 0.68927; Allocated: 1109504; Reserved: 33554432; time used = 13.776825189590454s
epoch 20: train_loss: 0.67252; Allocated: 1109504; Reserved: 33554432; time used = 13.656250953674316s
epoch 25: train_loss: 0.49935; Allocated: 1109504; Reserved: 31457280; time used = 13.720200777053833s
epoch 30: train_loss: 0.56634; Allocated: 1109504; Reserved: 31457280; time used = 13.759824514389038s
epoch 35: train_loss: 0.40379; Allocated: 1109504; Reserved: 31457280; time used = 13.675395488739014s
epoch 40: train_loss: 0.41975; Allocated: 1109504; Reserved: 31457280; time used = 13.736067295074463s
epoch 45: train_loss: 0.41088; Allocated: 1109504; Reserved: 31457280; time used = 14.042338609695435s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 139.56286120414734.
Training classifier using 80.00% nodes...
{'micro': 0.63, 'macro': 0.62996299629963, 'samples': 0.63, 'weighted': 0.6298889888988899, 'accuracy': 0.63}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.37166; Allocated: 17475072; Reserved: 41943040; time used = 4.582318305969238s
epoch 10: train_loss: 0.22931; Allocated: 17475072; Reserved: 41943040; time used = 4.757524728775024s
epoch 15: train_loss: 0.15095; Allocated: 17475072; Reserved: 41943040; time used = 4.606595516204834s
epoch 20: train_loss: 0.10784; Allocated: 17475072; Reserved: 41943040; time used = 4.760058879852295s
epoch 25: train_loss: 0.06509; Allocated: 17475072; Reserved: 41943040; time used = 4.574077367782593s
epoch 30: train_loss: 0.03350; Allocated: 17475072; Reserved: 41943040; time used = 4.759781122207642s
epoch 35: train_loss: 0.02904; Allocated: 17475072; Reserved: 41943040; time used = 4.597612380981445s
epoch 40: train_loss: 0.01042; Allocated: 17475072; Reserved: 41943040; time used = 4.720886468887329s
epoch 45: train_loss: 0.00694; Allocated: 17475072; Reserved: 41943040; time used = 4.668255090713501s
epoch 50: train_loss: 0.01261; Allocated: 17475072; Reserved: 41943040; time used = 4.748047113418579s
epoch 55: train_loss: 0.00131; Allocated: 17475072; Reserved: 41943040; time used = 4.5896077156066895s
epoch 60: train_loss: 0.00064; Allocated: 17475072; Reserved: 41943040; time used = 4.597462892532349s
epoch 65: train_loss: 0.00035; Allocated: 17475072; Reserved: 41943040; time used = 4.735070705413818s
epoch 70: train_loss: 0.00040; Allocated: 17475072; Reserved: 41943040; time used = 4.57465124130249s
epoch 75: train_loss: 0.00012; Allocated: 17475072; Reserved: 41943040; time used = 4.743435859680176s
epoch 80: train_loss: 0.01070; Allocated: 17475072; Reserved: 41943040; time used = 4.560250997543335s
epoch 85: train_loss: 0.00014; Allocated: 17475072; Reserved: 41943040; time used = 4.7025628089904785s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 86.21337699890137.
Training classifier using 20.00% nodes...
{'micro': 0.5828334102445778, 'macro': 0.4589240117354577, 'samples': 0.5828334102445778, 'weighted': 0.5357441332241154, 'accuracy': 0.5828334102445778}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.46865; Allocated: 1214464; Reserved: 8388608; time used = 6.54170036315918s
epoch 10: train_loss: 0.44081; Allocated: 1214464; Reserved: 8388608; time used = 6.42496919631958s
epoch 15: train_loss: 0.25100; Allocated: 1214464; Reserved: 6291456; time used = 6.6008689403533936s
epoch 20: train_loss: 0.37900; Allocated: 1214464; Reserved: 8388608; time used = 6.553838491439819s
epoch 25: train_loss: 0.05238; Allocated: 1214464; Reserved: 8388608; time used = 6.602880954742432s
epoch 30: train_loss: 0.13112; Allocated: 1214464; Reserved: 6291456; time used = 6.5655012130737305s
epoch 35: train_loss: 0.03001; Allocated: 1214464; Reserved: 8388608; time used = 6.487048625946045s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 53.07002639770508.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.4145927601809955, 'samples': 0.5652173913043478, 'weighted': 0.43611056462718867, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2517.53it/s] 81%|████████▏ | 1627/2000 [00:00<00:00, 3259.29it/s]100%|██████████| 2000/2000 [00:00<00:00, 5450.20it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.59180; Allocated: 3787264; Reserved: 29360128; time used = 138.11953592300415s
epoch 10: train_loss: 1.41714; Allocated: 3787264; Reserved: 31457280; time used = 139.87681102752686s
epoch 15: train_loss: 1.36492; Allocated: 3787264; Reserved: 29360128; time used = 138.35259771347046s
epoch 20: train_loss: 1.35568; Allocated: 3787264; Reserved: 29360128; time used = 139.92071175575256s
epoch 25: train_loss: 1.32166; Allocated: 3787264; Reserved: 29360128; time used = 137.1446464061737s
epoch 30: train_loss: 1.29501; Allocated: 3787264; Reserved: 31457280; time used = 135.37129831314087s
epoch 35: train_loss: 1.26656; Allocated: 3787264; Reserved: 29360128; time used = 138.4595980644226s
epoch 40: train_loss: 1.23256; Allocated: 3787264; Reserved: 29360128; time used = 135.1394772529602s
epoch 45: train_loss: 1.20547; Allocated: 3787264; Reserved: 29360128; time used = 136.771342754364s
epoch 50: train_loss: 1.20182; Allocated: 3787264; Reserved: 29360128; time used = 136.58256816864014s
epoch 55: train_loss: 1.17377; Allocated: 3787264; Reserved: 29360128; time used = 141.42739176750183s
epoch 60: train_loss: 1.17250; Allocated: 3787264; Reserved: 29360128; time used = 136.529390335083s
epoch 65: train_loss: 1.16872; Allocated: 3787264; Reserved: 29360128; time used = 136.5425362586975s
epoch 70: train_loss: 1.16376; Allocated: 3787264; Reserved: 31457280; time used = 145.2900128364563s
epoch 75: train_loss: 1.16408; Allocated: 3787264; Reserved: 29360128; time used = 141.7990598678589s
epoch 80: train_loss: 1.15876; Allocated: 3787264; Reserved: 29360128; time used = 139.8820459842682s
epoch 85: train_loss: 1.16060; Allocated: 3787264; Reserved: 29360128; time used = 146.15648007392883s
epoch 90: train_loss: 1.15733; Allocated: 3787264; Reserved: 31457280; time used = 136.7844581604004s
epoch 95: train_loss: 1.15594; Allocated: 3787264; Reserved: 29360128; time used = 135.35838294029236s
epoch 100: train_loss: 1.15760; Allocated: 3787264; Reserved: 31457280; time used = 145.63211941719055s
epoch 105: train_loss: 1.15755; Allocated: 3787264; Reserved: 29360128; time used = 142.6846878528595s
epoch 110: train_loss: 1.15492; Allocated: 3787264; Reserved: 29360128; time used = 142.82085752487183s
epoch 115: train_loss: 1.15580; Allocated: 3787264; Reserved: 29360128; time used = 135.9307940006256s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 3323.7373628616333.
Training classifier using 80.00% nodes...
{'micro': 0.7225, 'macro': 0.721579472129729, 'samples': 0.7225, 'weighted': 0.7210991967191527, 'accuracy': 0.7225}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.41294; Allocated: 17466880; Reserved: 41943040; time used = 0.8715786933898926s
epoch 10: train_loss: 0.22137; Allocated: 17466880; Reserved: 41943040; time used = 0.8336708545684814s
epoch 15: train_loss: 0.09511; Allocated: 17466880; Reserved: 41943040; time used = 0.834348201751709s
epoch 20: train_loss: 0.04553; Allocated: 17466880; Reserved: 41943040; time used = 0.9173943996429443s
epoch 25: train_loss: 0.03146; Allocated: 17466880; Reserved: 41943040; time used = 0.8267955780029297s
epoch 30: train_loss: 0.02572; Allocated: 17466880; Reserved: 41943040; time used = 0.8284776210784912s
epoch 35: train_loss: 0.01225; Allocated: 17466880; Reserved: 41943040; time used = 0.8265330791473389s
epoch 40: train_loss: 0.00056; Allocated: 17466880; Reserved: 41943040; time used = 0.8292841911315918s
epoch 45: train_loss: 0.01023; Allocated: 17466880; Reserved: 41943040; time used = 0.8278377056121826s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11.530228853225708.
Training classifier using 20.00% nodes...
{'micro': 0.7235809875403783, 'macro': 0.6769633680357724, 'samples': 0.7235809875403784, 'weighted': 0.7156566267102628, 'accuracy': 0.7235809875403784}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3045.78it/s]100%|██████████| 1500/1500 [00:00<00:00, 5487.58it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69273; Allocated: 420864; Reserved: 4194304; time used = 53.121899127960205s
epoch 10: train_loss: 0.65471; Allocated: 420864; Reserved: 6291456; time used = 54.44350624084473s
epoch 15: train_loss: 0.67381; Allocated: 420864; Reserved: 6291456; time used = 52.44291853904724s
epoch 20: train_loss: 0.62171; Allocated: 420864; Reserved: 6291456; time used = 53.08993721008301s
epoch 25: train_loss: 0.55660; Allocated: 420864; Reserved: 6291456; time used = 52.65426588058472s
epoch 30: train_loss: 0.51605; Allocated: 420864; Reserved: 6291456; time used = 52.693440675735474s
epoch 35: train_loss: 0.48446; Allocated: 420864; Reserved: 6291456; time used = 52.788108587265015s
epoch 40: train_loss: 0.46646; Allocated: 420864; Reserved: 6291456; time used = 52.80798888206482s
epoch 45: train_loss: 0.46171; Allocated: 420864; Reserved: 6291456; time used = 52.94445729255676s
epoch 50: train_loss: 0.45220; Allocated: 420864; Reserved: 6291456; time used = 52.57776999473572s
epoch 55: train_loss: 0.44891; Allocated: 420864; Reserved: 8388608; time used = 53.21766781806946s
epoch 60: train_loss: 0.44791; Allocated: 420864; Reserved: 6291456; time used = 52.49168419837952s
epoch 65: train_loss: 0.44234; Allocated: 420864; Reserved: 6291456; time used = 52.78260374069214s
epoch 70: train_loss: 0.43263; Allocated: 420864; Reserved: 6291456; time used = 51.67825770378113s
epoch 75: train_loss: 0.43270; Allocated: 420864; Reserved: 6291456; time used = 51.32178735733032s
epoch 80: train_loss: 0.43891; Allocated: 420864; Reserved: 4194304; time used = 51.686662435531616s
epoch 85: train_loss: 0.42668; Allocated: 420864; Reserved: 6291456; time used = 51.403340578079224s
epoch 90: train_loss: 0.42804; Allocated: 420864; Reserved: 6291456; time used = 53.28478789329529s
epoch 95: train_loss: 0.43354; Allocated: 420864; Reserved: 6291456; time used = 51.82333731651306s
epoch 100: train_loss: 0.42795; Allocated: 420864; Reserved: 6291456; time used = 51.94753837585449s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1075.3385446071625.
Training classifier using 80.00% nodes...
{'micro': 0.49666666666666665, 'macro': 0.4020533363980145, 'samples': 0.49666666666666665, 'weighted': 0.38999173630607403, 'accuracy': 0.49666666666666665}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2519.07it/s]100%|██████████| 1500/1500 [00:00<00:00, 4804.09it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.5135064125061s
epoch 10: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 33.221336126327515s
epoch 15: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.857377767562866s
epoch 20: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.78719234466553s
epoch 25: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 33.19672107696533s
epoch 30: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 33.08269119262695s
epoch 35: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 33.2142231464386s
epoch 40: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.89867854118347s
epoch 45: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.97253108024597s
epoch 50: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.908647298812866s
epoch 55: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.053367614746094s
epoch 60: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.91239833831787s
epoch 65: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 33.163668394088745s
epoch 70: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 33.13169574737549s
epoch 75: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.0041766166687s
epoch 80: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.02192258834839s
epoch 85: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.984107971191406s
epoch 90: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 32.746867179870605s
epoch 95: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.183207988739014s
epoch 100: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 33.294358015060425s
epoch 105: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 33.155539751052856s
epoch 110: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.142796993255615s
epoch 115: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 33.244744300842285s
epoch 120: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.385772466659546s
epoch 125: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 33.14432406425476s
epoch 130: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.35243511199951s
epoch 135: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 33.965426445007324s
epoch 140: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.28394961357117s
epoch 145: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.567286014556885s
epoch 150: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.69001364707947s
epoch 155: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.370442152023315s
epoch 160: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.35380816459656s
epoch 165: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.525837659835815s
epoch 170: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.53553032875061s
epoch 175: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.33586001396179s
epoch 180: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.95226287841797s
epoch 185: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.47932767868042s
epoch 190: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.31008005142212s
epoch 195: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.261876344680786s
epoch 200: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.42048358917236s
epoch 205: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.329214334487915s
epoch 210: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.56201410293579s
epoch 215: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.48166275024414s
epoch 220: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.99685072898865s
epoch 225: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.247594118118286s
epoch 230: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.327754735946655s
epoch 235: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.76724553108215s
epoch 240: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.226940870285034s
epoch 245: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.1814079284668s
epoch 250: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.59313917160034s
epoch 255: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.654637575149536s
epoch 260: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 32.514670848846436s
epoch 265: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.55409049987793s
epoch 270: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.547383546829224s
epoch 275: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.85155916213989s
epoch 280: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.64973187446594s
epoch 285: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.423391580581665s
epoch 290: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.11571025848389s
epoch 295: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.0837836265564s
epoch 300: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.46562957763672s
epoch 305: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.52720856666565s
epoch 310: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.18624258041382s
epoch 315: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.293824672698975s
epoch 320: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.834771156311035s
epoch 325: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.32810306549072s
epoch 330: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.61702632904053s
epoch 335: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.498740673065186s
epoch 340: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 31.94520592689514s
epoch 345: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.37248253822327s
epoch 350: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.74686813354492s
epoch 355: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 31.96734619140625s
epoch 360: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.22274732589722s
epoch 365: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.14991521835327s
epoch 370: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.32276272773743s
epoch 375: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.44181442260742s
epoch 380: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.317362785339355s
epoch 385: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.029956579208374s
epoch 390: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.13388109207153s
epoch 395: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.25683641433716s
epoch 400: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 31.89312505722046s
epoch 405: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.33536720275879s
epoch 410: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.269014835357666s
epoch 415: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.40342426300049s
epoch 420: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.55466175079346s
epoch 425: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.3867723941803s
epoch 430: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.05645394325256s
epoch 435: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.17760896682739s
epoch 440: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.205705881118774s
epoch 445: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.06077218055725s
epoch 450: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.0310480594635s
epoch 455: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 33.45819973945618s
epoch 460: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.26089024543762s
epoch 465: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.105218172073364s
epoch 470: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.339930295944214s
epoch 475: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 31.93545389175415s
epoch 480: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.042773723602295s
epoch 485: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 32.088371992111206s
epoch 490: train_loss: 0.69315; Allocated: 616960; Reserved: 6291456; time used = 32.29130220413208s
epoch 495: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 31.96030020713806s
epoch 500: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 32.28677463531494s
Finished training. Time used = 3261.931492805481.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2491.60it/s] 83%|████████▎ | 1651/2000 [00:00<00:00, 3235.49it/s]100%|██████████| 2000/2000 [00:00<00:00, 5457.30it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.46107; Allocated: 3785728; Reserved: 29360128; time used = 864.02414894104s
epoch 10: train_loss: 0.19792; Allocated: 3785728; Reserved: 29360128; time used = 864.5544273853302s
epoch 15: train_loss: 0.09129; Allocated: 3785728; Reserved: 29360128; time used = 867.6918251514435s
epoch 20: train_loss: 0.05720; Allocated: 3785728; Reserved: 31457280; time used = 870.6786458492279s
epoch 25: train_loss: 0.03325; Allocated: 3785728; Reserved: 29360128; time used = 866.0506467819214s
epoch 30: train_loss: 0.02221; Allocated: 3785728; Reserved: 31457280; time used = 864.7153117656708s
epoch 35: train_loss: 0.01676; Allocated: 3785728; Reserved: 29360128; time used = 868.2975299358368s
epoch 40: train_loss: 0.01350; Allocated: 3785728; Reserved: 29360128; time used = 871.7675540447235s
epoch 45: train_loss: 0.01185; Allocated: 3785728; Reserved: 29360128; time used = 863.2951216697693s
epoch 50: train_loss: 0.01042; Allocated: 3785728; Reserved: 29360128; time used = 871.568598985672s
epoch 55: train_loss: 0.00919; Allocated: 3785728; Reserved: 29360128; time used = 864.5144205093384s
epoch 60: train_loss: 0.00918; Allocated: 3785728; Reserved: 29360128; time used = 862.0041782855988s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10747.097935199738.
Training classifier using 80.00% nodes...
{'micro': 0.7725000000000001, 'macro': 0.7690340674750474, 'samples': 0.7725, 'weighted': 0.7681852676730182, 'accuracy': 0.7725}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3012.29it/s] 83%|████████▎ | 1651/2000 [00:00<00:00, 3838.52it/s]100%|██████████| 2000/2000 [00:00<00:00, 6138.41it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.65428; Allocated: 3785216; Reserved: 33554432; time used = 1078.3603904247284s
epoch 10: train_loss: 0.65296; Allocated: 3785216; Reserved: 33554432; time used = 1078.2620747089386s
epoch 15: train_loss: 0.65209; Allocated: 3785216; Reserved: 33554432; time used = 1077.3454957008362s
epoch 20: train_loss: 0.65161; Allocated: 3785216; Reserved: 33554432; time used = 1079.0319609642029s
epoch 25: train_loss: 0.65170; Allocated: 3785216; Reserved: 33554432; time used = 1074.5548717975616s
epoch 30: train_loss: 0.65128; Allocated: 3785216; Reserved: 35651584; time used = 1072.813230752945s
epoch 35: train_loss: 0.65125; Allocated: 3785216; Reserved: 33554432; time used = 1077.2608544826508s
epoch 40: train_loss: 0.65046; Allocated: 3785216; Reserved: 33554432; time used = 1073.5248889923096s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9259.848125696182.
Training classifier using 80.00% nodes...
{'micro': 0.6925, 'macro': 0.6906419180201082, 'samples': 0.6925, 'weighted': 0.6899226604795049, 'accuracy': 0.6925}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.36088; Allocated: 40770048; Reserved: 62914560; time used = 3.535048484802246s
epoch 10: train_loss: 0.16556; Allocated: 40770048; Reserved: 62914560; time used = 3.2149176597595215s
epoch 15: train_loss: 0.07566; Allocated: 40770048; Reserved: 62914560; time used = 3.3425991535186768s
epoch 20: train_loss: 0.04402; Allocated: 40770048; Reserved: 62914560; time used = 3.3908846378326416s
epoch 25: train_loss: 0.03594; Allocated: 40770048; Reserved: 62914560; time used = 3.273876905441284s
epoch 30: train_loss: 0.04405; Allocated: 40770048; Reserved: 62914560; time used = 3.5264780521392822s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.564473390579224.
Training classifier using 20.00% nodes...
{'micro': 0.7741219728667428, 'macro': 0.7739101855848683, 'samples': 0.7741219728667428, 'weighted': 0.7739973865241228, 'accuracy': 0.7741219728667428}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.35778; Allocated: 841728; Reserved: 4194304; time used = 4.828646421432495s
epoch 10: train_loss: 1.35716; Allocated: 841728; Reserved: 4194304; time used = 4.40149450302124s
epoch 15: train_loss: 1.36484; Allocated: 841728; Reserved: 6291456; time used = 4.327236652374268s
epoch 20: train_loss: 1.36206; Allocated: 841728; Reserved: 4194304; time used = 4.319791555404663s
epoch 25: train_loss: 1.35108; Allocated: 841728; Reserved: 4194304; time used = 4.204196929931641s
epoch 30: train_loss: 1.36229; Allocated: 841728; Reserved: 4194304; time used = 4.3444905281066895s
epoch 35: train_loss: 1.35662; Allocated: 841728; Reserved: 4194304; time used = 4.320110082626343s
epoch 40: train_loss: 1.35349; Allocated: 841728; Reserved: 4194304; time used = 4.188872337341309s
epoch 45: train_loss: 1.35868; Allocated: 841728; Reserved: 4194304; time used = 4.312443017959595s
epoch 50: train_loss: 1.34784; Allocated: 841728; Reserved: 4194304; time used = 4.194467782974243s
epoch 55: train_loss: 1.35453; Allocated: 841728; Reserved: 4194304; time used = 4.320352554321289s
epoch 60: train_loss: 1.35089; Allocated: 841728; Reserved: 4194304; time used = 4.357678413391113s
epoch 65: train_loss: 1.35188; Allocated: 841728; Reserved: 4194304; time used = 4.507136106491089s
epoch 70: train_loss: 1.35040; Allocated: 841728; Reserved: 4194304; time used = 4.3633973598480225s
epoch 75: train_loss: 1.36840; Allocated: 841728; Reserved: 4194304; time used = 4.356533050537109s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 68.9262490272522.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.6033638492654886, 'samples': 0.6086956521739131, 'weighted': 0.6066962260832539, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3126.50it/s]100%|██████████| 1500/1500 [00:00<00:00, 5609.78it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.343513488769531s
epoch 10: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.1408774852752686s
epoch 15: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.159904956817627s
epoch 20: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.216937780380249s
epoch 25: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.333123445510864s
epoch 30: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.161569356918335s
epoch 35: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.148633241653442s
epoch 40: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.182842493057251s
epoch 45: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.37114405632019s
epoch 50: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.14963698387146s
epoch 55: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.165648937225342s
epoch 60: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.371447563171387s
epoch 65: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.159650802612305s
epoch 70: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.143732786178589s
epoch 75: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.2084996700286865s
epoch 80: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.326474905014038s
epoch 85: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.173993110656738s
epoch 90: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.303021192550659s
epoch 95: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.4574596881866455s
epoch 100: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.199504137039185s
epoch 105: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.178077697753906s
epoch 110: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.147589206695557s
epoch 115: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.405391693115234s
epoch 120: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.21524977684021s
epoch 125: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.175796270370483s
epoch 130: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.250349283218384s
epoch 135: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.388689756393433s
epoch 140: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.193854808807373s
epoch 145: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.165637016296387s
epoch 150: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.35343337059021s
epoch 155: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.105735778808594s
epoch 160: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.177232027053833s
epoch 165: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.183778524398804s
epoch 170: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.388112783432007s
epoch 175: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.121401786804199s
epoch 180: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.143650054931641s
epoch 185: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.306638240814209s
epoch 190: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.175442218780518s
epoch 195: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.279724359512329s
epoch 200: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.134667158126831s
epoch 205: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.362269163131714s
epoch 210: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.16647744178772s
epoch 215: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.213998556137085s
epoch 220: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.186455249786377s
epoch 225: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.316799640655518s
epoch 230: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.154059171676636s
epoch 235: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.242854356765747s
epoch 240: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.320080518722534s
epoch 245: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.162876129150391s
epoch 250: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.117304563522339s
epoch 255: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.183191537857056s
epoch 260: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.385057210922241s
epoch 265: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.176132440567017s
epoch 270: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.21529483795166s
epoch 275: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.324360370635986s
epoch 280: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.126353025436401s
epoch 285: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.171038627624512s
epoch 290: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.177647113800049s
epoch 295: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.295081853866577s
epoch 300: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.239755868911743s
epoch 305: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.206729412078857s
epoch 310: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.402625322341919s
epoch 315: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.178120136260986s
epoch 320: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.185869455337524s
epoch 325: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.189162492752075s
epoch 330: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.320527791976929s
epoch 335: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.072173595428467s
epoch 340: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.052232503890991s
epoch 345: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.179734706878662s
epoch 350: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.307461500167847s
epoch 355: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.19875168800354s
epoch 360: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.224354267120361s
epoch 365: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.3192174434661865s
epoch 370: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.205020427703857s
epoch 375: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.185254096984863s
epoch 380: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.076078414916992s
epoch 385: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.221904993057251s
epoch 390: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.067115068435669s
epoch 395: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.173965215682983s
epoch 400: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.389239072799683s
epoch 405: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.175618648529053s
epoch 410: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.179208993911743s
epoch 415: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.098011255264282s
epoch 420: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.2845072746276855s
epoch 425: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.078966856002808s
epoch 430: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.115621328353882s
epoch 435: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.251530885696411s
epoch 440: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.337995290756226s
epoch 445: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.190669775009155s
epoch 450: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.142091751098633s
epoch 455: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.333151578903198s
epoch 460: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.121582746505737s
epoch 465: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.142293214797974s
epoch 470: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.197955369949341s
epoch 475: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.26936149597168s
epoch 480: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.114621639251709s
epoch 485: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.169600248336792s
epoch 490: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.38873028755188s
epoch 495: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.188242435455322s
epoch 500: train_loss: 0.69315; Allocated: 774144; Reserved: 16777216; time used = 7.142347812652588s
Finished training. Time used = 725.068000793457.
Training classifier using 80.00% nodes...
{'micro': 0.47333333333333333, 'macro': 0.38331365604092876, 'samples': 0.47333333333333333, 'weighted': 0.37181424635970095, 'accuracy': 0.47333333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2516.98it/s]100%|██████████| 1500/1500 [00:00<00:00, 4765.25it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.41786; Allocated: 838144; Reserved: 8388608; time used = 33.79609966278076s
epoch 10: train_loss: 1.38868; Allocated: 838144; Reserved: 8388608; time used = 33.21835660934448s
epoch 15: train_loss: 1.38816; Allocated: 838144; Reserved: 6291456; time used = 33.66503953933716s
epoch 20: train_loss: 1.38774; Allocated: 838144; Reserved: 6291456; time used = 33.44308876991272s
epoch 25: train_loss: 1.38727; Allocated: 838144; Reserved: 8388608; time used = 33.723559617996216s
epoch 30: train_loss: 1.38649; Allocated: 838144; Reserved: 6291456; time used = 33.56362771987915s
epoch 35: train_loss: 1.38531; Allocated: 838144; Reserved: 6291456; time used = 33.54011869430542s
epoch 40: train_loss: 1.38061; Allocated: 838144; Reserved: 8388608; time used = 33.24736189842224s
epoch 45: train_loss: 1.36737; Allocated: 838144; Reserved: 6291456; time used = 33.76848483085632s
epoch 50: train_loss: 1.34588; Allocated: 838144; Reserved: 8388608; time used = 33.37034463882446s
epoch 55: train_loss: 1.49604; Allocated: 838144; Reserved: 8388608; time used = 33.353909969329834s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 371.78881335258484.
Training classifier using 80.00% nodes...
{'micro': 0.39666666666666667, 'macro': 0.3905015515715338, 'samples': 0.39666666666666667, 'weighted': 0.3882247072715789, 'accuracy': 0.39666666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.36408; Allocated: 53563904; Reserved: 109051904; time used = 3.8678600788116455s
epoch 10: train_loss: 0.22682; Allocated: 53563904; Reserved: 109051904; time used = 4.043591737747192s
epoch 15: train_loss: 0.17576; Allocated: 53563904; Reserved: 109051904; time used = 3.871601104736328s
epoch 20: train_loss: 0.13718; Allocated: 53563904; Reserved: 109051904; time used = 4.02339768409729s
epoch 25: train_loss: 0.06579; Allocated: 53563904; Reserved: 109051904; time used = 3.8642578125s
epoch 30: train_loss: 0.03340; Allocated: 53563904; Reserved: 109051904; time used = 3.8688416481018066s
epoch 35: train_loss: 0.03080; Allocated: 53563904; Reserved: 109051904; time used = 4.004555702209473s
epoch 40: train_loss: 0.01018; Allocated: 53563904; Reserved: 109051904; time used = 3.858995199203491s
epoch 45: train_loss: 0.01355; Allocated: 53563904; Reserved: 109051904; time used = 4.01379919052124s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.31244921684265.
Training classifier using 20.00% nodes...
{'micro': 0.4159851301115241, 'macro': 0.30931865074607784, 'samples': 0.4203606311044328, 'weighted': 0.35248798886054383, 'accuracy': 0.4203606311044328}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.60768; Allocated: 521728; Reserved: 2097152; time used = 2.857640266418457s
epoch 10: train_loss: 0.50437; Allocated: 521728; Reserved: 2097152; time used = 2.8781559467315674s
epoch 15: train_loss: 0.43622; Allocated: 521728; Reserved: 2097152; time used = 2.893512487411499s
epoch 20: train_loss: 0.51098; Allocated: 521728; Reserved: 2097152; time used = 2.747847557067871s
epoch 25: train_loss: 0.45473; Allocated: 521728; Reserved: 2097152; time used = 2.7516255378723145s
epoch 30: train_loss: 0.39415; Allocated: 521728; Reserved: 2097152; time used = 2.8696446418762207s
epoch 35: train_loss: 0.38303; Allocated: 521728; Reserved: 2097152; time used = 2.750664234161377s
epoch 40: train_loss: 0.34501; Allocated: 521728; Reserved: 2097152; time used = 2.738638162612915s
epoch 45: train_loss: 0.29027; Allocated: 521728; Reserved: 2097152; time used = 2.9744200706481934s
epoch 50: train_loss: 0.41793; Allocated: 521728; Reserved: 2097152; time used = 2.7361416816711426s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.75490713119507.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7490829053558328, 'samples': 0.7631578947368421, 'weighted': 0.7584662316098391, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3095.87it/s]100%|██████████| 1000/1000 [00:00<00:00, 4429.40it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 253, in main
    res = task.evaluate(model, res, graph)  # evaluate
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/graph_classification.py", line 21, in evaluate
    return self._classify(dataset, res, 0)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/graph_classification.py", line 34, in _classify
    return clf.train_and_evaluate(dataset, self.train_kwargs()['clf_ratio'], seed=seed)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/classify.py", line 80, in train_and_evaluate
    self.train(X_train, Y_train, graph.labels()[1])
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/classify.py", line 50, in train
    self.clf.fit(X_train, Y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/multiclass.py", line 239, in fit
    for i, column in enumerate(columns))
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 1004, in __call__
    if self.dispatch_one_batch(iterator):
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 835, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 754, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py", line 209, in apply_async
    result = ImmediateResult(func)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py", line 590, in __init__
    self.results = batch()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 256, in __call__
    for func, args, kwargs in self.items]
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 256, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/multiclass.py", line 79, in _fit_binary
    estimator.fit(X, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py", line 2004, in fit
    accept_large_sparse=solver != 'liblinear')
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 755, in check_X_y
    estimator=estimator)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 578, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 60, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.64697; Allocated: 839168; Reserved: 8388608; time used = 51.64737510681152s
epoch 10: train_loss: 0.68789; Allocated: 839168; Reserved: 10485760; time used = 50.49173831939697s
epoch 15: train_loss: 0.61085; Allocated: 839168; Reserved: 12582912; time used = 50.71764922142029s
epoch 20: train_loss: 0.69303; Allocated: 839168; Reserved: 10485760; time used = 51.12677049636841s
epoch 25: train_loss: 0.69303; Allocated: 839168; Reserved: 10485760; time used = 51.315494775772095s
epoch 30: train_loss: 0.69288; Allocated: 839168; Reserved: 10485760; time used = 51.13260865211487s
epoch 35: train_loss: 0.69210; Allocated: 839168; Reserved: 12582912; time used = 50.755781173706055s
epoch 40: train_loss: 0.68781; Allocated: 839168; Reserved: 12582912; time used = 50.903260231018066s
epoch 45: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.719170331954956s
epoch 50: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 50.63640356063843s
epoch 55: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.682196855545044s
epoch 60: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.83669328689575s
epoch 65: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.02304220199585s
epoch 70: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.027087926864624s
epoch 75: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 52.578835010528564s
epoch 80: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 51.2092821598053s
epoch 85: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 51.179442167282104s
epoch 90: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.79793047904968s
epoch 95: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.83420515060425s
epoch 100: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.79084825515747s
epoch 105: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.76119947433472s
epoch 110: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 51.81609892845154s
epoch 115: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.25997710227966s
epoch 120: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 50.48490071296692s
epoch 125: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.950485944747925s
epoch 130: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 50.93606615066528s
epoch 135: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.81924223899841s
epoch 140: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 50.91353511810303s
epoch 145: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 50.71001720428467s
epoch 150: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 50.242693185806274s
epoch 155: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.51781988143921s
epoch 160: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.58163022994995s
epoch 165: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.32424187660217s
epoch 170: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 50.96529722213745s
epoch 175: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 51.12149429321289s
epoch 180: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 51.28321290016174s
epoch 185: train_loss: nan; Allocated: 839168; Reserved: 14680064; time used = 50.69488334655762s
epoch 190: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 50.35194420814514s
epoch 195: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.06792593002319s
epoch 200: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 50.985180139541626s
epoch 205: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.48596143722534s
epoch 210: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 51.05623769760132s
epoch 215: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.99953746795654s
epoch 220: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.0843780040741s
epoch 225: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.65920567512512s
epoch 230: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 50.824211835861206s
epoch 235: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.17675852775574s
epoch 240: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.07867932319641s
epoch 245: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.53256630897522s
epoch 250: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 50.86534571647644s
epoch 255: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.991358280181885s
epoch 260: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.688759088516235s
epoch 265: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.117337465286255s
epoch 270: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 51.58970856666565s
epoch 275: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 52.52361583709717s
epoch 280: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 50.63653898239136s
epoch 285: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.40852379798889s
epoch 290: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.08342695236206s
epoch 295: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.50551724433899s
epoch 300: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.76879096031189s
epoch 305: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.110854148864746s
epoch 310: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.020809173583984s
epoch 315: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 50.79074764251709s
epoch 320: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.147392988204956s
epoch 325: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.69031310081482s
epoch 330: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.55440020561218s
epoch 335: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 50.831722021102905s
epoch 340: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.011332750320435s
epoch 345: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 50.85710787773132s
epoch 350: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.2772319316864s
epoch 355: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.60659623146057s
epoch 360: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 50.97202515602112s
epoch 365: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.09688973426819s
epoch 370: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.94884920120239s
epoch 375: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 50.32918453216553s
epoch 380: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 50.96432542800903s
epoch 385: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.86989116668701s
epoch 390: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 50.918621301651s
epoch 395: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.00806427001953s
epoch 400: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.78416395187378s
epoch 405: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.13823318481445s
epoch 410: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 50.926337480545044s
epoch 415: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 50.90697646141052s
epoch 420: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.447184801101685s
epoch 425: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 51.288111448287964s
epoch 430: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 51.71130323410034s
epoch 435: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.041074991226196s
epoch 440: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.40550971031189s
epoch 445: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 50.98291850090027s
epoch 450: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.1770703792572s
epoch 455: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.480456829071045s
epoch 460: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.294758319854736s
epoch 465: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.277132987976074s
epoch 470: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.266579151153564s
epoch 475: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 52.50401496887207s
epoch 480: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 52.706422090530396s
epoch 485: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 52.73218107223511s
epoch 490: train_loss: nan; Allocated: 839168; Reserved: 10485760; time used = 51.04292416572571s
epoch 495: train_loss: nan; Allocated: 839168; Reserved: 12582912; time used = 50.77489161491394s
epoch 500: train_loss: nan; Allocated: 839168; Reserved: 8388608; time used = 51.526466608047485s
Finished training. Time used = 5109.99764585495.
Training classifier using 80.00% nodes...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2535.80it/s] 83%|████████▎ | 1655/2000 [00:00<00:00, 3288.95it/s]100%|██████████| 2000/2000 [00:00<00:00, 5511.16it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69294; Allocated: 3928064; Reserved: 31457280; time used = 115.17599415779114s
epoch 10: train_loss: 0.68694; Allocated: 3928064; Reserved: 31457280; time used = 107.4528980255127s
epoch 15: train_loss: 0.68959; Allocated: 3928064; Reserved: 31457280; time used = 107.90913414955139s
epoch 20: train_loss: 0.69280; Allocated: 3928064; Reserved: 33554432; time used = 107.83762049674988s
epoch 25: train_loss: 0.69114; Allocated: 3928064; Reserved: 31457280; time used = 114.36413550376892s
epoch 30: train_loss: 0.65409; Allocated: 3928064; Reserved: 31457280; time used = 112.06049227714539s
epoch 35: train_loss: 0.61740; Allocated: 3928064; Reserved: 31457280; time used = 111.42260956764221s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 846.7877843379974.
Training classifier using 80.00% nodes...
{'micro': 0.6125, 'macro': 0.5610028959647669, 'samples': 0.6125, 'weighted': 0.5564922007208049, 'accuracy': 0.6125}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.37986; Allocated: 843776; Reserved: 4194304; time used = 0.79506516456604s
epoch 10: train_loss: 1.35996; Allocated: 843776; Reserved: 6291456; time used = 0.798907995223999s
epoch 15: train_loss: 1.34857; Allocated: 843776; Reserved: 4194304; time used = 0.7975718975067139s
epoch 20: train_loss: 1.33091; Allocated: 843776; Reserved: 4194304; time used = 0.798060417175293s
epoch 25: train_loss: 1.32996; Allocated: 843776; Reserved: 4194304; time used = 0.7972075939178467s
epoch 30: train_loss: 1.31467; Allocated: 843776; Reserved: 4194304; time used = 0.7993497848510742s
epoch 35: train_loss: 1.32927; Allocated: 843776; Reserved: 4194304; time used = 1.1031215190887451s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.64018726348877.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.45526315789473687, 'samples': 0.5652173913043478, 'weighted': 0.47299771167048055, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.51122; Allocated: 866816; Reserved: 6291456; time used = 4.222259044647217s
epoch 10: train_loss: 0.49862; Allocated: 866816; Reserved: 6291456; time used = 4.273800849914551s
epoch 15: train_loss: 0.50344; Allocated: 866816; Reserved: 6291456; time used = 4.430264949798584s
epoch 20: train_loss: 0.49469; Allocated: 866816; Reserved: 6291456; time used = 4.463893175125122s
epoch 25: train_loss: 0.48177; Allocated: 866816; Reserved: 6291456; time used = 4.488502502441406s
epoch 30: train_loss: 0.47764; Allocated: 866816; Reserved: 6291456; time used = 4.534336566925049s
epoch 35: train_loss: 0.46447; Allocated: 866816; Reserved: 6291456; time used = 4.199298620223999s
epoch 40: train_loss: 0.47711; Allocated: 866816; Reserved: 6291456; time used = 4.2500505447387695s
epoch 45: train_loss: 0.45913; Allocated: 866816; Reserved: 6291456; time used = 4.302629232406616s
epoch 50: train_loss: 0.47268; Allocated: 866816; Reserved: 6291456; time used = 4.594190359115601s
epoch 55: train_loss: 0.46698; Allocated: 866816; Reserved: 6291456; time used = 4.343724250793457s
epoch 60: train_loss: 0.45477; Allocated: 866816; Reserved: 6291456; time used = 4.703929424285889s
epoch 65: train_loss: 0.45341; Allocated: 866816; Reserved: 6291456; time used = 4.311120510101318s
epoch 70: train_loss: 0.45304; Allocated: 866816; Reserved: 6291456; time used = 4.495562553405762s
epoch 75: train_loss: 0.46366; Allocated: 866816; Reserved: 6291456; time used = 4.328606367111206s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 69.32113671302795.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.731764705882353, 'samples': 0.7631578947368421, 'weighted': 0.7462538699690403, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.55799; Allocated: 41693184; Reserved: 65011712; time used = 1.8889977931976318s
epoch 10: train_loss: 0.37253; Allocated: 41693184; Reserved: 65011712; time used = 1.856752634048462s
epoch 15: train_loss: 0.24256; Allocated: 41693184; Reserved: 65011712; time used = 1.8377165794372559s
epoch 20: train_loss: 0.12799; Allocated: 41693184; Reserved: 65011712; time used = 1.8426580429077148s
epoch 25: train_loss: 0.09544; Allocated: 41693184; Reserved: 65011712; time used = 1.8441612720489502s
epoch 30: train_loss: 0.05527; Allocated: 41693184; Reserved: 65011712; time used = 1.856877088546753s
epoch 35: train_loss: 0.03187; Allocated: 41693184; Reserved: 65011712; time used = 1.8693437576293945s
epoch 40: train_loss: 0.04777; Allocated: 41693184; Reserved: 65011712; time used = 1.8595166206359863s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 20.321917295455933.
Training classifier using 20.00% nodes...
{'micro': 0.6662862939013566, 'macro': 0.6663426424981118, 'samples': 0.6662862939013566, 'weighted': 0.6586858758460339, 'accuracy': 0.6662862939013566}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2991.79it/s] 81%|████████▏ | 1629/2000 [00:00<00:00, 3806.76it/s]100%|██████████| 2000/2000 [00:00<00:00, 6060.48it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 41.21083; Allocated: 3785728; Reserved: 29360128; time used = 100.81516242027283s
epoch 10: train_loss: 19.73596; Allocated: 3785728; Reserved: 29360128; time used = 102.07438826560974s
epoch 15: train_loss: 10.99466; Allocated: 3785728; Reserved: 29360128; time used = 103.16575622558594s
epoch 20: train_loss: 7.48604; Allocated: 3785728; Reserved: 29360128; time used = 100.7739987373352s
epoch 25: train_loss: 11.53640; Allocated: 3785728; Reserved: 29360128; time used = 102.95510029792786s
epoch 30: train_loss: 6.63053; Allocated: 3785728; Reserved: 31457280; time used = 100.9215955734253s
epoch 35: train_loss: 5.85899; Allocated: 3785728; Reserved: 29360128; time used = 100.75739407539368s
epoch 40: train_loss: 2.08794; Allocated: 3785728; Reserved: 29360128; time used = 103.79771327972412s
epoch 45: train_loss: 2.00569; Allocated: 3785728; Reserved: 29360128; time used = 99.39700317382812s
epoch 50: train_loss: 1.48769; Allocated: 3785728; Reserved: 31457280; time used = 104.3468770980835s
epoch 55: train_loss: 2.13459; Allocated: 3785728; Reserved: 29360128; time used = 100.71114587783813s
epoch 60: train_loss: 3.12108; Allocated: 3785728; Reserved: 29360128; time used = 100.27246403694153s
epoch 65: train_loss: 4.01198; Allocated: 3785728; Reserved: 29360128; time used = 102.68947839736938s
epoch 70: train_loss: 2.44061; Allocated: 3785728; Reserved: 29360128; time used = 99.32226467132568s
epoch 75: train_loss: 1.69397; Allocated: 3785728; Reserved: 29360128; time used = 99.71661615371704s
epoch 80: train_loss: 2.75054; Allocated: 3785728; Reserved: 29360128; time used = 100.28017330169678s
epoch 85: train_loss: 2.98061; Allocated: 3785728; Reserved: 29360128; time used = 100.14077734947205s
epoch 90: train_loss: 1.58556; Allocated: 3785728; Reserved: 29360128; time used = 101.13705205917358s
epoch 95: train_loss: 3.73259; Allocated: 3785728; Reserved: 29360128; time used = 101.24179792404175s
epoch 100: train_loss: 2.24954; Allocated: 3785728; Reserved: 29360128; time used = 102.16502857208252s
epoch 105: train_loss: 2.56760; Allocated: 3785728; Reserved: 29360128; time used = 100.01622104644775s
epoch 110: train_loss: 2.84821; Allocated: 3785728; Reserved: 29360128; time used = 101.13295650482178s
epoch 115: train_loss: 1.94457; Allocated: 3785728; Reserved: 29360128; time used = 102.00170230865479s
epoch 120: train_loss: 1.36359; Allocated: 3785728; Reserved: 29360128; time used = 99.50471663475037s
epoch 125: train_loss: 2.12357; Allocated: 3785728; Reserved: 29360128; time used = 100.7781035900116s
epoch 130: train_loss: 2.63654; Allocated: 3785728; Reserved: 29360128; time used = 100.57091808319092s
epoch 135: train_loss: 1.62160; Allocated: 3785728; Reserved: 29360128; time used = 99.71852159500122s
epoch 140: train_loss: 2.05313; Allocated: 3785728; Reserved: 29360128; time used = 101.31828331947327s
epoch 145: train_loss: 1.57650; Allocated: 3785728; Reserved: 31457280; time used = 101.9257755279541s
epoch 150: train_loss: 1.17852; Allocated: 3785728; Reserved: 29360128; time used = 101.7285566329956s
epoch 155: train_loss: 1.17843; Allocated: 3785728; Reserved: 29360128; time used = 102.31933522224426s
epoch 160: train_loss: 1.31510; Allocated: 3785728; Reserved: 29360128; time used = 102.51726007461548s
epoch 165: train_loss: 1.30652; Allocated: 3785728; Reserved: 29360128; time used = 103.11053538322449s
epoch 170: train_loss: 1.26965; Allocated: 3785728; Reserved: 29360128; time used = 101.11846256256104s
epoch 175: train_loss: 1.26556; Allocated: 3785728; Reserved: 29360128; time used = 102.62085700035095s
epoch 180: train_loss: 1.29882; Allocated: 3785728; Reserved: 29360128; time used = 102.14087677001953s
epoch 185: train_loss: 1.30887; Allocated: 3785728; Reserved: 29360128; time used = 104.2374792098999s
epoch 190: train_loss: 1.26625; Allocated: 3785728; Reserved: 29360128; time used = 100.46338844299316s
epoch 195: train_loss: 1.19955; Allocated: 3785728; Reserved: 29360128; time used = 99.48408627510071s
epoch 200: train_loss: 1.28543; Allocated: 3785728; Reserved: 29360128; time used = 102.07431817054749s
epoch 205: train_loss: 1.23531; Allocated: 3785728; Reserved: 29360128; time used = 98.65963220596313s
epoch 210: train_loss: 1.22217; Allocated: 3785728; Reserved: 29360128; time used = 103.15881705284119s
epoch 215: train_loss: 1.17386; Allocated: 3785728; Reserved: 29360128; time used = 101.10958933830261s
epoch 220: train_loss: 1.23157; Allocated: 3785728; Reserved: 29360128; time used = 100.5522825717926s
epoch 225: train_loss: 1.19038; Allocated: 3785728; Reserved: 29360128; time used = 101.48967456817627s
epoch 230: train_loss: 1.17045; Allocated: 3785728; Reserved: 29360128; time used = 100.45214629173279s
epoch 235: train_loss: 1.14672; Allocated: 3785728; Reserved: 29360128; time used = 101.70606756210327s
epoch 240: train_loss: 1.22680; Allocated: 3785728; Reserved: 29360128; time used = 105.08478379249573s
epoch 245: train_loss: 1.14346; Allocated: 3785728; Reserved: 29360128; time used = 102.4204535484314s
epoch 250: train_loss: 1.19847; Allocated: 3785728; Reserved: 29360128; time used = 99.51521801948547s
epoch 255: train_loss: 1.13728; Allocated: 3785728; Reserved: 29360128; time used = 97.2592511177063s
epoch 260: train_loss: 1.20887; Allocated: 3785728; Reserved: 29360128; time used = 99.67473411560059s
epoch 265: train_loss: 1.19001; Allocated: 3785728; Reserved: 29360128; time used = 102.23434591293335s
epoch 270: train_loss: 1.16828; Allocated: 3785728; Reserved: 31457280; time used = 101.92856669425964s
epoch 275: train_loss: 1.12921; Allocated: 3785728; Reserved: 31457280; time used = 98.5980134010315s
epoch 280: train_loss: 1.18673; Allocated: 3785728; Reserved: 29360128; time used = 100.24718046188354s
epoch 285: train_loss: 1.13085; Allocated: 3785728; Reserved: 29360128; time used = 100.27440786361694s
epoch 290: train_loss: 1.15998; Allocated: 3785728; Reserved: 29360128; time used = 102.08843517303467s
epoch 295: train_loss: 1.12792; Allocated: 3785728; Reserved: 29360128; time used = 100.64112782478333s
epoch 300: train_loss: 1.17134; Allocated: 3785728; Reserved: 29360128; time used = 102.14194297790527s
epoch 305: train_loss: 1.14221; Allocated: 3785728; Reserved: 29360128; time used = 101.41615772247314s
epoch 310: train_loss: 1.15456; Allocated: 3785728; Reserved: 29360128; time used = 100.3744592666626s
epoch 315: train_loss: 1.11674; Allocated: 3785728; Reserved: 29360128; time used = 103.541996717453s
epoch 320: train_loss: 1.16439; Allocated: 3785728; Reserved: 29360128; time used = 100.31940078735352s
epoch 325: train_loss: 1.12716; Allocated: 3785728; Reserved: 29360128; time used = 104.36117649078369s
epoch 330: train_loss: 1.14656; Allocated: 3785728; Reserved: 29360128; time used = 102.27042770385742s
epoch 335: train_loss: 1.10714; Allocated: 3785728; Reserved: 31457280; time used = 102.79850316047668s
epoch 340: train_loss: 1.14252; Allocated: 3785728; Reserved: 29360128; time used = 102.56311917304993s
epoch 345: train_loss: 1.11558; Allocated: 3785728; Reserved: 29360128; time used = 102.86186957359314s
epoch 350: train_loss: 1.15473; Allocated: 3785728; Reserved: 29360128; time used = 100.0535216331482s
epoch 355: train_loss: 1.11942; Allocated: 3785728; Reserved: 29360128; time used = 102.63761830329895s
epoch 360: train_loss: 1.12700; Allocated: 3785728; Reserved: 29360128; time used = 102.04223132133484s
epoch 365: train_loss: 1.09407; Allocated: 3785728; Reserved: 31457280; time used = 102.63959312438965s
epoch 370: train_loss: 1.13387; Allocated: 3785728; Reserved: 29360128; time used = 102.13604092597961s
epoch 375: train_loss: 1.09838; Allocated: 3785728; Reserved: 29360128; time used = 101.95120191574097s
epoch 380: train_loss: 1.12454; Allocated: 3785728; Reserved: 29360128; time used = 104.54279685020447s
epoch 385: train_loss: 1.09599; Allocated: 3785728; Reserved: 29360128; time used = 101.51157927513123s
epoch 390: train_loss: 1.13323; Allocated: 3785728; Reserved: 29360128; time used = 97.76593208312988s
epoch 395: train_loss: 1.10454; Allocated: 3785728; Reserved: 29360128; time used = 99.6914644241333s
epoch 400: train_loss: 1.11511; Allocated: 3785728; Reserved: 29360128; time used = 102.87871193885803s
epoch 405: train_loss: 1.08681; Allocated: 3785728; Reserved: 29360128; time used = 100.7431869506836s
epoch 410: train_loss: 1.12177; Allocated: 3785728; Reserved: 29360128; time used = 100.25957012176514s
epoch 415: train_loss: 1.09149; Allocated: 3785728; Reserved: 29360128; time used = 103.36742925643921s
epoch 420: train_loss: 1.15042; Allocated: 3785728; Reserved: 29360128; time used = 101.41665506362915s
epoch 425: train_loss: 1.12696; Allocated: 3785728; Reserved: 29360128; time used = 101.78717303276062s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8704.1973361969.
Training classifier using 80.00% nodes...
{'micro': 0.5975, 'macro': 0.594741710768921, 'samples': 0.5975, 'weighted': 0.5937386965030741, 'accuracy': 0.5975}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.61477; Allocated: 985088; Reserved: 6291456; time used = 4.440771579742432s
epoch 10: train_loss: 1.45424; Allocated: 985088; Reserved: 6291456; time used = 4.312946319580078s
epoch 15: train_loss: 1.38798; Allocated: 985088; Reserved: 6291456; time used = 4.366400241851807s
epoch 20: train_loss: 1.37050; Allocated: 985088; Reserved: 6291456; time used = 4.316999197006226s
epoch 25: train_loss: 1.34206; Allocated: 985088; Reserved: 8388608; time used = 4.26343560218811s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 26.69837522506714.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.5739833936555248, 'samples': 0.5797101449275363, 'weighted': 0.5775626132005319, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 212.45833; Allocated: 17547264; Reserved: 44040192; time used = 4.3997862339019775s
epoch 10: train_loss: 11.73970; Allocated: 17547264; Reserved: 44040192; time used = 4.527522087097168s
epoch 15: train_loss: 4.91339; Allocated: 17547264; Reserved: 44040192; time used = 4.405404567718506s
epoch 20: train_loss: 37.72088; Allocated: 17547264; Reserved: 44040192; time used = 4.50768256187439s
epoch 25: train_loss: 1.97662; Allocated: 17547264; Reserved: 44040192; time used = 4.3965981006622314s
epoch 30: train_loss: 3.15008; Allocated: 17547264; Reserved: 44040192; time used = 4.535584211349487s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 30.069897413253784.
Training classifier using 20.00% nodes...
{'micro': 0.509460083064144, 'macro': 0.4251808163355779, 'samples': 0.509460083064144, 'weighted': 0.46736491926690765, 'accuracy': 0.509460083064144}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3084.52it/s] 82%|████████▏ | 1646/2000 [00:00<00:00, 3918.87it/s]100%|██████████| 2000/2000 [00:00<00:00, 6219.03it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68681; Allocated: 3847680; Reserved: 31457280; time used = 1055.3152194023132s
epoch 10: train_loss: 0.63884; Allocated: 3847680; Reserved: 31457280; time used = 1053.194684267044s
epoch 15: train_loss: 0.57557; Allocated: 3847680; Reserved: 33554432; time used = 1059.5958213806152s
epoch 20: train_loss: 0.54503; Allocated: 3847680; Reserved: 33554432; time used = 1054.701719045639s
epoch 25: train_loss: 0.52531; Allocated: 3847680; Reserved: 31457280; time used = 1054.6120746135712s
epoch 30: train_loss: 0.55575; Allocated: 3847680; Reserved: 31457280; time used = 1069.7117822170258s
epoch 35: train_loss: 0.55661; Allocated: 3847680; Reserved: 31457280; time used = 1087.4891123771667s
epoch 40: train_loss: 0.54852; Allocated: 3847680; Reserved: 31457280; time used = 1090.0807645320892s
epoch 45: train_loss: 0.52810; Allocated: 3847680; Reserved: 31457280; time used = 1088.9860622882843s
epoch 50: train_loss: 0.52362; Allocated: 3847680; Reserved: 31457280; time used = 1100.692275762558s
epoch 55: train_loss: 0.51451; Allocated: 3847680; Reserved: 33554432; time used = 1116.9769279956818s
epoch 60: train_loss: 0.52020; Allocated: 3847680; Reserved: 31457280; time used = 1124.726636648178s
epoch 65: train_loss: 0.50919; Allocated: 3847680; Reserved: 33554432; time used = 1124.610908985138s
epoch 70: train_loss: 0.50565; Allocated: 3847680; Reserved: 33554432; time used = 1133.4082782268524s
epoch 75: train_loss: 0.50609; Allocated: 3847680; Reserved: 33554432; time used = 1125.4492137432098s
epoch 80: train_loss: 0.49905; Allocated: 3847680; Reserved: 31457280; time used = 1121.0933389663696s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 18138.048953533173.
Training classifier using 80.00% nodes...
{'micro': 0.6875, 'macro': 0.6834942237695838, 'samples': 0.6875, 'weighted': 0.6824260167748061, 'accuracy': 0.6875}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fdac05ec050>
total iter: 500
epoch 5: train_loss: 33.59544; Allocated: 17534976; Reserved: 44040192; time used = 4.706772565841675s
epoch 10: train_loss: 55.75094; Allocated: 17534976; Reserved: 44040192; time used = 4.80980110168457s
epoch 15: train_loss: 43.67214; Allocated: 17534976; Reserved: 44040192; time used = 4.563228607177734s
epoch 20: train_loss: 19.88840; Allocated: 17534976; Reserved: 44040192; time used = 4.8401782512664795s
epoch 25: train_loss: 6.56483; Allocated: 17534976; Reserved: 44040192; time used = 4.633944034576416s
epoch 30: train_loss: 1.65405; Allocated: 17534976; Reserved: 44040192; time used = 4.747183799743652s
epoch 35: train_loss: 13.18272; Allocated: 17534976; Reserved: 44040192; time used = 4.61604642868042s
epoch 40: train_loss: 2.17231; Allocated: 17534976; Reserved: 44040192; time used = 4.790113687515259s
epoch 45: train_loss: 1.75331; Allocated: 17534976; Reserved: 44040192; time used = 4.619318008422852s
epoch 50: train_loss: 1.47314; Allocated: 17534976; Reserved: 44040192; time used = 4.763785362243652s
epoch 55: train_loss: 1.30830; Allocated: 17534976; Reserved: 44040192; time used = 4.62173867225647s
epoch 60: train_loss: 1.25937; Allocated: 17534976; Reserved: 44040192; time used = 4.639000654220581s
epoch 65: train_loss: 1.28496; Allocated: 17534976; Reserved: 44040192; time used = 4.748768091201782s
epoch 70: train_loss: 1.20963; Allocated: 17534976; Reserved: 44040192; time used = 4.66662859916687s
epoch 75: train_loss: 1.19758; Allocated: 17534976; Reserved: 44040192; time used = 4.809218645095825s
epoch 80: train_loss: 1.18591; Allocated: 17534976; Reserved: 44040192; time used = 4.60197377204895s
epoch 85: train_loss: 1.18420; Allocated: 17534976; Reserved: 44040192; time used = 4.7345592975616455s
epoch 90: train_loss: 1.15409; Allocated: 17534976; Reserved: 44040192; time used = 4.641000032424927s
epoch 95: train_loss: 1.13292; Allocated: 17534976; Reserved: 44040192; time used = 4.7713377475738525s
epoch 100: train_loss: 1.12144; Allocated: 17534976; Reserved: 44040192; time used = 4.616990804672241s
epoch 105: train_loss: 1.10731; Allocated: 17534976; Reserved: 44040192; time used = 4.754411697387695s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 105.93068099021912.
Training classifier using 20.00% nodes...
{'micro': 0.5440701430549146, 'macro': 0.5198140969822809, 'samples': 0.5440701430549146, 'weighted': 0.5343353303791402, 'accuracy': 0.5440701430549146}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7ff2c181b640>
total iter: 500
epoch 5: train_loss: 0.64706; Allocated: 919552; Reserved: 4194304; time used = 4.119612216949463s
epoch 10: train_loss: 0.60432; Allocated: 919552; Reserved: 6291456; time used = 4.582591533660889s
epoch 15: train_loss: 0.52120; Allocated: 919552; Reserved: 6291456; time used = 4.118800640106201s
epoch 20: train_loss: 0.68767; Allocated: 919552; Reserved: 4194304; time used = 4.315171957015991s
epoch 25: train_loss: 0.67212; Allocated: 919552; Reserved: 4194304; time used = 4.1501829624176025s
epoch 30: train_loss: 0.62182; Allocated: 919552; Reserved: 4194304; time used = 4.250012159347534s
epoch 35: train_loss: 0.62848; Allocated: 919552; Reserved: 4194304; time used = 4.174781084060669s
epoch 40: train_loss: 0.51477; Allocated: 919552; Reserved: 4194304; time used = 4.2970781326293945s
epoch 45: train_loss: 0.50256; Allocated: 919552; Reserved: 4194304; time used = 4.120535135269165s
epoch 50: train_loss: 0.49887; Allocated: 919552; Reserved: 4194304; time used = 4.279463052749634s
epoch 55: train_loss: 0.48157; Allocated: 919552; Reserved: 4194304; time used = 4.112965822219849s
epoch 60: train_loss: 0.51133; Allocated: 919552; Reserved: 4194304; time used = 4.274681806564331s
epoch 65: train_loss: 0.45270; Allocated: 919552; Reserved: 4194304; time used = 4.064932346343994s
epoch 70: train_loss: 0.46817; Allocated: 919552; Reserved: 6291456; time used = 4.0505595207214355s
epoch 75: train_loss: 0.69314; Allocated: 919552; Reserved: 4194304; time used = 4.227373838424683s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 67.35755038261414.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f8f82090730>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.55903; Allocated: 731648; Reserved: 2097152; time used = 3.078287124633789s
epoch 10: train_loss: 0.47698; Allocated: 731648; Reserved: 2097152; time used = 3.0833187103271484s
epoch 15: train_loss: 0.38100; Allocated: 731648; Reserved: 2097152; time used = 3.2246546745300293s
epoch 20: train_loss: 0.22333; Allocated: 731648; Reserved: 2097152; time used = 3.054593801498413s
epoch 25: train_loss: 0.31759; Allocated: 731648; Reserved: 2097152; time used = 3.1174709796905518s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19.077637910842896.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.6570959803117309, 'samples': 0.7105263157894737, 'weighted': 0.6784681145028281, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3024.95it/s]100%|██████████| 1500/1500 [00:00<00:00, 5449.90it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fc969eda0f0>
total iter: 500
epoch 5: train_loss: 1.39300; Allocated: 551424; Reserved: 4194304; time used = 11.525536060333252s
epoch 10: train_loss: 1.38635; Allocated: 551424; Reserved: 6291456; time used = 11.570011377334595s
epoch 15: train_loss: 1.38659; Allocated: 551424; Reserved: 8388608; time used = 11.496305704116821s
epoch 20: train_loss: 1.38632; Allocated: 551424; Reserved: 8388608; time used = 11.67418646812439s
epoch 25: train_loss: 1.38630; Allocated: 551424; Reserved: 6291456; time used = 11.515944242477417s
epoch 30: train_loss: 1.38631; Allocated: 551424; Reserved: 6291456; time used = 11.507203340530396s
epoch 35: train_loss: 1.38630; Allocated: 551424; Reserved: 4194304; time used = 11.35722017288208s
epoch 40: train_loss: 1.38630; Allocated: 551424; Reserved: 6291456; time used = 11.650774717330933s
epoch 45: train_loss: 1.38630; Allocated: 551424; Reserved: 6291456; time used = 11.593876123428345s
epoch 50: train_loss: 1.38630; Allocated: 551424; Reserved: 4194304; time used = 11.409138202667236s
epoch 55: train_loss: 1.38630; Allocated: 551424; Reserved: 6291456; time used = 11.386977910995483s
epoch 60: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.390475273132324s
epoch 65: train_loss: 1.38630; Allocated: 551424; Reserved: 6291456; time used = 11.441824913024902s
epoch 70: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.497058153152466s
epoch 75: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.831761121749878s
epoch 80: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.443994045257568s
epoch 85: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.44943618774414s
epoch 90: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.491179943084717s
epoch 95: train_loss: 1.38629; Allocated: 551424; Reserved: 8388608; time used = 11.339828252792358s
epoch 100: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.440812110900879s
epoch 105: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.462820768356323s
epoch 110: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.48744797706604s
epoch 115: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.329562425613403s
epoch 120: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.429604768753052s
epoch 125: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.525845289230347s
epoch 130: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.540994644165039s
epoch 135: train_loss: 1.38629; Allocated: 551424; Reserved: 8388608; time used = 11.421978950500488s
epoch 140: train_loss: 1.38629; Allocated: 551424; Reserved: 8388608; time used = 11.527693748474121s
epoch 145: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.513183116912842s
epoch 150: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.408677577972412s
epoch 155: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.358019590377808s
epoch 160: train_loss: 1.38629; Allocated: 551424; Reserved: 8388608; time used = 11.511094093322754s
epoch 165: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.418025493621826s
epoch 170: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.337113380432129s
epoch 175: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.354494571685791s
epoch 180: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.421929121017456s
epoch 185: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.59900951385498s
epoch 190: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.385196447372437s
epoch 195: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.465228796005249s
epoch 200: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.474700212478638s
epoch 205: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.378117799758911s
epoch 210: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.53840947151184s
epoch 215: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.497900485992432s
epoch 220: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.46339464187622s
epoch 225: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.300700902938843s
epoch 230: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.516807079315186s
epoch 235: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.433857679367065s
epoch 240: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.516830682754517s
epoch 245: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.44200086593628s
epoch 250: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.414191007614136s
epoch 255: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.524571180343628s
epoch 260: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.434978723526001s
epoch 265: train_loss: 1.38629; Allocated: 551424; Reserved: 4194304; time used = 11.519040822982788s
epoch 270: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.3566153049469s
epoch 275: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.51167893409729s
epoch 280: train_loss: 1.38629; Allocated: 551424; Reserved: 6291456; time used = 11.446734189987183s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 650.3484890460968.
Training classifier using 80.00% nodes...
{'micro': 0.33, 'macro': 0.26578194033061403, 'samples': 0.33, 'weighted': 0.2578084821206956, 'accuracy': 0.33}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fa5305010a0>
total iter: 500
epoch 5: train_loss: 1.30076; Allocated: 53751808; Reserved: 159383552; time used = 0.4215068817138672s
epoch 10: train_loss: 1.10565; Allocated: 53751808; Reserved: 159383552; time used = 0.40858936309814453s
epoch 15: train_loss: 0.87233; Allocated: 53751808; Reserved: 159383552; time used = 0.4102604389190674s
epoch 20: train_loss: 0.68573; Allocated: 53751808; Reserved: 159383552; time used = 0.4038991928100586s
epoch 25: train_loss: 0.56041; Allocated: 53751808; Reserved: 159383552; time used = 0.4048173427581787s
epoch 30: train_loss: 0.45211; Allocated: 53751808; Reserved: 159383552; time used = 0.41559910774230957s
epoch 35: train_loss: 0.36448; Allocated: 53751808; Reserved: 159383552; time used = 0.41414833068847656s
epoch 40: train_loss: 0.30780; Allocated: 53751808; Reserved: 159383552; time used = 0.4094712734222412s
epoch 45: train_loss: 0.25412; Allocated: 53751808; Reserved: 159383552; time used = 0.4131441116333008s
epoch 50: train_loss: 0.21196; Allocated: 53751808; Reserved: 159383552; time used = 0.40972352027893066s
epoch 55: train_loss: 0.24330; Allocated: 53751808; Reserved: 159383552; time used = 0.4053332805633545s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8.155572175979614.
Training classifier using 20.00% nodes...
{'micro': 0.5546468401486989, 'macro': 0.5065247914040243, 'samples': 0.560480841472577, 'weighted': 0.5471064984954919, 'accuracy': 0.560480841472577}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3011.19it/s] 82%|████████▏ | 1647/2000 [00:00<00:00, 3835.93it/s]100%|██████████| 2000/2000 [00:00<00:00, 6126.36it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4db9d4e140>
head 0
total iter: 500
epoch 5: train_loss: 0.65433; Allocated: 3785216; Reserved: 33554432; time used = 809.8300263881683s
epoch 10: train_loss: 0.65336; Allocated: 3785216; Reserved: 35651584; time used = 810.1885783672333s
epoch 15: train_loss: 0.65160; Allocated: 3785216; Reserved: 33554432; time used = 807.2010424137115s
epoch 20: train_loss: 0.65105; Allocated: 3785216; Reserved: 31457280; time used = 806.0295343399048s
epoch 25: train_loss: 0.65146; Allocated: 3785216; Reserved: 31457280; time used = 810.9771921634674s
epoch 30: train_loss: 0.65108; Allocated: 3785216; Reserved: 33554432; time used = 810.8798823356628s
epoch 35: train_loss: 0.65099; Allocated: 3785216; Reserved: 31457280; time used = 811.1910581588745s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6316.104423284531.
Training classifier using 80.00% nodes...
{'micro': 0.7250000000000001, 'macro': 0.7241656009428521, 'samples': 0.725, 'weighted': 0.7237104741844078, 'accuracy': 0.725}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2457.15it/s]100%|██████████| 1000/1000 [00:00<00:00, 3639.86it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f63603822d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3073.62it/s]100%|██████████| 1000/1000 [00:00<00:00, 4410.10it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7efce1f4c280>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68309; Allocated: 769536; Reserved: 10485760; time used = 52.55954957008362s
epoch 10: train_loss: 0.67823; Allocated: 769536; Reserved: 10485760; time used = 52.85315918922424s
epoch 15: train_loss: 0.68728; Allocated: 769536; Reserved: 8388608; time used = 52.27047538757324s
epoch 20: train_loss: 0.64010; Allocated: 769536; Reserved: 8388608; time used = 53.229196310043335s
epoch 25: train_loss: 0.59086; Allocated: 769536; Reserved: 8388608; time used = 52.91324758529663s
epoch 30: train_loss: 0.41451; Allocated: 769536; Reserved: 8388608; time used = 53.31343650817871s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 351.951034784317.
Training classifier using 80.00% nodes...
{'micro': 0.675, 'macro': 0.6749268585431722, 'samples': 0.675, 'weighted': 0.6750243804856092, 'accuracy': 0.675}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2445.45it/s] 82%|████████▏ | 1641/2000 [00:00<00:00, 3178.33it/s]100%|██████████| 2000/2000 [00:00<00:00, 5376.99it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f615bceb140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3055.16it/s]100%|██████████| 1000/1000 [00:00<00:00, 4374.56it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f56691d8910>
total iter: 500
epoch 5: train_loss: 0.64587; Allocated: 428032; Reserved: 6291456; time used = 190.85521626472473s
epoch 10: train_loss: 0.53840; Allocated: 428032; Reserved: 8388608; time used = 192.71439027786255s
epoch 15: train_loss: 0.43523; Allocated: 428032; Reserved: 6291456; time used = 189.02582836151123s
epoch 20: train_loss: 0.23182; Allocated: 428032; Reserved: 6291456; time used = 190.6613359451294s
epoch 25: train_loss: 0.14921; Allocated: 428032; Reserved: 6291456; time used = 189.51877307891846s
epoch 30: train_loss: 0.12448; Allocated: 428032; Reserved: 6291456; time used = 189.59772324562073s
epoch 35: train_loss: 0.11279; Allocated: 428032; Reserved: 6291456; time used = 189.9687569141388s
epoch 40: train_loss: 0.10393; Allocated: 428032; Reserved: 8388608; time used = 188.19646739959717s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1639.4675872325897.
Training classifier using 80.00% nodes...
{'micro': 0.72, 'macro': 0.71997199719972, 'samples': 0.72, 'weighted': 0.72002800280028, 'accuracy': 0.72}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fa49b1c1780>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2886.19it/s]100%|██████████| 1000/1000 [00:00<00:00, 4182.38it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fcdbd5ea050>
total iter: 500
epoch 5: train_loss: 0.68225; Allocated: 775168; Reserved: 31457280; time used = 6.040959119796753s
epoch 10: train_loss: 0.69605; Allocated: 775168; Reserved: 31457280; time used = 6.243901252746582s
epoch 15: train_loss: 0.69366; Allocated: 775168; Reserved: 31457280; time used = 6.018094778060913s
epoch 20: train_loss: 0.69840; Allocated: 775168; Reserved: 31457280; time used = 6.032732009887695s
epoch 25: train_loss: 0.69435; Allocated: 775168; Reserved: 31457280; time used = 6.070206642150879s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.466134786605835.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f9165af83c0>
total iter: 500
epoch 5: train_loss: 0.55885; Allocated: 705024; Reserved: 8388608; time used = 3.137816905975342s
epoch 10: train_loss: 0.40416; Allocated: 705024; Reserved: 8388608; time used = 3.081573247909546s
epoch 15: train_loss: 0.35156; Allocated: 705024; Reserved: 8388608; time used = 3.188915252685547s
epoch 20: train_loss: 0.21491; Allocated: 705024; Reserved: 8388608; time used = 3.0807137489318848s
epoch 25: train_loss: 0.26049; Allocated: 705024; Reserved: 8388608; time used = 3.1147525310516357s
epoch 30: train_loss: 0.33231; Allocated: 705024; Reserved: 8388608; time used = 3.0860915184020996s
epoch 35: train_loss: 0.26198; Allocated: 705024; Reserved: 8388608; time used = 3.240247964859009s
epoch 40: train_loss: 0.28470; Allocated: 705024; Reserved: 8388608; time used = 3.0588934421539307s
epoch 45: train_loss: 0.24757; Allocated: 705024; Reserved: 8388608; time used = 3.108041763305664s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 33.45919990539551.
Training classifier using 80.00% nodes...
{'micro': 0.631578947368421, 'macro': 0.49042145593869735, 'samples': 0.631578947368421, 'weighted': 0.5327687033676145, 'accuracy': 0.631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f41387ef690>
total iter: 500
epoch 5: train_loss: 1.40111; Allocated: 508416; Reserved: 6291456; time used = 3.177436113357544s
epoch 10: train_loss: 1.36663; Allocated: 508416; Reserved: 6291456; time used = 3.101757287979126s
epoch 15: train_loss: 1.36802; Allocated: 508416; Reserved: 6291456; time used = 3.183868169784546s
epoch 20: train_loss: 1.36463; Allocated: 508416; Reserved: 6291456; time used = 3.0773961544036865s
epoch 25: train_loss: 1.35998; Allocated: 508416; Reserved: 6291456; time used = 3.1912543773651123s
epoch 30: train_loss: 1.37735; Allocated: 508416; Reserved: 6291456; time used = 3.084751844406128s
epoch 35: train_loss: 1.36956; Allocated: 508416; Reserved: 6291456; time used = 3.2513937950134277s
epoch 40: train_loss: 1.37168; Allocated: 508416; Reserved: 6291456; time used = 3.1379520893096924s
epoch 45: train_loss: 1.36967; Allocated: 508416; Reserved: 6291456; time used = 3.1806082725524902s
epoch 50: train_loss: 1.36992; Allocated: 508416; Reserved: 6291456; time used = 3.2691354751586914s
epoch 55: train_loss: 1.36675; Allocated: 508416; Reserved: 6291456; time used = 3.1578385829925537s
epoch 60: train_loss: 1.36948; Allocated: 508416; Reserved: 6291456; time used = 3.114499568939209s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.88244009017944.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2928.86it/s]100%|██████████| 1000/1000 [00:00<00:00, 4228.58it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f7294554280>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68910; Allocated: 566784; Reserved: 12582912; time used = 53.21192288398743s
epoch 10: train_loss: 0.68415; Allocated: 566784; Reserved: 8388608; time used = 53.66281461715698s
epoch 15: train_loss: 0.66412; Allocated: 566784; Reserved: 8388608; time used = 52.43268847465515s
epoch 20: train_loss: 0.61850; Allocated: 566784; Reserved: 8388608; time used = 53.017117738723755s
epoch 25: train_loss: 0.41414; Allocated: 566784; Reserved: 8388608; time used = 53.04141545295715s
epoch 30: train_loss: 0.28844; Allocated: 566784; Reserved: 8388608; time used = 53.41435790061951s
epoch 35: train_loss: 0.17799; Allocated: 566784; Reserved: 8388608; time used = 52.703651666641235s
epoch 40: train_loss: 0.39634; Allocated: 566784; Reserved: 8388608; time used = 52.46312665939331s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 438.0796434879303.
Training classifier using 80.00% nodes...
{'micro': 0.655, 'macro': 0.6542999574137629, 'samples': 0.655, 'weighted': 0.6539888273754353, 'accuracy': 0.655}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb81d77e820>
total iter: 500
epoch 5: train_loss: 2.39964; Allocated: 992256; Reserved: 6291456; time used = 1.6757149696350098s
epoch 10: train_loss: 3.09259; Allocated: 992256; Reserved: 6291456; time used = 1.6287429332733154s
epoch 15: train_loss: 3.43744; Allocated: 992256; Reserved: 6291456; time used = 1.5943498611450195s
epoch 20: train_loss: 2.29391; Allocated: 992256; Reserved: 6291456; time used = 1.5887830257415771s
epoch 25: train_loss: 1.33013; Allocated: 992256; Reserved: 6291456; time used = 1.6043155193328857s
epoch 30: train_loss: 1.56611; Allocated: 992256; Reserved: 6291456; time used = 1.632993221282959s
epoch 35: train_loss: 1.28155; Allocated: 992256; Reserved: 6291456; time used = 1.6468255519866943s
epoch 40: train_loss: 1.33982; Allocated: 992256; Reserved: 6291456; time used = 1.609349012374878s
epoch 45: train_loss: 1.27196; Allocated: 992256; Reserved: 6291456; time used = 1.599644660949707s
epoch 50: train_loss: 1.24996; Allocated: 992256; Reserved: 6291456; time used = 1.5800445079803467s
epoch 55: train_loss: 1.25034; Allocated: 992256; Reserved: 6291456; time used = 1.5740444660186768s
epoch 60: train_loss: 1.21166; Allocated: 992256; Reserved: 6291456; time used = 1.5967705249786377s
epoch 65: train_loss: 1.20376; Allocated: 992256; Reserved: 6291456; time used = 1.6045637130737305s
epoch 70: train_loss: 1.18395; Allocated: 992256; Reserved: 6291456; time used = 1.6234290599822998s
epoch 75: train_loss: 1.16994; Allocated: 992256; Reserved: 6291456; time used = 1.6043767929077148s
epoch 80: train_loss: 1.16293; Allocated: 992256; Reserved: 6291456; time used = 1.602043628692627s
epoch 85: train_loss: 1.14991; Allocated: 992256; Reserved: 6291456; time used = 1.6149787902832031s
epoch 90: train_loss: 1.13610; Allocated: 992256; Reserved: 6291456; time used = 1.6277027130126953s
epoch 95: train_loss: 1.11837; Allocated: 992256; Reserved: 6291456; time used = 1.586815595626831s
epoch 100: train_loss: 1.08352; Allocated: 992256; Reserved: 6291456; time used = 1.5895805358886719s
epoch 105: train_loss: 1.09819; Allocated: 992256; Reserved: 6291456; time used = 1.6312251091003418s
epoch 110: train_loss: 1.07552; Allocated: 992256; Reserved: 6291456; time used = 1.635387659072876s
epoch 115: train_loss: 1.07955; Allocated: 992256; Reserved: 6291456; time used = 1.5857863426208496s
epoch 120: train_loss: 1.08114; Allocated: 992256; Reserved: 6291456; time used = 1.6114096641540527s
epoch 125: train_loss: 1.06991; Allocated: 992256; Reserved: 6291456; time used = 1.6026153564453125s
epoch 130: train_loss: 1.06672; Allocated: 992256; Reserved: 6291456; time used = 1.6471812725067139s
epoch 135: train_loss: 1.02889; Allocated: 992256; Reserved: 6291456; time used = 1.6940417289733887s
epoch 140: train_loss: 1.02264; Allocated: 992256; Reserved: 6291456; time used = 1.6918656826019287s
epoch 145: train_loss: 0.99614; Allocated: 992256; Reserved: 6291456; time used = 1.4729516506195068s
epoch 150: train_loss: 1.00221; Allocated: 992256; Reserved: 6291456; time used = 1.4675836563110352s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 51.78633975982666.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3008.31it/s] 81%|████████▏ | 1628/2000 [00:00<00:00, 3825.52it/s]100%|██████████| 2000/2000 [00:00<00:00, 6089.94it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7ff8d9ecf140>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.58535; Allocated: 3922432; Reserved: 35651584; time used = 1165.464412689209s
epoch 10: train_loss: 1.41067; Allocated: 3922432; Reserved: 33554432; time used = 1143.1775591373444s
epoch 15: train_loss: 1.39397; Allocated: 3922432; Reserved: 33554432; time used = 1102.9076266288757s
epoch 20: train_loss: 1.38986; Allocated: 3922432; Reserved: 33554432; time used = 1116.8074352741241s
epoch 25: train_loss: 1.38496; Allocated: 3922432; Reserved: 35651584; time used = 1135.6655390262604s
epoch 30: train_loss: 1.38317; Allocated: 3922432; Reserved: 33554432; time used = 1138.3839235305786s
epoch 35: train_loss: 1.38091; Allocated: 3922432; Reserved: 33554432; time used = 1140.162558555603s
epoch 40: train_loss: 1.37798; Allocated: 3922432; Reserved: 35651584; time used = 1138.227345943451s
epoch 45: train_loss: 1.37360; Allocated: 3922432; Reserved: 33554432; time used = 1139.589745759964s
epoch 50: train_loss: 1.36616; Allocated: 3922432; Reserved: 35651584; time used = 1141.8331398963928s
epoch 55: train_loss: 1.35395; Allocated: 3922432; Reserved: 33554432; time used = 1153.3190383911133s
epoch 60: train_loss: 1.34123; Allocated: 3922432; Reserved: 35651584; time used = 1207.880616426468s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 14200.317750692368.
Training classifier using 80.00% nodes...
{'micro': 0.7425, 'macro': 0.7375378244943462, 'samples': 0.7425, 'weighted': 0.7364551680203855, 'accuracy': 0.7425}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f5f161c9460>
head 0
total iter: 500
epoch 5: train_loss: 0.60656; Allocated: 737280; Reserved: 6291456; time used = 4.183901786804199s
epoch 10: train_loss: 0.48063; Allocated: 737280; Reserved: 8388608; time used = 4.333378553390503s
epoch 15: train_loss: 0.33388; Allocated: 737280; Reserved: 6291456; time used = 4.257257461547852s
epoch 20: train_loss: 0.23562; Allocated: 737280; Reserved: 6291456; time used = 4.329580545425415s
epoch 25: train_loss: 0.21334; Allocated: 737280; Reserved: 6291456; time used = 4.165348052978516s
epoch 30: train_loss: 0.17288; Allocated: 737280; Reserved: 6291456; time used = 4.370101451873779s
epoch 35: train_loss: 0.13905; Allocated: 737280; Reserved: 6291456; time used = 4.1734373569488525s
epoch 40: train_loss: 0.10316; Allocated: 737280; Reserved: 6291456; time used = 4.3408119678497314s
epoch 45: train_loss: 0.03548; Allocated: 737280; Reserved: 6291456; time used = 4.213923692703247s
epoch 50: train_loss: 0.08624; Allocated: 737280; Reserved: 6291456; time used = 4.320270776748657s
epoch 55: train_loss: 0.02643; Allocated: 737280; Reserved: 6291456; time used = 4.151805877685547s
epoch 60: train_loss: 0.09734; Allocated: 737280; Reserved: 6291456; time used = 4.366003751754761s
epoch 65: train_loss: 0.01399; Allocated: 737280; Reserved: 6291456; time used = 4.1768763065338135s
epoch 70: train_loss: 0.03292; Allocated: 737280; Reserved: 8388608; time used = 4.279316663742065s
epoch 75: train_loss: 0.00999; Allocated: 737280; Reserved: 6291456; time used = 4.306938886642456s
epoch 80: train_loss: 0.01596; Allocated: 737280; Reserved: 6291456; time used = 4.20716667175293s
epoch 85: train_loss: 0.00466; Allocated: 737280; Reserved: 6291456; time used = 4.364182949066162s
epoch 90: train_loss: 0.00973; Allocated: 737280; Reserved: 6291456; time used = 4.181098699569702s
epoch 95: train_loss: 0.01411; Allocated: 737280; Reserved: 6291456; time used = 4.3287389278411865s
epoch 100: train_loss: 0.01769; Allocated: 737280; Reserved: 8388608; time used = 4.246323585510254s
epoch 105: train_loss: 0.01340; Allocated: 737280; Reserved: 6291456; time used = 4.302595376968384s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 94.48328113555908.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5899830220713073, 'samples': 0.5942028985507246, 'weighted': 0.5929972195566053, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f1a085e3f00>
total iter: 500
epoch 5: train_loss: 106558.27273; Allocated: 17602048; Reserved: 295698432; time used = 3.569628953933716s
epoch 10: train_loss: 1566.54345; Allocated: 17602048; Reserved: 295698432; time used = 3.5906689167022705s
epoch 15: train_loss: 1.42996; Allocated: 17602048; Reserved: 295698432; time used = 3.5789108276367188s
epoch 20: train_loss: 1.41168; Allocated: 17602048; Reserved: 295698432; time used = 3.601778030395508s
epoch 25: train_loss: 1.39238; Allocated: 17602048; Reserved: 295698432; time used = 3.4941415786743164s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 27.090408086776733.
Training classifier using 20.00% nodes...
{'micro': 0.3031841255191509, 'macro': 0.07974646826527707, 'samples': 0.3031841255191509, 'weighted': 0.1509701123868573, 'accuracy': 0.3031841255191509}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2998.94it/s]100%|██████████| 1000/1000 [00:00<00:00, 4321.30it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff1d2b720a0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3042.09it/s] 82%|████████▏ | 1636/2000 [00:00<00:00, 3867.04it/s]100%|██████████| 2000/2000 [00:00<00:00, 6148.23it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd61cdef0f0>
total iter: 500
epoch 5: train_loss: 50968740.25155; Allocated: 3915776; Reserved: 29360128; time used = 797.6316826343536s
epoch 10: train_loss: 5471589.44231; Allocated: 3915776; Reserved: 29360128; time used = 796.2279136180878s
epoch 15: train_loss: 1067527.26736; Allocated: 3915776; Reserved: 29360128; time used = 799.8762092590332s
epoch 20: train_loss: 815572.64414; Allocated: 3915776; Reserved: 29360128; time used = 793.5057575702667s
epoch 25: train_loss: 59840.54742; Allocated: 3915776; Reserved: 29360128; time used = 793.5492472648621s
epoch 30: train_loss: 1.43771; Allocated: 3915776; Reserved: 29360128; time used = 792.1061174869537s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 5253.202915668488.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fd03204f4b0>
head 0
total iter: 500
epoch 5: train_loss: 1.38185; Allocated: 457216; Reserved: 6291456; time used = 4.304395914077759s
epoch 10: train_loss: 1.38162; Allocated: 457216; Reserved: 6291456; time used = 4.282349348068237s
epoch 15: train_loss: 1.36072; Allocated: 457216; Reserved: 6291456; time used = 4.395595550537109s
epoch 20: train_loss: 1.36507; Allocated: 457216; Reserved: 6291456; time used = 4.30730676651001s
epoch 25: train_loss: 1.35815; Allocated: 457216; Reserved: 6291456; time used = 4.371161460876465s
epoch 30: train_loss: 1.35856; Allocated: 457216; Reserved: 6291456; time used = 4.2121007442474365s
epoch 35: train_loss: 1.37278; Allocated: 457216; Reserved: 6291456; time used = 4.262619972229004s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 36.805877685546875.
Training classifier using 80.00% nodes...
{'micro': 0.7894736842105263, 'macro': 0.7738095238095237, 'samples': 0.7894736842105263, 'weighted': 0.7832080200501252, 'accuracy': 0.7894736842105263}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f7e1aaff4b0>
total iter: 500
epoch 5: train_loss: 0.55821; Allocated: 447488; Reserved: 4194304; time used = 4.238989591598511s
epoch 10: train_loss: 0.54448; Allocated: 447488; Reserved: 4194304; time used = 4.165733575820923s
epoch 15: train_loss: 0.54007; Allocated: 447488; Reserved: 4194304; time used = 4.35841965675354s
epoch 20: train_loss: 0.52283; Allocated: 447488; Reserved: 4194304; time used = 4.166236400604248s
epoch 25: train_loss: 0.53023; Allocated: 447488; Reserved: 4194304; time used = 4.378730058670044s
epoch 30: train_loss: 0.52390; Allocated: 447488; Reserved: 4194304; time used = 4.173319578170776s
epoch 35: train_loss: 0.52448; Allocated: 447488; Reserved: 4194304; time used = 4.181493520736694s
epoch 40: train_loss: 0.53229; Allocated: 447488; Reserved: 4194304; time used = 4.1460511684417725s
epoch 45: train_loss: 0.52487; Allocated: 447488; Reserved: 4194304; time used = 4.393272399902344s
epoch 50: train_loss: 0.53037; Allocated: 447488; Reserved: 4194304; time used = 4.199454069137573s
epoch 55: train_loss: 0.51441; Allocated: 447488; Reserved: 4194304; time used = 4.20350456237793s
epoch 60: train_loss: 0.52613; Allocated: 447488; Reserved: 4194304; time used = 4.2024853229522705s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 56.01911544799805.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7490829053558328, 'samples': 0.7631578947368421, 'weighted': 0.7584662316098391, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2857.98it/s] 82%|████████▏ | 1648/2000 [00:00<00:00, 3661.49it/s]100%|██████████| 2000/2000 [00:00<00:00, 5945.03it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7eff7ffc10a0>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.56576; Allocated: 3924480; Reserved: 31457280; time used = 949.4557001590729s
epoch 10: train_loss: 1.38356; Allocated: 3924480; Reserved: 31457280; time used = 950.3755712509155s
epoch 15: train_loss: 1.34998; Allocated: 3924480; Reserved: 31457280; time used = 950.0274617671967s
epoch 20: train_loss: 1.32695; Allocated: 3924480; Reserved: 31457280; time used = 948.8069841861725s
epoch 25: train_loss: 1.28132; Allocated: 3924480; Reserved: 31457280; time used = 947.9595015048981s
epoch 30: train_loss: 1.21985; Allocated: 3924480; Reserved: 33554432; time used = 949.0787208080292s
epoch 35: train_loss: 1.19298; Allocated: 3924480; Reserved: 31457280; time used = 946.7642736434937s
epoch 40: train_loss: 1.17517; Allocated: 3924480; Reserved: 31457280; time used = 951.5197823047638s
epoch 45: train_loss: 1.14935; Allocated: 3924480; Reserved: 31457280; time used = 953.0844140052795s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8931.213967323303.
Training classifier using 80.00% nodes...
{'micro': 0.625, 'macro': 0.6246621959763787, 'samples': 0.625, 'weighted': 0.6243243919527575, 'accuracy': 0.625}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f4a8df388c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f5197cf0d70>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38694; Allocated: 19419648; Reserved: 306184192; time used = 3.18314266204834s
epoch 10: train_loss: 1.38667; Allocated: 19419648; Reserved: 306184192; time used = 3.184110403060913s
epoch 15: train_loss: 1.38648; Allocated: 19419648; Reserved: 306184192; time used = 3.085531234741211s
epoch 20: train_loss: 1.38703; Allocated: 19419648; Reserved: 306184192; time used = 3.1522140502929688s
epoch 25: train_loss: 1.38648; Allocated: 19419648; Reserved: 306184192; time used = 3.175229549407959s
epoch 30: train_loss: 1.38636; Allocated: 19419648; Reserved: 306184192; time used = 3.1545729637145996s
epoch 35: train_loss: 1.38646; Allocated: 19419648; Reserved: 306184192; time used = 3.1231253147125244s
epoch 40: train_loss: 1.38632; Allocated: 19419648; Reserved: 306184192; time used = 3.065462112426758s
epoch 45: train_loss: 1.38632; Allocated: 19419648; Reserved: 306184192; time used = 3.1147429943084717s
epoch 50: train_loss: 1.38631; Allocated: 19419648; Reserved: 306184192; time used = 3.165923833847046s
epoch 55: train_loss: 1.38629; Allocated: 19419648; Reserved: 306184192; time used = 3.0644242763519287s
epoch 60: train_loss: 1.38630; Allocated: 19419648; Reserved: 306184192; time used = 3.1026697158813477s
epoch 65: train_loss: 1.38631; Allocated: 19419648; Reserved: 306184192; time used = 3.155322551727295s
epoch 70: train_loss: 1.38628; Allocated: 19419648; Reserved: 306184192; time used = 3.0735061168670654s
epoch 75: train_loss: 1.38632; Allocated: 19419648; Reserved: 306184192; time used = 3.121368646621704s
epoch 80: train_loss: 1.38625; Allocated: 19419648; Reserved: 306184192; time used = 3.066791296005249s
epoch 85: train_loss: 1.38630; Allocated: 19419648; Reserved: 306184192; time used = 3.109165668487549s
epoch 90: train_loss: 1.38630; Allocated: 19419648; Reserved: 306184192; time used = 3.0972280502319336s
epoch 95: train_loss: 1.38630; Allocated: 19419648; Reserved: 306184192; time used = 3.0875062942504883s
epoch 100: train_loss: 1.38629; Allocated: 19419648; Reserved: 306184192; time used = 3.094085454940796s
epoch 105: train_loss: 1.38630; Allocated: 19419648; Reserved: 306184192; time used = 3.0679197311401367s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 77.66266131401062.
Training classifier using 20.00% nodes...
{'micro': 0.29487771112136596, 'macro': 0.06506465736686692, 'samples': 0.29487771112136596, 'weighted': 0.13430282067466348, 'accuracy': 0.29487771112136596}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3096.89it/s]100%|██████████| 1000/1000 [00:00<00:00, 4429.37it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe1cddc8050>
total iter: 500
epoch 5: train_loss: 0.67745; Allocated: 637952; Reserved: 6291456; time used = 11.486416578292847s
epoch 10: train_loss: 0.69152; Allocated: 637952; Reserved: 6291456; time used = 11.380303621292114s
epoch 15: train_loss: 0.68189; Allocated: 637952; Reserved: 6291456; time used = 11.599203109741211s
epoch 20: train_loss: 0.57838; Allocated: 637952; Reserved: 6291456; time used = 11.583739042282104s
epoch 25: train_loss: 0.51952; Allocated: 637952; Reserved: 6291456; time used = 11.392321825027466s
epoch 30: train_loss: 0.53125; Allocated: 637952; Reserved: 6291456; time used = 11.498228549957275s
epoch 35: train_loss: 0.43180; Allocated: 637952; Reserved: 6291456; time used = 11.510226249694824s
epoch 40: train_loss: 0.18995; Allocated: 637952; Reserved: 6291456; time used = 11.218287944793701s
epoch 45: train_loss: 0.12895; Allocated: 637952; Reserved: 6291456; time used = 11.416884422302246s
epoch 50: train_loss: 0.10236; Allocated: 637952; Reserved: 6291456; time used = 11.431476593017578s
epoch 55: train_loss: 0.08539; Allocated: 637952; Reserved: 6291456; time used = 11.2735435962677s
epoch 60: train_loss: 0.05645; Allocated: 637952; Reserved: 6291456; time used = 11.569027423858643s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 147.54191637039185.
Training classifier using 80.00% nodes...
{'micro': 0.695, 'macro': 0.6949313595559001, 'samples': 0.695, 'weighted': 0.6950228801480333, 'accuracy': 0.695}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fa437c70d20>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.36761; Allocated: 19214848; Reserved: 48234496; time used = 0.9872770309448242s
epoch 10: train_loss: 1.38603; Allocated: 19214848; Reserved: 48234496; time used = 0.9795517921447754s
epoch 15: train_loss: 1.38437; Allocated: 19214848; Reserved: 48234496; time used = 0.9802203178405762s
epoch 20: train_loss: 1.34386; Allocated: 19214848; Reserved: 48234496; time used = 1.0151641368865967s
epoch 25: train_loss: 1.30058; Allocated: 19214848; Reserved: 48234496; time used = 1.0111825466156006s
epoch 30: train_loss: 1.24369; Allocated: 19214848; Reserved: 48234496; time used = 1.0057132244110107s
epoch 35: train_loss: 1.19658; Allocated: 19214848; Reserved: 48234496; time used = 1.003239393234253s
epoch 40: train_loss: 1.18458; Allocated: 19214848; Reserved: 48234496; time used = 1.0011208057403564s
epoch 45: train_loss: 1.16292; Allocated: 19214848; Reserved: 48234496; time used = 1.0047416687011719s
epoch 50: train_loss: 1.16480; Allocated: 19214848; Reserved: 48234496; time used = 0.9971225261688232s
epoch 55: train_loss: 1.14296; Allocated: 19214848; Reserved: 48234496; time used = 1.140383005142212s
epoch 60: train_loss: 1.12752; Allocated: 19214848; Reserved: 48234496; time used = 1.0189363956451416s
epoch 65: train_loss: 1.15345; Allocated: 19214848; Reserved: 48234496; time used = 0.9977796077728271s
epoch 70: train_loss: 1.09893; Allocated: 19214848; Reserved: 48234496; time used = 0.9877479076385498s
epoch 75: train_loss: 1.10818; Allocated: 19214848; Reserved: 48234496; time used = 1.001192569732666s
epoch 80: train_loss: 1.08643; Allocated: 19214848; Reserved: 48234496; time used = 1.0096640586853027s
epoch 85: train_loss: 1.07809; Allocated: 19214848; Reserved: 48234496; time used = 1.0077581405639648s
epoch 90: train_loss: 1.07004; Allocated: 19214848; Reserved: 48234496; time used = 1.0057315826416016s
epoch 95: train_loss: 1.07224; Allocated: 19214848; Reserved: 48234496; time used = 0.9972889423370361s
epoch 100: train_loss: 1.06269; Allocated: 19214848; Reserved: 48234496; time used = 0.943748950958252s
epoch 105: train_loss: 1.05285; Allocated: 19214848; Reserved: 48234496; time used = 0.9973201751708984s
epoch 110: train_loss: 1.04751; Allocated: 19214848; Reserved: 48234496; time used = 1.0027358531951904s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.690287590026855.
Training classifier using 20.00% nodes...
{'micro': 0.5154591601292109, 'macro': 0.39566434678574974, 'samples': 0.5154591601292109, 'weighted': 0.44824853376420015, 'accuracy': 0.5154591601292109}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3051.00it/s] 83%|████████▎ | 1657/2000 [00:00<00:00, 3885.19it/s]100%|██████████| 2000/2000 [00:00<00:00, 6200.94it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f53c77c2140>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.56917; Allocated: 4127232; Reserved: 31457280; time used = 150.87667989730835s
epoch 10: train_loss: 0.21179; Allocated: 4127232; Reserved: 29360128; time used = 150.8466784954071s
epoch 15: train_loss: 0.05199; Allocated: 4127232; Reserved: 29360128; time used = 151.2737274169922s
epoch 20: train_loss: 0.01227; Allocated: 4127232; Reserved: 29360128; time used = 152.42348408699036s
epoch 25: train_loss: 0.01180; Allocated: 4127232; Reserved: 29360128; time used = 162.19661259651184s
epoch 30: train_loss: 0.00702; Allocated: 4127232; Reserved: 29360128; time used = 151.56020522117615s
epoch 35: train_loss: 0.00543; Allocated: 4127232; Reserved: 31457280; time used = 153.08883905410767s
epoch 40: train_loss: 0.00538; Allocated: 4127232; Reserved: 29360128; time used = 153.10044956207275s
epoch 45: train_loss: 0.00449; Allocated: 4127232; Reserved: 31457280; time used = 153.1784656047821s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1445.9279425144196.
Training classifier using 80.00% nodes...
{'micro': 0.635, 'macro': 0.635, 'samples': 0.635, 'weighted': 0.635, 'accuracy': 0.635}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2412.91it/s]100%|██████████| 1500/1500 [00:00<00:00, 4626.19it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fa1bb5fd370>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.67032; Allocated: 768512; Reserved: 8388608; time used = 35.59183120727539s
epoch 10: train_loss: 0.64601; Allocated: 768512; Reserved: 8388608; time used = 35.19101929664612s
epoch 15: train_loss: 0.69103; Allocated: 768512; Reserved: 6291456; time used = 35.50493574142456s
epoch 20: train_loss: 0.69219; Allocated: 768512; Reserved: 8388608; time used = 35.10416316986084s
epoch 25: train_loss: 0.69015; Allocated: 768512; Reserved: 10485760; time used = 35.45015811920166s
epoch 30: train_loss: 0.68332; Allocated: 768512; Reserved: 8388608; time used = 35.250481843948364s
epoch 35: train_loss: 0.28890; Allocated: 768512; Reserved: 6291456; time used = 35.51429057121277s
epoch 40: train_loss: 0.32127; Allocated: 768512; Reserved: 6291456; time used = 35.32112097740173s
epoch 45: train_loss: 0.08195; Allocated: 768512; Reserved: 8388608; time used = 35.430335998535156s
epoch 50: train_loss: 0.13274; Allocated: 768512; Reserved: 6291456; time used = 35.37516641616821s
epoch 55: train_loss: 0.10795; Allocated: 768512; Reserved: 6291456; time used = 35.34236168861389s
epoch 60: train_loss: 0.03990; Allocated: 768512; Reserved: 8388608; time used = 35.18816304206848s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 441.70977807044983.
Training classifier using 80.00% nodes...
{'micro': 0.3466666666666667, 'macro': 0.2662803146674115, 'samples': 0.3466666666666667, 'weighted': 0.2582919052273891, 'accuracy': 0.3466666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa760a32910>
total iter: 500
epoch 5: train_loss: 0.48742; Allocated: 664064; Reserved: 2097152; time used = 0.602128267288208s
epoch 10: train_loss: 0.48183; Allocated: 664064; Reserved: 2097152; time used = 0.6126370429992676s
epoch 15: train_loss: 0.45905; Allocated: 664064; Reserved: 2097152; time used = 0.6084887981414795s
epoch 20: train_loss: 0.47237; Allocated: 664064; Reserved: 2097152; time used = 0.6058228015899658s
epoch 25: train_loss: 0.44835; Allocated: 664064; Reserved: 2097152; time used = 0.6077148914337158s
epoch 30: train_loss: 0.43348; Allocated: 664064; Reserved: 2097152; time used = 0.6069536209106445s
epoch 35: train_loss: 0.43175; Allocated: 664064; Reserved: 2097152; time used = 0.6038377285003662s
epoch 40: train_loss: 0.42190; Allocated: 664064; Reserved: 2097152; time used = 0.7557380199432373s
epoch 45: train_loss: 0.42276; Allocated: 664064; Reserved: 2097152; time used = 0.5928869247436523s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.439841270446777.
Training classifier using 80.00% nodes...
{'micro': 0.6578947368421053, 'macro': 0.6266061980347695, 'samples': 0.6578947368421053, 'weighted': 0.6436726737478617, 'accuracy': 0.6578947368421053}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f56b4282820>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.61121; Allocated: 874496; Reserved: 6291456; time used = 4.954865217208862s
epoch 10: train_loss: 0.55498; Allocated: 874496; Reserved: 6291456; time used = 4.685308218002319s
epoch 15: train_loss: 0.35247; Allocated: 874496; Reserved: 6291456; time used = 4.908961057662964s
epoch 20: train_loss: 0.22928; Allocated: 874496; Reserved: 6291456; time used = 4.842830419540405s
epoch 25: train_loss: 0.14781; Allocated: 874496; Reserved: 6291456; time used = 4.727782249450684s
epoch 30: train_loss: 0.09867; Allocated: 874496; Reserved: 6291456; time used = 4.909440279006958s
epoch 35: train_loss: 0.13382; Allocated: 874496; Reserved: 6291456; time used = 4.805654764175415s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.12133860588074.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.5782929399367756, 'samples': 0.5797101449275363, 'weighted': 0.5800644461752263, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3087.71it/s]100%|██████████| 1500/1500 [00:00<00:00, 5559.72it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f0fcbd8ae10>
total iter: 500
epoch 5: train_loss: 1.38678; Allocated: 549376; Reserved: 4194304; time used = 11.581028461456299s
epoch 10: train_loss: 1.38643; Allocated: 549376; Reserved: 6291456; time used = 11.611398935317993s
epoch 15: train_loss: 1.38635; Allocated: 549376; Reserved: 8388608; time used = 11.599541425704956s
epoch 20: train_loss: 1.38632; Allocated: 549376; Reserved: 8388608; time used = 11.726979732513428s
epoch 25: train_loss: 1.38630; Allocated: 549376; Reserved: 6291456; time used = 11.641463041305542s
epoch 30: train_loss: 1.38630; Allocated: 549376; Reserved: 6291456; time used = 11.696408748626709s
epoch 35: train_loss: 1.38630; Allocated: 549376; Reserved: 4194304; time used = 11.488512992858887s
epoch 40: train_loss: 1.38630; Allocated: 549376; Reserved: 6291456; time used = 11.657682418823242s
epoch 45: train_loss: 1.38630; Allocated: 549376; Reserved: 6291456; time used = 11.731895923614502s
epoch 50: train_loss: 1.38630; Allocated: 549376; Reserved: 4194304; time used = 11.70368242263794s
epoch 55: train_loss: 1.38629; Allocated: 549376; Reserved: 6291456; time used = 11.465785503387451s
epoch 60: train_loss: 1.38629; Allocated: 549376; Reserved: 6291456; time used = 11.615815162658691s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 142.93552350997925.
Training classifier using 80.00% nodes...
{'micro': 0.33, 'macro': 0.26578194033061403, 'samples': 0.33, 'weighted': 0.2578084821206956, 'accuracy': 0.33}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2366.59it/s]100%|██████████| 1500/1500 [00:00<00:00, 4567.99it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f36ce81b3c0>
total iter: 500
epoch 5: train_loss: 1.38678; Allocated: 549376; Reserved: 4194304; time used = 198.1525628566742s
epoch 10: train_loss: 1.38643; Allocated: 549376; Reserved: 6291456; time used = 196.8717131614685s
epoch 15: train_loss: 1.38635; Allocated: 549376; Reserved: 8388608; time used = 198.33625507354736s
epoch 20: train_loss: 1.38632; Allocated: 549376; Reserved: 8388608; time used = 196.8866105079651s
epoch 25: train_loss: 1.38630; Allocated: 549376; Reserved: 6291456; time used = 196.08812379837036s
epoch 30: train_loss: 1.38630; Allocated: 549376; Reserved: 6291456; time used = 197.83317136764526s
epoch 35: train_loss: 1.38630; Allocated: 549376; Reserved: 4194304; time used = 197.3794138431549s
epoch 40: train_loss: 1.38630; Allocated: 549376; Reserved: 6291456; time used = 193.67318391799927s
epoch 45: train_loss: 1.38630; Allocated: 549376; Reserved: 6291456; time used = 197.79489064216614s
epoch 50: train_loss: 1.38630; Allocated: 549376; Reserved: 4194304; time used = 194.22236323356628s
epoch 55: train_loss: 1.38629; Allocated: 549376; Reserved: 6291456; time used = 196.19526195526123s
epoch 60: train_loss: 1.38629; Allocated: 549376; Reserved: 6291456; time used = 195.20204544067383s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2362.0272328853607.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2912.61it/s]100%|██████████| 1000/1000 [00:00<00:00, 4202.11it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fec2f9aa050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f2c142f98c0>
total iter: 500
epoch 5: train_loss: 8.24772; Allocated: 861696; Reserved: 6291456; time used = 4.146424055099487s
epoch 10: train_loss: 1.34562; Allocated: 861696; Reserved: 8388608; time used = 4.2651591300964355s
epoch 15: train_loss: 1.36970; Allocated: 861696; Reserved: 6291456; time used = 4.132241249084473s
epoch 20: train_loss: 1.38301; Allocated: 861696; Reserved: 6291456; time used = 4.2648820877075195s
epoch 25: train_loss: 1.38314; Allocated: 861696; Reserved: 6291456; time used = 4.124948024749756s
epoch 30: train_loss: 1.37259; Allocated: 861696; Reserved: 6291456; time used = 4.3096396923065186s
epoch 35: train_loss: 1.35919; Allocated: 861696; Reserved: 6291456; time used = 4.206583261489868s
epoch 40: train_loss: 1.33481; Allocated: 861696; Reserved: 6291456; time used = 4.27062726020813s
epoch 45: train_loss: 1.33104; Allocated: 861696; Reserved: 6291456; time used = 4.12873101234436s
epoch 50: train_loss: 1.31646; Allocated: 861696; Reserved: 6291456; time used = 4.207388877868652s
epoch 55: train_loss: 1.29893; Allocated: 861696; Reserved: 6291456; time used = 4.0613813400268555s
epoch 60: train_loss: 1.28201; Allocated: 861696; Reserved: 6291456; time used = 4.263645648956299s
epoch 65: train_loss: 1.26578; Allocated: 861696; Reserved: 6291456; time used = 4.107580900192261s
epoch 70: train_loss: 1.24013; Allocated: 861696; Reserved: 8388608; time used = 4.0795581340789795s
epoch 75: train_loss: 1.20568; Allocated: 861696; Reserved: 6291456; time used = 4.384753704071045s
epoch 80: train_loss: 1.18677; Allocated: 861696; Reserved: 6291456; time used = 4.146491050720215s
epoch 85: train_loss: 1.18424; Allocated: 861696; Reserved: 6291456; time used = 4.327430486679077s
epoch 90: train_loss: 1.14517; Allocated: 861696; Reserved: 6291456; time used = 4.06883978843689s
epoch 95: train_loss: 1.11751; Allocated: 861696; Reserved: 6291456; time used = 4.219879388809204s
epoch 100: train_loss: 1.13670; Allocated: 861696; Reserved: 6291456; time used = 4.085737943649292s
epoch 105: train_loss: 1.10289; Allocated: 861696; Reserved: 6291456; time used = 4.07514500617981s
epoch 110: train_loss: 1.11107; Allocated: 861696; Reserved: 6291456; time used = 4.212369441986084s
epoch 115: train_loss: 1.06954; Allocated: 861696; Reserved: 6291456; time used = 4.120979070663452s
epoch 120: train_loss: 1.07210; Allocated: 861696; Reserved: 6291456; time used = 4.344620227813721s
epoch 125: train_loss: 1.07558; Allocated: 861696; Reserved: 6291456; time used = 4.05967903137207s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 108.11047101020813.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.5538793103448276, 'samples': 0.5652173913043478, 'weighted': 0.5590329835082459, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f7415f31820>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fb0284e1370>
total iter: 500
epoch 5: train_loss: 1.36559; Allocated: 53478400; Reserved: 109051904; time used = 0.8531625270843506s
epoch 10: train_loss: 1.19824; Allocated: 53478400; Reserved: 109051904; time used = 0.8101944923400879s
epoch 15: train_loss: 1.10702; Allocated: 53478400; Reserved: 109051904; time used = 0.8480587005615234s
epoch 20: train_loss: 1.00385; Allocated: 53478400; Reserved: 109051904; time used = 0.8658404350280762s
epoch 25: train_loss: 0.92102; Allocated: 53478400; Reserved: 109051904; time used = 0.8386526107788086s
epoch 30: train_loss: 0.86171; Allocated: 53478400; Reserved: 109051904; time used = 0.814354419708252s
epoch 35: train_loss: 0.74988; Allocated: 53478400; Reserved: 109051904; time used = 0.8195877075195312s
epoch 40: train_loss: 0.71131; Allocated: 53478400; Reserved: 109051904; time used = 0.8552243709564209s
epoch 45: train_loss: 0.64234; Allocated: 53478400; Reserved: 109051904; time used = 0.8322854042053223s
epoch 50: train_loss: 0.62355; Allocated: 53478400; Reserved: 109051904; time used = 1.0038273334503174s
epoch 55: train_loss: 0.59755; Allocated: 53478400; Reserved: 109051904; time used = 0.8175809383392334s
epoch 60: train_loss: 0.54321; Allocated: 53478400; Reserved: 109051904; time used = 0.8093137741088867s
epoch 65: train_loss: 0.51829; Allocated: 53478400; Reserved: 109051904; time used = 0.8577139377593994s
epoch 70: train_loss: 0.48491; Allocated: 53478400; Reserved: 109051904; time used = 0.8514914512634277s
epoch 75: train_loss: 0.50902; Allocated: 53478400; Reserved: 109051904; time used = 0.8722636699676514s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.056138277053833.
Training classifier using 20.00% nodes...
{'micro': 0.6353159851301114, 'macro': 0.5485423571772724, 'samples': 0.6419984973703982, 'weighted': 0.6112782704977067, 'accuracy': 0.6419984973703982}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3022.02it/s]100%|██████████| 1500/1500 [00:00<00:00, 5484.31it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f03248c92d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2758.75it/s]100%|██████████| 1500/1500 [00:00<00:00, 5131.16it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f21641ec050>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.52685; Allocated: 903680; Reserved: 16777216; time used = 12.898699045181274s
epoch 10: train_loss: 1.39324; Allocated: 903680; Reserved: 16777216; time used = 12.490002155303955s
epoch 15: train_loss: 1.39109; Allocated: 903680; Reserved: 16777216; time used = 12.585565567016602s
epoch 20: train_loss: 1.38883; Allocated: 903680; Reserved: 16777216; time used = 12.508902549743652s
epoch 25: train_loss: 1.39000; Allocated: 903680; Reserved: 16777216; time used = 12.78495740890503s
epoch 30: train_loss: 1.38674; Allocated: 903680; Reserved: 16777216; time used = 12.395877361297607s
epoch 35: train_loss: 1.38793; Allocated: 903680; Reserved: 16777216; time used = 12.4738609790802s
epoch 40: train_loss: 1.38690; Allocated: 903680; Reserved: 16777216; time used = 12.538795471191406s
epoch 45: train_loss: 1.38637; Allocated: 903680; Reserved: 16777216; time used = 12.606090545654297s
epoch 50: train_loss: 1.38634; Allocated: 903680; Reserved: 16777216; time used = 12.480416059494019s
epoch 55: train_loss: 1.38636; Allocated: 903680; Reserved: 16777216; time used = 12.391838312149048s
epoch 60: train_loss: 1.38642; Allocated: 903680; Reserved: 16777216; time used = 12.702378273010254s
epoch 65: train_loss: 1.38633; Allocated: 903680; Reserved: 16777216; time used = 12.579056739807129s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 169.51634216308594.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2366.42it/s] 79%|███████▉  | 1587/2000 [00:00<00:00, 3070.40it/s]100%|██████████| 2000/2000 [00:00<00:00, 5203.82it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f2f4ffc2140>
total iter: 500
epoch 5: train_loss: 1.38650; Allocated: 4041216; Reserved: 31457280; time used = 796.9459893703461s
epoch 10: train_loss: 1.38634; Allocated: 4041216; Reserved: 31457280; time used = 799.0021326541901s
epoch 15: train_loss: 1.38632; Allocated: 4041216; Reserved: 33554432; time used = 799.2201099395752s
epoch 20: train_loss: 1.38629; Allocated: 4041216; Reserved: 33554432; time used = 797.6474983692169s
epoch 25: train_loss: 1.38630; Allocated: 4041216; Reserved: 33554432; time used = 796.8313205242157s
epoch 30: train_loss: 1.38629; Allocated: 4041216; Reserved: 31457280; time used = 797.7917890548706s
epoch 35: train_loss: 1.38629; Allocated: 4041216; Reserved: 31457280; time used = 800.1576080322266s
epoch 40: train_loss: 1.38629; Allocated: 4041216; Reserved: 31457280; time used = 799.769731760025s
epoch 45: train_loss: 1.38629; Allocated: 4041216; Reserved: 31457280; time used = 800.6156489849091s
epoch 50: train_loss: 1.38629; Allocated: 4041216; Reserved: 31457280; time used = 799.392030954361s
epoch 55: train_loss: 1.38629; Allocated: 4041216; Reserved: 31457280; time used = 799.2432680130005s
epoch 60: train_loss: 1.38629; Allocated: 4041216; Reserved: 33554432; time used = 793.1958503723145s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9902.292234182358.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2472.46it/s] 83%|████████▎ | 1663/2000 [00:00<00:00, 3216.22it/s]100%|██████████| 2000/2000 [00:00<00:00, 5451.71it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f7e10789140>
head 0
total iter: 500
epoch 5: train_loss: 1.59301; Allocated: 3787264; Reserved: 29360128; time used = 922.1860992908478s
epoch 10: train_loss: 1.41852; Allocated: 3787264; Reserved: 31457280; time used = 927.4266984462738s
epoch 15: train_loss: 1.36839; Allocated: 3787264; Reserved: 29360128; time used = 923.727790594101s
epoch 20: train_loss: 1.35994; Allocated: 3787264; Reserved: 29360128; time used = 925.5320863723755s
epoch 25: train_loss: 1.32743; Allocated: 3787264; Reserved: 29360128; time used = 928.1690812110901s
epoch 30: train_loss: 1.30426; Allocated: 3787264; Reserved: 31457280; time used = 927.5159733295441s
epoch 35: train_loss: 1.27739; Allocated: 3787264; Reserved: 29360128; time used = 925.5914313793182s
epoch 40: train_loss: 1.24569; Allocated: 3787264; Reserved: 29360128; time used = 928.7144355773926s
epoch 45: train_loss: 1.20534; Allocated: 3787264; Reserved: 29360128; time used = 928.21550989151s
epoch 50: train_loss: 1.24642; Allocated: 3787264; Reserved: 29360128; time used = 926.522127866745s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9451.981706380844.
Training classifier using 80.00% nodes...
{'micro': 0.7, 'macro': 0.696969696969697, 'samples': 0.7, 'weighted': 0.6960606060606059, 'accuracy': 0.7}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2436.90it/s]100%|██████████| 1500/1500 [00:00<00:00, 4911.26it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f02d4d562d0>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.67890; Allocated: 700928; Reserved: 6291456; time used = 36.27384662628174s
epoch 10: train_loss: 0.67670; Allocated: 700928; Reserved: 6291456; time used = 36.03389644622803s
epoch 15: train_loss: 0.64306; Allocated: 700928; Reserved: 6291456; time used = 35.97457790374756s
epoch 20: train_loss: 0.56622; Allocated: 700928; Reserved: 8388608; time used = 35.68151140213013s
epoch 25: train_loss: 0.50923; Allocated: 700928; Reserved: 8388608; time used = 36.122212648391724s
epoch 30: train_loss: 0.46318; Allocated: 700928; Reserved: 8388608; time used = 35.867345094680786s
epoch 35: train_loss: 0.43370; Allocated: 700928; Reserved: 6291456; time used = 36.16244840621948s
epoch 40: train_loss: 0.41688; Allocated: 700928; Reserved: 6291456; time used = 35.80625867843628s
epoch 45: train_loss: 0.41010; Allocated: 700928; Reserved: 6291456; time used = 36.12478733062744s
epoch 50: train_loss: 0.39828; Allocated: 700928; Reserved: 8388608; time used = 35.90419244766235s
epoch 55: train_loss: 0.40046; Allocated: 700928; Reserved: 8388608; time used = 36.43345022201538s
epoch 60: train_loss: 0.38871; Allocated: 700928; Reserved: 6291456; time used = 35.98268699645996s
epoch 65: train_loss: 0.38678; Allocated: 700928; Reserved: 8388608; time used = 36.11886405944824s
epoch 70: train_loss: 0.38378; Allocated: 700928; Reserved: 8388608; time used = 35.933011293411255s
epoch 75: train_loss: 0.38455; Allocated: 700928; Reserved: 8388608; time used = 36.01818037033081s
epoch 80: train_loss: 0.38200; Allocated: 700928; Reserved: 8388608; time used = 35.91363716125488s
epoch 85: train_loss: 0.37590; Allocated: 700928; Reserved: 8388608; time used = 36.01800036430359s
epoch 90: train_loss: 0.37563; Allocated: 700928; Reserved: 6291456; time used = 35.9523823261261s
epoch 95: train_loss: 0.37645; Allocated: 700928; Reserved: 6291456; time used = 36.19683885574341s
epoch 100: train_loss: 0.37324; Allocated: 700928; Reserved: 6291456; time used = 35.95562553405762s
epoch 105: train_loss: 0.37663; Allocated: 700928; Reserved: 6291456; time used = 35.868237018585205s
epoch 110: train_loss: 0.36909; Allocated: 700928; Reserved: 6291456; time used = 35.641252517700195s
epoch 115: train_loss: 0.37027; Allocated: 700928; Reserved: 8388608; time used = 35.910091400146484s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 838.8962256908417.
Training classifier using 80.00% nodes...
{'micro': 0.33666666666666667, 'macro': 0.2725523634614544, 'samples': 0.33666666666666667, 'weighted': 0.26437579255761073, 'accuracy': 0.33666666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f3a5240ae10>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.37960; Allocated: 19077632; Reserved: 46137344; time used = 0.9579777717590332s
epoch 10: train_loss: 1.36413; Allocated: 19077632; Reserved: 46137344; time used = 0.9477736949920654s
epoch 15: train_loss: 1.25707; Allocated: 19077632; Reserved: 46137344; time used = 0.9500067234039307s
epoch 20: train_loss: 1.20342; Allocated: 19077632; Reserved: 46137344; time used = 0.9886019229888916s
epoch 25: train_loss: 1.13868; Allocated: 19077632; Reserved: 46137344; time used = 0.9909029006958008s
epoch 30: train_loss: 1.10690; Allocated: 19077632; Reserved: 46137344; time used = 0.9757258892059326s
epoch 35: train_loss: 1.07312; Allocated: 19077632; Reserved: 46137344; time used = 1.0022823810577393s
epoch 40: train_loss: 1.04714; Allocated: 19077632; Reserved: 46137344; time used = 0.9759883880615234s
epoch 45: train_loss: 1.02204; Allocated: 19077632; Reserved: 46137344; time used = 0.9716970920562744s
epoch 50: train_loss: 1.02640; Allocated: 19077632; Reserved: 46137344; time used = 0.9704570770263672s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.943938255310059.
Training classifier using 20.00% nodes...
{'micro': 0.6372865712967236, 'macro': 0.5491195826404482, 'samples': 0.6372865712967236, 'weighted': 0.6106406512344162, 'accuracy': 0.6372865712967236}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fb31c5e53c0>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.33351; Allocated: 592384; Reserved: 2097152; time used = 3.0589964389801025s
epoch 10: train_loss: 1.28807; Allocated: 592384; Reserved: 2097152; time used = 3.1003739833831787s
epoch 15: train_loss: 1.26653; Allocated: 592384; Reserved: 2097152; time used = 3.1302778720855713s
epoch 20: train_loss: 1.23095; Allocated: 592384; Reserved: 2097152; time used = 3.0444979667663574s
epoch 25: train_loss: 1.20971; Allocated: 592384; Reserved: 2097152; time used = 3.045563220977783s
epoch 30: train_loss: 1.18333; Allocated: 592384; Reserved: 2097152; time used = 3.1223855018615723s
epoch 35: train_loss: 1.16989; Allocated: 592384; Reserved: 2097152; time used = 3.0116488933563232s
epoch 40: train_loss: 1.15947; Allocated: 592384; Reserved: 2097152; time used = 3.0198538303375244s
epoch 45: train_loss: 1.15209; Allocated: 592384; Reserved: 2097152; time used = 3.1687633991241455s
epoch 50: train_loss: 1.13098; Allocated: 592384; Reserved: 2097152; time used = 3.002782106399536s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 35.4642231464386.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.7989417989417988, 'samples': 0.8157894736842105, 'weighted': 0.808131439710387, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2888.43it/s]100%|██████████| 1500/1500 [00:00<00:00, 5302.89it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f8a89765370>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.277730464935303s
epoch 10: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.212846755981445s
epoch 15: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.107583045959473s
epoch 20: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.148357152938843s
epoch 25: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.340653657913208s
epoch 30: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.182298183441162s
epoch 35: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.068179368972778s
epoch 40: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.0929274559021s
epoch 45: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.337871551513672s
epoch 50: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.08406138420105s
epoch 55: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.076185703277588s
epoch 60: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.320539236068726s
epoch 65: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.057431221008301s
epoch 70: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 6.965534687042236s
epoch 75: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.114696025848389s
epoch 80: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.341843605041504s
epoch 85: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.032775640487671s
epoch 90: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.1312267780303955s
epoch 95: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.3036839962005615s
epoch 100: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.057767152786255s
epoch 105: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.036116600036621s
epoch 110: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 6.924786806106567s
epoch 115: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.3827948570251465s
epoch 120: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.083523273468018s
epoch 125: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.071353435516357s
epoch 130: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.142015695571899s
epoch 135: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.2260825634002686s
epoch 140: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.116390228271484s
epoch 145: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.232656478881836s
epoch 150: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.238116025924683s
epoch 155: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.008504867553711s
epoch 160: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.163451671600342s
epoch 165: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.130888938903809s
epoch 170: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.248493909835815s
epoch 175: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.120945930480957s
epoch 180: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.143981218338013s
epoch 185: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.179303407669067s
epoch 190: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.091505527496338s
epoch 195: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.08179783821106s
epoch 200: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.078062295913696s
epoch 205: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.155758857727051s
epoch 210: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.058502435684204s
epoch 215: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.106465578079224s
epoch 220: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.02756404876709s
epoch 225: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.324134349822998s
epoch 230: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.10366415977478s
epoch 235: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.052150011062622s
epoch 240: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.301392555236816s
epoch 245: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.035592317581177s
epoch 250: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.144021034240723s
epoch 255: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.058698415756226s
epoch 260: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.218480587005615s
epoch 265: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.0627663135528564s
epoch 270: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.018255949020386s
epoch 275: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.192659616470337s
epoch 280: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.061959743499756s
epoch 285: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.153893232345581s
epoch 290: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.0675208568573s
epoch 295: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.36686110496521s
epoch 300: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.043632745742798s
epoch 305: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.114206552505493s
epoch 310: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.195791721343994s
epoch 315: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.109984874725342s
epoch 320: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.044646501541138s
epoch 325: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.1016199588775635s
epoch 330: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.258851051330566s
epoch 335: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.105909824371338s
epoch 340: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.044819116592407s
epoch 345: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.012994289398193s
epoch 350: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.144672870635986s
epoch 355: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.093074560165405s
epoch 360: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.185404062271118s
epoch 365: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.226183652877808s
epoch 370: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.167465448379517s
epoch 375: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.109702110290527s
epoch 380: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.07413387298584s
epoch 385: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.134513854980469s
epoch 390: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.1287736892700195s
epoch 395: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.102517366409302s
epoch 400: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.177790403366089s
epoch 405: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.089065790176392s
epoch 410: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.088549375534058s
epoch 415: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.149801731109619s
epoch 420: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.2684407234191895s
epoch 425: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.099730014801025s
epoch 430: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.212968349456787s
epoch 435: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.013944864273071s
epoch 440: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.223227500915527s
epoch 445: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 6.918196439743042s
epoch 450: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.156403064727783s
epoch 455: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.255334138870239s
epoch 460: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.090978622436523s
epoch 465: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.45539927482605s
epoch 470: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.233723402023315s
epoch 475: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.194173574447632s
epoch 480: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.0990612506866455s
epoch 485: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.063923358917236s
epoch 490: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.248121738433838s
epoch 495: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 7.126971483230591s
epoch 500: train_loss: 0.69315; Allocated: 699904; Reserved: 12582912; time used = 6.983635425567627s
Finished training. Time used = 717.4161930084229.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f220c0c34b0>
total iter: 500
epoch 5: train_loss: 1.38347; Allocated: 778240; Reserved: 4194304; time used = 0.8403146266937256s
epoch 10: train_loss: 1.37311; Allocated: 778240; Reserved: 4194304; time used = 0.8210020065307617s
epoch 15: train_loss: 1.37253; Allocated: 778240; Reserved: 4194304; time used = 0.8298301696777344s
epoch 20: train_loss: 1.37211; Allocated: 778240; Reserved: 4194304; time used = 0.8295948505401611s
epoch 25: train_loss: 1.36891; Allocated: 778240; Reserved: 4194304; time used = 0.8274662494659424s
epoch 30: train_loss: 1.36926; Allocated: 778240; Reserved: 4194304; time used = 0.8312349319458008s
epoch 35: train_loss: 1.36757; Allocated: 778240; Reserved: 4194304; time used = 1.0104639530181885s
epoch 40: train_loss: 1.37159; Allocated: 778240; Reserved: 4194304; time used = 0.8509876728057861s
epoch 45: train_loss: 1.37240; Allocated: 778240; Reserved: 4194304; time used = 0.848900556564331s
epoch 50: train_loss: 1.37200; Allocated: 778240; Reserved: 4194304; time used = 0.8564517498016357s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.245020389556885.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.600300364728599, 'samples': 0.6086956521739131, 'weighted': 0.6044980084512561, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3110.75it/s]100%|██████████| 1000/1000 [00:00<00:00, 4456.65it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fbb370ab050>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.19696044921875s
epoch 10: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.90274405479431s
epoch 15: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.20057702064514s
epoch 20: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.79437851905823s
epoch 25: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.22173357009888s
epoch 30: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.92768430709839s
epoch 35: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.137317419052124s
epoch 40: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.724055767059326s
epoch 45: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.067792892456055s
epoch 50: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.964189529418945s
epoch 55: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.048784255981445s
epoch 60: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.70350980758667s
epoch 65: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.89599585533142s
epoch 70: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.829148292541504s
epoch 75: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.119746685028076s
epoch 80: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.8966326713562s
epoch 85: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.83089852333069s
epoch 90: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.85597801208496s
epoch 95: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.83369326591492s
epoch 100: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.68354392051697s
epoch 105: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.85548448562622s
epoch 110: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.701757192611694s
epoch 115: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.92362999916077s
epoch 120: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 34.01285433769226s
epoch 125: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.76675510406494s
epoch 130: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.79807686805725s
epoch 135: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.85181021690369s
epoch 140: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.61655855178833s
epoch 145: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.86835241317749s
epoch 150: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.64170956611633s
epoch 155: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.92228698730469s
epoch 160: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.035213470458984s
epoch 165: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.75607919692993s
epoch 170: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.63400673866272s
epoch 175: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.051947355270386s
epoch 180: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.01647973060608s
epoch 185: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.67183303833008s
epoch 190: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.71770477294922s
epoch 195: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.84976243972778s
epoch 200: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.6119487285614s
epoch 205: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.8407244682312s
epoch 210: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.880577087402344s
epoch 215: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.82470679283142s
epoch 220: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.69682240486145s
epoch 225: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.00927448272705s
epoch 230: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.75998139381409s
epoch 235: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.71824908256531s
epoch 240: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.90196228027344s
epoch 245: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.91445708274841s
epoch 250: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.77761745452881s
epoch 255: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.7159104347229s
epoch 260: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.77641224861145s
epoch 265: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.27365255355835s
epoch 270: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.9892201423645s
epoch 275: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.914825439453125s
epoch 280: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.723597049713135s
epoch 285: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.97093057632446s
epoch 290: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.405707359313965s
epoch 295: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.91390514373779s
epoch 300: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.70669150352478s
epoch 305: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.73931884765625s
epoch 310: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.82481622695923s
epoch 315: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.696746826171875s
epoch 320: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.80201458930969s
epoch 325: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.86231327056885s
epoch 330: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.77468419075012s
epoch 335: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.75749921798706s
epoch 340: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.81690454483032s
epoch 345: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.90541887283325s
epoch 350: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.102381229400635s
epoch 355: train_loss: 0.69315; Allocated: 615936; Reserved: 10485760; time used = 34.09922409057617s
epoch 360: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.95989418029785s
epoch 365: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.0361111164093s
epoch 370: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.82397961616516s
epoch 375: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.72315168380737s
epoch 380: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.70856022834778s
epoch 385: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.780826568603516s
epoch 390: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.75398278236389s
epoch 395: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.80413746833801s
epoch 400: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.62847948074341s
epoch 405: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.175549268722534s
epoch 410: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.87641167640686s
epoch 415: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.786330699920654s
epoch 420: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.96711230278015s
epoch 425: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 34.00818181037903s
epoch 430: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.73607563972473s
epoch 435: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.55082988739014s
epoch 440: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.73258352279663s
epoch 445: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.69875454902649s
epoch 450: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.95493125915527s
epoch 455: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.9011766910553s
epoch 460: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.921403646469116s
epoch 465: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.745380878448486s
epoch 470: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.78717279434204s
epoch 475: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.710883378982544s
epoch 480: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.80935478210449s
epoch 485: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.86804485321045s
epoch 490: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.807355642318726s
epoch 495: train_loss: 0.69315; Allocated: 615936; Reserved: 6291456; time used = 33.85698485374451s
epoch 500: train_loss: 0.69315; Allocated: 615936; Reserved: 8388608; time used = 33.79379868507385s
Finished training. Time used = 3389.4729561805725.
Training classifier using 80.00% nodes...
{'micro': 0.47, 'macro': 0.46978791516606644, 'samples': 0.47, 'weighted': 0.46957583033213285, 'accuracy': 0.47}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fbf84bc41e0>
total iter: 500
epoch 5: train_loss: 381.66867; Allocated: 796672; Reserved: 29360128; time used = 1.2134945392608643s
epoch 10: train_loss: 13.98959; Allocated: 796672; Reserved: 29360128; time used = 1.1784131526947021s
epoch 15: train_loss: 32.43195; Allocated: 796672; Reserved: 8388608; time used = 1.1658401489257812s
epoch 20: train_loss: 28.20739; Allocated: 796672; Reserved: 8388608; time used = 1.151529312133789s
epoch 25: train_loss: 3.83571; Allocated: 796672; Reserved: 8388608; time used = 1.1387979984283447s
epoch 30: train_loss: 1.57151; Allocated: 796672; Reserved: 8388608; time used = 1.1491491794586182s
epoch 35: train_loss: 1.38473; Allocated: 796672; Reserved: 8388608; time used = 1.1485223770141602s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.494611978530884.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.7989417989417988, 'samples': 0.8157894736842105, 'weighted': 0.808131439710387, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fdd283d4870>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f2d98d523c0>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.57637; Allocated: 1214464; Reserved: 8388608; time used = 3.112093448638916s
epoch 10: train_loss: 0.48710; Allocated: 1214464; Reserved: 8388608; time used = 3.2868595123291016s
epoch 15: train_loss: 0.36349; Allocated: 1214464; Reserved: 8388608; time used = 3.485060691833496s
epoch 20: train_loss: 0.20801; Allocated: 1214464; Reserved: 8388608; time used = 3.6102566719055176s
epoch 25: train_loss: 0.19025; Allocated: 1214464; Reserved: 8388608; time used = 3.5318498611450195s
epoch 30: train_loss: 0.04441; Allocated: 1214464; Reserved: 8388608; time used = 3.563964366912842s
epoch 35: train_loss: 0.04381; Allocated: 1214464; Reserved: 8388608; time used = 3.4670987129211426s
epoch 40: train_loss: 0.01088; Allocated: 1214464; Reserved: 8388608; time used = 2.9556891918182373s
epoch 45: train_loss: 0.01952; Allocated: 1214464; Reserved: 8388608; time used = 3.3008947372436523s
epoch 50: train_loss: 0.05791; Allocated: 1214464; Reserved: 8388608; time used = 3.4147720336914062s
epoch 55: train_loss: 0.04139; Allocated: 1214464; Reserved: 8388608; time used = 3.4900002479553223s
epoch 60: train_loss: 0.11315; Allocated: 1214464; Reserved: 8388608; time used = 3.1998260021209717s
epoch 65: train_loss: 0.00705; Allocated: 1214464; Reserved: 8388608; time used = 2.8731558322906494s
epoch 70: train_loss: 0.04138; Allocated: 1214464; Reserved: 8388608; time used = 3.279233694076538s
epoch 75: train_loss: 0.00401; Allocated: 1214464; Reserved: 8388608; time used = 3.4143013954162598s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 54.1050808429718.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.4763769889840881, 'samples': 0.5507246376811594, 'weighted': 0.49067461373352494, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2823.16it/s]100%|██████████| 1500/1500 [00:00<00:00, 5220.17it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f5ebb4f0050>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68095; Allocated: 702976; Reserved: 6291456; time used = 13.279391288757324s
epoch 10: train_loss: 0.69165; Allocated: 702976; Reserved: 8388608; time used = 13.307921409606934s
epoch 15: train_loss: 0.68806; Allocated: 702976; Reserved: 8388608; time used = 13.158579587936401s
epoch 20: train_loss: 0.65920; Allocated: 702976; Reserved: 6291456; time used = 13.381059646606445s
epoch 25: train_loss: 0.62255; Allocated: 702976; Reserved: 8388608; time used = 13.171076774597168s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 77.79971361160278.
Training classifier using 80.00% nodes...
{'micro': 0.38, 'macro': 0.307843619375461, 'samples': 0.38, 'weighted': 0.2986083107941972, 'accuracy': 0.38}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fd9bc569550>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f7dce1f84b0>
total iter: 500
epoch 5: train_loss: 1.37411; Allocated: 573952; Reserved: 6291456; time used = 3.127460479736328s
epoch 10: train_loss: 1.37340; Allocated: 573952; Reserved: 6291456; time used = 3.148404598236084s
epoch 15: train_loss: 1.37513; Allocated: 573952; Reserved: 6291456; time used = 3.287083148956299s
epoch 20: train_loss: 1.37156; Allocated: 573952; Reserved: 6291456; time used = 3.121880531311035s
epoch 25: train_loss: 1.36466; Allocated: 573952; Reserved: 6291456; time used = 3.1112124919891357s
epoch 30: train_loss: 1.37177; Allocated: 573952; Reserved: 6291456; time used = 3.1650781631469727s
epoch 35: train_loss: 1.36497; Allocated: 573952; Reserved: 6291456; time used = 3.3120131492614746s
epoch 40: train_loss: 1.36518; Allocated: 573952; Reserved: 6291456; time used = 3.0740344524383545s
epoch 45: train_loss: 1.36456; Allocated: 573952; Reserved: 6291456; time used = 3.121366500854492s
epoch 50: train_loss: 1.36012; Allocated: 573952; Reserved: 6291456; time used = 3.310030221939087s
epoch 55: train_loss: 1.37124; Allocated: 573952; Reserved: 6291456; time used = 3.103105068206787s
epoch 60: train_loss: 1.37373; Allocated: 573952; Reserved: 6291456; time used = 3.1473894119262695s
epoch 65: train_loss: 1.36496; Allocated: 573952; Reserved: 6291456; time used = 3.156744956970215s
epoch 70: train_loss: 1.36305; Allocated: 573952; Reserved: 6291456; time used = 3.2297418117523193s
epoch 75: train_loss: 1.37127; Allocated: 573952; Reserved: 6291456; time used = 3.139535903930664s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 51.0834755897522.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2928.97it/s] 82%|████████▏ | 1639/2000 [00:00<00:00, 3739.14it/s]100%|██████████| 2000/2000 [00:00<00:00, 6011.15it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7ff081854140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fb9a306ad70>
total iter: 500
epoch 5: train_loss: 0.66807; Allocated: 17592832; Reserved: 48234496; time used = 3.261328935623169s
epoch 10: train_loss: 0.38980; Allocated: 17592832; Reserved: 48234496; time used = 3.2756621837615967s
epoch 15: train_loss: 0.15078; Allocated: 17592832; Reserved: 48234496; time used = 3.3448660373687744s
epoch 20: train_loss: 0.01196; Allocated: 17592832; Reserved: 48234496; time used = 3.2429709434509277s
epoch 25: train_loss: 0.02360; Allocated: 17592832; Reserved: 48234496; time used = 3.2618086338043213s
epoch 30: train_loss: 0.00526; Allocated: 17592832; Reserved: 48234496; time used = 3.2238636016845703s
epoch 35: train_loss: 0.00037; Allocated: 17592832; Reserved: 48234496; time used = 3.249372720718384s
epoch 40: train_loss: 0.00077; Allocated: 17592832; Reserved: 48234496; time used = 3.231161117553711s
epoch 45: train_loss: 0.00193; Allocated: 17592832; Reserved: 48234496; time used = 3.3572609424591064s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 35.415766954422.
Training classifier using 20.00% nodes...
{'micro': 0.38071065989847713, 'macro': 0.1961644815331946, 'samples': 0.38071065989847713, 'weighted': 0.28253553282667, 'accuracy': 0.38071065989847713}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3052.39it/s] 83%|████████▎ | 1652/2000 [00:00<00:00, 3884.86it/s]100%|██████████| 2000/2000 [00:00<00:00, 6190.88it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fc9e4f77140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3079.31it/s]100%|██████████| 1500/1500 [00:00<00:00, 5567.00it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fa41d6c1320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f03c6180910>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.46998; Allocated: 659968; Reserved: 2097152; time used = 0.6922576427459717s
epoch 10: train_loss: 0.31846; Allocated: 659968; Reserved: 2097152; time used = 0.6931495666503906s
epoch 15: train_loss: 0.19032; Allocated: 659968; Reserved: 2097152; time used = 0.6827237606048584s
epoch 20: train_loss: 0.11222; Allocated: 659968; Reserved: 2097152; time used = 0.6672821044921875s
epoch 25: train_loss: 0.06500; Allocated: 659968; Reserved: 2097152; time used = 0.6823914051055908s
epoch 30: train_loss: 0.05364; Allocated: 659968; Reserved: 2097152; time used = 0.7011396884918213s
epoch 35: train_loss: 0.03221; Allocated: 659968; Reserved: 2097152; time used = 0.7175662517547607s
epoch 40: train_loss: 0.05169; Allocated: 659968; Reserved: 2097152; time used = 0.8598792552947998s
epoch 45: train_loss: 0.01536; Allocated: 659968; Reserved: 2097152; time used = 0.7126407623291016s
epoch 50: train_loss: 0.01067; Allocated: 659968; Reserved: 2097152; time used = 0.710045576095581s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10.794689655303955.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7414965986394557, 'samples': 0.7631578947368421, 'weighted': 0.7533118510562119, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3095.14it/s]100%|██████████| 1000/1000 [00:00<00:00, 4435.03it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc4899262d0>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.994062662124634s
epoch 10: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.01924204826355s
epoch 15: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.360385894775391s
epoch 20: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.036536931991577s
epoch 25: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.054233074188232s
epoch 30: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.107799530029297s
epoch 35: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.044850587844849s
epoch 40: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.105214357376099s
epoch 45: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.054961204528809s
epoch 50: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.236461877822876s
epoch 55: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.107556343078613s
epoch 60: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.102844715118408s
epoch 65: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.024007797241211s
epoch 70: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.118340730667114s
epoch 75: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.048415899276733s
epoch 80: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.174074411392212s
epoch 85: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.188065767288208s
epoch 90: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.068251848220825s
epoch 95: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.037644863128662s
epoch 100: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.098788022994995s
epoch 105: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.035219192504883s
epoch 110: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.163705110549927s
epoch 115: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.081305027008057s
epoch 120: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.262681484222412s
epoch 125: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.062371730804443s
epoch 130: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.975355386734009s
epoch 135: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.113023519515991s
epoch 140: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.037214517593384s
epoch 145: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.063248157501221s
epoch 150: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.184112787246704s
epoch 155: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.670762062072754s
epoch 160: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.123560428619385s
epoch 165: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.061773777008057s
epoch 170: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.1312501430511475s
epoch 175: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.160085678100586s
epoch 180: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.987575531005859s
epoch 185: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.101744174957275s
epoch 190: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.240601539611816s
epoch 195: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.0203857421875s
epoch 200: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.042343616485596s
epoch 205: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.118896484375s
epoch 210: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.010874032974243s
epoch 215: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.015856504440308s
epoch 220: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.128982067108154s
epoch 225: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.18330192565918s
epoch 230: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.111075162887573s
epoch 235: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.093653202056885s
epoch 240: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.9771339893341064s
epoch 245: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.025583982467651s
epoch 250: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.106126546859741s
epoch 255: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.0557966232299805s
epoch 260: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.258241653442383s
epoch 265: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.054548025131226s
epoch 270: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.105157852172852s
epoch 275: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.0244810581207275s
epoch 280: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.144571304321289s
epoch 285: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.1016764640808105s
epoch 290: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.020616292953491s
epoch 295: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.297166347503662s
epoch 300: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.034708499908447s
epoch 305: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.080183744430542s
epoch 310: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.075955152511597s
epoch 315: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.0618414878845215s
epoch 320: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.138607740402222s
epoch 325: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.031390428543091s
epoch 330: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.292811632156372s
epoch 335: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.033833980560303s
epoch 340: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.104974269866943s
epoch 345: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.040973901748657s
epoch 350: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.088016748428345s
epoch 355: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.001921892166138s
epoch 360: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.059060335159302s
epoch 365: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.2975852489471436s
epoch 370: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.990630865097046s
epoch 375: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.09440279006958s
epoch 380: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.035496950149536s
epoch 385: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.070810317993164s
epoch 390: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.062158107757568s
epoch 395: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.002307176589966s
epoch 400: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.249052286148071s
epoch 405: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.066991567611694s
epoch 410: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.020638465881348s
epoch 415: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.108060598373413s
epoch 420: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.046147346496582s
epoch 425: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.07895827293396s
epoch 430: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.062429428100586s
epoch 435: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.200738430023193s
epoch 440: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.134436845779419s
epoch 445: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.022325277328491s
epoch 450: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.125126361846924s
epoch 455: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.03958535194397s
epoch 460: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.068811655044556s
epoch 465: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.040884494781494s
epoch 470: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.365987300872803s
epoch 475: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.018038272857666s
epoch 480: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.11284065246582s
epoch 485: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.046352386474609s
epoch 490: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.147481679916382s
epoch 495: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.129020929336548s
epoch 500: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 6.023076772689819s
Finished training. Time used = 613.6571574211121.
Training classifier using 80.00% nodes...
{'micro': 0.655, 'macro': 0.6382794684280884, 'samples': 0.655, 'weighted': 0.6367240701423291, 'accuracy': 0.655}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f5c12e1c5a0>
head 0
total iter: 500
epoch 5: train_loss: 0.64342; Allocated: 737280; Reserved: 8388608; time used = 4.699986934661865s
epoch 10: train_loss: 0.58302; Allocated: 737280; Reserved: 6291456; time used = 4.730235576629639s
epoch 15: train_loss: 0.59818; Allocated: 737280; Reserved: 8388608; time used = 4.770024299621582s
epoch 20: train_loss: 0.31093; Allocated: 737280; Reserved: 8388608; time used = 4.750992774963379s
epoch 25: train_loss: 0.25887; Allocated: 737280; Reserved: 6291456; time used = 4.665943384170532s
epoch 30: train_loss: 0.13209; Allocated: 737280; Reserved: 8388608; time used = 4.7193214893341064s
epoch 35: train_loss: 0.10681; Allocated: 737280; Reserved: 6291456; time used = 4.7865307331085205s
epoch 40: train_loss: 0.03350; Allocated: 737280; Reserved: 8388608; time used = 4.714935779571533s
epoch 45: train_loss: 0.03402; Allocated: 737280; Reserved: 6291456; time used = 4.810875654220581s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 48.92930769920349.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.5108695652173914, 'samples': 0.5652173913043478, 'weighted': 0.5226843100189036, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2641.97it/s]100%|██████████| 1000/1000 [00:00<00:00, 3879.67it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f717110a230>
total iter: 500
epoch 5: train_loss: 0.68731; Allocated: 637952; Reserved: 6291456; time used = 189.01628351211548s
epoch 10: train_loss: 0.67441; Allocated: 637952; Reserved: 6291456; time used = 190.04085421562195s
epoch 15: train_loss: 0.59162; Allocated: 637952; Reserved: 6291456; time used = 188.49966859817505s
epoch 20: train_loss: 0.47975; Allocated: 637952; Reserved: 6291456; time used = 189.05516958236694s
epoch 25: train_loss: 0.53910; Allocated: 637952; Reserved: 6291456; time used = 188.46647357940674s
epoch 30: train_loss: 0.25632; Allocated: 637952; Reserved: 6291456; time used = 190.7532844543457s
epoch 35: train_loss: 0.13060; Allocated: 637952; Reserved: 6291456; time used = 192.17543959617615s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1369.035603761673.
Training classifier using 80.00% nodes...
{'micro': 0.7, 'macro': 0.6980676328502415, 'samples': 0.7, 'weighted': 0.6985507246376812, 'accuracy': 0.7}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2508.39it/s]100%|██████████| 1000/1000 [00:00<00:00, 3700.54it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1c316aa050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fbd27f16410>
total iter: 500
epoch 5: train_loss: 1.41417; Allocated: 53415424; Reserved: 109051904; time used = 3.6101512908935547s
epoch 10: train_loss: 1.32716; Allocated: 53415424; Reserved: 109051904; time used = 3.6930038928985596s
epoch 15: train_loss: 1.34291; Allocated: 53415424; Reserved: 109051904; time used = 3.618140935897827s
epoch 20: train_loss: 1.31663; Allocated: 53415424; Reserved: 109051904; time used = 3.582089424133301s
epoch 25: train_loss: 1.31014; Allocated: 53415424; Reserved: 109051904; time used = 3.7141315937042236s
epoch 30: train_loss: 1.32722; Allocated: 53415424; Reserved: 109051904; time used = 3.6100549697875977s
epoch 35: train_loss: 1.33687; Allocated: 53415424; Reserved: 109051904; time used = 3.6257574558258057s
epoch 40: train_loss: 1.31726; Allocated: 53415424; Reserved: 109051904; time used = 3.728708505630493s
epoch 45: train_loss: 1.33316; Allocated: 53415424; Reserved: 109051904; time used = 3.578165054321289s
epoch 50: train_loss: 1.31834; Allocated: 53415424; Reserved: 109051904; time used = 3.577564239501953s
epoch 55: train_loss: 1.30131; Allocated: 53415424; Reserved: 109051904; time used = 3.618673801422119s
epoch 60: train_loss: 1.30679; Allocated: 53415424; Reserved: 109051904; time used = 3.767864227294922s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 49.03532671928406.
Training classifier using 20.00% nodes...
{'micro': 0.5241635687732342, 'macro': 0.464210433535954, 'samples': 0.5296769346356123, 'weighted': 0.5090112405229671, 'accuracy': 0.5296769346356123}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f3fb88f9960>
total iter: 500
epoch 5: train_loss: 0.63460; Allocated: 909312; Reserved: 4194304; time used = 4.128473281860352s
epoch 10: train_loss: 0.59019; Allocated: 909312; Reserved: 6291456; time used = 4.280834674835205s
epoch 15: train_loss: 0.33809; Allocated: 909312; Reserved: 6291456; time used = 4.168227434158325s
epoch 20: train_loss: 0.21734; Allocated: 909312; Reserved: 4194304; time used = 4.173756837844849s
epoch 25: train_loss: 0.15865; Allocated: 909312; Reserved: 4194304; time used = 4.04438328742981s
epoch 30: train_loss: 0.06285; Allocated: 909312; Reserved: 4194304; time used = 4.2178332805633545s
epoch 35: train_loss: 0.17037; Allocated: 909312; Reserved: 4194304; time used = 4.0526933670043945s
epoch 40: train_loss: 0.09690; Allocated: 909312; Reserved: 4194304; time used = 4.289134740829468s
epoch 45: train_loss: 0.01511; Allocated: 909312; Reserved: 4194304; time used = 4.041338682174683s
epoch 50: train_loss: 0.06921; Allocated: 909312; Reserved: 4194304; time used = 4.183597803115845s
epoch 55: train_loss: 0.02744; Allocated: 909312; Reserved: 4194304; time used = 4.04568886756897s
epoch 60: train_loss: 0.00023; Allocated: 909312; Reserved: 4194304; time used = 4.236853122711182s
epoch 65: train_loss: 0.08553; Allocated: 909312; Reserved: 4194304; time used = 4.039273023605347s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 60.52494668960571.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.4888888888888889, 'samples': 0.5507246376811594, 'weighted': 0.5017713365539452, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3041.21it/s]100%|██████████| 1000/1000 [00:00<00:00, 4364.97it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fd86bd2e3c0>
total iter: 500
epoch 5: train_loss: 16822.56470; Allocated: 644608; Reserved: 6291456; time used = 188.09222316741943s
epoch 10: train_loss: 3971.38525; Allocated: 644608; Reserved: 8388608; time used = 189.311194896698s
epoch 15: train_loss: 1875.86877; Allocated: 644608; Reserved: 8388608; time used = 188.3059675693512s
epoch 20: train_loss: 402.99982; Allocated: 644608; Reserved: 6291456; time used = 191.4646966457367s
epoch 25: train_loss: 515.89519; Allocated: 644608; Reserved: 6291456; time used = 190.92758178710938s
epoch 30: train_loss: 287.88344; Allocated: 644608; Reserved: 6291456; time used = 187.72209787368774s
epoch 35: train_loss: 222.62460; Allocated: 644608; Reserved: 6291456; time used = 190.9529356956482s
epoch 40: train_loss: 40.50826; Allocated: 644608; Reserved: 8388608; time used = 185.43364453315735s
epoch 45: train_loss: 450.50647; Allocated: 644608; Reserved: 6291456; time used = 189.23455953598022s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1704.854826927185.
Training classifier using 80.00% nodes...
{'micro': 0.685, 'macro': 0.6849921248031201, 'samples': 0.685, 'weighted': 0.6850236255906398, 'accuracy': 0.685}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2490.37it/s]100%|██████████| 1500/1500 [00:00<00:00, 4750.28it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fb6e8eef050>
total iter: 500
epoch 5: train_loss: 0.68386; Allocated: 629760; Reserved: 8388608; time used = 7.554431676864624s
epoch 10: train_loss: 0.70636; Allocated: 629760; Reserved: 31457280; time used = 7.4663941860198975s
epoch 15: train_loss: 0.70187; Allocated: 629760; Reserved: 8388608; time used = 7.303268194198608s
epoch 20: train_loss: 0.69336; Allocated: 629760; Reserved: 8388608; time used = 7.383493185043335s
epoch 25: train_loss: 0.69137; Allocated: 629760; Reserved: 8388608; time used = 7.474238634109497s
epoch 30: train_loss: 0.69661; Allocated: 629760; Reserved: 31457280; time used = 7.369643449783325s
epoch 35: train_loss: 0.68791; Allocated: 629760; Reserved: 8388608; time used = 7.328150987625122s
epoch 40: train_loss: 0.69417; Allocated: 629760; Reserved: 10485760; time used = 7.594970226287842s
epoch 45: train_loss: 0.69126; Allocated: 629760; Reserved: 8388608; time used = 7.410395622253418s
epoch 50: train_loss: 0.68216; Allocated: 629760; Reserved: 12582912; time used = 7.49090838432312s
epoch 55: train_loss: 0.69443; Allocated: 629760; Reserved: 8388608; time used = 7.3468852043151855s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 92.32247948646545.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f54360b3f50>
total iter: 500
epoch 5: train_loss: 0.34877; Allocated: 40919040; Reserved: 62914560; time used = 0.49392080307006836s
epoch 10: train_loss: 0.33400; Allocated: 40919040; Reserved: 62914560; time used = 0.4833548069000244s
epoch 15: train_loss: 0.32918; Allocated: 40919040; Reserved: 62914560; time used = 0.5017471313476562s
epoch 20: train_loss: 0.31677; Allocated: 40919040; Reserved: 62914560; time used = 0.7210757732391357s
epoch 25: train_loss: 0.31646; Allocated: 40919040; Reserved: 62914560; time used = 0.5046617984771729s
epoch 30: train_loss: 0.31305; Allocated: 40919040; Reserved: 62914560; time used = 0.49308013916015625s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.284911632537842.
Training classifier using 20.00% nodes...
{'micro': 0.7871180423481677, 'macro': 0.775777010681313, 'samples': 0.7871180423481678, 'weighted': 0.78638059029328, 'accuracy': 0.7871180423481678}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3082.32it/s]100%|██████████| 1500/1500 [00:00<00:00, 5567.32it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff23d270050>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.45431; Allocated: 702976; Reserved: 6291456; time used = 35.12874388694763s
epoch 10: train_loss: 1.38965; Allocated: 702976; Reserved: 6291456; time used = 34.88493084907532s
epoch 15: train_loss: 1.38662; Allocated: 702976; Reserved: 6291456; time used = 35.16020488739014s
epoch 20: train_loss: 1.38749; Allocated: 702976; Reserved: 4194304; time used = 34.99312472343445s
epoch 25: train_loss: 1.38640; Allocated: 702976; Reserved: 6291456; time used = 35.14678144454956s
epoch 30: train_loss: 1.38653; Allocated: 702976; Reserved: 4194304; time used = 34.99302411079407s
epoch 35: train_loss: 1.38652; Allocated: 702976; Reserved: 4194304; time used = 35.539265871047974s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 256.3568925857544.
Training classifier using 80.00% nodes...
{'micro': 0.3333333333333333, 'macro': 0.2600555168485894, 'samples': 0.3333333333333333, 'weighted': 0.2629137498202891, 'accuracy': 0.3333333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f8701eacf00>
total iter: 500
epoch 5: train_loss: 0.41556; Allocated: 17535488; Reserved: 46137344; time used = 3.246023178100586s
epoch 10: train_loss: 0.40187; Allocated: 17535488; Reserved: 46137344; time used = 3.2085726261138916s
epoch 15: train_loss: 0.38776; Allocated: 17535488; Reserved: 46137344; time used = 3.3524816036224365s
epoch 20: train_loss: 0.38710; Allocated: 17535488; Reserved: 46137344; time used = 3.220026969909668s
epoch 25: train_loss: 0.38054; Allocated: 17535488; Reserved: 46137344; time used = 3.185065746307373s
epoch 30: train_loss: 0.38054; Allocated: 17535488; Reserved: 46137344; time used = 3.218916416168213s
epoch 35: train_loss: 0.37215; Allocated: 17535488; Reserved: 46137344; time used = 3.2144415378570557s
epoch 40: train_loss: 0.38750; Allocated: 17535488; Reserved: 46137344; time used = 3.207048177719116s
epoch 45: train_loss: 0.37973; Allocated: 17535488; Reserved: 46137344; time used = 3.3713388442993164s
epoch 50: train_loss: 0.37452; Allocated: 17535488; Reserved: 46137344; time used = 3.2200474739074707s
epoch 55: train_loss: 0.37543; Allocated: 17535488; Reserved: 46137344; time used = 3.231781005859375s
epoch 60: train_loss: 0.36890; Allocated: 17535488; Reserved: 46137344; time used = 3.2107012271881104s
epoch 65: train_loss: 0.37720; Allocated: 17535488; Reserved: 46137344; time used = 3.3534767627716064s
epoch 70: train_loss: 0.36840; Allocated: 17535488; Reserved: 46137344; time used = 3.2471728324890137s
epoch 75: train_loss: 0.36865; Allocated: 17535488; Reserved: 46137344; time used = 3.20538067817688s
epoch 80: train_loss: 0.36987; Allocated: 17535488; Reserved: 46137344; time used = 3.213965654373169s
epoch 85: train_loss: 0.37073; Allocated: 17535488; Reserved: 46137344; time used = 3.195319890975952s
epoch 90: train_loss: 0.37130; Allocated: 17535488; Reserved: 46137344; time used = 3.220391273498535s
epoch 95: train_loss: 0.36832; Allocated: 17535488; Reserved: 46137344; time used = 3.339705228805542s
epoch 100: train_loss: 0.37227; Allocated: 17535488; Reserved: 46137344; time used = 3.2081823348999023s
epoch 105: train_loss: 0.36112; Allocated: 17535488; Reserved: 46137344; time used = 3.213249921798706s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 73.29259037971497.
Training classifier using 20.00% nodes...
{'micro': 0.7914167051222888, 'macro': 0.775909253540802, 'samples': 0.7914167051222889, 'weighted': 0.7908591638488923, 'accuracy': 0.7914167051222889}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2500.06it/s] 82%|████████▏ | 1638/2000 [00:00<00:00, 3242.12it/s]100%|██████████| 2000/2000 [00:00<00:00, 5453.59it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f171d0140a0>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.96864795684814s
epoch 10: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.0381760597229s
epoch 15: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.31784129142761s
epoch 20: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.63384699821472s
epoch 25: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.38212323188782s
epoch 30: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.69175481796265s
epoch 35: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.8239495754242s
epoch 40: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.92302465438843s
epoch 45: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.38880896568298s
epoch 50: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.86778521537781s
epoch 55: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 82.88632893562317s
epoch 60: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.93697690963745s
epoch 65: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.862056016922s
epoch 70: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.36037731170654s
epoch 75: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.38803720474243s
epoch 80: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.97316074371338s
epoch 85: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.07682633399963s
epoch 90: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.39108324050903s
epoch 95: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.94645309448242s
epoch 100: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 86.03125929832458s
epoch 105: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.27778840065002s
epoch 110: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.38834047317505s
epoch 115: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.58296036720276s
epoch 120: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.58849501609802s
epoch 125: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 82.11599397659302s
epoch 130: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.58763551712036s
epoch 135: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.28539633750916s
epoch 140: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 79.5264081954956s
epoch 145: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.45249724388123s
epoch 150: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.11325025558472s
epoch 155: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 82.51234769821167s
epoch 160: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.73190927505493s
epoch 165: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.85444641113281s
epoch 170: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.89345455169678s
epoch 175: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.09509825706482s
epoch 180: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.37101793289185s
epoch 185: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.3784589767456s
epoch 190: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 87.61773490905762s
epoch 195: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.85173988342285s
epoch 200: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.22986960411072s
epoch 205: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.46060991287231s
epoch 210: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.94342565536499s
epoch 215: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.95650100708008s
epoch 220: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.96358871459961s
epoch 225: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 87.35195994377136s
epoch 230: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 86.21090292930603s
epoch 235: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.26402878761292s
epoch 240: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.52518200874329s
epoch 245: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 87.076101064682s
epoch 250: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 87.76720976829529s
epoch 255: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.9079966545105s
epoch 260: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 82.49364137649536s
epoch 265: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.29486918449402s
epoch 270: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.83502244949341s
epoch 275: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 82.1885769367218s
epoch 280: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.50183534622192s
epoch 285: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.16053652763367s
epoch 290: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.55487012863159s
epoch 295: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.3815565109253s
epoch 300: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.45002150535583s
epoch 305: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.14408850669861s
epoch 310: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.5193281173706s
epoch 315: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.3480293750763s
epoch 320: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.27013945579529s
epoch 325: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.0527331829071s
epoch 330: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.35326528549194s
epoch 335: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.2178168296814s
epoch 340: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.16300249099731s
epoch 345: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.79067587852478s
epoch 350: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.73286366462708s
epoch 355: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.75604343414307s
epoch 360: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 80.7710223197937s
epoch 365: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 82.21977519989014s
epoch 370: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 82.4402129650116s
epoch 375: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.8959653377533s
epoch 380: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.30940222740173s
epoch 385: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.2594895362854s
epoch 390: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 82.9808030128479s
epoch 395: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 82.37888932228088s
epoch 400: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 85.1984269618988s
epoch 405: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.97786712646484s
epoch 410: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 82.68670916557312s
epoch 415: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.86183667182922s
epoch 420: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.14528203010559s
epoch 425: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.51857089996338s
epoch 430: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.04116201400757s
epoch 435: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.4810860157013s
epoch 440: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.81125569343567s
epoch 445: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.99477005004883s
epoch 450: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.47397208213806s
epoch 455: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.62871527671814s
epoch 460: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 81.66555523872375s
epoch 465: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.73202991485596s
epoch 470: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.32173085212708s
epoch 475: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 82.80255603790283s
epoch 480: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.94383931159973s
epoch 485: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.58381366729736s
epoch 490: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.24324154853821s
epoch 495: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 84.07129573822021s
epoch 500: train_loss: 0.69315; Allocated: 4118528; Reserved: 31457280; time used = 83.21967720985413s
Finished training. Time used = 8437.451523542404.
Training classifier using 80.00% nodes...
{'micro': 0.5075, 'macro': 0.3734843967402107, 'samples': 0.5075, 'weighted': 0.3647914927449812, 'accuracy': 0.5075}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f708382bf00>
total iter: 500
epoch 5: train_loss: 1.86100; Allocated: 41117184; Reserved: 62914560; time used = 0.2900218963623047s
epoch 10: train_loss: 1.48589; Allocated: 41117184; Reserved: 62914560; time used = 0.2764606475830078s
epoch 15: train_loss: 1.32238; Allocated: 41117184; Reserved: 62914560; time used = 0.2784006595611572s
epoch 20: train_loss: 1.22527; Allocated: 41117184; Reserved: 62914560; time used = 0.2924482822418213s
epoch 25: train_loss: 1.14621; Allocated: 41117184; Reserved: 62914560; time used = 0.3017079830169678s
epoch 30: train_loss: 1.06120; Allocated: 41117184; Reserved: 62914560; time used = 0.27313971519470215s
epoch 35: train_loss: 0.99789; Allocated: 41117184; Reserved: 62914560; time used = 0.2734344005584717s
epoch 40: train_loss: 1.01793; Allocated: 41117184; Reserved: 62914560; time used = 0.27318239212036133s
epoch 45: train_loss: 0.95595; Allocated: 41117184; Reserved: 62914560; time used = 0.2721700668334961s
epoch 50: train_loss: 0.93383; Allocated: 41117184; Reserved: 62914560; time used = 0.27083253860473633s
epoch 55: train_loss: 0.92982; Allocated: 41117184; Reserved: 62914560; time used = 0.2837235927581787s
epoch 60: train_loss: 0.83158; Allocated: 41117184; Reserved: 62914560; time used = 0.27893733978271484s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.533902168273926.
Training classifier using 20.00% nodes...
{'micro': 0.7303791048560923, 'macro': 0.7099577220495187, 'samples': 0.7303791048560923, 'weighted': 0.7261108626554926, 'accuracy': 0.7303791048560923}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7efb7a54d0f0>
total iter: 500
epoch 5: train_loss: 0.51739; Allocated: 515072; Reserved: 2097152; time used = 2.862905502319336s
epoch 10: train_loss: 0.30894; Allocated: 515072; Reserved: 2097152; time used = 2.858927011489868s
epoch 15: train_loss: 0.26059; Allocated: 515072; Reserved: 2097152; time used = 3.0040171146392822s
epoch 20: train_loss: 0.18274; Allocated: 515072; Reserved: 2097152; time used = 2.869112491607666s
epoch 25: train_loss: 0.08598; Allocated: 515072; Reserved: 2097152; time used = 2.856121301651001s
epoch 30: train_loss: 0.06937; Allocated: 515072; Reserved: 2097152; time used = 2.9908721446990967s
epoch 35: train_loss: 0.06907; Allocated: 515072; Reserved: 2097152; time used = 2.8627703189849854s
epoch 40: train_loss: 0.07339; Allocated: 515072; Reserved: 2097152; time used = 2.855513572692871s
epoch 45: train_loss: 0.10013; Allocated: 515072; Reserved: 2097152; time used = 3.0062100887298584s
epoch 50: train_loss: 0.08984; Allocated: 515072; Reserved: 2097152; time used = 2.859128952026367s
epoch 55: train_loss: 0.07803; Allocated: 515072; Reserved: 2097152; time used = 2.9959628582000732s
epoch 60: train_loss: 0.06768; Allocated: 515072; Reserved: 2097152; time used = 2.8540525436401367s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 38.887624740600586.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.731764705882353, 'samples': 0.7631578947368421, 'weighted': 0.7462538699690403, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2519.35it/s]100%|██████████| 1000/1000 [00:00<00:00, 3726.73it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f6e8bf39050>
total iter: 500
epoch 5: train_loss: 439.48351; Allocated: 572416; Reserved: 6291456; time used = 50.64679503440857s
epoch 10: train_loss: 87.52924; Allocated: 572416; Reserved: 8388608; time used = 50.060723304748535s
epoch 15: train_loss: 22.95579; Allocated: 572416; Reserved: 6291456; time used = 50.319902658462524s
epoch 20: train_loss: 8.36859; Allocated: 572416; Reserved: 6291456; time used = 50.454097270965576s
epoch 25: train_loss: 1.42112; Allocated: 572416; Reserved: 6291456; time used = 50.29504656791687s
epoch 30: train_loss: 1.40775; Allocated: 572416; Reserved: 8388608; time used = 50.66862750053406s
epoch 35: train_loss: 1.39193; Allocated: 572416; Reserved: 6291456; time used = 50.36760759353638s
epoch 40: train_loss: 1.38645; Allocated: 572416; Reserved: 6291456; time used = 49.68925952911377s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 446.12481665611267.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3101.04it/s]100%|██████████| 1000/1000 [00:00<00:00, 4443.72it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fa04e62b050>
total iter: 500
epoch 5: train_loss: 0.65599; Allocated: 493568; Reserved: 6291456; time used = 11.399374008178711s
epoch 10: train_loss: 0.61190; Allocated: 493568; Reserved: 6291456; time used = 11.292927265167236s
epoch 15: train_loss: 0.36230; Allocated: 493568; Reserved: 6291456; time used = 11.46451449394226s
epoch 20: train_loss: 0.24574; Allocated: 493568; Reserved: 6291456; time used = 11.478617191314697s
epoch 25: train_loss: 0.21713; Allocated: 493568; Reserved: 6291456; time used = 11.265551567077637s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 69.39363861083984.
Training classifier using 80.00% nodes...
{'micro': 0.72, 'macro': 0.71997199719972, 'samples': 0.72, 'weighted': 0.72002800280028, 'accuracy': 0.72}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2492.82it/s]100%|██████████| 1000/1000 [00:00<00:00, 3673.85it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f0f1baaa050>
total iter: 500
epoch 5: train_loss: 121.19607; Allocated: 694784; Reserved: 29360128; time used = 5.744536399841309s
epoch 10: train_loss: 45.86393; Allocated: 694784; Reserved: 29360128; time used = 5.888713836669922s
epoch 15: train_loss: 14.98782; Allocated: 694784; Reserved: 29360128; time used = 5.697667121887207s
epoch 20: train_loss: 7.37664; Allocated: 694784; Reserved: 29360128; time used = 5.677839517593384s
epoch 25: train_loss: 2.67464; Allocated: 694784; Reserved: 29360128; time used = 5.682044506072998s
epoch 30: train_loss: 3.38560; Allocated: 694784; Reserved: 29360128; time used = 5.6634838581085205s
epoch 35: train_loss: 2.44523; Allocated: 694784; Reserved: 29360128; time used = 5.664268970489502s
epoch 40: train_loss: 1.67764; Allocated: 694784; Reserved: 29360128; time used = 5.659250497817993s
epoch 45: train_loss: 1.39196; Allocated: 694784; Reserved: 29360128; time used = 5.857661962509155s
epoch 50: train_loss: 1.38152; Allocated: 694784; Reserved: 29360128; time used = 5.654013156890869s
epoch 55: train_loss: 1.45049; Allocated: 694784; Reserved: 29360128; time used = 5.661657094955444s
epoch 60: train_loss: 1.39261; Allocated: 694784; Reserved: 29360128; time used = 5.654971599578857s
epoch 65: train_loss: 1.39213; Allocated: 694784; Reserved: 29360128; time used = 5.664157867431641s
epoch 70: train_loss: 1.41097; Allocated: 694784; Reserved: 29360128; time used = 5.655301094055176s
epoch 75: train_loss: 1.46044; Allocated: 694784; Reserved: 29360128; time used = 5.847490549087524s
epoch 80: train_loss: 1.44692; Allocated: 694784; Reserved: 29360128; time used = 5.660823345184326s
epoch 85: train_loss: 1.37158; Allocated: 694784; Reserved: 29360128; time used = 5.662768840789795s
epoch 90: train_loss: 1.37792; Allocated: 694784; Reserved: 29360128; time used = 5.674710512161255s
epoch 95: train_loss: 1.37767; Allocated: 694784; Reserved: 29360128; time used = 5.6574976444244385s
epoch 100: train_loss: 1.37340; Allocated: 694784; Reserved: 29360128; time used = 5.6620774269104s
epoch 105: train_loss: 1.39611; Allocated: 694784; Reserved: 29360128; time used = 5.78096866607666s
epoch 110: train_loss: 1.40044; Allocated: 694784; Reserved: 29360128; time used = 6.032451152801514s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 129.86133527755737.
Training classifier using 80.00% nodes...
{'micro': 0.7, 'macro': 0.7000000000000001, 'samples': 0.7, 'weighted': 0.7, 'accuracy': 0.7}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f6512f77370>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa88175b370>
total iter: 500
epoch 5: train_loss: 0.51143; Allocated: 591872; Reserved: 6291456; time used = 4.188686847686768s
epoch 10: train_loss: 0.50355; Allocated: 591872; Reserved: 6291456; time used = 4.134721279144287s
epoch 15: train_loss: 0.48101; Allocated: 591872; Reserved: 6291456; time used = 4.26829719543457s
epoch 20: train_loss: 0.45993; Allocated: 591872; Reserved: 6291456; time used = 4.122625827789307s
epoch 25: train_loss: 0.46922; Allocated: 591872; Reserved: 6291456; time used = 4.137400388717651s
epoch 30: train_loss: 0.46353; Allocated: 591872; Reserved: 6291456; time used = 4.2915709018707275s
epoch 35: train_loss: 0.45836; Allocated: 591872; Reserved: 6291456; time used = 4.130908489227295s
epoch 40: train_loss: 0.45648; Allocated: 591872; Reserved: 6291456; time used = 4.1163599491119385s
epoch 45: train_loss: 0.44851; Allocated: 591872; Reserved: 6291456; time used = 4.120023965835571s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.64789319038391.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7490829053558328, 'samples': 0.7631578947368421, 'weighted': 0.7584662316098391, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f42e2c9e870>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.39599; Allocated: 866816; Reserved: 6291456; time used = 4.3281090259552s
epoch 10: train_loss: 1.36988; Allocated: 866816; Reserved: 6291456; time used = 4.2964863777160645s
epoch 15: train_loss: 1.32200; Allocated: 866816; Reserved: 6291456; time used = 4.428313255310059s
epoch 20: train_loss: 1.29553; Allocated: 866816; Reserved: 6291456; time used = 4.298450231552124s
epoch 25: train_loss: 1.27268; Allocated: 866816; Reserved: 6291456; time used = 4.304183721542358s
epoch 30: train_loss: 1.24595; Allocated: 866816; Reserved: 6291456; time used = 4.447491884231567s
epoch 35: train_loss: 1.22951; Allocated: 866816; Reserved: 6291456; time used = 4.28084135055542s
epoch 40: train_loss: 1.25307; Allocated: 866816; Reserved: 6291456; time used = 4.284404516220093s
epoch 45: train_loss: 1.21324; Allocated: 866816; Reserved: 6291456; time used = 4.297514200210571s
epoch 50: train_loss: 1.22846; Allocated: 866816; Reserved: 6291456; time used = 4.425732851028442s
epoch 55: train_loss: 1.20557; Allocated: 866816; Reserved: 6291456; time used = 4.300447463989258s
epoch 60: train_loss: 1.19830; Allocated: 866816; Reserved: 6291456; time used = 4.32469367980957s
epoch 65: train_loss: 1.17843; Allocated: 866816; Reserved: 6291456; time used = 4.296513795852661s
epoch 70: train_loss: 1.16738; Allocated: 866816; Reserved: 6291456; time used = 4.430380582809448s
epoch 75: train_loss: 1.16966; Allocated: 866816; Reserved: 6291456; time used = 4.293389558792114s
epoch 80: train_loss: 1.16960; Allocated: 866816; Reserved: 6291456; time used = 4.282321453094482s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 74.48635697364807.
Training classifier using 80.00% nodes...
{'micro': 0.7894736842105263, 'macro': 0.7738095238095237, 'samples': 0.7894736842105263, 'weighted': 0.7832080200501252, 'accuracy': 0.7894736842105263}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2518.16it/s]100%|██████████| 1500/1500 [00:00<00:00, 4776.34it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fc12743b370>
total iter: 500
epoch 5: train_loss: 648.84408; Allocated: 774144; Reserved: 16777216; time used = 6.995301008224487s
epoch 10: train_loss: 113.11781; Allocated: 774144; Reserved: 16777216; time used = 6.831417560577393s
epoch 15: train_loss: 4.95317; Allocated: 774144; Reserved: 16777216; time used = 6.846783876419067s
epoch 20: train_loss: 2.37712; Allocated: 774144; Reserved: 16777216; time used = 6.807855129241943s
epoch 25: train_loss: 1.47659; Allocated: 774144; Reserved: 16777216; time used = 7.035491466522217s
epoch 30: train_loss: 1.39230; Allocated: 774144; Reserved: 16777216; time used = 6.754560232162476s
epoch 35: train_loss: 1.38743; Allocated: 774144; Reserved: 16777216; time used = 6.901077747344971s
epoch 40: train_loss: 1.38789; Allocated: 774144; Reserved: 16777216; time used = 6.793830156326294s
epoch 45: train_loss: 1.38684; Allocated: 774144; Reserved: 16777216; time used = 6.998333692550659s
epoch 50: train_loss: 1.38673; Allocated: 774144; Reserved: 16777216; time used = 6.7826361656188965s
epoch 55: train_loss: 1.38648; Allocated: 774144; Reserved: 16777216; time used = 6.752647876739502s
epoch 60: train_loss: 1.38648; Allocated: 774144; Reserved: 16777216; time used = 6.951663494110107s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 88.40986442565918.
Training classifier using 80.00% nodes...
{'micro': 0.48, 'macro': 0.4665558390382625, 'samples': 0.48, 'weighted': 0.4620328480776409, 'accuracy': 0.48}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2529.55it/s] 80%|███████▉  | 1593/2000 [00:00<00:00, 3263.28it/s]100%|██████████| 2000/2000 [00:00<00:00, 5438.20it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f650ce2a140>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.65040; Allocated: 4196864; Reserved: 33554432; time used = 941.0645658969879s
epoch 10: train_loss: 0.64744; Allocated: 4196864; Reserved: 33554432; time used = 935.121339559555s
epoch 15: train_loss: 0.56532; Allocated: 4196864; Reserved: 33554432; time used = 927.1098146438599s
epoch 20: train_loss: 0.56832; Allocated: 4196864; Reserved: 33554432; time used = 926.9314701557159s
epoch 25: train_loss: 0.55199; Allocated: 4196864; Reserved: 33554432; time used = 938.1106071472168s
epoch 30: train_loss: 0.51950; Allocated: 4196864; Reserved: 33554432; time used = 942.3895065784454s
epoch 35: train_loss: 0.48039; Allocated: 4196864; Reserved: 33554432; time used = 926.9397718906403s
epoch 40: train_loss: 0.46663; Allocated: 4196864; Reserved: 33554432; time used = 937.5003087520599s
epoch 45: train_loss: 0.45490; Allocated: 4196864; Reserved: 33554432; time used = 949.1139516830444s
epoch 50: train_loss: 0.45136; Allocated: 4196864; Reserved: 35651584; time used = 943.4758236408234s
epoch 55: train_loss: 0.44658; Allocated: 4196864; Reserved: 33554432; time used = 939.7443072795868s
epoch 60: train_loss: 0.43977; Allocated: 4196864; Reserved: 33554432; time used = 932.306364774704s
epoch 65: train_loss: 0.43731; Allocated: 4196864; Reserved: 33554432; time used = 930.3144402503967s
epoch 70: train_loss: 0.43732; Allocated: 4196864; Reserved: 33554432; time used = 921.5441341400146s
epoch 75: train_loss: 0.43140; Allocated: 4196864; Reserved: 33554432; time used = 921.5253531932831s
epoch 80: train_loss: 0.43129; Allocated: 4196864; Reserved: 33554432; time used = 919.6170513629913s
epoch 85: train_loss: 0.42853; Allocated: 4196864; Reserved: 33554432; time used = 919.1365385055542s
epoch 90: train_loss: 0.43183; Allocated: 4196864; Reserved: 33554432; time used = 916.8998248577118s
epoch 95: train_loss: 0.42799; Allocated: 4196864; Reserved: 33554432; time used = 925.6177170276642s
epoch 100: train_loss: 0.43872; Allocated: 4196864; Reserved: 33554432; time used = 945.1699922084808s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 18644.76401233673.
Training classifier using 80.00% nodes...
{'micro': 0.7225, 'macro': 0.7224149895905622, 'samples': 0.7225, 'weighted': 0.7222692574600973, 'accuracy': 0.7225}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2475.67it/s]100%|██████████| 1500/1500 [00:00<00:00, 4717.12it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fe4a10f0050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f4f1f379780>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3107.12it/s]100%|██████████| 1000/1000 [00:00<00:00, 4448.74it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7efe90d29050>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68243; Allocated: 767488; Reserved: 27262976; time used = 9.088095426559448s
epoch 10: train_loss: 0.69595; Allocated: 767488; Reserved: 29360128; time used = 9.27284836769104s
epoch 15: train_loss: 0.69307; Allocated: 767488; Reserved: 27262976; time used = 9.06708574295044s
epoch 20: train_loss: 0.69607; Allocated: 767488; Reserved: 29360128; time used = 9.000706911087036s
epoch 25: train_loss: 0.68479; Allocated: 767488; Reserved: 29360128; time used = 9.002699375152588s
epoch 30: train_loss: 0.67291; Allocated: 767488; Reserved: 29360128; time used = 8.946305990219116s
epoch 35: train_loss: 0.65933; Allocated: 767488; Reserved: 29360128; time used = 8.934492111206055s
epoch 40: train_loss: 0.66357; Allocated: 767488; Reserved: 29360128; time used = 9.039719581604004s
epoch 45: train_loss: 0.65719; Allocated: 767488; Reserved: 29360128; time used = 9.154828310012817s
epoch 50: train_loss: 0.67605; Allocated: 767488; Reserved: 31457280; time used = 8.982344150543213s
epoch 55: train_loss: 0.68513; Allocated: 767488; Reserved: 29360128; time used = 8.984971761703491s
epoch 60: train_loss: 0.66947; Allocated: 767488; Reserved: 29360128; time used = 8.905836820602417s
epoch 65: train_loss: 0.66829; Allocated: 767488; Reserved: 29360128; time used = 8.94486141204834s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 124.84683275222778.
Training classifier using 80.00% nodes...
{'micro': 0.605, 'macro': 0.6027655562539284, 'samples': 0.605, 'weighted': 0.6033614079195475, 'accuracy': 0.605}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f5efa43cf00>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 386.77552103996277s
epoch 10: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 374.7485659122467s
epoch 15: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 375.4990780353546s
epoch 20: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 375.28015899658203s
epoch 25: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 386.9593069553375s
epoch 30: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 558.2247140407562s
epoch 35: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 416.9375641345978s
epoch 40: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 389.9945435523987s
epoch 45: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 418.37073850631714s
epoch 50: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 722.3979177474976s
epoch 55: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 691.032160282135s
epoch 60: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1184.4963371753693s
epoch 65: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 714.0770781040192s
epoch 70: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 437.9697935581207s
epoch 75: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 434.69956254959106s
epoch 80: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 439.35429430007935s
epoch 85: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 436.6196482181549s
epoch 90: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 435.4848313331604s
epoch 95: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 438.97360038757324s
epoch 100: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 434.97280383110046s
epoch 105: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 436.00662660598755s
epoch 110: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 443.0104146003723s
epoch 115: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 474.9357147216797s
epoch 120: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 512.5381293296814s
epoch 125: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 483.38076543807983s
epoch 130: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 467.67595767974854s
epoch 135: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 500.0001525878906s
epoch 140: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 790.706116437912s
epoch 145: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 449.7117757797241s
epoch 150: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 445.88491702079773s
epoch 155: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 442.379522562027s
epoch 160: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 467.092125415802s
epoch 165: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 921.0853273868561s
epoch 170: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 497.4160692691803s
epoch 175: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 494.78644037246704s
epoch 180: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 512.0198309421539s
epoch 185: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 498.6229121685028s
epoch 190: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 663.4638767242432s
epoch 195: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1538.3466215133667s
epoch 200: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1006.6909630298615s
epoch 205: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 909.0624015331268s
epoch 210: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 975.4362802505493s
epoch 215: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 974.9267339706421s
epoch 220: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 892.957849740982s
epoch 225: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 917.7300174236298s
epoch 230: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 934.937338590622s
epoch 235: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1083.9251329898834s
epoch 240: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 681.3558208942413s
epoch 245: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 696.7528922557831s
epoch 250: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 784.7355713844299s
epoch 255: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 795.7973392009735s
epoch 260: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 776.2512493133545s
epoch 265: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 797.1123065948486s
epoch 270: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 779.905326128006s
epoch 275: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 788.6393840312958s
epoch 280: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 498.7914345264435s
epoch 285: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 442.48559308052063s
epoch 290: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 444.1356010437012s
epoch 295: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 442.09176230430603s
epoch 300: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 457.7279601097107s
epoch 305: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 474.5453550815582s
epoch 310: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 460.86072850227356s
epoch 315: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 699.4917097091675s
epoch 320: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 723.1908092498779s
epoch 325: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 724.3739447593689s
epoch 330: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 733.7703995704651s
epoch 335: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 732.8243885040283s
epoch 340: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 822.6465997695923s
epoch 345: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 973.1573624610901s
epoch 350: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 875.9571018218994s
epoch 355: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1111.207421541214s
epoch 360: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 955.0719962120056s
epoch 365: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1051.548115491867s
epoch 370: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1121.9820537567139s
epoch 375: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1147.5863900184631s
epoch 380: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1238.907886505127s
epoch 385: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1030.4051010608673s
epoch 390: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1061.0840916633606s
epoch 395: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1082.9806063175201s
epoch 400: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1035.7215230464935s
epoch 405: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1073.8135032653809s
epoch 410: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1134.4404911994934s
epoch 415: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1115.171571969986s
epoch 420: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1213.163415670395s
epoch 425: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1193.1095032691956s
epoch 430: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 1822.4283907413483s
epoch 435: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2434.4973990917206s
epoch 440: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2536.476015806198s
epoch 445: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2523.0240681171417s
epoch 450: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2511.4716806411743s
epoch 455: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2482.989106655121s
epoch 460: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2506.0971417427063s
epoch 465: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2541.8084964752197s
epoch 470: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2535.2020688056946s
epoch 475: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2538.0510029792786s
epoch 480: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2523.844732761383s
epoch 485: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2518.516079187393s
epoch 490: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2506.777985095978s
epoch 495: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2497.4600982666016s
epoch 500: train_loss: 0.69315; Allocated: 41036800; Reserved: 1065353216; time used = 2485.9228739738464s
Finished training. Time used = 99531.05766606331.
Training classifier using 20.00% nodes...
{'micro': 0.7663243311778877, 'macro': 0.7602373830981971, 'samples': 0.7663243311778877, 'weighted': 0.7657335836672398, 'accuracy': 0.7663243311778877}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2460.82it/s]100%|██████████| 1000/1000 [00:00<00:00, 3820.85it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f8c95bec500>
head 0
total iter: 500
epoch 5: train_loss: 1.50232; Allocated: 427520; Reserved: 6291456; time used = 51.152193784713745s
epoch 10: train_loss: 1.41278; Allocated: 427520; Reserved: 6291456; time used = 52.30246090888977s
epoch 15: train_loss: 1.39898; Allocated: 427520; Reserved: 6291456; time used = 50.872886419296265s
epoch 20: train_loss: 1.38882; Allocated: 427520; Reserved: 8388608; time used = 50.74284648895264s
epoch 25: train_loss: 1.38762; Allocated: 427520; Reserved: 6291456; time used = 50.598663330078125s
epoch 30: train_loss: 1.38582; Allocated: 427520; Reserved: 6291456; time used = 51.007041215896606s
epoch 35: train_loss: 1.38560; Allocated: 427520; Reserved: 6291456; time used = 50.339356660842896s
epoch 40: train_loss: 1.38516; Allocated: 427520; Reserved: 8388608; time used = 50.41649675369263s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 411.0559046268463.
Training classifier using 80.00% nodes...

{'micro': 0.47500000000000003, 'macro': 0.3719907891982416, 'samples': 0.475, 'weighted': 0.36690391459074734, 'accuracy': 0.475}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fec9ff1b820>
total iter: 500
epoch 5: train_loss: 1.37433; Allocated: 53549056; Reserved: 109051904; time used = 3.5868124961853027s
epoch 10: train_loss: 1.34407; Allocated: 53549056; Reserved: 109051904; time used = 3.667947292327881s
epoch 15: train_loss: 1.35103; Allocated: 53549056; Reserved: 109051904; time used = 3.5459864139556885s
epoch 20: train_loss: 1.27956; Allocated: 53549056; Reserved: 109051904; time used = 3.5735604763031006s
epoch 25: train_loss: 1.34463; Allocated: 53549056; Reserved: 109051904; time used = 3.6785662174224854s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 21.969653367996216.
Training classifier using 20.00% nodes...
{'micro': 0.33420074349442375, 'macro': 0.23572391981638244, 'samples': 0.3377160030052592, 'weighted': 0.268717668538643, 'accuracy': 0.3377160030052592}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2889.02it/s] 81%|████████  | 1621/2000 [00:00<00:00, 3701.75it/s]100%|██████████| 2000/2000 [00:00<00:00, 6206.88it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f6c9bb6ddc0>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.56442; Allocated: 3924480; Reserved: 31457280; time used = 133.63193273544312s
epoch 10: train_loss: 1.37664; Allocated: 3924480; Reserved: 31457280; time used = 134.9264576435089s
epoch 15: train_loss: 1.35093; Allocated: 3924480; Reserved: 31457280; time used = 136.88022089004517s
epoch 20: train_loss: 1.32594; Allocated: 3924480; Reserved: 31457280; time used = 135.4502854347229s
epoch 25: train_loss: 1.28482; Allocated: 3924480; Reserved: 31457280; time used = 135.94270968437195s
epoch 30: train_loss: 1.21860; Allocated: 3924480; Reserved: 33554432; time used = 135.09473371505737s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 924.7256286144257.
Training classifier using 80.00% nodes...

{'micro': 0.7175, 'macro': 0.71556405786887, 'samples': 0.7175, 'weighted': 0.7148600789120954, 'accuracy': 0.7175}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2378.17it/s]100%|██████████| 1000/1000 [00:00<00:00, 3720.97it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe0ada3c050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2909.75it/s]100%|██████████| 1500/1500 [00:00<00:00, 5537.32it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f5b050ae050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2913.99it/s]100%|██████████| 1000/1000 [00:00<00:00, 4412.33it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f9800bb81e0>
total iter: 500
epoch 5: train_loss: 72.26973; Allocated: 500224; Reserved: 8388608; time used = 32.399280309677124s
epoch 10: train_loss: 32.93824; Allocated: 500224; Reserved: 6291456; time used = 32.35070586204529s
epoch 15: train_loss: 13.50150; Allocated: 500224; Reserved: 6291456; time used = 32.471179485321045s
epoch 20: train_loss: 5.43352; Allocated: 500224; Reserved: 8388608; time used = 32.50645446777344s
epoch 25: train_loss: 2.12888; Allocated: 500224; Reserved: 8388608; time used = 32.563188791275024s
epoch 30: train_loss: 1.94472; Allocated: 500224; Reserved: 8388608; time used = 32.299712896347046s
epoch 35: train_loss: 1.79323; Allocated: 500224; Reserved: 8388608; time used = 32.50127601623535s
epoch 40: train_loss: 1.58823; Allocated: 500224; Reserved: 6291456; time used = 32.388423442840576s
epoch 45: train_loss: 1.50762; Allocated: 500224; Reserved: 10485760; time used = 32.265212297439575s
epoch 50: train_loss: 1.51695; Allocated: 500224; Reserved: 6291456; time used = 32.25111413002014s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 327.18356943130493.
Training classifier using 80.00% nodes...

{'micro': 0.705, 'macro': 0.7049926248156204, 'samples': 0.705, 'weighted': 0.7049631240781019, 'accuracy': 0.705}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f2556930af0>
total iter: 500
epoch 5: train_loss: 0.48089; Allocated: 857088; Reserved: 6291456; time used = 4.661068916320801s
epoch 10: train_loss: 0.32497; Allocated: 857088; Reserved: 6291456; time used = 4.494044542312622s
epoch 15: train_loss: 0.15644; Allocated: 857088; Reserved: 6291456; time used = 4.6496901512146s
epoch 20: train_loss: 0.06282; Allocated: 857088; Reserved: 6291456; time used = 4.660297155380249s
epoch 25: train_loss: 0.10175; Allocated: 857088; Reserved: 6291456; time used = 4.500686168670654s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 26.236696243286133.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.5606960950764007, 'samples': 0.5652173913043478, 'weighted': 0.5639255923820773, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f12458bd730>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38658; Allocated: 57824256; Reserved: 299892736; time used = 3.093013048171997s
epoch 10: train_loss: 1.38677; Allocated: 57824256; Reserved: 299892736; time used = 3.041368246078491s
epoch 15: train_loss: 1.38776; Allocated: 57824256; Reserved: 299892736; time used = 3.0422539710998535s
epoch 20: train_loss: 1.38711; Allocated: 57824256; Reserved: 299892736; time used = 3.0346338748931885s
epoch 25: train_loss: 1.38638; Allocated: 57824256; Reserved: 299892736; time used = 3.0652294158935547s
epoch 30: train_loss: 1.38642; Allocated: 57824256; Reserved: 299892736; time used = 3.047717332839966s
epoch 35: train_loss: 1.38648; Allocated: 57824256; Reserved: 299892736; time used = 3.076834201812744s
epoch 40: train_loss: 1.38652; Allocated: 57824256; Reserved: 299892736; time used = 3.0579428672790527s
epoch 45: train_loss: 1.38636; Allocated: 57824256; Reserved: 299892736; time used = 3.050255537033081s
epoch 50: train_loss: 1.38639; Allocated: 57824256; Reserved: 299892736; time used = 3.05041766166687s
epoch 55: train_loss: 1.38638; Allocated: 57824256; Reserved: 299892736; time used = 3.0360918045043945s
epoch 60: train_loss: 1.38629; Allocated: 57824256; Reserved: 299892736; time used = 3.0373966693878174s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 49.479828119277954.
Training classifier using 20.00% nodes...
{'micro': 0.19442379182156136, 'macro': 0.05473574045002617, 'samples': 0.19646882043576258, 'weighted': 0.06486433290490261, 'accuracy': 0.19646882043576258}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f111664fe60>
total iter: 500
epoch 5: train_loss: 4.85572; Allocated: 929280; Reserved: 6291456; time used = 6.096452474594116s
epoch 10: train_loss: 2.38077; Allocated: 929280; Reserved: 8388608; time used = 5.95531964302063s
epoch 15: train_loss: 1.41499; Allocated: 929280; Reserved: 6291456; time used = 6.077213287353516s
epoch 20: train_loss: 1.35683; Allocated: 929280; Reserved: 6291456; time used = 6.117457628250122s
epoch 25: train_loss: 1.34568; Allocated: 929280; Reserved: 6291456; time used = 5.945945501327515s
epoch 30: train_loss: 1.31449; Allocated: 929280; Reserved: 6291456; time used = 6.058114528656006s
epoch 35: train_loss: 1.24515; Allocated: 929280; Reserved: 6291456; time used = 6.073349952697754s
epoch 40: train_loss: 1.22910; Allocated: 929280; Reserved: 6291456; time used = 5.952794075012207s
epoch 45: train_loss: 1.20981; Allocated: 929280; Reserved: 8388608; time used = 6.091341495513916s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 62.454201459884644.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f883188d5a0>
total iter: 500
epoch 5: train_loss: 0.58727; Allocated: 506368; Reserved: 8388608; time used = 4.039772272109985s
epoch 10: train_loss: 0.57266; Allocated: 506368; Reserved: 8388608; time used = 4.001389026641846s
epoch 15: train_loss: 0.58298; Allocated: 506368; Reserved: 8388608; time used = 4.12759804725647s
epoch 20: train_loss: 0.57953; Allocated: 506368; Reserved: 8388608; time used = 4.0033745765686035s
epoch 25: train_loss: 0.58969; Allocated: 506368; Reserved: 8388608; time used = 4.0072150230407715s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 23.376346111297607.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.638095238095238, 'samples': 0.7105263157894737, 'weighted': 0.6636591478696743, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2894.41it/s] 80%|████████  | 1601/2000 [00:00<00:00, 3700.72it/s]100%|██████████| 2000/2000 [00:00<00:00, 6171.32it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f1423eeed70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f38ba597690>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.41926; Allocated: 57891840; Reserved: 163577856; time used = 1.7526307106018066s
epoch 10: train_loss: 1.40494; Allocated: 57891840; Reserved: 163577856; time used = 1.7172322273254395s
epoch 15: train_loss: 1.39093; Allocated: 57891840; Reserved: 163577856; time used = 1.7317187786102295s
epoch 20: train_loss: 1.38753; Allocated: 57891840; Reserved: 163577856; time used = 1.7228362560272217s
epoch 25: train_loss: 1.38746; Allocated: 57891840; Reserved: 163577856; time used = 1.7310450077056885s
epoch 30: train_loss: 1.38782; Allocated: 57891840; Reserved: 163577856; time used = 1.7272863388061523s
epoch 35: train_loss: 1.38791; Allocated: 57891840; Reserved: 163577856; time used = 1.7148072719573975s
epoch 40: train_loss: 1.38740; Allocated: 57891840; Reserved: 163577856; time used = 1.7165353298187256s
epoch 45: train_loss: 1.38670; Allocated: 57891840; Reserved: 163577856; time used = 1.7056241035461426s
epoch 50: train_loss: 1.38630; Allocated: 57891840; Reserved: 163577856; time used = 1.7304167747497559s
epoch 55: train_loss: 1.38619; Allocated: 57891840; Reserved: 163577856; time used = 1.7206096649169922s
epoch 60: train_loss: 1.37966; Allocated: 57891840; Reserved: 163577856; time used = 1.717158555984497s
epoch 65: train_loss: 1.44672; Allocated: 57891840; Reserved: 163577856; time used = 1.7206430435180664s
epoch 70: train_loss: 1.39224; Allocated: 57891840; Reserved: 163577856; time used = 1.714097023010254s
epoch 75: train_loss: 1.37549; Allocated: 57891840; Reserved: 163577856; time used = 1.715158224105835s
epoch 80: train_loss: 1.28940; Allocated: 57891840; Reserved: 163577856; time used = 1.7134478092193604s
epoch 85: train_loss: 1.11983; Allocated: 57891840; Reserved: 163577856; time used = 1.7118144035339355s
epoch 90: train_loss: 0.98541; Allocated: 57891840; Reserved: 163577856; time used = 1.7243554592132568s
epoch 95: train_loss: 0.87349; Allocated: 57891840; Reserved: 163577856; time used = 1.7109017372131348s
epoch 100: train_loss: 0.67283; Allocated: 57891840; Reserved: 163577856; time used = 1.7091152667999268s
epoch 105: train_loss: 0.49271; Allocated: 57891840; Reserved: 163577856; time used = 1.7218997478485107s
epoch 110: train_loss: 0.48928; Allocated: 57891840; Reserved: 163577856; time used = 1.717167615890503s
epoch 115: train_loss: 0.36200; Allocated: 57891840; Reserved: 163577856; time used = 1.7386400699615479s
epoch 120: train_loss: 0.37999; Allocated: 57891840; Reserved: 163577856; time used = 1.7268590927124023s
epoch 125: train_loss: 0.20427; Allocated: 57891840; Reserved: 163577856; time used = 1.7194726467132568s
epoch 130: train_loss: 0.14515; Allocated: 57891840; Reserved: 163577856; time used = 1.7307708263397217s
epoch 135: train_loss: 0.13169; Allocated: 57891840; Reserved: 163577856; time used = 1.7181122303009033s
epoch 140: train_loss: 0.13769; Allocated: 57891840; Reserved: 163577856; time used = 1.725496768951416s
epoch 145: train_loss: 0.11117; Allocated: 57891840; Reserved: 163577856; time used = 1.729374885559082s
epoch 150: train_loss: 0.10134; Allocated: 57891840; Reserved: 163577856; time used = 1.7247986793518066s
epoch 155: train_loss: 0.07733; Allocated: 57891840; Reserved: 163577856; time used = 1.729567527770996s
epoch 160: train_loss: 0.09113; Allocated: 57891840; Reserved: 163577856; time used = 1.7187793254852295s
epoch 165: train_loss: 0.08174; Allocated: 57891840; Reserved: 163577856; time used = 1.7195653915405273s
epoch 170: train_loss: 0.09337; Allocated: 57891840; Reserved: 163577856; time used = 1.7223167419433594s
epoch 175: train_loss: 0.07981; Allocated: 57891840; Reserved: 163577856; time used = 1.7342805862426758s
epoch 180: train_loss: 0.06765; Allocated: 57891840; Reserved: 163577856; time used = 1.7175989151000977s
epoch 185: train_loss: 0.06004; Allocated: 57891840; Reserved: 163577856; time used = 1.7289249897003174s
epoch 190: train_loss: 0.07897; Allocated: 57891840; Reserved: 163577856; time used = 1.7279179096221924s
epoch 195: train_loss: 0.05777; Allocated: 57891840; Reserved: 163577856; time used = 1.7292897701263428s
epoch 200: train_loss: 0.05158; Allocated: 57891840; Reserved: 163577856; time used = 1.7358293533325195s
epoch 205: train_loss: 0.06478; Allocated: 57891840; Reserved: 163577856; time used = 1.7247350215911865s
epoch 210: train_loss: 0.09412; Allocated: 57891840; Reserved: 163577856; time used = 1.7302498817443848s
epoch 215: train_loss: 0.09417; Allocated: 57891840; Reserved: 163577856; time used = 1.723783254623413s
epoch 220: train_loss: 0.05977; Allocated: 57891840; Reserved: 163577856; time used = 1.7508223056793213s
epoch 225: train_loss: 0.05564; Allocated: 57891840; Reserved: 163577856; time used = 1.7347750663757324s
epoch 230: train_loss: 0.05793; Allocated: 57891840; Reserved: 163577856; time used = 1.7290678024291992s
epoch 235: train_loss: 0.04798; Allocated: 57891840; Reserved: 163577856; time used = 1.7249960899353027s
epoch 240: train_loss: 0.04172; Allocated: 57891840; Reserved: 163577856; time used = 1.759603500366211s
epoch 245: train_loss: 0.04209; Allocated: 57891840; Reserved: 163577856; time used = 1.752695083618164s
epoch 250: train_loss: 0.05473; Allocated: 57891840; Reserved: 163577856; time used = 1.7449393272399902s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 89.93660497665405.
Training classifier using 20.00% nodes...
{'micro': 0.24721189591078066, 'macro': 0.1185242522714306, 'samples': 0.2498121712997746, 'weighted': 0.14642043482626776, 'accuracy': 0.2498121712997746}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2873.12it/s]100%|██████████| 1000/1000 [00:00<00:00, 4351.08it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f9043424230>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.589795112609863s
epoch 10: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.5488667488098145s
epoch 15: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.702796459197998s
epoch 20: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.525516510009766s
epoch 25: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.511401176452637s
epoch 30: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.594443082809448s
epoch 35: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.5808351039886475s
epoch 40: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.507988452911377s
epoch 45: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.513974189758301s
epoch 50: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.708012104034424s
epoch 55: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.524069309234619s
epoch 60: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.530163288116455s
epoch 65: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.509202003479004s
epoch 70: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.5154900550842285s
epoch 75: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.507949352264404s
epoch 80: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.515809059143066s
epoch 85: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.714600563049316s
epoch 90: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.504984140396118s
epoch 95: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.506802558898926s
epoch 100: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.508261680603027s
epoch 105: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.510213375091553s
epoch 110: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.508557319641113s
epoch 115: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.500808954238892s
epoch 120: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.694732666015625s
epoch 125: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.506890296936035s
epoch 130: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.51372218132019s
epoch 135: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.521117448806763s
epoch 140: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.590899467468262s
epoch 145: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.542909622192383s
epoch 150: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.505589246749878s
epoch 155: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.699235439300537s
epoch 160: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.515301465988159s
epoch 165: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.509672164916992s
epoch 170: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.5007195472717285s
epoch 175: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.49935245513916s
epoch 180: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.5023722648620605s
epoch 185: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.510444402694702s
epoch 190: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.697965383529663s
epoch 195: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.5087151527404785s
epoch 200: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.506113052368164s
epoch 205: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.502519845962524s
epoch 210: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.50296950340271s
epoch 215: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.512410879135132s
epoch 220: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.557459592819214s
epoch 225: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.697312355041504s
epoch 230: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.483256578445435s
epoch 235: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.568185567855835s
epoch 240: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.4965338706970215s
epoch 245: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.47273850440979s
epoch 250: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.508004426956177s
epoch 255: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.558927536010742s
epoch 260: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.699843406677246s
epoch 265: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.520917177200317s
epoch 270: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.521222829818726s
epoch 275: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.517037630081177s
epoch 280: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.5168187618255615s
epoch 285: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.514228820800781s
epoch 290: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.518625736236572s
epoch 295: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.722741365432739s
epoch 300: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.513920783996582s
epoch 305: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.51212215423584s
epoch 310: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.520917177200317s
epoch 315: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.512953519821167s
epoch 320: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.505348443984985s
epoch 325: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.508641242980957s
epoch 330: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.704068183898926s
epoch 335: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.510242938995361s
epoch 340: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.510943174362183s
epoch 345: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.511246919631958s
epoch 350: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.506920337677002s
epoch 355: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.508605241775513s
epoch 360: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.508368492126465s
epoch 365: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.694894313812256s
epoch 370: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.505846977233887s
epoch 375: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.507099151611328s
epoch 380: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.514915704727173s
epoch 385: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.501951694488525s
epoch 390: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.50342869758606s
epoch 395: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.509430885314941s
epoch 400: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.65714955329895s
epoch 405: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.5188798904418945s
epoch 410: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.50591778755188s
epoch 415: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.506957530975342s
epoch 420: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.502544164657593s
epoch 425: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.506000757217407s
epoch 430: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.508653163909912s
epoch 435: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.696772575378418s
epoch 440: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.507554769515991s
epoch 445: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.505350589752197s
epoch 450: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.516509771347046s
epoch 455: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.515338182449341s
epoch 460: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.506288528442383s
epoch 465: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.5077080726623535s
epoch 470: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.699458360671997s
epoch 475: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.520191192626953s
epoch 480: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.53471827507019s
epoch 485: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.493425607681274s
epoch 490: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.538415908813477s
epoch 495: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.595050096511841s
epoch 500: train_loss: 0.69315; Allocated: 828416; Reserved: 10485760; time used = 5.526527166366577s
Finished training. Time used = 557.5577318668365.
Training classifier using 80.00% nodes...

{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f0204fb2d20>
total iter: 500
epoch 5: train_loss: 0.58193; Allocated: 917504; Reserved: 4194304; time used = 4.077905178070068s
epoch 10: train_loss: 0.56185; Allocated: 917504; Reserved: 4194304; time used = 4.221570253372192s
epoch 15: train_loss: 0.52591; Allocated: 917504; Reserved: 6291456; time used = 4.0601561069488525s
epoch 20: train_loss: 0.52507; Allocated: 917504; Reserved: 4194304; time used = 4.237030029296875s
epoch 25: train_loss: 0.52541; Allocated: 917504; Reserved: 4194304; time used = 4.0891783237457275s
epoch 30: train_loss: 0.50942; Allocated: 917504; Reserved: 4194304; time used = 4.204793930053711s
epoch 35: train_loss: 0.51228; Allocated: 917504; Reserved: 4194304; time used = 4.0416295528411865s
epoch 40: train_loss: 0.50098; Allocated: 917504; Reserved: 4194304; time used = 4.208589792251587s
epoch 45: train_loss: 0.52042; Allocated: 917504; Reserved: 4194304; time used = 4.061062335968018s
epoch 50: train_loss: 0.50767; Allocated: 917504; Reserved: 4194304; time used = 4.193988084793091s
epoch 55: train_loss: 0.49063; Allocated: 917504; Reserved: 4194304; time used = 4.053628921508789s
epoch 60: train_loss: 0.50962; Allocated: 917504; Reserved: 4194304; time used = 4.1780548095703125s
epoch 65: train_loss: 0.49109; Allocated: 917504; Reserved: 4194304; time used = 4.033987045288086s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 57.57151246070862.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5836206896551723, 'samples': 0.5942028985507246, 'weighted': 0.588430784607696, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5a069efbe0>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.39716; Allocated: 866816; Reserved: 6291456; time used = 3.3139896392822266s
epoch 10: train_loss: 1.38176; Allocated: 866816; Reserved: 6291456; time used = 3.2866878509521484s
epoch 15: train_loss: 1.31743; Allocated: 866816; Reserved: 6291456; time used = 3.4201266765594482s
epoch 20: train_loss: 1.29179; Allocated: 866816; Reserved: 6291456; time used = 3.2866296768188477s
epoch 25: train_loss: 1.28000; Allocated: 866816; Reserved: 6291456; time used = 3.2745795249938965s
epoch 30: train_loss: 1.27213; Allocated: 866816; Reserved: 6291456; time used = 3.2896246910095215s
epoch 35: train_loss: 1.26607; Allocated: 866816; Reserved: 6291456; time used = 3.418095588684082s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 26.59616208076477.
Training classifier using 80.00% nodes...
{'micro': 0.6842105263157895, 'macro': 0.6492307692307693, 'samples': 0.6842105263157895, 'weighted': 0.6667206477732792, 'accuracy': 0.6842105263157895}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fcadaf37960>
total iter: 500
epoch 5: train_loss: 0.45893; Allocated: 53619712; Reserved: 109051904; time used = 4.680014610290527s
epoch 10: train_loss: 0.31482; Allocated: 53619712; Reserved: 109051904; time used = 4.7766804695129395s
epoch 15: train_loss: 0.17425; Allocated: 53619712; Reserved: 109051904; time used = 4.657275676727295s
epoch 20: train_loss: 0.74639; Allocated: 53619712; Reserved: 109051904; time used = 4.712067127227783s
epoch 25: train_loss: 0.69458; Allocated: 53619712; Reserved: 109051904; time used = 4.7812745571136475s
epoch 30: train_loss: 0.69360; Allocated: 53619712; Reserved: 109051904; time used = 4.678012371063232s
epoch 35: train_loss: 0.69224; Allocated: 53619712; Reserved: 109051904; time used = 4.815728425979614s
epoch 40: train_loss: 0.69315; Allocated: 53619712; Reserved: 109051904; time used = 4.633872032165527s
epoch 45: train_loss: 0.69279; Allocated: 53619712; Reserved: 109051904; time used = 4.643640518188477s
epoch 50: train_loss: 0.69319; Allocated: 53619712; Reserved: 109051904; time used = 4.667642116546631s
epoch 55: train_loss: 0.69286; Allocated: 53619712; Reserved: 109051904; time used = 4.822044610977173s
epoch 60: train_loss: 0.69359; Allocated: 53619712; Reserved: 109051904; time used = 4.667522192001343s
epoch 65: train_loss: 0.69385; Allocated: 53619712; Reserved: 109051904; time used = 4.82840633392334s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 64.6237907409668.
Training classifier using 20.00% nodes...
{'micro': 0.19442379182156136, 'macro': 0.05473574045002617, 'samples': 0.19646882043576258, 'weighted': 0.06486433290490261, 'accuracy': 0.19646882043576258}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f921a163d70>
total iter: 500
epoch 5: train_loss: 50.92827; Allocated: 1001472; Reserved: 8388608; time used = 0.958723783493042s
epoch 10: train_loss: 4.39400; Allocated: 1001472; Reserved: 8388608; time used = 0.9292736053466797s
epoch 15: train_loss: 3.74797; Allocated: 1001472; Reserved: 8388608; time used = 0.9351739883422852s
epoch 20: train_loss: 1.54446; Allocated: 1001472; Reserved: 8388608; time used = 0.9400603771209717s
epoch 25: train_loss: 1.36938; Allocated: 1001472; Reserved: 8388608; time used = 0.9258363246917725s
epoch 30: train_loss: 1.31940; Allocated: 1001472; Reserved: 8388608; time used = 1.0718064308166504s
epoch 35: train_loss: 1.27763; Allocated: 1001472; Reserved: 8388608; time used = 0.9169516563415527s
epoch 40: train_loss: 1.21776; Allocated: 1001472; Reserved: 8388608; time used = 0.9258558750152588s
epoch 45: train_loss: 1.20966; Allocated: 1001472; Reserved: 8388608; time used = 0.9219110012054443s
epoch 50: train_loss: 1.18965; Allocated: 1001472; Reserved: 8388608; time used = 0.9165096282958984s
epoch 55: train_loss: 1.14871; Allocated: 1001472; Reserved: 8388608; time used = 0.9154975414276123s
epoch 60: train_loss: 1.31424; Allocated: 1001472; Reserved: 8388608; time used = 0.9093422889709473s
epoch 65: train_loss: 1.15836; Allocated: 1001472; Reserved: 8388608; time used = 0.9222712516784668s
epoch 70: train_loss: 1.11587; Allocated: 1001472; Reserved: 8388608; time used = 0.9185514450073242s
epoch 75: train_loss: 1.04387; Allocated: 1001472; Reserved: 8388608; time used = 0.9151287078857422s
epoch 80: train_loss: 1.00963; Allocated: 1001472; Reserved: 8388608; time used = 0.9483649730682373s
epoch 85: train_loss: 0.96953; Allocated: 1001472; Reserved: 8388608; time used = 0.8678414821624756s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19.27202010154724.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5871794871794872, 'samples': 0.5942028985507246, 'weighted': 0.5910813823857303, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2919.13it/s]100%|██████████| 1000/1000 [00:00<00:00, 4409.70it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fcfcf6d8320>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.99748396873474s
epoch 10: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.88210725784302s
epoch 15: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.99893522262573s
epoch 20: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.95006060600281s
epoch 25: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.8726921081543s
epoch 30: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.87286019325256s
epoch 35: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.95565748214722s
epoch 40: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.93862795829773s
epoch 45: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.291428565979004s
epoch 50: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.83064866065979s
epoch 55: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.74693489074707s
epoch 60: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.99213361740112s
epoch 65: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.75007247924805s
epoch 70: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.842790365219116s
epoch 75: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.54786252975464s
epoch 80: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.97553300857544s
epoch 85: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.898154973983765s
epoch 90: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.81631302833557s
epoch 95: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.93081092834473s
epoch 100: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.07590889930725s
epoch 105: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.86656832695007s
epoch 110: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.062249422073364s
epoch 115: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.9157235622406s
epoch 120: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.00021314620972s
epoch 125: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.571526765823364s
epoch 130: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 33.02277636528015s
epoch 135: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.84168028831482s
epoch 140: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.77585577964783s
epoch 145: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.81767272949219s
epoch 150: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 33.01319742202759s
epoch 155: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.767256021499634s
epoch 160: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.99569129943848s
epoch 165: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.85174632072449s
epoch 170: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.85016489028931s
epoch 175: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.798569679260254s
epoch 180: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.90216827392578s
epoch 185: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.70617151260376s
epoch 190: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.042911767959595s
epoch 195: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.684184551239014s
epoch 200: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.87358236312866s
epoch 205: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.6975200176239s
epoch 210: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.996829986572266s
epoch 215: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.97259783744812s
epoch 220: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.588218212127686s
epoch 225: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.7630729675293s
epoch 230: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.88396215438843s
epoch 235: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.78897571563721s
epoch 240: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.814411878585815s
epoch 245: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.61783576011658s
epoch 250: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.903395891189575s
epoch 255: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.89150285720825s
epoch 260: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.87398672103882s
epoch 265: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.80722737312317s
epoch 270: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.07239484786987s
epoch 275: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.91710138320923s
epoch 280: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.99080467224121s
epoch 285: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.85920071601868s
epoch 290: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.91470527648926s
epoch 295: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.98730230331421s
epoch 300: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 33.0761513710022s
epoch 305: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.90996289253235s
epoch 310: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.78969430923462s
epoch 315: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.95397067070007s
epoch 320: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.200456380844116s
epoch 325: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.77887678146362s
epoch 330: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.86992311477661s
epoch 335: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.70927834510803s
epoch 340: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.9863395690918s
epoch 345: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.87922239303589s
epoch 350: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.92860293388367s
epoch 355: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 34.0206081867218s
epoch 360: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.94989514350891s
epoch 365: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.0395667552948s
epoch 370: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.991344690322876s
epoch 375: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.01766014099121s
epoch 380: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.84792900085449s
epoch 385: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 32.85692000389099s
epoch 390: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.004273653030396s
epoch 395: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.821035861968994s
epoch 400: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.84858226776123s
epoch 405: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.02505350112915s
epoch 410: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.1222939491272s
epoch 415: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.833685874938965s
epoch 420: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 33.010239124298096s
epoch 425: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.661484479904175s
epoch 430: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.91767334938049s
epoch 435: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.678783655166626s
epoch 440: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.03207015991211s
epoch 445: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.06691598892212s
epoch 450: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.85126829147339s
epoch 455: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.850051403045654s
epoch 460: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.00063419342041s
epoch 465: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.655171394348145s
epoch 470: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.65299415588379s
epoch 475: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.68923544883728s
epoch 480: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.76398253440857s
epoch 485: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 32.60128736495972s
epoch 490: train_loss: 0.69315; Allocated: 486912; Reserved: 6291456; time used = 33.02240204811096s
epoch 495: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.90855121612549s
epoch 500: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 32.75606846809387s
Finished training. Time used = 3292.6853120326996.
Training classifier using 80.00% nodes...

{'micro': 0.47, 'macro': 0.46978791516606644, 'samples': 0.47, 'weighted': 0.46957583033213285, 'accuracy': 0.47}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2312.30it/s]100%|██████████| 1000/1000 [00:00<00:00, 3616.16it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f03edd7d050>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.9253888130188s
epoch 10: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.486305713653564s
epoch 15: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.742098808288574s
epoch 20: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.513943672180176s
epoch 25: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.83757543563843s
epoch 30: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.548853158950806s
epoch 35: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.93046450614929s
epoch 40: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.76364064216614s
epoch 45: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.68841600418091s
epoch 50: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.61654806137085s
epoch 55: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.75078225135803s
epoch 60: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.825777769088745s
epoch 65: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.5834846496582s
epoch 70: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.82319140434265s
epoch 75: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.49148344993591s
epoch 80: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.67755341529846s
epoch 85: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.91897892951965s
epoch 90: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.604620933532715s
epoch 95: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.59233641624451s
epoch 100: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.55101656913757s
epoch 105: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.61242055892944s
epoch 110: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.66808104515076s
epoch 115: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.57382917404175s
epoch 120: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.40646505355835s
epoch 125: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.689754009246826s
epoch 130: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.91324329376221s
epoch 135: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.384273052215576s
epoch 140: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.48224210739136s
epoch 145: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.72330021858215s
epoch 150: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.59531879425049s
epoch 155: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.6612229347229s
epoch 160: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 34.46571159362793s
epoch 165: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.84917449951172s
epoch 170: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.53668236732483s
epoch 175: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.534836292266846s
epoch 180: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.54397702217102s
epoch 185: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.66233491897583s
epoch 190: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.394269943237305s
epoch 195: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.47408938407898s
epoch 200: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.66908836364746s
epoch 205: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.685200929641724s
epoch 210: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.65109586715698s
epoch 215: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.68227481842041s
epoch 220: train_loss: 0.69315; Allocated: 550400; Reserved: 10485760; time used = 33.68300223350525s
epoch 225: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.44653868675232s
epoch 230: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.65412712097168s
epoch 235: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.58240509033203s
epoch 240: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.85247087478638s
epoch 245: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.49577760696411s
epoch 250: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.81742286682129s
epoch 255: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.76011872291565s
epoch 260: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.73476767539978s
epoch 265: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.66154146194458s
epoch 270: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.66870450973511s
epoch 275: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.428014039993286s
epoch 280: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.712433099746704s
epoch 285: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.544352769851685s
epoch 290: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.874624252319336s
epoch 295: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.95413589477539s
epoch 300: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.4894597530365s
epoch 305: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.633583545684814s
epoch 310: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.80326223373413s
epoch 315: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.45822548866272s
epoch 320: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.60557794570923s
epoch 325: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.62048697471619s
epoch 330: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.82187795639038s
epoch 335: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.89034914970398s
epoch 340: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.61092805862427s
epoch 345: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.597007036209106s
epoch 350: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.69135594367981s
epoch 355: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.448862075805664s
epoch 360: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.841381311416626s
epoch 365: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.623255014419556s
epoch 370: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.64580178260803s
epoch 375: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.564308166503906s
epoch 380: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.73487973213196s
epoch 385: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.66813635826111s
epoch 390: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.5416522026062s
epoch 395: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.5560245513916s
epoch 400: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.712631940841675s
epoch 405: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.44011449813843s
epoch 410: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.662107944488525s
epoch 415: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.55804252624512s
epoch 420: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.74209213256836s
epoch 425: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.59477639198303s
epoch 430: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.57271361351013s
epoch 435: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.248825550079346s
epoch 440: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 33.60164761543274s
epoch 445: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.39623403549194s
epoch 450: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.60906505584717s
epoch 455: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.69555306434631s
epoch 460: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.52644634246826s
epoch 465: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 34.347140312194824s
epoch 470: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.65132975578308s
epoch 475: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.613608598709106s
epoch 480: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.58290123939514s
epoch 485: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.44702386856079s
epoch 490: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.75280165672302s
epoch 495: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.538230180740356s
epoch 500: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 33.604392290115356s
Finished training. Time used = 3368.5481781959534.
Training classifier using 80.00% nodes...

{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f3e0da33050>
total iter: 500
epoch 5: train_loss: 0.63388; Allocated: 778240; Reserved: 4194304; time used = 4.040867328643799s
epoch 10: train_loss: 0.60839; Allocated: 778240; Reserved: 4194304; time used = 4.172815799713135s
epoch 15: train_loss: 0.39342; Allocated: 778240; Reserved: 4194304; time used = 4.042854309082031s
epoch 20: train_loss: 0.20430; Allocated: 778240; Reserved: 4194304; time used = 4.161108493804932s
epoch 25: train_loss: 0.19283; Allocated: 778240; Reserved: 4194304; time used = 4.037919998168945s
epoch 30: train_loss: 0.41821; Allocated: 778240; Reserved: 4194304; time used = 4.250536203384399s
epoch 35: train_loss: 0.11410; Allocated: 778240; Reserved: 4194304; time used = 4.043848752975464s
epoch 40: train_loss: 0.06871; Allocated: 778240; Reserved: 4194304; time used = 4.2343974113464355s
epoch 45: train_loss: 0.08943; Allocated: 778240; Reserved: 4194304; time used = 4.061052560806274s
epoch 50: train_loss: 0.14452; Allocated: 778240; Reserved: 4194304; time used = 4.179925441741943s
epoch 55: train_loss: 0.35470; Allocated: 778240; Reserved: 4194304; time used = 4.042540788650513s
epoch 60: train_loss: 0.16869; Allocated: 778240; Reserved: 4194304; time used = 4.201299667358398s
epoch 65: train_loss: 0.02858; Allocated: 778240; Reserved: 4194304; time used = 4.048283576965332s
epoch 70: train_loss: 0.20751; Allocated: 778240; Reserved: 4194304; time used = 4.047271013259888s
epoch 75: train_loss: 0.00133; Allocated: 778240; Reserved: 4194304; time used = 4.185696363449097s
epoch 80: train_loss: 0.00568; Allocated: 778240; Reserved: 4194304; time used = 4.05145788192749s
epoch 85: train_loss: 0.13511; Allocated: 778240; Reserved: 4194304; time used = 4.163638353347778s
epoch 90: train_loss: 0.01802; Allocated: 778240; Reserved: 4194304; time used = 4.032763481140137s
epoch 95: train_loss: 0.01112; Allocated: 778240; Reserved: 4194304; time used = 4.158919095993042s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 83.87939429283142.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.45526315789473687, 'samples': 0.5652173913043478, 'weighted': 0.47299771167048055, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f93e24ccd70>
total iter: 500
epoch 5: train_loss: 138636.25825; Allocated: 1187840; Reserved: 8388608; time used = 2.065382719039917s
epoch 10: train_loss: 5315.06121; Allocated: 1187840; Reserved: 8388608; time used = 2.0490779876708984s
epoch 15: train_loss: 6185.15383; Allocated: 1187840; Reserved: 8388608; time used = 2.0462486743927s
epoch 20: train_loss: 3518.83918; Allocated: 1187840; Reserved: 8388608; time used = 2.0192136764526367s
epoch 25: train_loss: 323.59018; Allocated: 1187840; Reserved: 10485760; time used = 2.010599136352539s
epoch 30: train_loss: 150.26056; Allocated: 1187840; Reserved: 10485760; time used = 1.997387170791626s
epoch 35: train_loss: 214.78910; Allocated: 1187840; Reserved: 8388608; time used = 1.9904780387878418s
epoch 40: train_loss: 143.07361; Allocated: 1187840; Reserved: 8388608; time used = 2.073455333709717s
epoch 45: train_loss: 76.22592; Allocated: 1187840; Reserved: 10485760; time used = 2.0177688598632812s
epoch 50: train_loss: 70.79577; Allocated: 1187840; Reserved: 8388608; time used = 2.0401763916015625s
epoch 55: train_loss: 57.74193; Allocated: 1187840; Reserved: 8388608; time used = 2.0433871746063232s
epoch 60: train_loss: 59.33966; Allocated: 1187840; Reserved: 8388608; time used = 2.0252087116241455s
epoch 65: train_loss: 42.96262; Allocated: 1187840; Reserved: 8388608; time used = 1.9520289897918701s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 30.4848690032959.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f77e802d1e0>
total iter: 500
epoch 5: train_loss: 1.33445; Allocated: 17331200; Reserved: 44040192; time used = 4.057789087295532s
epoch 10: train_loss: 1.24300; Allocated: 17331200; Reserved: 44040192; time used = 4.037945985794067s
epoch 15: train_loss: 1.21081; Allocated: 17331200; Reserved: 44040192; time used = 4.167816162109375s
epoch 20: train_loss: 1.16204; Allocated: 17331200; Reserved: 44040192; time used = 4.042833089828491s
epoch 25: train_loss: 1.16857; Allocated: 17331200; Reserved: 44040192; time used = 4.037318229675293s
epoch 30: train_loss: 1.09089; Allocated: 17331200; Reserved: 44040192; time used = 4.076006889343262s
epoch 35: train_loss: 1.09493; Allocated: 17331200; Reserved: 44040192; time used = 4.193969011306763s
epoch 40: train_loss: 1.12648; Allocated: 17331200; Reserved: 44040192; time used = 4.021937370300293s
epoch 45: train_loss: 1.13558; Allocated: 17331200; Reserved: 44040192; time used = 4.017636060714722s
epoch 50: train_loss: 1.02231; Allocated: 17331200; Reserved: 44040192; time used = 4.016543388366699s
epoch 55: train_loss: 1.01328; Allocated: 17331200; Reserved: 44040192; time used = 4.1531758308410645s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 49.61035466194153.
Training classifier using 20.00% nodes...
{'micro': 0.7623442547300415, 'macro': 0.7507199954250338, 'samples': 0.7623442547300415, 'weighted': 0.7602565562165644, 'accuracy': 0.7623442547300415}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2858.42it/s]100%|██████████| 1000/1000 [00:00<00:00, 4340.40it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f2bdd33d050>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.42033; Allocated: 839168; Reserved: 10485760; time used = 34.32105755805969s
epoch 10: train_loss: 1.38833; Allocated: 839168; Reserved: 12582912; time used = 34.3949089050293s
epoch 15: train_loss: 1.38688; Allocated: 839168; Reserved: 8388608; time used = 34.24309325218201s
epoch 20: train_loss: 1.38550; Allocated: 839168; Reserved: 8388608; time used = 34.248950481414795s
epoch 25: train_loss: 1.38514; Allocated: 839168; Reserved: 8388608; time used = 34.047553300857544s
epoch 30: train_loss: 1.38357; Allocated: 839168; Reserved: 8388608; time used = 34.197571754455566s
epoch 35: train_loss: 1.37431; Allocated: 839168; Reserved: 8388608; time used = 33.90765738487244s
epoch 40: train_loss: 1.37534; Allocated: 839168; Reserved: 8388608; time used = 34.0729706287384s
epoch 45: train_loss: 1.36505; Allocated: 839168; Reserved: 10485760; time used = 34.31919574737549s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 331.6190130710602.
Training classifier using 80.00% nodes...

{'micro': 0.665, 'macro': 0.6649246080368083, 'samples': 0.665, 'weighted': 0.6650251306543973, 'accuracy': 0.665}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f68b5bd5780>
total iter: 500
epoch 5: train_loss: 0.44634; Allocated: 53561856; Reserved: 109051904; time used = 4.683757781982422s
epoch 10: train_loss: 0.42052; Allocated: 53561856; Reserved: 109051904; time used = 4.788108825683594s
epoch 15: train_loss: 0.38502; Allocated: 53561856; Reserved: 109051904; time used = 4.6847498416900635s
epoch 20: train_loss: 0.36869; Allocated: 53561856; Reserved: 109051904; time used = 4.667774438858032s
epoch 25: train_loss: 0.36899; Allocated: 53561856; Reserved: 109051904; time used = 4.768436670303345s
epoch 30: train_loss: 0.35600; Allocated: 53561856; Reserved: 109051904; time used = 4.655278444290161s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 34.30082726478577.
Training classifier using 20.00% nodes...
{'micro': 0.6382899628252788, 'macro': 0.5522571689825361, 'samples': 0.6450037565740045, 'weighted': 0.6139408862110435, 'accuracy': 0.6450037565740045}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2927.38it/s] 80%|████████  | 1605/2000 [00:00<00:00, 3739.89it/s]100%|██████████| 2000/2000 [00:00<00:00, 6217.96it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fce4b3eddc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2846.99it/s]100%|██████████| 1000/1000 [00:00<00:00, 4318.41it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7efd64c6c230>
total iter: 500
epoch 5: train_loss: 44.25242; Allocated: 694784; Reserved: 10485760; time used = 5.33293890953064s
epoch 10: train_loss: 23.00138; Allocated: 694784; Reserved: 10485760; time used = 5.308192729949951s
epoch 15: train_loss: 5.53969; Allocated: 694784; Reserved: 10485760; time used = 5.507525205612183s
epoch 20: train_loss: 1.95624; Allocated: 694784; Reserved: 10485760; time used = 5.311976909637451s
epoch 25: train_loss: 2.05764; Allocated: 694784; Reserved: 10485760; time used = 5.318126201629639s
epoch 30: train_loss: 1.82003; Allocated: 694784; Reserved: 10485760; time used = 5.297152519226074s
epoch 35: train_loss: 1.72761; Allocated: 694784; Reserved: 10485760; time used = 5.3039891719818115s
epoch 40: train_loss: 1.53877; Allocated: 694784; Reserved: 10485760; time used = 5.298008918762207s
epoch 45: train_loss: 1.39535; Allocated: 694784; Reserved: 10485760; time used = 5.304826974868774s
epoch 50: train_loss: 1.41186; Allocated: 694784; Reserved: 10485760; time used = 5.4856321811676025s
epoch 55: train_loss: 1.40541; Allocated: 694784; Reserved: 10485760; time used = 5.3138651847839355s
epoch 60: train_loss: 1.38787; Allocated: 694784; Reserved: 10485760; time used = 5.293087959289551s
epoch 65: train_loss: 1.38830; Allocated: 694784; Reserved: 10485760; time used = 5.296712875366211s
epoch 70: train_loss: 1.39055; Allocated: 694784; Reserved: 10485760; time used = 5.300059795379639s
epoch 75: train_loss: 1.38750; Allocated: 694784; Reserved: 10485760; time used = 5.300036668777466s
epoch 80: train_loss: 1.38645; Allocated: 694784; Reserved: 10485760; time used = 5.289172410964966s
epoch 85: train_loss: 1.38718; Allocated: 694784; Reserved: 10485760; time used = 5.484928607940674s
epoch 90: train_loss: 1.38656; Allocated: 694784; Reserved: 10485760; time used = 5.297294855117798s
epoch 95: train_loss: 1.38638; Allocated: 694784; Reserved: 10485760; time used = 5.300884246826172s
epoch 100: train_loss: 1.38651; Allocated: 694784; Reserved: 10485760; time used = 5.330690383911133s
epoch 105: train_loss: 1.38631; Allocated: 694784; Reserved: 10485760; time used = 5.349996328353882s
epoch 110: train_loss: 1.38637; Allocated: 694784; Reserved: 10485760; time used = 5.300565958023071s
epoch 115: train_loss: 1.38632; Allocated: 694784; Reserved: 10485760; time used = 5.336071491241455s
epoch 120: train_loss: 1.38632; Allocated: 694784; Reserved: 10485760; time used = 5.517150163650513s
epoch 125: train_loss: 1.38631; Allocated: 694784; Reserved: 10485760; time used = 5.381962299346924s
epoch 130: train_loss: 1.38631; Allocated: 694784; Reserved: 10485760; time used = 5.3212363719940186s
epoch 135: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.3139660358428955s
epoch 140: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.320998191833496s
epoch 145: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.284369468688965s
epoch 150: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.302238702774048s
epoch 155: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.477403879165649s
epoch 160: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.2942023277282715s
epoch 165: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.291399717330933s
epoch 170: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.2805469036102295s
epoch 175: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.300130367279053s
epoch 180: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.285819053649902s
epoch 185: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.303770542144775s
epoch 190: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.492862224578857s
epoch 195: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.314276933670044s
epoch 200: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.29589581489563s
epoch 205: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.281837224960327s
epoch 210: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.287198781967163s
epoch 215: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.319171905517578s
epoch 220: train_loss: 1.38630; Allocated: 694784; Reserved: 10485760; time used = 5.317604064941406s
epoch 225: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.481750011444092s
epoch 230: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.324538230895996s
epoch 235: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.362922191619873s
epoch 240: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.269011735916138s
epoch 245: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.296364068984985s
epoch 250: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.3327796459198s
epoch 255: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.321723461151123s
epoch 260: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.514849424362183s
epoch 265: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.297151565551758s
epoch 270: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.309611082077026s
epoch 275: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.295453071594238s
epoch 280: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.355326414108276s
epoch 285: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.3481738567352295s
epoch 290: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.295830965042114s
epoch 295: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.482631206512451s
epoch 300: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.300464391708374s
epoch 305: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.3039634227752686s
epoch 310: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.319579601287842s
epoch 315: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.300800800323486s
epoch 320: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.298607587814331s
epoch 325: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.289762496948242s
epoch 330: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.494236946105957s
epoch 335: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.297381639480591s
epoch 340: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.304184198379517s
epoch 345: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.29521632194519s
epoch 350: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.2858803272247314s
epoch 355: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.306294679641724s
epoch 360: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.301165819168091s
epoch 365: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.474852800369263s
epoch 370: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.290256977081299s
epoch 375: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.294298887252808s
epoch 380: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.291743993759155s
epoch 385: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.287536859512329s
epoch 390: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.276882886886597s
epoch 395: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.288666248321533s
epoch 400: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.440370082855225s
epoch 405: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.297371864318848s
epoch 410: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.291180372238159s
epoch 415: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.297744989395142s
epoch 420: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.320498466491699s
epoch 425: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.288177728652954s
epoch 430: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.299725770950317s
epoch 435: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.47567343711853s
epoch 440: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.287923336029053s
epoch 445: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.280312776565552s
epoch 450: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.295306444168091s
epoch 455: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.299562692642212s
epoch 460: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.285441637039185s
epoch 465: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.314298391342163s
epoch 470: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.4790143966674805s
epoch 475: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.289940357208252s
epoch 480: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.27924108505249s
epoch 485: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.2752063274383545s
epoch 490: train_loss: 1.38629; Allocated: 694784; Reserved: 10485760; time used = 5.301839113235474s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 529.897426366806.
Training classifier using 80.00% nodes...

{'micro': 0.68, 'macro': 0.6797117405665098, 'samples': 0.68, 'weighted': 0.6795195676108498, 'accuracy': 0.68}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f0caed70820>
head 0
total iter: 500
epoch 5: train_loss: 1.22225; Allocated: 57209856; Reserved: 113246208; time used = 0.8752472400665283s
epoch 10: train_loss: 1.21017; Allocated: 57209856; Reserved: 113246208; time used = 0.8674533367156982s
epoch 15: train_loss: 1.10481; Allocated: 57209856; Reserved: 113246208; time used = 0.8760786056518555s
epoch 20: train_loss: 1.02426; Allocated: 57209856; Reserved: 113246208; time used = 0.8653454780578613s
epoch 25: train_loss: 1.01384; Allocated: 57209856; Reserved: 113246208; time used = 0.8693511486053467s
epoch 30: train_loss: 1.00026; Allocated: 57209856; Reserved: 113246208; time used = 0.8829615116119385s
epoch 35: train_loss: 0.95991; Allocated: 57209856; Reserved: 113246208; time used = 0.8872902393341064s
epoch 40: train_loss: 0.94516; Allocated: 57209856; Reserved: 113246208; time used = 0.874103307723999s
epoch 45: train_loss: 0.91832; Allocated: 57209856; Reserved: 113246208; time used = 0.8824312686920166s
epoch 50: train_loss: 0.91899; Allocated: 57209856; Reserved: 113246208; time used = 1.054947853088379s
epoch 55: train_loss: 0.89818; Allocated: 57209856; Reserved: 113246208; time used = 0.87603759765625s
epoch 60: train_loss: 0.89713; Allocated: 57209856; Reserved: 113246208; time used = 0.8790092468261719s
epoch 65: train_loss: 0.87823; Allocated: 57209856; Reserved: 113246208; time used = 0.8749120235443115s
epoch 70: train_loss: 0.87898; Allocated: 57209856; Reserved: 113246208; time used = 0.8864660263061523s
epoch 75: train_loss: 0.86966; Allocated: 57209856; Reserved: 113246208; time used = 0.8843553066253662s
epoch 80: train_loss: 0.85207; Allocated: 57209856; Reserved: 113246208; time used = 0.8756444454193115s
epoch 85: train_loss: 0.84443; Allocated: 57209856; Reserved: 113246208; time used = 0.8747599124908447s
epoch 90: train_loss: 0.85731; Allocated: 57209856; Reserved: 113246208; time used = 0.8760459423065186s
epoch 95: train_loss: 0.83036; Allocated: 57209856; Reserved: 113246208; time used = 0.875481367111206s
epoch 100: train_loss: 0.83500; Allocated: 57209856; Reserved: 113246208; time used = 0.8734555244445801s
epoch 105: train_loss: 0.84242; Allocated: 57209856; Reserved: 113246208; time used = 0.8770406246185303s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 21.822420120239258.
Training classifier using 20.00% nodes...
{'micro': 0.6613382899628253, 'macro': 0.6080067030030231, 'samples': 0.6682945154019534, 'weighted': 0.6537678409348403, 'accuracy': 0.6682945154019534}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2858.45it/s]100%|██████████| 1500/1500 [00:00<00:00, 5455.02it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fbcfd522050>
total iter: 500
epoch 5: train_loss: 0.67812; Allocated: 571392; Reserved: 6291456; time used = 191.08786845207214s
epoch 10: train_loss: 0.66247; Allocated: 571392; Reserved: 6291456; time used = 190.63948702812195s
epoch 15: train_loss: 0.41172; Allocated: 571392; Reserved: 8388608; time used = 192.62421321868896s
epoch 20: train_loss: 0.24539; Allocated: 571392; Reserved: 6291456; time used = 191.16015338897705s
epoch 25: train_loss: 0.30555; Allocated: 571392; Reserved: 6291456; time used = 189.0691123008728s
epoch 30: train_loss: 0.19554; Allocated: 571392; Reserved: 6291456; time used = 190.03713059425354s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1187.4395895004272.
Training classifier using 80.00% nodes...

{'micro': 0.5066666666666667, 'macro': 0.49484104007382507, 'samples': 0.5066666666666667, 'weighted': 0.4903529517287532, 'accuracy': 0.5066666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2363.93it/s] 81%|████████  | 1618/2000 [00:00<00:00, 3086.14it/s]100%|██████████| 2000/2000 [00:00<00:00, 5491.50it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Killed
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2477.43it/s]100%|██████████| 1000/1000 [00:00<00:00, 4106.52it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fd708cbb050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fb3c65b3d70>
total iter: 500
epoch 5: train_loss: 1.40646; Allocated: 579072; Reserved: 8388608; time used = 3.0504651069641113s
epoch 10: train_loss: 1.35138; Allocated: 579072; Reserved: 8388608; time used = 2.934494972229004s
epoch 15: train_loss: 1.43906; Allocated: 579072; Reserved: 8388608; time used = 3.0214977264404297s
epoch 20: train_loss: 1.35291; Allocated: 579072; Reserved: 8388608; time used = 2.913973331451416s
epoch 25: train_loss: 1.28342; Allocated: 579072; Reserved: 8388608; time used = 2.9413046836853027s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19.735738039016724.
Training classifier using 80.00% nodes...
{'micro': 0.8947368421052632, 'macro': 0.889855072463768, 'samples': 0.8947368421052632, 'weighted': 0.8935163996948893, 'accuracy': 0.8947368421052632}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f67c87bed70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2877.58it/s] 80%|███████▉  | 1597/2000 [00:00<00:00, 3679.68it/s]100%|██████████| 2000/2000 [00:00<00:00, 6131.31it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fcbd2f72280>
head 0
total iter: 500
epoch 5: train_loss: 0.69197; Allocated: 3987968; Reserved: 33554432; time used = 131.929589509964s
epoch 10: train_loss: 0.69232; Allocated: 3987968; Reserved: 33554432; time used = 130.46470403671265s
epoch 15: train_loss: 0.69379; Allocated: 3987968; Reserved: 33554432; time used = 130.2873957157135s
epoch 20: train_loss: 0.69400; Allocated: 3987968; Reserved: 33554432; time used = 131.5373125076294s
epoch 25: train_loss: 0.69293; Allocated: 3987968; Reserved: 33554432; time used = 131.3920693397522s
epoch 30: train_loss: 0.69401; Allocated: 3987968; Reserved: 33554432; time used = 130.75187158584595s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 790.0852534770966.
Training classifier using 80.00% nodes...

{'micro': 0.5325, 'macro': 0.46399524188289587, 'samples': 0.5325, 'weighted': 0.4582465908520899, 'accuracy': 0.5325}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fde3859f7d0>
total iter: 500
epoch 5: train_loss: 1.34982; Allocated: 53491712; Reserved: 109051904; time used = 3.9157304763793945s
epoch 10: train_loss: 1.27152; Allocated: 53491712; Reserved: 109051904; time used = 3.967818021774292s
epoch 15: train_loss: 1.25527; Allocated: 53491712; Reserved: 109051904; time used = 3.8388516902923584s
epoch 20: train_loss: 1.24408; Allocated: 53491712; Reserved: 109051904; time used = 4.015763759613037s
epoch 25: train_loss: 1.23884; Allocated: 53491712; Reserved: 109051904; time used = 3.860034227371216s
epoch 30: train_loss: 1.23263; Allocated: 53491712; Reserved: 109051904; time used = 3.9141762256622314s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 26.64289689064026.
Training classifier using 20.00% nodes...
{'micro': 0.35910780669144976, 'macro': 0.22582441845521542, 'samples': 0.3628850488354621, 'weighted': 0.2643896924117228, 'accuracy': 0.3628850488354621}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f1465fe8500>
total iter: 500
epoch 5: train_loss: 0.55286; Allocated: 515072; Reserved: 4194304; time used = 4.075073003768921s
epoch 10: train_loss: 0.34036; Allocated: 515072; Reserved: 4194304; time used = 4.046465158462524s
epoch 15: train_loss: 0.31910; Allocated: 515072; Reserved: 4194304; time used = 4.175167560577393s
epoch 20: train_loss: 0.28331; Allocated: 515072; Reserved: 4194304; time used = 3.9943082332611084s
epoch 25: train_loss: 0.16928; Allocated: 515072; Reserved: 4194304; time used = 3.864387273788452s
epoch 30: train_loss: 0.17338; Allocated: 515072; Reserved: 4194304; time used = 4.014122486114502s
epoch 35: train_loss: 0.16148; Allocated: 515072; Reserved: 4194304; time used = 3.856055974960327s
epoch 40: train_loss: 0.12722; Allocated: 515072; Reserved: 4194304; time used = 3.8555803298950195s
epoch 45: train_loss: 0.18365; Allocated: 515072; Reserved: 4194304; time used = 3.8608148097991943s
epoch 50: train_loss: 0.14120; Allocated: 515072; Reserved: 4194304; time used = 3.9782238006591797s
epoch 55: train_loss: 0.20952; Allocated: 515072; Reserved: 4194304; time used = 3.8558802604675293s
epoch 60: train_loss: 0.14290; Allocated: 515072; Reserved: 4194304; time used = 3.863478422164917s
epoch 65: train_loss: 0.16548; Allocated: 515072; Reserved: 4194304; time used = 4.006587505340576s
epoch 70: train_loss: 0.15735; Allocated: 515072; Reserved: 4194304; time used = 3.8673057556152344s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 60.212409257888794.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.7989417989417988, 'samples': 0.8157894736842105, 'weighted': 0.808131439710387, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f07b3a67280>
total iter: 500
epoch 5: train_loss: 1.24386; Allocated: 40702464; Reserved: 62914560; time used = 2.6880528926849365s
epoch 10: train_loss: 1.12151; Allocated: 40702464; Reserved: 62914560; time used = 2.759258985519409s
epoch 15: train_loss: 1.06851; Allocated: 40702464; Reserved: 65011712; time used = 2.622368097305298s
epoch 20: train_loss: 1.04577; Allocated: 40702464; Reserved: 62914560; time used = 2.780160665512085s
epoch 25: train_loss: 0.99286; Allocated: 40702464; Reserved: 62914560; time used = 2.5635814666748047s
epoch 30: train_loss: 0.96337; Allocated: 40702464; Reserved: 62914560; time used = 2.7959601879119873s
epoch 35: train_loss: 0.87124; Allocated: 40702464; Reserved: 62914560; time used = 2.6001923084259033s
epoch 40: train_loss: 0.82573; Allocated: 40702464; Reserved: 65011712; time used = 2.8385393619537354s
epoch 45: train_loss: 0.83645; Allocated: 40702464; Reserved: 62914560; time used = 2.6496031284332275s
epoch 50: train_loss: 0.67882; Allocated: 40702464; Reserved: 62914560; time used = 2.806928873062134s
epoch 55: train_loss: 0.77481; Allocated: 40702464; Reserved: 65011712; time used = 2.603358507156372s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 33.298548221588135.
Training classifier using 20.00% nodes...
{'micro': 0.805692912387473, 'macro': 0.8037766675657897, 'samples': 0.8056929123874731, 'weighted': 0.8056439582506405, 'accuracy': 0.8056929123874731}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f1703e87690>
total iter: 500
epoch 5: train_loss: 0.19365; Allocated: 53904384; Reserved: 161480704; time used = 0.6317248344421387s
epoch 10: train_loss: 0.01823; Allocated: 53904384; Reserved: 161480704; time used = 0.6223025321960449s
epoch 15: train_loss: 0.00028; Allocated: 53904384; Reserved: 161480704; time used = 0.6081809997558594s
epoch 20: train_loss: 0.00004; Allocated: 53904384; Reserved: 161480704; time used = 0.610999584197998s
epoch 25: train_loss: 0.00001; Allocated: 53904384; Reserved: 161480704; time used = 0.611314058303833s
epoch 30: train_loss: 0.00001; Allocated: 53904384; Reserved: 161480704; time used = 0.6034681797027588s
epoch 35: train_loss: 0.00001; Allocated: 53904384; Reserved: 161480704; time used = 0.6046781539916992s
epoch 40: train_loss: 0.00001; Allocated: 53904384; Reserved: 161480704; time used = 0.6060078144073486s
epoch 45: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.605292797088623s
epoch 50: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6090526580810547s
epoch 55: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6036813259124756s
epoch 60: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6025052070617676s
epoch 65: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6004436016082764s
epoch 70: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6044249534606934s
epoch 75: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6036376953125s
epoch 80: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.600658655166626s
epoch 85: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5981688499450684s
epoch 90: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5958714485168457s
epoch 95: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5999815464019775s
epoch 100: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6025607585906982s
epoch 105: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5992088317871094s
epoch 110: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5991866588592529s
epoch 115: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5996036529541016s
epoch 120: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6016156673431396s
epoch 125: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6014425754547119s
epoch 130: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6053495407104492s
epoch 135: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5992372035980225s
epoch 140: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.604499101638794s
epoch 145: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6038086414337158s
epoch 150: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6020143032073975s
epoch 155: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6057982444763184s
epoch 160: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.601184606552124s
epoch 165: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5992429256439209s
epoch 170: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6010763645172119s
epoch 175: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5993294715881348s
epoch 180: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.599168062210083s
epoch 185: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6010210514068604s
epoch 190: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6047821044921875s
epoch 195: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6165745258331299s
epoch 200: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.600813627243042s
epoch 205: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6005806922912598s
epoch 210: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6014726161956787s
epoch 215: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6002023220062256s
epoch 220: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6002178192138672s
epoch 225: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.602975606918335s
epoch 230: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6035563945770264s
epoch 235: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6015105247497559s
epoch 240: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6008973121643066s
epoch 245: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6015191078186035s
epoch 250: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6014978885650635s
epoch 255: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6020686626434326s
epoch 260: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6079635620117188s
epoch 265: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6032342910766602s
epoch 270: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5987143516540527s
epoch 275: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6011786460876465s
epoch 280: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6020562648773193s
epoch 285: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6032068729400635s
epoch 290: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6004040241241455s
epoch 295: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6046428680419922s
epoch 300: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6031427383422852s
epoch 305: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6023056507110596s
epoch 310: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6048414707183838s
epoch 315: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5995774269104004s
epoch 320: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6013104915618896s
epoch 325: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6029577255249023s
epoch 330: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6029231548309326s
epoch 335: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5969192981719971s
epoch 340: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6015846729278564s
epoch 345: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6008381843566895s
epoch 350: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6009426116943359s
epoch 355: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6027162075042725s
epoch 360: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.606072187423706s
epoch 365: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6025691032409668s
epoch 370: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.600632905960083s
epoch 375: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6076889038085938s
epoch 380: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5999672412872314s
epoch 385: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5999593734741211s
epoch 390: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6018128395080566s
epoch 395: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6034018993377686s
epoch 400: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6021411418914795s
epoch 405: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6024417877197266s
epoch 410: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5983109474182129s
epoch 415: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6037530899047852s
epoch 420: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6001343727111816s
epoch 425: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6120927333831787s
epoch 430: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6021111011505127s
epoch 435: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5997574329376221s
epoch 440: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6026897430419922s
epoch 445: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6012234687805176s
epoch 450: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6007194519042969s
epoch 455: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.598987340927124s
epoch 460: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.602609395980835s
epoch 465: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5985615253448486s
epoch 470: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5997714996337891s
epoch 475: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6035730838775635s
epoch 480: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.600165605545044s
epoch 485: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.6032791137695312s
epoch 490: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.5992414951324463s
epoch 495: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.603172779083252s
epoch 500: train_loss: 0.00000; Allocated: 53904384; Reserved: 161480704; time used = 0.600161075592041s
Finished training. Time used = 63.546807289123535.
Training classifier using 20.00% nodes...
{'micro': 0.5085501858736059, 'macro': 0.44501637969804436, 'samples': 0.5138993238166792, 'weighted': 0.4964161667650498, 'accuracy': 0.5138993238166792}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f9475d9b500>
total iter: 500
epoch 5: train_loss: 0.50662; Allocated: 40960000; Reserved: 62914560; time used = 0.47600650787353516s
epoch 10: train_loss: 0.21936; Allocated: 40960000; Reserved: 62914560; time used = 0.46213841438293457s
epoch 15: train_loss: 0.04841; Allocated: 40960000; Reserved: 62914560; time used = 0.4669499397277832s
epoch 20: train_loss: 0.07179; Allocated: 40960000; Reserved: 62914560; time used = 0.6935069561004639s
epoch 25: train_loss: 0.09932; Allocated: 40960000; Reserved: 62914560; time used = 0.47002506256103516s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6.55312967300415.
Training classifier using 20.00% nodes...
{'micro': 0.6577279066818815, 'macro': 0.6612253541004454, 'samples': 0.6577279066818815, 'weighted': 0.656468600578172, 'accuracy': 0.6577279066818815}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2881.45it/s]100%|██████████| 1500/1500 [00:00<00:00, 5496.63it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7efc136f7050>
total iter: 500
epoch 5: train_loss: 0.69301; Allocated: 569344; Reserved: 8388608; time used = 49.9253990650177s
epoch 10: train_loss: 0.65191; Allocated: 569344; Reserved: 8388608; time used = 50.64093518257141s
epoch 15: train_loss: 0.69312; Allocated: 569344; Reserved: 8388608; time used = 50.17445707321167s
epoch 20: train_loss: 0.69313; Allocated: 569344; Reserved: 8388608; time used = 50.16089463233948s
epoch 25: train_loss: 0.69311; Allocated: 569344; Reserved: 6291456; time used = 49.93090057373047s
epoch 30: train_loss: 0.69288; Allocated: 569344; Reserved: 6291456; time used = 49.52158045768738s
epoch 35: train_loss: 0.68553; Allocated: 569344; Reserved: 8388608; time used = 50.507155656814575s
epoch 40: train_loss: 0.63056; Allocated: 569344; Reserved: 8388608; time used = 49.42987108230591s
epoch 45: train_loss: 0.48313; Allocated: 569344; Reserved: 8388608; time used = 49.66966009140015s
epoch 50: train_loss: 0.42466; Allocated: 569344; Reserved: 6291456; time used = 49.85973858833313s
epoch 55: train_loss: 0.42757; Allocated: 569344; Reserved: 6291456; time used = 50.35746455192566s
epoch 60: train_loss: 0.41347; Allocated: 569344; Reserved: 8388608; time used = 50.12355303764343s
epoch 65: train_loss: 0.40417; Allocated: 569344; Reserved: 8388608; time used = 49.88786721229553s
epoch 70: train_loss: 0.39622; Allocated: 569344; Reserved: 8388608; time used = 49.973609924316406s
epoch 75: train_loss: 0.38807; Allocated: 569344; Reserved: 8388608; time used = 49.884241342544556s
epoch 80: train_loss: 0.38850; Allocated: 569344; Reserved: 6291456; time used = 49.59594488143921s
epoch 85: train_loss: 0.38099; Allocated: 569344; Reserved: 8388608; time used = 50.722583532333374s
epoch 90: train_loss: 0.38061; Allocated: 569344; Reserved: 6291456; time used = 50.05239772796631s
epoch 95: train_loss: 0.37869; Allocated: 569344; Reserved: 8388608; time used = 50.0411217212677s
epoch 100: train_loss: 0.39133; Allocated: 569344; Reserved: 6291456; time used = 50.15110731124878s
epoch 105: train_loss: 0.36898; Allocated: 569344; Reserved: 6291456; time used = 49.936782121658325s
epoch 110: train_loss: 0.38342; Allocated: 569344; Reserved: 8388608; time used = 50.09636378288269s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1114.1025433540344.
Training classifier using 80.00% nodes...

{'micro': 0.47, 'macro': 0.4241851188234758, 'samples': 0.47, 'weighted': 0.41597084345426033, 'accuracy': 0.47}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5ff96f66e0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fa56c589820>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2900.63it/s]100%|██████████| 1500/1500 [00:00<00:00, 5519.10it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f1f34ba9500>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.700042486190796s
epoch 10: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.544232606887817s
epoch 15: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.562496662139893s
epoch 20: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.553178787231445s
epoch 25: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.726086854934692s
epoch 30: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.594251871109009s
epoch 35: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.501158237457275s
epoch 40: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.523692846298218s
epoch 45: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.692472696304321s
epoch 50: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.483268976211548s
epoch 55: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.5007500648498535s
epoch 60: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.7815635204315186s
epoch 65: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.5742692947387695s
epoch 70: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.5424110889434814s
epoch 75: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.5314459800720215s
epoch 80: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.7027809619903564s
epoch 85: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.528533220291138s
epoch 90: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.527272701263428s
epoch 95: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.680772542953491s
epoch 100: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.50170111656189s
epoch 105: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.5630176067352295s
epoch 110: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.4965550899505615s
epoch 115: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.789815902709961s
epoch 120: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.543586492538452s
epoch 125: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.608523368835449s
epoch 130: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.612322807312012s
epoch 135: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.777392387390137s
epoch 140: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.511372804641724s
epoch 145: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.473185777664185s
epoch 150: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.636127471923828s
epoch 155: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.549593448638916s
epoch 160: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.53162145614624s
epoch 165: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.550995111465454s
epoch 170: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.720199108123779s
epoch 175: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.617202997207642s
epoch 180: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.57499361038208s
epoch 185: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.718798398971558s
epoch 190: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.592478513717651s
epoch 195: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.544371604919434s
epoch 200: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.49812912940979s
epoch 205: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.742496013641357s
epoch 210: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.527885913848877s
epoch 215: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.487448692321777s
epoch 220: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.554116487503052s
epoch 225: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.7363121509552s
epoch 230: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.5061585903167725s
epoch 235: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.417515754699707s
epoch 240: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.6695921421051025s
epoch 245: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.565698623657227s
epoch 250: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.566295385360718s
epoch 255: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.5600199699401855s
epoch 260: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.685788869857788s
epoch 265: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.557716131210327s
epoch 270: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.552024841308594s
epoch 275: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.678953647613525s
epoch 280: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.540722370147705s
epoch 285: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.4656593799591064s
epoch 290: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.510022163391113s
epoch 295: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.73598837852478s
epoch 300: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.579266548156738s
epoch 305: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.546637773513794s
epoch 310: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.669132709503174s
epoch 315: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.570929288864136s
epoch 320: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.530573129653931s
epoch 325: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.5110955238342285s
epoch 330: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.686560153961182s
epoch 335: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.506293773651123s
epoch 340: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.491943120956421s
epoch 345: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.5416388511657715s
epoch 350: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.673105478286743s
epoch 355: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.538938999176025s
epoch 360: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.491872310638428s
epoch 365: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.7649781703948975s
epoch 370: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.491858720779419s
epoch 375: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.572675704956055s
epoch 380: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.517312049865723s
epoch 385: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.760850191116333s
epoch 390: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.577823638916016s
epoch 395: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.556592702865601s
epoch 400: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.636794567108154s
epoch 405: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.528165340423584s
epoch 410: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.671595335006714s
epoch 415: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.611735820770264s
epoch 420: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.702303886413574s
epoch 425: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.480231761932373s
epoch 430: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.671174764633179s
epoch 435: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.568904638290405s
epoch 440: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.791100263595581s
epoch 445: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.507178783416748s
epoch 450: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.5212366580963135s
epoch 455: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.667558908462524s
epoch 460: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.587453842163086s
epoch 465: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.565117359161377s
epoch 470: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.8660149574279785s
epoch 475: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 7.834872722625732s
epoch 480: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.732335567474365s
epoch 485: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.464623212814331s
epoch 490: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.695804119110107s
epoch 495: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.545979261398315s
epoch 500: train_loss: 0.69315; Allocated: 625664; Reserved: 10485760; time used = 6.567357778549194s
Finished training. Time used = 663.7914922237396.
Training classifier using 80.00% nodes...

{'micro': 0.4000000000000001, 'macro': 0.3238688524590164, 'samples': 0.4, 'weighted': 0.3141527868852459, 'accuracy': 0.4}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f7c8d1e00f0>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.67798; Allocated: 19216896; Reserved: 52428800; time used = 4.23050332069397s
epoch 10: train_loss: 0.65449; Allocated: 19216896; Reserved: 52428800; time used = 4.1375510692596436s
epoch 15: train_loss: 0.59853; Allocated: 19216896; Reserved: 52428800; time used = 4.393496751785278s
epoch 20: train_loss: 0.36768; Allocated: 19216896; Reserved: 52428800; time used = 4.2954206466674805s
epoch 25: train_loss: 0.24427; Allocated: 19216896; Reserved: 52428800; time used = 4.198540210723877s
epoch 30: train_loss: 0.18867; Allocated: 19216896; Reserved: 52428800; time used = 4.128603458404541s
epoch 35: train_loss: 0.07815; Allocated: 19216896; Reserved: 52428800; time used = 4.2987892627716064s
epoch 40: train_loss: 0.72814; Allocated: 19216896; Reserved: 52428800; time used = 4.126333713531494s
epoch 45: train_loss: 0.69291; Allocated: 19216896; Reserved: 52428800; time used = 4.132968425750732s
epoch 50: train_loss: 0.69241; Allocated: 19216896; Reserved: 52428800; time used = 4.249329566955566s
epoch 55: train_loss: 0.69193; Allocated: 19216896; Reserved: 52428800; time used = 4.328259706497192s
epoch 60: train_loss: 0.69066; Allocated: 19216896; Reserved: 52428800; time used = 4.15308403968811s
epoch 65: train_loss: 0.68789; Allocated: 19216896; Reserved: 52428800; time used = 4.146101713180542s
epoch 70: train_loss: 0.68385; Allocated: 19216896; Reserved: 52428800; time used = 4.179681777954102s
epoch 75: train_loss: 0.66090; Allocated: 19216896; Reserved: 52428800; time used = 4.3018364906311035s
epoch 80: train_loss: 0.61201; Allocated: 19216896; Reserved: 52428800; time used = 4.141215085983276s
epoch 85: train_loss: 0.43152; Allocated: 19216896; Reserved: 52428800; time used = 4.13322377204895s
epoch 90: train_loss: 0.28504; Allocated: 19216896; Reserved: 52428800; time used = 4.145364999771118s
epoch 95: train_loss: 0.00399; Allocated: 19216896; Reserved: 52428800; time used = 4.296263933181763s
epoch 100: train_loss: 0.03697; Allocated: 19216896; Reserved: 52428800; time used = 4.250808238983154s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 87.45719289779663.
Training classifier using 20.00% nodes...
{'micro': 0.297185048454084, 'macro': 0.07293215097305517, 'samples': 0.297185048454084, 'weighted': 0.14290260994320267, 'accuracy': 0.297185048454084}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f6efc23a780>
total iter: 500
epoch 5: train_loss: 1.38140; Allocated: 53412864; Reserved: 109051904; time used = 4.496257781982422s
epoch 10: train_loss: 1.36685; Allocated: 53412864; Reserved: 109051904; time used = 4.58611536026001s
epoch 15: train_loss: 1.36680; Allocated: 53412864; Reserved: 109051904; time used = 4.485837697982788s
epoch 20: train_loss: 1.35594; Allocated: 53412864; Reserved: 109051904; time used = 4.442450761795044s
epoch 25: train_loss: 1.34662; Allocated: 53412864; Reserved: 109051904; time used = 4.574970960617065s
epoch 30: train_loss: 1.34250; Allocated: 53412864; Reserved: 109051904; time used = 4.449854612350464s
epoch 35: train_loss: 1.36383; Allocated: 53412864; Reserved: 109051904; time used = 4.57417368888855s
epoch 40: train_loss: 1.33721; Allocated: 53412864; Reserved: 109051904; time used = 4.435601711273193s
epoch 45: train_loss: 1.36942; Allocated: 53412864; Reserved: 109051904; time used = 4.452940940856934s
epoch 50: train_loss: 1.34880; Allocated: 53412864; Reserved: 109051904; time used = 4.45335578918457s
epoch 55: train_loss: 1.33684; Allocated: 53412864; Reserved: 109051904; time used = 4.579510927200317s
epoch 60: train_loss: 1.34862; Allocated: 53412864; Reserved: 109051904; time used = 4.428032159805298s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 57.28048896789551.
Training classifier using 20.00% nodes...
{'micro': 0.466542750929368, 'macro': 0.3809858561109207, 'samples': 0.47145003756574005, 'weighted': 0.4293480560552905, 'accuracy': 0.47145003756574005}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2400.64it/s] 80%|███████▉  | 1592/2000 [00:00<00:00, 3123.09it/s]100%|██████████| 2000/2000 [00:00<00:00, 5495.69it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fdfed6af280>
total iter: 500
epoch 5: train_loss: 0.68281; Allocated: 3855872; Reserved: 31457280; time used = 1077.2587423324585s
epoch 10: train_loss: 0.64276; Allocated: 3855872; Reserved: 29360128; time used = 1076.6089582443237s
epoch 15: train_loss: 0.63496; Allocated: 3855872; Reserved: 29360128; time used = 1066.9883079528809s
epoch 20: train_loss: 0.61089; Allocated: 3855872; Reserved: 29360128; time used = 1066.1957395076752s
epoch 25: train_loss: 0.54892; Allocated: 3855872; Reserved: 29360128; time used = 1069.4496529102325s
epoch 30: train_loss: 0.53455; Allocated: 3855872; Reserved: 29360128; time used = 1072.0573995113373s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7284.08761382103.
Training classifier using 80.00% nodes...

{'micro': 0.6825, 'macro': 0.6797599460382902, 'samples': 0.6825, 'weighted': 0.6788712798885465, 'accuracy': 0.6825}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fd856072870>
total iter: 500
epoch 5: train_loss: 0.37087; Allocated: 53629440; Reserved: 109051904; time used = 0.8569908142089844s
epoch 10: train_loss: 0.21150; Allocated: 53629440; Reserved: 109051904; time used = 0.8504176139831543s
epoch 15: train_loss: 0.10852; Allocated: 53629440; Reserved: 109051904; time used = 0.8532900810241699s
epoch 20: train_loss: 0.14618; Allocated: 53629440; Reserved: 109051904; time used = 0.8518552780151367s
epoch 25: train_loss: 0.02899; Allocated: 53629440; Reserved: 109051904; time used = 0.8489148616790771s
epoch 30: train_loss: 0.02900; Allocated: 53629440; Reserved: 109051904; time used = 0.8505191802978516s
epoch 35: train_loss: 0.02119; Allocated: 53629440; Reserved: 109051904; time used = 0.8556301593780518s
epoch 40: train_loss: 0.00420; Allocated: 53629440; Reserved: 109051904; time used = 0.8534164428710938s
epoch 45: train_loss: 0.00161; Allocated: 53629440; Reserved: 109051904; time used = 0.8532252311706543s
epoch 50: train_loss: 0.00089; Allocated: 53629440; Reserved: 109051904; time used = 1.0231130123138428s
epoch 55: train_loss: 0.74027; Allocated: 53629440; Reserved: 109051904; time used = 0.8532857894897461s
epoch 60: train_loss: 0.00900; Allocated: 53629440; Reserved: 109051904; time used = 0.8564188480377197s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 13.924381256103516.
Training classifier using 20.00% nodes...
{'micro': 0.5223048327137546, 'macro': 0.40575437373525, 'samples': 0.5277986476333584, 'weighted': 0.4660339287899538, 'accuracy': 0.5277986476333584}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5e32c23c80>
total iter: 500
epoch 5: train_loss: 0.59509; Allocated: 513536; Reserved: 8388608; time used = 2.9614312648773193s
epoch 10: train_loss: 0.45078; Allocated: 513536; Reserved: 8388608; time used = 2.982795000076294s
epoch 15: train_loss: 0.35490; Allocated: 513536; Reserved: 8388608; time used = 3.081721544265747s
epoch 20: train_loss: 0.29248; Allocated: 513536; Reserved: 8388608; time used = 2.959026575088501s
epoch 25: train_loss: 0.26311; Allocated: 513536; Reserved: 8388608; time used = 2.948507070541382s
epoch 30: train_loss: 0.23982; Allocated: 513536; Reserved: 8388608; time used = 2.9252138137817383s
epoch 35: train_loss: 0.20889; Allocated: 513536; Reserved: 8388608; time used = 3.0915160179138184s
epoch 40: train_loss: 0.18785; Allocated: 513536; Reserved: 8388608; time used = 2.9635519981384277s
epoch 45: train_loss: 0.16053; Allocated: 513536; Reserved: 8388608; time used = 2.945298433303833s
epoch 50: train_loss: 0.14960; Allocated: 513536; Reserved: 8388608; time used = 2.9225101470947266s
epoch 55: train_loss: 0.23542; Allocated: 513536; Reserved: 8388608; time used = 3.0567047595977783s
epoch 60: train_loss: 0.17486; Allocated: 513536; Reserved: 8388608; time used = 2.9314992427825928s
epoch 65: train_loss: 0.12790; Allocated: 513536; Reserved: 8388608; time used = 2.9406323432922363s
epoch 70: train_loss: 0.14599; Allocated: 513536; Reserved: 8388608; time used = 3.100955009460449s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.82957673072815.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8606016140865738, 'samples': 0.868421052631579, 'weighted': 0.8658145731165773, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2415.19it/s]100%|██████████| 1000/1000 [00:00<00:00, 3764.43it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f4a6f3194b0>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.587881565093994s
epoch 10: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.456283807754517s
epoch 15: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.646039962768555s
epoch 20: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.657018661499023s
epoch 25: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.467482089996338s
epoch 30: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.646982192993164s
epoch 35: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.606974601745605s
epoch 40: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.444366216659546s
epoch 45: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.562096357345581s
epoch 50: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.574374914169312s
epoch 55: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.447555541992188s
epoch 60: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.635004758834839s
epoch 65: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.606019020080566s
epoch 70: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.431742668151855s
epoch 75: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.698318719863892s
epoch 80: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.58448600769043s
epoch 85: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.552440881729126s
epoch 90: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.479551792144775s
epoch 95: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.349531173706055s
epoch 100: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.513655424118042s
epoch 105: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.615921974182129s
epoch 110: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.686766624450684s
epoch 115: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.565721988677979s
epoch 120: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.657040357589722s
epoch 125: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.387880086898804s
epoch 130: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.563596963882446s
epoch 135: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.578203916549683s
epoch 140: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.562456846237183s
epoch 145: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.625401973724365s
epoch 150: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.573031663894653s
epoch 155: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.496352672576904s
epoch 160: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.587360143661499s
epoch 165: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.504202365875244s
epoch 170: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.466409921646118s
epoch 175: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.536848306655884s
epoch 180: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.425920724868774s
epoch 185: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.59310245513916s
epoch 190: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.532886028289795s
epoch 195: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.470232248306274s
epoch 200: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.557992935180664s
epoch 205: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.669173240661621s
epoch 210: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.443536043167114s
epoch 215: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.62485146522522s
epoch 220: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.592558145523071s
epoch 225: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.421249628067017s
epoch 230: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.568867683410645s
epoch 235: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.58924126625061s
epoch 240: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.49855351448059s
epoch 245: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.73747444152832s
epoch 250: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.486886501312256s
epoch 255: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.547230243682861s
epoch 260: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.651088237762451s
epoch 265: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 11.952648878097534s
epoch 270: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.625373363494873s
epoch 275: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.5654296875s
epoch 280: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.453256368637085s
epoch 285: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.531869888305664s
epoch 290: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.579058408737183s
epoch 295: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.470544576644897s
epoch 300: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.549416065216064s
epoch 305: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.650496006011963s
epoch 310: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.429128885269165s
epoch 315: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.722018241882324s
epoch 320: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.483747482299805s
epoch 325: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.779390573501587s
epoch 330: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.709355592727661s
epoch 335: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.58180832862854s
epoch 340: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.79640817642212s
epoch 345: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.608523607254028s
epoch 350: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.457085132598877s
epoch 355: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.580246686935425s
epoch 360: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.50321078300476s
epoch 365: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.651963949203491s
epoch 370: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.621216297149658s
epoch 375: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.464374542236328s
epoch 380: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.602241277694702s
epoch 385: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.545891523361206s
epoch 390: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.479582786560059s
epoch 395: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.452231407165527s
epoch 400: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.473232507705688s
epoch 405: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.431140661239624s
epoch 410: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.587878704071045s
epoch 415: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.616089820861816s
epoch 420: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.514125108718872s
epoch 425: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.712599277496338s
epoch 430: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.67683720588684s
epoch 435: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.450091361999512s
epoch 440: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.569687604904175s
epoch 445: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.659325122833252s
epoch 450: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.448410749435425s
epoch 455: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.47843599319458s
epoch 460: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.441290855407715s
epoch 465: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.63955569267273s
epoch 470: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.555254936218262s
epoch 475: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.465619325637817s
epoch 480: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.626460313796997s
epoch 485: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.58571195602417s
epoch 490: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.483913660049438s
epoch 495: train_loss: 0.69315; Allocated: 421376; Reserved: 6291456; time used = 10.642909288406372s
epoch 500: train_loss: 0.69315; Allocated: 421376; Reserved: 8388608; time used = 10.58615255355835s
Finished training. Time used = 1060.487746477127.
Training classifier using 80.00% nodes...

{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f1d71f48370>
total iter: 500
epoch 5: train_loss: 0.21696; Allocated: 849920; Reserved: 6291456; time used = 0.8785250186920166s
epoch 10: train_loss: 0.10700; Allocated: 849920; Reserved: 6291456; time used = 0.8862762451171875s
epoch 15: train_loss: 0.08728; Allocated: 849920; Reserved: 6291456; time used = 0.8983428478240967s
epoch 20: train_loss: 0.05040; Allocated: 849920; Reserved: 6291456; time used = 0.8958702087402344s
epoch 25: train_loss: 0.06899; Allocated: 849920; Reserved: 6291456; time used = 0.8793673515319824s
epoch 30: train_loss: 0.05415; Allocated: 849920; Reserved: 6291456; time used = 0.875342607498169s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.274232625961304.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8048422597212033, 'samples': 0.8157894736842105, 'weighted': 0.8121404023632082, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f5d1df544b0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7faba90a0730>
total iter: 500
epoch 5: train_loss: 10.90056; Allocated: 53618176; Reserved: 293601280; time used = 1.9859559535980225s
epoch 10: train_loss: 11.10682; Allocated: 53618176; Reserved: 293601280; time used = 1.9515047073364258s
epoch 15: train_loss: 8.09923; Allocated: 53618176; Reserved: 293601280; time used = 1.985612392425537s
epoch 20: train_loss: 3.77176; Allocated: 53618176; Reserved: 293601280; time used = 2.030870199203491s
epoch 25: train_loss: 2.87130; Allocated: 53618176; Reserved: 293601280; time used = 2.0338640213012695s
epoch 30: train_loss: 4.03275; Allocated: 53618176; Reserved: 293601280; time used = 2.00822377204895s
epoch 35: train_loss: 3.22880; Allocated: 53618176; Reserved: 293601280; time used = 1.987412452697754s
epoch 40: train_loss: 2.01497; Allocated: 53618176; Reserved: 293601280; time used = 2.003297805786133s
epoch 45: train_loss: 1.61372; Allocated: 53618176; Reserved: 293601280; time used = 2.021353244781494s
epoch 50: train_loss: 1.39736; Allocated: 53618176; Reserved: 293601280; time used = 2.027327537536621s
epoch 55: train_loss: 1.47428; Allocated: 53618176; Reserved: 293601280; time used = 1.997666597366333s
epoch 60: train_loss: 1.40694; Allocated: 53618176; Reserved: 293601280; time used = 2.0103602409362793s
epoch 65: train_loss: 1.39789; Allocated: 53618176; Reserved: 293601280; time used = 2.0160105228424072s
epoch 70: train_loss: 1.40237; Allocated: 53618176; Reserved: 293601280; time used = 2.003460645675659s
epoch 75: train_loss: 1.38674; Allocated: 53618176; Reserved: 293601280; time used = 2.0134456157684326s
epoch 80: train_loss: 1.38981; Allocated: 53618176; Reserved: 293601280; time used = 2.0213723182678223s
epoch 85: train_loss: 1.38940; Allocated: 53618176; Reserved: 293601280; time used = 1.9785807132720947s
epoch 90: train_loss: 1.38660; Allocated: 53618176; Reserved: 293601280; time used = 2.025810718536377s
epoch 95: train_loss: 1.38666; Allocated: 53618176; Reserved: 293601280; time used = 2.0136430263519287s
epoch 100: train_loss: 1.38698; Allocated: 53618176; Reserved: 293601280; time used = 2.0021588802337646s
epoch 105: train_loss: 1.38648; Allocated: 53618176; Reserved: 293601280; time used = 2.011104106903076s
epoch 110: train_loss: 1.38631; Allocated: 53618176; Reserved: 293601280; time used = 2.0085370540618896s
epoch 115: train_loss: 1.38642; Allocated: 53618176; Reserved: 293601280; time used = 2.0028507709503174s
epoch 120: train_loss: 1.38634; Allocated: 53618176; Reserved: 293601280; time used = 1.9919698238372803s
epoch 125: train_loss: 1.38630; Allocated: 53618176; Reserved: 293601280; time used = 2.0243566036224365s
epoch 130: train_loss: 1.38633; Allocated: 53618176; Reserved: 293601280; time used = 2.016129970550537s
epoch 135: train_loss: 1.38630; Allocated: 53618176; Reserved: 293601280; time used = 1.9974708557128906s
epoch 140: train_loss: 1.38630; Allocated: 53618176; Reserved: 293601280; time used = 2.0227348804473877s
epoch 145: train_loss: 1.38630; Allocated: 53618176; Reserved: 293601280; time used = 1.9918513298034668s
epoch 150: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0219929218292236s
epoch 155: train_loss: 1.38630; Allocated: 53618176; Reserved: 293601280; time used = 2.0074102878570557s
epoch 160: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0051095485687256s
epoch 165: train_loss: 1.38630; Allocated: 53618176; Reserved: 293601280; time used = 2.0029261112213135s
epoch 170: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.021573781967163s
epoch 175: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.009136915206909s
epoch 180: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.009333848953247s
epoch 185: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.021113395690918s
epoch 190: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.978870153427124s
epoch 195: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0197253227233887s
epoch 200: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0195505619049072s
epoch 205: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.002835512161255s
epoch 210: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0099380016326904s
epoch 215: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.9993033409118652s
epoch 220: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.020440101623535s
epoch 225: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.00531005859375s
epoch 230: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.004926919937134s
epoch 235: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0109262466430664s
epoch 240: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.9933626651763916s
epoch 245: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.008533000946045s
epoch 250: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.02388858795166s
epoch 255: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0025699138641357s
epoch 260: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0132827758789062s
epoch 265: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0122992992401123s
epoch 270: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0118203163146973s
epoch 275: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0041866302490234s
epoch 280: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.014603853225708s
epoch 285: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0075058937072754s
epoch 290: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.005077362060547s
epoch 295: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.005230665206909s
epoch 300: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0262765884399414s
epoch 305: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.9975206851959229s
epoch 310: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0159995555877686s
epoch 315: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0085315704345703s
epoch 320: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0075151920318604s
epoch 325: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0069620609283447s
epoch 330: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.013627767562866s
epoch 335: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.998762845993042s
epoch 340: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.014798641204834s
epoch 345: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.000338554382324s
epoch 350: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.017216682434082s
epoch 355: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.003268003463745s
epoch 360: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.011592149734497s
epoch 365: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0024969577789307s
epoch 370: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.98667573928833s
epoch 375: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0350189208984375s
epoch 380: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.015089750289917s
epoch 385: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.9997398853302002s
epoch 390: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.018710136413574s
epoch 395: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0005111694335938s
epoch 400: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.01832914352417s
epoch 405: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.9976286888122559s
epoch 410: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.016291618347168s
epoch 415: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.018101215362549s
epoch 420: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.993863821029663s
epoch 425: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.019136428833008s
epoch 430: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0028932094573975s
epoch 435: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.007349729537964s
epoch 440: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0132699012756348s
epoch 445: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0068464279174805s
epoch 450: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.014000654220581s
epoch 455: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.9982690811157227s
epoch 460: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0229368209838867s
epoch 465: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.979792833328247s
epoch 470: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0251410007476807s
epoch 475: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0205113887786865s
epoch 480: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.9808251857757568s
epoch 485: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0244996547698975s
epoch 490: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0162811279296875s
epoch 495: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 2.0024163722991943s
epoch 500: train_loss: 1.38629; Allocated: 53618176; Reserved: 293601280; time used = 1.9956274032592773s
Finished training. Time used = 212.598406791687.
Training classifier using 20.00% nodes...
{'micro': 0.4646840148698884, 'macro': 0.4151663512573442, 'samples': 0.4695717505634861, 'weighted': 0.4530923904077383, 'accuracy': 0.4695717505634861}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fe5962b7410>
total iter: 500
epoch 5: train_loss: 0.34634; Allocated: 40919040; Reserved: 62914560; time used = 2.2614364624023438s
epoch 10: train_loss: 0.33693; Allocated: 40919040; Reserved: 62914560; time used = 2.4728920459747314s
epoch 15: train_loss: 0.32615; Allocated: 40919040; Reserved: 62914560; time used = 2.2968173027038574s
epoch 20: train_loss: 0.32444; Allocated: 40919040; Reserved: 62914560; time used = 2.296358346939087s
epoch 25: train_loss: 0.31998; Allocated: 40919040; Reserved: 62914560; time used = 2.3230698108673096s
epoch 30: train_loss: 0.31063; Allocated: 40919040; Reserved: 62914560; time used = 2.441617012023926s
epoch 35: train_loss: 0.31379; Allocated: 40919040; Reserved: 62914560; time used = 2.217658281326294s
epoch 40: train_loss: 0.31521; Allocated: 40919040; Reserved: 62914560; time used = 2.2723937034606934s
epoch 45: train_loss: 0.31298; Allocated: 40919040; Reserved: 62914560; time used = 2.4757444858551025s
epoch 50: train_loss: 0.30692; Allocated: 40919040; Reserved: 62914560; time used = 2.2673544883728027s
epoch 55: train_loss: 0.30682; Allocated: 40919040; Reserved: 62914560; time used = 2.278146266937256s
epoch 60: train_loss: 0.31247; Allocated: 40919040; Reserved: 62914560; time used = 2.2830393314361572s
epoch 65: train_loss: 0.30590; Allocated: 40919040; Reserved: 62914560; time used = 2.4091250896453857s
epoch 70: train_loss: 0.30706; Allocated: 40919040; Reserved: 62914560; time used = 2.2444071769714355s
epoch 75: train_loss: 0.31789; Allocated: 40919040; Reserved: 62914560; time used = 2.261472463607788s
epoch 80: train_loss: 0.30829; Allocated: 40919040; Reserved: 62914560; time used = 2.4261207580566406s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.84068775177002.
Training classifier using 20.00% nodes...
{'micro': 0.793204006593128, 'macro': 0.7794144828989698, 'samples': 0.793204006593128, 'weighted': 0.7924062745680704, 'accuracy': 0.793204006593128}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2431.78it/s]100%|██████████| 1000/1000 [00:00<00:00, 3784.69it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f213a83c050>
total iter: 500
epoch 5: train_loss: 427849.63672; Allocated: 558080; Reserved: 6291456; time used = 32.170016050338745s
epoch 10: train_loss: 58338.86035; Allocated: 558080; Reserved: 8388608; time used = 32.18973922729492s
epoch 15: train_loss: 10394.15869; Allocated: 558080; Reserved: 6291456; time used = 31.792396545410156s
epoch 20: train_loss: 2205.05037; Allocated: 558080; Reserved: 6291456; time used = 31.879648208618164s
epoch 25: train_loss: 1453.67276; Allocated: 558080; Reserved: 6291456; time used = 31.824509143829346s
epoch 30: train_loss: 165.66517; Allocated: 558080; Reserved: 6291456; time used = 32.104891300201416s
epoch 35: train_loss: 1.43127; Allocated: 558080; Reserved: 6291456; time used = 32.572981119155884s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 240.44874477386475.
Training classifier using 80.00% nodes...

{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1753cbcd70>
total iter: 500
epoch 5: train_loss: 1.49328; Allocated: 713216; Reserved: 4194304; time used = 0.8006696701049805s
epoch 10: train_loss: 1.38455; Allocated: 713216; Reserved: 4194304; time used = 0.7937781810760498s
epoch 15: train_loss: 1.35395; Allocated: 713216; Reserved: 4194304; time used = 0.7938616275787354s
epoch 20: train_loss: 1.33158; Allocated: 713216; Reserved: 4194304; time used = 0.7903361320495605s
epoch 25: train_loss: 1.32568; Allocated: 713216; Reserved: 4194304; time used = 0.7877166271209717s
epoch 30: train_loss: 1.31537; Allocated: 713216; Reserved: 4194304; time used = 0.7882790565490723s
epoch 35: train_loss: 1.31608; Allocated: 713216; Reserved: 4194304; time used = 0.7907812595367432s
epoch 40: train_loss: 1.30534; Allocated: 713216; Reserved: 4194304; time used = 0.7908275127410889s
epoch 45: train_loss: 1.31997; Allocated: 713216; Reserved: 4194304; time used = 0.9376034736633301s
epoch 50: train_loss: 1.30720; Allocated: 713216; Reserved: 4194304; time used = 0.7894721031188965s
epoch 55: train_loss: 1.30291; Allocated: 713216; Reserved: 4194304; time used = 0.7936575412750244s
epoch 60: train_loss: 1.31474; Allocated: 713216; Reserved: 4194304; time used = 0.791102409362793s
epoch 65: train_loss: 1.30182; Allocated: 713216; Reserved: 4194304; time used = 0.7975449562072754s
epoch 70: train_loss: 1.30037; Allocated: 713216; Reserved: 4194304; time used = 0.790560245513916s
epoch 75: train_loss: 1.29689; Allocated: 713216; Reserved: 4194304; time used = 0.7937407493591309s
epoch 80: train_loss: 1.31416; Allocated: 713216; Reserved: 4194304; time used = 0.7918691635131836s
epoch 85: train_loss: 1.28810; Allocated: 713216; Reserved: 6291456; time used = 0.7879288196563721s
epoch 90: train_loss: 1.29566; Allocated: 713216; Reserved: 4194304; time used = 0.7922515869140625s
epoch 95: train_loss: 1.28328; Allocated: 713216; Reserved: 4194304; time used = 0.945514440536499s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 18.904075622558594.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.4995164410058027, 'samples': 0.5652173913043478, 'weighted': 0.5126566310655117, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f8ba4e72370>
total iter: 500
epoch 5: train_loss: 1.23241; Allocated: 40702464; Reserved: 62914560; time used = 3.5443553924560547s
epoch 10: train_loss: 1.17848; Allocated: 40702464; Reserved: 62914560; time used = 3.2621490955352783s
epoch 15: train_loss: 1.07439; Allocated: 40702464; Reserved: 62914560; time used = 3.4442062377929688s
epoch 20: train_loss: 0.97137; Allocated: 40702464; Reserved: 62914560; time used = 3.295485496520996s
epoch 25: train_loss: 0.94077; Allocated: 40702464; Reserved: 62914560; time used = 3.4581406116485596s
epoch 30: train_loss: 0.96526; Allocated: 40702464; Reserved: 62914560; time used = 3.508974075317383s
epoch 35: train_loss: 0.91248; Allocated: 40702464; Reserved: 62914560; time used = 3.3175201416015625s
epoch 40: train_loss: 0.79188; Allocated: 40702464; Reserved: 62914560; time used = 3.3943920135498047s
epoch 45: train_loss: 0.72052; Allocated: 40702464; Reserved: 65011712; time used = 3.284294366836548s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 36.383604764938354.
Training classifier using 20.00% nodes...
{'micro': 0.810384176492963, 'macro': 0.8077719230140379, 'samples': 0.8103841764929631, 'weighted': 0.8102989281369628, 'accuracy': 0.8103841764929631}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2321.40it/s]100%|██████████| 1500/1500 [00:00<00:00, 4681.29it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f63cfa72050>
total iter: 500
epoch 5: train_loss: 13807.09155; Allocated: 643584; Reserved: 8388608; time used = 51.018407106399536s
epoch 10: train_loss: 1491.98119; Allocated: 643584; Reserved: 8388608; time used = 50.52071475982666s
epoch 15: train_loss: 141.76030; Allocated: 643584; Reserved: 8388608; time used = 50.69164228439331s
epoch 20: train_loss: 493.43901; Allocated: 643584; Reserved: 8388608; time used = 50.4418580532074s
epoch 25: train_loss: 226.04098; Allocated: 643584; Reserved: 8388608; time used = 51.062333822250366s
epoch 30: train_loss: 76.81171; Allocated: 643584; Reserved: 8388608; time used = 50.93790674209595s
epoch 35: train_loss: 103.55788; Allocated: 643584; Reserved: 8388608; time used = 50.56493043899536s
epoch 40: train_loss: 141.66366; Allocated: 643584; Reserved: 8388608; time used = 50.755085468292236s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 419.5418953895569.
Training classifier using 80.00% nodes...

{'micro': 0.42999999999999994, 'macro': 0.40542100192815184, 'samples': 0.43, 'weighted': 0.40679220645677344, 'accuracy': 0.43}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2365.01it/s]100%|██████████| 1000/1000 [00:00<00:00, 3702.89it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1eb767d050>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.42074; Allocated: 839168; Reserved: 8388608; time used = 182.2058298587799s
epoch 10: train_loss: 1.38871; Allocated: 839168; Reserved: 8388608; time used = 184.64916157722473s
epoch 15: train_loss: 1.38780; Allocated: 839168; Reserved: 8388608; time used = 185.66858291625977s
epoch 20: train_loss: 1.38621; Allocated: 839168; Reserved: 8388608; time used = 188.92999577522278s
epoch 25: train_loss: 1.38522; Allocated: 839168; Reserved: 8388608; time used = 184.56922125816345s
epoch 30: train_loss: 1.38221; Allocated: 839168; Reserved: 8388608; time used = 184.34796524047852s
epoch 35: train_loss: 1.36747; Allocated: 839168; Reserved: 8388608; time used = 183.54673981666565s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1404.3807244300842.
Training classifier using 80.00% nodes...

{'micro': 0.645, 'macro': 0.6434937611408199, 'samples': 0.645, 'weighted': 0.643030303030303, 'accuracy': 0.645}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2ffbf5f4b0>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.63887; Allocated: 934400; Reserved: 27262976; time used = 1.896855354309082s
epoch 10: train_loss: 0.64882; Allocated: 934400; Reserved: 27262976; time used = 1.8907175064086914s
epoch 15: train_loss: 0.47820; Allocated: 934400; Reserved: 6291456; time used = 1.883971929550171s
epoch 20: train_loss: 0.31963; Allocated: 934400; Reserved: 6291456; time used = 1.8796751499176025s
epoch 25: train_loss: 0.30990; Allocated: 934400; Reserved: 6291456; time used = 1.8916211128234863s
epoch 30: train_loss: 0.27979; Allocated: 934400; Reserved: 6291456; time used = 1.8960111141204834s
epoch 35: train_loss: 0.31937; Allocated: 934400; Reserved: 6291456; time used = 1.8842201232910156s
epoch 40: train_loss: 0.34168; Allocated: 934400; Reserved: 6291456; time used = 1.8825371265411377s
epoch 45: train_loss: 0.19419; Allocated: 934400; Reserved: 6291456; time used = 1.887232780456543s
epoch 50: train_loss: 0.33397; Allocated: 934400; Reserved: 27262976; time used = 1.8904869556427002s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 22.529412984848022.
Training classifier using 80.00% nodes...
{'micro': 0.6578947368421053, 'macro': 0.6518675123326286, 'samples': 0.6578947368421053, 'weighted': 0.6591001817440006, 'accuracy': 0.6578947368421053}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f0d899d5410>
total iter: 500
epoch 5: train_loss: 0.34334; Allocated: 40766464; Reserved: 62914560; time used = 2.185389518737793s
epoch 10: train_loss: 0.34166; Allocated: 40766464; Reserved: 62914560; time used = 2.4592208862304688s
epoch 15: train_loss: 0.33547; Allocated: 40766464; Reserved: 62914560; time used = 2.250035285949707s
epoch 20: train_loss: 0.32895; Allocated: 40766464; Reserved: 62914560; time used = 2.2358336448669434s
epoch 25: train_loss: 0.32921; Allocated: 40766464; Reserved: 62914560; time used = 2.193791389465332s
epoch 30: train_loss: 0.32942; Allocated: 40766464; Reserved: 62914560; time used = 2.4624247550964355s
epoch 35: train_loss: 0.32760; Allocated: 40766464; Reserved: 62914560; time used = 2.2861874103546143s
epoch 40: train_loss: 0.32442; Allocated: 40766464; Reserved: 62914560; time used = 2.2344858646392822s
epoch 45: train_loss: 0.31751; Allocated: 40766464; Reserved: 62914560; time used = 2.181051254272461s
epoch 50: train_loss: 0.31752; Allocated: 40766464; Reserved: 62914560; time used = 2.435969114303589s
epoch 55: train_loss: 0.32280; Allocated: 40766464; Reserved: 62914560; time used = 2.222360134124756s
epoch 60: train_loss: 0.31647; Allocated: 40766464; Reserved: 62914560; time used = 2.1994190216064453s
epoch 65: train_loss: 0.31931; Allocated: 40766464; Reserved: 62914560; time used = 2.3779380321502686s
epoch 70: train_loss: 0.32105; Allocated: 40766464; Reserved: 62914560; time used = 2.365158796310425s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 36.30997705459595.
Training classifier using 20.00% nodes...
{'micro': 0.806073285152783, 'macro': 0.7979532569668745, 'samples': 0.8060732851527831, 'weighted': 0.8055263815062798, 'accuracy': 0.8060732851527831}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2868.59it/s]100%|██████████| 1500/1500 [00:00<00:00, 5467.86it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7eff507d1050>
total iter: 500
epoch 5: train_loss: 0.69306; Allocated: 624640; Reserved: 8388608; time used = 32.631089210510254s
epoch 10: train_loss: 0.69180; Allocated: 624640; Reserved: 6291456; time used = 31.847944736480713s
epoch 15: train_loss: 0.68776; Allocated: 624640; Reserved: 6291456; time used = 31.8811137676239s
epoch 20: train_loss: 0.66283; Allocated: 624640; Reserved: 6291456; time used = 31.93375873565674s
epoch 25: train_loss: 0.69315; Allocated: 624640; Reserved: 6291456; time used = 32.301902532577515s
epoch 30: train_loss: 0.69315; Allocated: 624640; Reserved: 6291456; time used = 32.23693490028381s
epoch 35: train_loss: 0.69315; Allocated: 624640; Reserved: 6291456; time used = 32.08058953285217s
epoch 40: train_loss: 0.66021; Allocated: 624640; Reserved: 6291456; time used = 32.248958349227905s
epoch 45: train_loss: 0.60297; Allocated: 624640; Reserved: 6291456; time used = 31.97050666809082s
epoch 50: train_loss: 0.60033; Allocated: 624640; Reserved: 6291456; time used = 31.918622493743896s
epoch 55: train_loss: 0.64591; Allocated: 624640; Reserved: 8388608; time used = 32.22953128814697s
epoch 60: train_loss: 0.21266; Allocated: 624640; Reserved: 10485760; time used = 32.11162996292114s
epoch 65: train_loss: 0.03538; Allocated: 624640; Reserved: 6291456; time used = 32.14609456062317s
epoch 70: train_loss: 0.09462; Allocated: 624640; Reserved: 6291456; time used = 32.08354830741882s
epoch 75: train_loss: 0.05148; Allocated: 624640; Reserved: 8388608; time used = 32.429133892059326s
epoch 80: train_loss: 0.00508; Allocated: 624640; Reserved: 6291456; time used = 32.16612386703491s
epoch 85: train_loss: 0.02144; Allocated: 624640; Reserved: 6291456; time used = 32.129003047943115s
epoch 90: train_loss: 0.11565; Allocated: 624640; Reserved: 6291456; time used = 31.85818338394165s
epoch 95: train_loss: 0.03008; Allocated: 624640; Reserved: 6291456; time used = 32.47346758842468s
epoch 100: train_loss: 0.00906; Allocated: 624640; Reserved: 8388608; time used = 32.349756956100464s
epoch 105: train_loss: 0.01496; Allocated: 624640; Reserved: 6291456; time used = 32.017077684402466s
epoch 110: train_loss: 0.14315; Allocated: 624640; Reserved: 8388608; time used = 32.059619426727295s
epoch 115: train_loss: 0.05618; Allocated: 624640; Reserved: 6291456; time used = 32.150277614593506s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 755.3476269245148.
Training classifier using 80.00% nodes...

{'micro': 0.40333333333333327, 'macro': 0.32643829239573924, 'samples': 0.4033333333333333, 'weighted': 0.31664514362386703, 'accuracy': 0.4033333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2359.54it/s] 80%|████████  | 1605/2000 [00:00<00:00, 3077.54it/s]100%|██████████| 2000/2000 [00:00<00:00, 5459.39it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Killed
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2384.04it/s]100%|██████████| 1000/1000 [00:00<00:00, 3725.02it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f6662b3d050>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68212; Allocated: 769536; Reserved: 29360128; time used = 9.304462671279907s
epoch 10: train_loss: 0.69577; Allocated: 769536; Reserved: 29360128; time used = 9.463549613952637s
epoch 15: train_loss: 0.69234; Allocated: 769536; Reserved: 31457280; time used = 9.20292043685913s
epoch 20: train_loss: 0.69378; Allocated: 769536; Reserved: 31457280; time used = 9.199174165725708s
epoch 25: train_loss: 0.68615; Allocated: 769536; Reserved: 29360128; time used = 9.146971702575684s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 57.68959021568298.
Training classifier using 80.00% nodes...

{'micro': 0.645, 'macro': 0.6447779862414009, 'samples': 0.645, 'weighted': 0.6446003752345216, 'accuracy': 0.645}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f38ff110050>
total iter: 500
epoch 5: train_loss: 0.65828; Allocated: 712704; Reserved: 6291456; time used = 4.457846403121948s
epoch 10: train_loss: 0.61082; Allocated: 712704; Reserved: 4194304; time used = 4.222577810287476s
epoch 15: train_loss: 0.62435; Allocated: 712704; Reserved: 6291456; time used = 4.387350797653198s
epoch 20: train_loss: 0.62867; Allocated: 712704; Reserved: 4194304; time used = 4.36424708366394s
epoch 25: train_loss: 0.63660; Allocated: 712704; Reserved: 6291456; time used = 4.2160866260528564s
epoch 30: train_loss: 0.60627; Allocated: 712704; Reserved: 4194304; time used = 4.366815805435181s
epoch 35: train_loss: 0.61765; Allocated: 712704; Reserved: 4194304; time used = 4.366920232772827s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 34.490554332733154.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.4362745098039216, 'samples': 0.5652173913043478, 'weighted': 0.4558113100312589, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2892.29it/s] 80%|████████  | 1602/2000 [00:00<00:00, 3698.59it/s]100%|██████████| 2000/2000 [00:00<00:00, 6167.18it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4f0cfadd70>
total iter: 500
epoch 5: train_loss: 1.41221; Allocated: 3844608; Reserved: 29360128; time used = 97.45230054855347s
epoch 10: train_loss: 1.38766; Allocated: 3844608; Reserved: 29360128; time used = 95.46158742904663s
epoch 15: train_loss: 1.38630; Allocated: 3844608; Reserved: 31457280; time used = 95.98058485984802s
epoch 20: train_loss: 1.38661; Allocated: 3844608; Reserved: 29360128; time used = 99.15036535263062s
epoch 25: train_loss: 1.38658; Allocated: 3844608; Reserved: 29360128; time used = 99.63979029655457s
epoch 30: train_loss: 1.38652; Allocated: 3844608; Reserved: 31457280; time used = 97.65420889854431s
epoch 35: train_loss: 1.38634; Allocated: 3844608; Reserved: 29360128; time used = 100.91761493682861s
epoch 40: train_loss: 1.38630; Allocated: 3844608; Reserved: 29360128; time used = 98.45189046859741s
epoch 45: train_loss: 1.38632; Allocated: 3844608; Reserved: 29360128; time used = 97.97513484954834s
epoch 50: train_loss: 1.38632; Allocated: 3844608; Reserved: 29360128; time used = 99.2246298789978s
epoch 55: train_loss: 1.38630; Allocated: 3844608; Reserved: 29360128; time used = 97.06512689590454s
epoch 60: train_loss: 1.38630; Allocated: 3844608; Reserved: 29360128; time used = 96.53396224975586s
epoch 65: train_loss: 1.38630; Allocated: 3844608; Reserved: 31457280; time used = 99.94071173667908s
epoch 70: train_loss: 1.38630; Allocated: 3844608; Reserved: 31457280; time used = 97.26342415809631s
epoch 75: train_loss: 1.38629; Allocated: 3844608; Reserved: 29360128; time used = 99.10946440696716s
epoch 80: train_loss: 1.38630; Allocated: 3844608; Reserved: 29360128; time used = 96.96205043792725s
epoch 85: train_loss: 1.38629; Allocated: 3844608; Reserved: 31457280; time used = 96.58141040802002s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1726.6797771453857.
Training classifier using 80.00% nodes...

{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2369.17it/s]100%|██████████| 1000/1000 [00:00<00:00, 3710.82it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f254113d050>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 180.74294781684875s
epoch 10: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 187.0213918685913s
epoch 15: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 184.81333112716675s
epoch 20: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 182.8198540210724s
epoch 25: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 181.40978837013245s
epoch 30: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 185.73853850364685s
epoch 35: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.22120451927185s
epoch 40: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 178.04079008102417s
epoch 45: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 184.7258574962616s
epoch 50: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 181.93410921096802s
epoch 55: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.33823013305664s
epoch 60: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.2919216156006s
epoch 65: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 184.51914191246033s
epoch 70: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 182.8649971485138s
epoch 75: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.0946865081787s
epoch 80: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.0291244983673s
epoch 85: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 185.05314660072327s
epoch 90: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 180.41558027267456s
epoch 95: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 182.21277141571045s
epoch 100: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 180.62857389450073s
epoch 105: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 188.27667880058289s
epoch 110: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 184.63083934783936s
epoch 115: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 181.7246594429016s
epoch 120: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 182.79273676872253s
epoch 125: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 179.96177792549133s
epoch 130: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 181.25713276863098s
epoch 135: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 179.31713581085205s
epoch 140: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 185.12394070625305s
epoch 145: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 181.37194681167603s
epoch 150: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.6186809539795s
epoch 155: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 184.58103203773499s
epoch 160: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.66130185127258s
epoch 165: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 182.43584752082825s
epoch 170: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 185.44715476036072s
epoch 175: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.93734073638916s
epoch 180: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.38237023353577s
epoch 185: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 180.3330898284912s
epoch 190: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 181.6809058189392s
epoch 195: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 184.36116576194763s
epoch 200: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.51029920578003s
epoch 205: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 184.36964988708496s
epoch 210: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.12195777893066s
epoch 215: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 184.59339928627014s
epoch 220: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.51665878295898s
epoch 225: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 182.24821138381958s
epoch 230: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 184.50916290283203s
epoch 235: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 184.18125462532043s
epoch 240: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.1370770931244s
epoch 245: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.44070315361023s
epoch 250: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 188.8707549571991s
epoch 255: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.30674743652344s
epoch 260: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 184.6561803817749s
epoch 265: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.16136693954468s
epoch 270: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 187.61931490898132s
epoch 275: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 184.257657289505s
epoch 280: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 182.8668074607849s
epoch 285: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 182.66024899482727s
epoch 290: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 181.25101351737976s
epoch 295: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.48482251167297s
epoch 300: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 186.6487262248993s
epoch 305: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 187.48424434661865s
epoch 310: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 188.80789279937744s
epoch 315: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 181.89303016662598s
epoch 320: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 180.73662543296814s
epoch 325: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 188.21496868133545s
epoch 330: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 184.32479429244995s
epoch 335: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 184.7661464214325s
epoch 340: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 184.72188425064087s
epoch 345: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 184.37223553657532s
epoch 350: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 182.31260347366333s
epoch 355: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 186.2156524658203s
epoch 360: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 188.3812460899353s
epoch 365: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 190.4573941230774s
epoch 370: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 190.7137622833252s
epoch 375: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 185.41377139091492s
epoch 380: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.06586575508118s
epoch 385: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 179.99163246154785s
epoch 390: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 182.7818512916565s
epoch 395: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 181.116379737854s
epoch 400: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.0771448612213s
epoch 405: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 181.7342345714569s
epoch 410: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 182.85254168510437s
epoch 415: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.2461884021759s
epoch 420: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 188.9627811908722s
epoch 425: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 188.50492596626282s
epoch 430: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 186.93198657035828s
epoch 435: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 180.70345902442932s
epoch 440: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 181.75595474243164s
epoch 445: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.18522906303406s
epoch 450: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 183.988436460495s
epoch 455: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.65079975128174s
epoch 460: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 181.8093957901001s
epoch 465: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 184.20177364349365s
epoch 470: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 184.80125427246094s
epoch 475: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 182.9206771850586s
epoch 480: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.10806274414062s
epoch 485: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 181.27674460411072s
epoch 490: train_loss: 0.69315; Allocated: 550400; Reserved: 8388608; time used = 185.55903673171997s
epoch 495: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 185.4876799583435s
epoch 500: train_loss: 0.69315; Allocated: 550400; Reserved: 6291456; time used = 183.21570205688477s
Finished training. Time used = 18382.11781859398.
Training classifier using 80.00% nodes...

{'micro': 0.47500000000000003, 'macro': 0.4743560862056018, 'samples': 0.475, 'weighted': 0.47398813546594576, 'accuracy': 0.475}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fbd703e3280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2359.98it/s]100%|██████████| 1000/1000 [00:00<00:00, 3679.84it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f400e4fd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f7c7102de10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f3acbdc90f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2933.28it/s] 80%|████████  | 1607/2000 [00:00<00:00, 3747.35it/s]100%|██████████| 2000/2000 [00:00<00:00, 6115.18it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fec12d46280>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2367.47it/s]100%|██████████| 1000/1000 [00:00<00:00, 3705.04it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f348227d050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f52e04aa820>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2923.85it/s]100%|██████████| 1000/1000 [00:00<00:00, 4417.90it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f6ddfa3d050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2909.13it/s] 80%|███████▉  | 1594/2000 [00:00<00:00, 3714.94it/s]100%|██████████| 2000/2000 [00:00<00:00, 6170.80it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4ca4cd4230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2414.37it/s] 80%|████████  | 1603/2000 [00:00<00:00, 3142.13it/s]100%|██████████| 2000/2000 [00:00<00:00, 5535.03it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f1a5fcaed70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2905.80it/s]100%|██████████| 1000/1000 [00:00<00:00, 4403.05it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f8b47fdb280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2317.89it/s]100%|██████████| 1500/1500 [00:00<00:00, 4691.38it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fb12900d0a0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2726.80it/s]100%|██████████| 1000/1000 [00:00<00:00, 4146.39it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fdf07fbd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2905.77it/s] 76%|███████▌  | 1524/2000 [00:00<00:00, 3682.85it/s]100%|██████████| 2000/2000 [00:00<00:00, 6039.08it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f518bfd3190>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2438.22it/s]100%|██████████| 1000/1000 [00:00<00:00, 3794.05it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f4aba965500>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2390.75it/s] 80%|████████  | 1602/2000 [00:00<00:00, 3113.95it/s]100%|██████████| 2000/2000 [00:00<00:00, 5497.58it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f67c555a280>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fe984ed4d70>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2445.69it/s] 81%|████████  | 1611/2000 [00:00<00:00, 3181.54it/s]100%|██████████| 2000/2000 [00:00<00:00, 5595.49it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4809c6dd20>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2373.33it/s] 80%|███████▉  | 1594/2000 [00:00<00:00, 3091.11it/s]100%|██████████| 2000/2000 [00:00<00:00, 5462.19it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7feda677d280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f428f5fc320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2469.52it/s]100%|██████████| 1000/1000 [00:00<00:00, 3834.31it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f3cf4c3a4b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2384.66it/s] 80%|███████▉  | 1599/2000 [00:00<00:00, 3105.92it/s]100%|██████████| 2000/2000 [00:00<00:00, 5485.39it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f34297edd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fd2a0b7fdc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe7e9023d70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fbd558fb140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f724952c6e0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2353.15it/s]100%|██████████| 1500/1500 [00:00<00:00, 4748.18it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f2b192c8050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f8dc4863370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2373.76it/s] 81%|████████  | 1619/2000 [00:00<00:00, 3097.95it/s]100%|██████████| 2000/2000 [00:00<00:00, 5505.89it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7faecba4e140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff7eb366280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2347.68it/s]100%|██████████| 1000/1000 [00:00<00:00, 3663.52it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f175018f370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fdb44455e10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fe0962f82d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fd9958b00f0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa2cbba1d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2417.68it/s]100%|██████████| 1000/1000 [00:00<00:00, 3761.53it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fed80424370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f4a4fc5fc80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2341.12it/s] 76%|███████▌  | 1524/2000 [00:00<00:00, 3033.71it/s]100%|██████████| 2000/2000 [00:00<00:00, 5309.68it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd80eea6280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2910.86it/s] 81%|████████  | 1616/2000 [00:00<00:00, 3724.82it/s]100%|██████████| 2000/2000 [00:00<00:00, 6217.53it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fb86e266280>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fd1d6aa71e0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fab6e65b140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2920.23it/s]100%|██████████| 1000/1000 [00:00<00:00, 4401.24it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f6f071bd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb5fe92c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2913.13it/s] 80%|████████  | 1602/2000 [00:00<00:00, 3722.66it/s]100%|██████████| 2000/2000 [00:00<00:00, 6191.80it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f70b3e6ddc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff6e524fdc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2429.08it/s] 80%|████████  | 1602/2000 [00:00<00:00, 3159.44it/s]100%|██████████| 2000/2000 [00:00<00:00, 5531.91it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fda356ade10>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7efdd273f730>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2352.73it/s]100%|██████████| 1500/1500 [00:00<00:00, 4739.71it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f94e135b050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2829.06it/s]100%|██████████| 1000/1000 [00:00<00:00, 4300.73it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f448882a3c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f0bb40690f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2936.87it/s]100%|██████████| 1500/1500 [00:00<00:00, 5488.78it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f7db0fddc80>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2909.77it/s]100%|██████████| 1000/1000 [00:00<00:00, 4386.06it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe2c1108370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2916.84it/s] 80%|████████  | 1609/2000 [00:00<00:00, 3729.38it/s]100%|██████████| 2000/2000 [00:00<00:00, 6215.70it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f1687badd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2912.77it/s]100%|██████████| 1500/1500 [00:00<00:00, 5531.92it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff895f2ad20>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fd634e69280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fa2d9afd6e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f86e76f0910>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f86d9b28d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f6fc94732d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2445.84it/s] 76%|███████▌  | 1515/2000 [00:00<00:00, 3153.88it/s]100%|██████████| 2000/2000 [00:00<00:00, 5441.49it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f3438caed70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2915.92it/s] 80%|███████▉  | 1591/2000 [00:00<00:00, 3721.51it/s]100%|██████████| 2000/2000 [00:00<00:00, 6170.15it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa2630f7280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f31a3d6fcd0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fd96f72dd20>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2926.44it/s]100%|██████████| 1500/1500 [00:00<00:00, 5564.84it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f716bd42050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f0bdef85050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2916.78it/s]100%|██████████| 1500/1500 [00:00<00:00, 5557.98it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff9eb10a050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f6fc56de190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f46dace2d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2916.05it/s]100%|██████████| 1000/1000 [00:00<00:00, 4411.23it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1918539050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2902.03it/s]100%|██████████| 1000/1000 [00:00<00:00, 4384.81it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f145a77c050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2912.75it/s] 81%|████████  | 1614/2000 [00:00<00:00, 3726.04it/s]100%|██████████| 2000/2000 [00:00<00:00, 6213.17it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fdb52935140>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fc891b21320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f3b5cc84050>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fc5cbba15f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fb0b0a6c0f0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2926.39it/s]100%|██████████| 1500/1500 [00:00<00:00, 5556.59it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f31e590f050>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2932.94it/s]100%|██████████| 1500/1500 [00:00<00:00, 5553.94it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff45f9da320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2351.18it/s] 77%|███████▋  | 1536/2000 [00:00<00:00, 3049.22it/s]100%|██████████| 2000/2000 [00:00<00:00, 5351.78it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe14929b280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f464982f780>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2930.09it/s] 81%|████████  | 1616/2000 [00:00<00:00, 3746.64it/s]100%|██████████| 2000/2000 [00:00<00:00, 6239.30it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f2967fd30f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f3be3adf050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2932.37it/s] 78%|███████▊  | 1551/2000 [00:00<00:00, 3723.98it/s]100%|██████████| 2000/2000 [00:00<00:00, 6109.64it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f11a6066280>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f3c17201cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fcb1cb0ff00>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2419.01it/s] 81%|████████  | 1611/2000 [00:00<00:00, 3149.91it/s]100%|██████████| 2000/2000 [00:00<00:00, 5559.78it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fb1e532dd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2391.00it/s]100%|██████████| 1500/1500 [00:00<00:00, 4811.08it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f83bf8bc050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2879.55it/s]100%|██████████| 1000/1000 [00:00<00:00, 4358.84it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc895ce3370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe422282320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f0e43d4ed20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f4cbcacd2d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fde57e801e0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fbcb69396e0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fcff482ae10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2913.56it/s]100%|██████████| 1500/1500 [00:00<00:00, 5422.11it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f376cbf3410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa6763d4e10>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f889f854e10>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2366.06it/s]100%|██████████| 1000/1000 [00:00<00:00, 3705.76it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f85dea7d050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2528.47it/s] 77%|███████▋  | 1538/2000 [00:00<00:00, 3257.22it/s]100%|██████████| 2000/2000 [00:00<00:00, 5601.85it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fb666bad500>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2331.72it/s] 80%|████████  | 1602/2000 [00:00<00:00, 3043.78it/s]100%|██████████| 2000/2000 [00:00<00:00, 5414.66it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f35d0dfb140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fc9a8cc1dc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7ff7555d4d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f7fcc9e87d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2395.56it/s] 81%|████████  | 1621/2000 [00:00<00:00, 3124.45it/s]100%|██████████| 2000/2000 [00:00<00:00, 5541.30it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f163f19a280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fc9657f6eb0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7efd0321bcd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2935.77it/s]100%|██████████| 1000/1000 [00:00<00:00, 4428.64it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f86379392d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2904.39it/s]100%|██████████| 1500/1500 [00:00<00:00, 5516.19it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f13bfc2c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2895.02it/s] 80%|███████▉  | 1595/2000 [00:00<00:00, 3698.92it/s]100%|██████████| 2000/2000 [00:00<00:00, 6149.49it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fb0e326ee10>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fa7b0ef3dc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2935.60it/s] 80%|████████  | 1610/2000 [00:00<00:00, 3750.91it/s]100%|██████████| 2000/2000 [00:00<00:00, 6231.51it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe4b5a1f280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fd034fc1050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2991.62it/s]100%|██████████| 1500/1500 [00:00<00:00, 5667.26it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f4f2f9b2050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2798.47it/s]100%|██████████| 1500/1500 [00:00<00:00, 5365.66it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f3426b98e10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f82a3a417d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fbde6fbaeb0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa41cb16280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2795.81it/s]100%|██████████| 1000/1000 [00:00<00:00, 4259.92it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f8790d98410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2924.41it/s] 80%|████████  | 1608/2000 [00:00<00:00, 3737.30it/s]100%|██████████| 2000/2000 [00:00<00:00, 6214.25it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa76baf5230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fbb73bcf190>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f3ba0828410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f17d73ca280>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2937.21it/s] 80%|████████  | 1604/2000 [00:00<00:00, 3750.88it/s]100%|██████████| 2000/2000 [00:00<00:00, 6114.21it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fc33892d280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2957.79it/s] 81%|████████  | 1613/2000 [00:00<00:00, 3777.13it/s]100%|██████████| 2000/2000 [00:00<00:00, 6261.98it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f336f9eee10>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f6ba7356320>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fe5d725f050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2955.86it/s]100%|██████████| 1000/1000 [00:00<00:00, 4457.38it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fce58679050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2917.40it/s]100%|██████████| 1000/1000 [00:00<00:00, 4408.09it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fadc197d050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f40210b69b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5b51dd1280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f3061459190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fe6d9f28c80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fbe96bd7e60>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2380.86it/s]100%|██████████| 1000/1000 [00:00<00:00, 3719.36it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f53f4a3a050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2913.65it/s]100%|██████████| 1500/1500 [00:00<00:00, 5553.06it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fef8ffc2050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2916.88it/s]100%|██████████| 1500/1500 [00:00<00:00, 5557.81it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7eff513e8370>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f64074fbd20>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2448.45it/s]100%|██████████| 1500/1500 [00:00<00:00, 4884.83it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f115dc46370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f20b9788280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2887.85it/s]100%|██████████| 1000/1000 [00:00<00:00, 4383.87it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f5fdf9b9370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2899.09it/s]100%|██████████| 1500/1500 [00:00<00:00, 5504.62it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f58eb5d5d20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fbf6e3a0d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fa9c2669d20>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fb2888bc2d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2931.41it/s]100%|██████████| 1000/1000 [00:00<00:00, 4435.50it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc5d93bd050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe6ed57dd20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f5b4584cd70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7ff356c51d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f5a61be3140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fede32e8d20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2433.55it/s] 80%|████████  | 1609/2000 [00:00<00:00, 3166.50it/s]100%|██████████| 2000/2000 [00:00<00:00, 5574.88it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f56b8e59190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fdee7a40320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f9a0fb41190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fb19beef550>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f20bf33a2d0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f4f2c09ad20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2448.19it/s]100%|██████████| 1500/1500 [00:00<00:00, 4900.69it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f1c2f1eb050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2972.56it/s]100%|██████████| 1000/1000 [00:00<00:00, 4481.57it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f2fce3bc050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2395.13it/s] 77%|███████▋  | 1534/2000 [00:00<00:00, 3100.23it/s]100%|██████████| 2000/2000 [00:00<00:00, 5410.41it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f3995227280>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f492d229e10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2417.65it/s] 79%|███████▉  | 1589/2000 [00:00<00:00, 3142.47it/s]100%|██████████| 2000/2000 [00:00<00:00, 5516.28it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa7073ade10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f18e1d9b5f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2923.81it/s] 80%|███████▉  | 1595/2000 [00:00<00:00, 3732.12it/s]100%|██████████| 2000/2000 [00:00<00:00, 6188.27it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4394fd9230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2960.71it/s]100%|██████████| 1500/1500 [00:00<00:00, 5618.11it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9533aa4050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2936.47it/s]100%|██████████| 1000/1000 [00:00<00:00, 4426.86it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ffacddbd050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2870.03it/s]100%|██████████| 1000/1000 [00:00<00:00, 4334.89it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f242658fcd0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f4d7939c230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f37df1d90f0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7feaccee0dc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8e7262adc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2953.45it/s]100%|██████████| 1500/1500 [00:00<00:00, 5581.71it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff49dc52050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7faf94852320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa7553f9be0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2945.83it/s] 81%|████████  | 1622/2000 [00:00<00:00, 3766.99it/s]100%|██████████| 2000/2000 [00:00<00:00, 6271.84it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f322e585280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f13d72573c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f64ea9e0820>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2951.38it/s]100%|██████████| 1000/1000 [00:00<00:00, 4456.11it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fed99b2a460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2932.74it/s]100%|██████████| 1500/1500 [00:00<00:00, 5579.71it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fa2aa4f9050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fc93c472280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f8aede1c3c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2929.72it/s] 80%|████████  | 1601/2000 [00:00<00:00, 3740.96it/s]100%|██████████| 2000/2000 [00:00<00:00, 6210.25it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fb686eaf140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fa2e5f20410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f74cc2726e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2928.02it/s]100%|██████████| 1000/1000 [00:00<00:00, 4412.92it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f103ce3a050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f79358b0280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2930.75it/s]100%|██████████| 1000/1000 [00:00<00:00, 4419.72it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f67957fc050>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2822.91it/s]100%|██████████| 1500/1500 [00:00<00:00, 5436.90it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fcbd8949050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2898.54it/s]100%|██████████| 1000/1000 [00:00<00:00, 4384.69it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f351ff7d050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f6344e991e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f0cfb64fd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fed6b25a370>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2650.16it/s]100%|██████████| 1500/1500 [00:00<00:00, 5176.15it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f40a3518050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2788.64it/s] 81%|████████  | 1614/2000 [00:00<00:00, 3583.27it/s]100%|██████████| 2000/2000 [00:00<00:00, 6041.67it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f394558e280>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2725.20it/s]100%|██████████| 1000/1000 [00:00<00:00, 4161.62it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f40fb5ef410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f712d1297d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f1b126aae60>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f66e1f68460>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f6519a1c550>
total iter: 500
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
slurmstepd: error: Detected 2 oom-kill event(s) in step 2988.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.
