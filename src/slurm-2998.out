[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.46819; Allocated: 940032; Reserved: 6291456; time used = 1.231571912765503s
epoch 10: train_loss: 0.31227; Allocated: 940032; Reserved: 6291456; time used = 1.1935606002807617s
epoch 15: train_loss: 0.21281; Allocated: 940032; Reserved: 6291456; time used = 1.0325660705566406s
epoch 20: train_loss: 0.10366; Allocated: 940032; Reserved: 6291456; time used = 1.02241849899292s
epoch 25: train_loss: 0.04190; Allocated: 940032; Reserved: 6291456; time used = 1.01890230178833s
epoch 30: train_loss: 0.01768; Allocated: 940032; Reserved: 6291456; time used = 1.0172841548919678s
epoch 35: train_loss: 0.02984; Allocated: 940032; Reserved: 6291456; time used = 1.1650960445404053s
epoch 40: train_loss: 0.00949; Allocated: 940032; Reserved: 6291456; time used = 1.015474557876587s
epoch 45: train_loss: 0.00618; Allocated: 940032; Reserved: 6291456; time used = 1.0245850086212158s
epoch 50: train_loss: 0.02125; Allocated: 940032; Reserved: 6291456; time used = 1.0215132236480713s
epoch 55: train_loss: 0.01368; Allocated: 940032; Reserved: 6291456; time used = 1.0224854946136475s
epoch 60: train_loss: 0.00885; Allocated: 940032; Reserved: 6291456; time used = 1.019503116607666s
epoch 65: train_loss: 0.01474; Allocated: 940032; Reserved: 6291456; time used = 1.0164711475372314s
epoch 70: train_loss: 0.02769; Allocated: 940032; Reserved: 8388608; time used = 1.0193517208099365s
epoch 75: train_loss: 0.04880; Allocated: 940032; Reserved: 6291456; time used = 1.1441774368286133s
epoch 80: train_loss: 0.00082; Allocated: 940032; Reserved: 6291456; time used = 1.0243840217590332s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 20.97933578491211.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.591894852135816, 'samples': 0.6086956521739131, 'weighted': 0.5978951378637078, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3109.40it/s] 83%|████████▎ | 1651/2000 [00:00<00:00, 3949.06it/s]100%|██████████| 2000/2000 [00:00<00:00, 6257.44it/s]Killed
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.64176; Allocated: 719360; Reserved: 4194304; time used = 6.358541011810303s
epoch 10: train_loss: 0.41879; Allocated: 719360; Reserved: 4194304; time used = 6.138657808303833s
epoch 15: train_loss: 0.21013; Allocated: 719360; Reserved: 4194304; time used = 6.265593528747559s
epoch 20: train_loss: 0.11791; Allocated: 719360; Reserved: 4194304; time used = 6.262742757797241s
epoch 25: train_loss: 0.14539; Allocated: 719360; Reserved: 6291456; time used = 6.128144979476929s
epoch 30: train_loss: 0.15932; Allocated: 719360; Reserved: 4194304; time used = 6.224061489105225s
epoch 35: train_loss: 0.13904; Allocated: 719360; Reserved: 4194304; time used = 6.240947246551514s
epoch 40: train_loss: 0.16416; Allocated: 719360; Reserved: 4194304; time used = 6.337291240692139s
epoch 45: train_loss: 0.10824; Allocated: 719360; Reserved: 4194304; time used = 6.209115028381348s
epoch 50: train_loss: 0.05272; Allocated: 719360; Reserved: 6291456; time used = 6.246676921844482s
epoch 55: train_loss: 0.03898; Allocated: 719360; Reserved: 4194304; time used = 6.253155946731567s
epoch 60: train_loss: 0.03844; Allocated: 719360; Reserved: 4194304; time used = 6.264738321304321s
epoch 65: train_loss: 0.18317; Allocated: 719360; Reserved: 6291456; time used = 6.116543292999268s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 84.5577347278595.
Training classifier using 80.00% nodes...
{'micro': 0.5217391304347826, 'macro': 0.47787204769548264, 'samples': 0.5217391304347826, 'weighted': 0.4888388183803076, 'accuracy': 0.5217391304347826}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2931.82it/s]100%|██████████| 1000/1000 [00:00<00:00, 4231.50it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 52.31752; Allocated: 425984; Reserved: 8388608; time used = 189.5922770500183s
epoch 10: train_loss: 16.62454; Allocated: 425984; Reserved: 8388608; time used = 194.5258457660675s
epoch 15: train_loss: 9.43860; Allocated: 425984; Reserved: 8388608; time used = 191.40158891677856s
epoch 20: train_loss: 5.30780; Allocated: 425984; Reserved: 8388608; time used = 192.47836232185364s
epoch 25: train_loss: 3.15960; Allocated: 425984; Reserved: 8388608; time used = 190.22874522209167s
epoch 30: train_loss: 2.46988; Allocated: 425984; Reserved: 10485760; time used = 188.42789888381958s
epoch 35: train_loss: 1.67356; Allocated: 425984; Reserved: 8388608; time used = 188.9125452041626s
epoch 40: train_loss: 1.50847; Allocated: 425984; Reserved: 8388608; time used = 185.26252913475037s
epoch 45: train_loss: 1.44115; Allocated: 425984; Reserved: 8388608; time used = 187.69191908836365s
epoch 50: train_loss: 1.35585; Allocated: 425984; Reserved: 10485760; time used = 191.986065864563s
epoch 55: train_loss: 1.31078; Allocated: 425984; Reserved: 8388608; time used = 190.44563174247742s
epoch 60: train_loss: 1.29610; Allocated: 425984; Reserved: 8388608; time used = 190.67521977424622s
epoch 65: train_loss: 1.29059; Allocated: 425984; Reserved: 8388608; time used = 199.0343370437622s
epoch 70: train_loss: 1.28443; Allocated: 425984; Reserved: 8388608; time used = 198.78292417526245s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2842.358004808426.
Training classifier using 80.00% nodes...
{'micro': 0.7100000000000001, 'macro': 0.7099709970997099, 'samples': 0.71, 'weighted': 0.7099129912991299, 'accuracy': 0.71}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3076.26it/s]100%|██████████| 1000/1000 [00:00<00:00, 4404.70it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68216; Allocated: 630784; Reserved: 29360128; time used = 5.55774188041687s
epoch 10: train_loss: 0.69587; Allocated: 630784; Reserved: 29360128; time used = 5.781406879425049s
epoch 15: train_loss: 0.69362; Allocated: 630784; Reserved: 29360128; time used = 5.583076000213623s
epoch 20: train_loss: 0.69841; Allocated: 630784; Reserved: 29360128; time used = 5.683708190917969s
epoch 25: train_loss: 0.69435; Allocated: 630784; Reserved: 29360128; time used = 5.625070095062256s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 37.05793595314026.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3002.34it/s] 82%|████████▏ | 1645/2000 [00:00<00:00, 3825.36it/s]100%|██████████| 2000/2000 [00:00<00:00, 6113.34it/s]Killed
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3054.34it/s] 83%|████████▎ | 1659/2000 [00:00<00:00, 3889.58it/s]100%|██████████| 2000/2000 [00:00<00:00, 6195.95it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3779584; Reserved: 29360128; time used = 109.17205023765564s
epoch 10: train_loss: 0.69314; Allocated: 3779584; Reserved: 31457280; time used = 109.9650673866272s
epoch 15: train_loss: 0.69314; Allocated: 3779584; Reserved: 29360128; time used = 110.91144585609436s
epoch 20: train_loss: 0.69314; Allocated: 3779584; Reserved: 31457280; time used = 110.5114951133728s
epoch 25: train_loss: 0.69314; Allocated: 3779584; Reserved: 29360128; time used = 108.87532544136047s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 552.9880785942078.
Training classifier using 80.00% nodes...
{'micro': 0.7250000000000001, 'macro': 0.723228663446055, 'samples': 0.725, 'weighted': 0.7225644122383256, 'accuracy': 0.725}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2942.12it/s] 83%|████████▎ | 1652/2000 [00:00<00:00, 3759.35it/s]100%|██████████| 2000/2000 [00:00<00:00, 6051.09it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3973632; Reserved: 29360128; time used = 1131.5460543632507s
epoch 10: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1198.3762443065643s
epoch 15: train_loss: 0.69315; Allocated: 3973632; Reserved: 29360128; time used = 1257.2602214813232s
epoch 20: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1265.061362504959s
epoch 25: train_loss: 0.69315; Allocated: 3973632; Reserved: 29360128; time used = 1257.877201795578s
epoch 30: train_loss: 0.69315; Allocated: 3973632; Reserved: 29360128; time used = 1257.0442640781403s
epoch 35: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1257.8638215065002s
epoch 40: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1292.597401857376s
epoch 45: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1291.749204158783s
epoch 50: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1284.2054817676544s
epoch 55: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1280.0911271572113s
epoch 60: train_loss: 0.69315; Allocated: 3973632; Reserved: 29360128; time used = 1309.648376941681s
epoch 65: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1279.2355661392212s
epoch 70: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1309.1162068843842s
epoch 75: train_loss: 0.69315; Allocated: 3973632; Reserved: 29360128; time used = 1291.2575378417969s
epoch 80: train_loss: 0.69315; Allocated: 3973632; Reserved: 29360128; time used = 1182.3087210655212s
epoch 85: train_loss: 0.69315; Allocated: 3973632; Reserved: 33554432; time used = 1171.9443962574005s
epoch 90: train_loss: 0.69315; Allocated: 3973632; Reserved: 29360128; time used = 1175.3206279277802s
epoch 95: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1177.676421880722s
epoch 100: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1176.964420080185s
epoch 105: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1158.750242471695s
epoch 110: train_loss: 0.69315; Allocated: 3973632; Reserved: 29360128; time used = 1155.711416721344s
epoch 115: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1169.8321034908295s
epoch 120: train_loss: 0.69315; Allocated: 3973632; Reserved: 29360128; time used = 1175.369734287262s
epoch 125: train_loss: 0.69315; Allocated: 3973632; Reserved: 33554432; time used = 1194.4869973659515s
epoch 130: train_loss: 0.69315; Allocated: 3973632; Reserved: 31457280; time used = 1181.740084886551s
epoch 135: train_loss: 0.69315; Allocated: 3973632; Reserved: 33554432; time used = 1179.8642847537994s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 34001.65824961662.
Training classifier using 80.00% nodes...
{'micro': 0.7325, 'macro': 0.7318950882929611, 'samples': 0.7325, 'weighted': 0.7315130387937785, 'accuracy': 0.7325}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2308.09it/s]100%|██████████| 1000/1000 [00:00<00:00, 3447.21it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.68398; Allocated: 495104; Reserved: 10485760; time used = 201.17630219459534s
epoch 10: train_loss: 0.67235; Allocated: 495104; Reserved: 8388608; time used = 201.90931391716003s
epoch 15: train_loss: 0.64222; Allocated: 495104; Reserved: 8388608; time used = 198.64255380630493s
epoch 20: train_loss: 0.61150; Allocated: 495104; Reserved: 8388608; time used = 196.98124861717224s
epoch 25: train_loss: 0.61877; Allocated: 495104; Reserved: 10485760; time used = 195.94981837272644s
epoch 30: train_loss: 0.59240; Allocated: 495104; Reserved: 8388608; time used = 201.51776909828186s
epoch 35: train_loss: 0.30919; Allocated: 495104; Reserved: 8388608; time used = 199.39208340644836s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1514.2251601219177.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.51791; Allocated: 40697856; Reserved: 65011712; time used = 3.890836238861084s
epoch 10: train_loss: 0.38899; Allocated: 40697856; Reserved: 65011712; time used = 3.7368686199188232s
epoch 15: train_loss: 0.25103; Allocated: 40697856; Reserved: 65011712; time used = 3.8204026222229004s
epoch 20: train_loss: 0.13532; Allocated: 40697856; Reserved: 65011712; time used = 3.6999263763427734s
epoch 25: train_loss: 0.09897; Allocated: 40697856; Reserved: 65011712; time used = 3.8066043853759766s
epoch 30: train_loss: 0.07106; Allocated: 40697856; Reserved: 65011712; time used = 3.70135235786438s
epoch 35: train_loss: 0.09185; Allocated: 40697856; Reserved: 65011712; time used = 3.8274378776550293s
epoch 40: train_loss: 0.08704; Allocated: 40697856; Reserved: 65011712; time used = 3.807901620864868s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 37.534467458724976.
Training classifier using 20.00% nodes...
{'micro': 0.694750855838722, 'macro': 0.6940197985524783, 'samples': 0.694750855838722, 'weighted': 0.6929372776471022, 'accuracy': 0.694750855838722}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.33248; Allocated: 53415424; Reserved: 109051904; time used = 4.292565107345581s
epoch 10: train_loss: 0.18780; Allocated: 53415424; Reserved: 109051904; time used = 4.459391832351685s
epoch 15: train_loss: 0.12045; Allocated: 53415424; Reserved: 109051904; time used = 4.270299673080444s
epoch 20: train_loss: 0.06643; Allocated: 53415424; Reserved: 109051904; time used = 4.483565807342529s
epoch 25: train_loss: 0.04099; Allocated: 53415424; Reserved: 109051904; time used = 4.302929162979126s
epoch 30: train_loss: 0.03324; Allocated: 53415424; Reserved: 109051904; time used = 4.2887351512908936s
epoch 35: train_loss: 0.03778; Allocated: 53415424; Reserved: 109051904; time used = 4.488252878189087s
epoch 40: train_loss: 0.02042; Allocated: 53415424; Reserved: 109051904; time used = 4.4156739711761475s
epoch 45: train_loss: 0.01974; Allocated: 53415424; Reserved: 109051904; time used = 4.455590009689331s
epoch 50: train_loss: 0.00588; Allocated: 53415424; Reserved: 109051904; time used = 4.2843286991119385s
epoch 55: train_loss: 0.00559; Allocated: 53415424; Reserved: 109051904; time used = 4.4094908237457275s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 53.22205829620361.
Training classifier using 20.00% nodes...
{'micro': 0.4933085501858736, 'macro': 0.4297877882349435, 'samples': 0.49849737039819686, 'weighted': 0.4767009295089949, 'accuracy': 0.49849737039819686}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.44923; Allocated: 53491712; Reserved: 109051904; time used = 3.926218271255493s
epoch 10: train_loss: 0.28324; Allocated: 53491712; Reserved: 109051904; time used = 4.0847437381744385s
epoch 15: train_loss: 0.15239; Allocated: 53491712; Reserved: 109051904; time used = 3.920759439468384s
epoch 20: train_loss: 0.11802; Allocated: 53491712; Reserved: 109051904; time used = 3.918665647506714s
epoch 25: train_loss: 0.04952; Allocated: 53491712; Reserved: 109051904; time used = 4.083539962768555s
epoch 30: train_loss: 0.07196; Allocated: 53491712; Reserved: 109051904; time used = 3.8911657333374023s
epoch 35: train_loss: 0.02803; Allocated: 53491712; Reserved: 109051904; time used = 3.9385018348693848s
epoch 40: train_loss: 0.05448; Allocated: 53491712; Reserved: 109051904; time used = 4.078050136566162s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 36.47818088531494.
Training classifier using 20.00% nodes...
{'micro': 0.5605947955390336, 'macro': 0.5026758450616272, 'samples': 0.5664913598797896, 'weighted': 0.5470078909277836, 'accuracy': 0.5664913598797896}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2670.16it/s] 81%|████████  | 1617/2000 [00:00<00:00, 3434.28it/s]100%|██████████| 2000/2000 [00:00<00:00, 5643.77it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 183.81173; Allocated: 4120576; Reserved: 33554432; time used = 84.5860493183136s
epoch 10: train_loss: 38.86789; Allocated: 4120576; Reserved: 33554432; time used = 84.4108498096466s
epoch 15: train_loss: 4.90228; Allocated: 4120576; Reserved: 33554432; time used = 83.95334720611572s
epoch 20: train_loss: 1.40712; Allocated: 4120576; Reserved: 33554432; time used = 84.68972158432007s
epoch 25: train_loss: 1.38758; Allocated: 4120576; Reserved: 33554432; time used = 84.52818202972412s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 460.639342546463.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Killed
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2902.79it/s] 82%|████████▎ | 1650/2000 [00:00<00:00, 3713.61it/s]100%|██████████| 2000/2000 [00:00<00:00, 5991.42it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.65817; Allocated: 3923456; Reserved: 29360128; time used = 129.73410034179688s
epoch 10: train_loss: 0.32178; Allocated: 3923456; Reserved: 29360128; time used = 126.3323426246643s
epoch 15: train_loss: 0.04188; Allocated: 3923456; Reserved: 29360128; time used = 128.49004936218262s
epoch 20: train_loss: 0.01216; Allocated: 3923456; Reserved: 31457280; time used = 127.4154725074768s
epoch 25: train_loss: 0.00630; Allocated: 3923456; Reserved: 29360128; time used = 125.6863169670105s
epoch 30: train_loss: 0.00537; Allocated: 3923456; Reserved: 29360128; time used = 127.4089150428772s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 795.5739412307739.
Training classifier using 80.00% nodes...
{'micro': 0.6575, 'macro': 0.630027207853145, 'samples': 0.6575, 'weighted': 0.6270026802773445, 'accuracy': 0.6575}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.41541; Allocated: 53557248; Reserved: 109051904; time used = 5.063026428222656s
epoch 10: train_loss: 0.24072; Allocated: 53557248; Reserved: 109051904; time used = 5.219165086746216s
epoch 15: train_loss: 0.17730; Allocated: 53557248; Reserved: 109051904; time used = 4.961567401885986s
epoch 20: train_loss: 0.12343; Allocated: 53557248; Reserved: 109051904; time used = 4.956069469451904s
epoch 25: train_loss: 0.07899; Allocated: 53557248; Reserved: 109051904; time used = 5.186220645904541s
epoch 30: train_loss: 0.05501; Allocated: 53557248; Reserved: 109051904; time used = 5.006981134414673s
epoch 35: train_loss: 0.01243; Allocated: 53557248; Reserved: 109051904; time used = 5.1073317527771s
epoch 40: train_loss: 0.00736; Allocated: 53557248; Reserved: 109051904; time used = 4.919949531555176s
epoch 45: train_loss: 0.00115; Allocated: 53557248; Reserved: 109051904; time used = 4.925436735153198s
epoch 50: train_loss: 0.00200; Allocated: 53557248; Reserved: 109051904; time used = 4.960257053375244s
epoch 55: train_loss: 0.03140; Allocated: 53557248; Reserved: 109051904; time used = 5.537692070007324s
epoch 60: train_loss: 0.00082; Allocated: 53557248; Reserved: 109051904; time used = 5.425338506698608s
epoch 65: train_loss: 0.00766; Allocated: 53557248; Reserved: 109051904; time used = 5.2499611377716064s
epoch 70: train_loss: 0.01299; Allocated: 53557248; Reserved: 109051904; time used = 5.0288987159729s
epoch 75: train_loss: 0.03376; Allocated: 53557248; Reserved: 109051904; time used = 5.018262147903442s
epoch 80: train_loss: 0.01366; Allocated: 53557248; Reserved: 109051904; time used = 5.1630260944366455s
epoch 85: train_loss: 0.12106; Allocated: 53557248; Reserved: 109051904; time used = 5.020183801651001s
epoch 90: train_loss: 0.00002; Allocated: 53557248; Reserved: 109051904; time used = 5.016867637634277s
epoch 95: train_loss: 0.00224; Allocated: 53557248; Reserved: 109051904; time used = 5.126094579696655s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 101.56304669380188.
Training classifier using 20.00% nodes...
{'micro': 0.5289962825278811, 'macro': 0.43722671262521545, 'samples': 0.5345604808414726, 'weighted': 0.4878263458000442, 'accuracy': 0.5345604808414726}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38876; Allocated: 1148928; Reserved: 6291456; time used = 1.263007640838623s
epoch 10: train_loss: 1.37361; Allocated: 1148928; Reserved: 8388608; time used = 1.3171019554138184s
epoch 15: train_loss: 1.36347; Allocated: 1148928; Reserved: 6291456; time used = 1.2337791919708252s
epoch 20: train_loss: 1.35957; Allocated: 1148928; Reserved: 6291456; time used = 1.3196418285369873s
epoch 25: train_loss: 1.36336; Allocated: 1148928; Reserved: 6291456; time used = 1.3185036182403564s
epoch 30: train_loss: 1.35642; Allocated: 1148928; Reserved: 6291456; time used = 1.367046594619751s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.180536270141602.
Training classifier using 80.00% nodes...
{'micro': 0.5217391304347826, 'macro': 0.46761748889408467, 'samples': 0.5217391304347826, 'weighted': 0.47991786197151604, 'accuracy': 0.5217391304347826}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.54379; Allocated: 573952; Reserved: 4194304; time used = 3.0034337043762207s
epoch 10: train_loss: 0.34929; Allocated: 573952; Reserved: 4194304; time used = 2.9952874183654785s
epoch 15: train_loss: 0.18186; Allocated: 573952; Reserved: 4194304; time used = 3.1490211486816406s
epoch 20: train_loss: 0.15313; Allocated: 573952; Reserved: 4194304; time used = 3.0171499252319336s
epoch 25: train_loss: 0.09437; Allocated: 573952; Reserved: 4194304; time used = 3.0115127563476562s
epoch 30: train_loss: 0.11066; Allocated: 573952; Reserved: 4194304; time used = 3.150749683380127s
epoch 35: train_loss: 0.14246; Allocated: 573952; Reserved: 4194304; time used = 3.0044729709625244s
epoch 40: train_loss: 0.12299; Allocated: 573952; Reserved: 4194304; time used = 3.020103931427002s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 30.61220669746399.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.50378; Allocated: 17670144; Reserved: 69206016; time used = 0.311629056930542s
epoch 10: train_loss: 0.25660; Allocated: 17670144; Reserved: 69206016; time used = 0.2942187786102295s
epoch 15: train_loss: 0.21158; Allocated: 17670144; Reserved: 69206016; time used = 0.29106640815734863s
epoch 20: train_loss: 0.18313; Allocated: 17670144; Reserved: 69206016; time used = 0.296414852142334s
epoch 25: train_loss: 0.17190; Allocated: 17670144; Reserved: 69206016; time used = 0.29546046257019043s
epoch 30: train_loss: 0.16312; Allocated: 17670144; Reserved: 69206016; time used = 0.2932579517364502s
epoch 35: train_loss: 0.16070; Allocated: 17670144; Reserved: 69206016; time used = 0.2877981662750244s
epoch 40: train_loss: 0.15578; Allocated: 17670144; Reserved: 69206016; time used = 0.28308701515197754s
epoch 45: train_loss: 0.15599; Allocated: 17670144; Reserved: 69206016; time used = 0.27881336212158203s
epoch 50: train_loss: 0.15334; Allocated: 17670144; Reserved: 69206016; time used = 0.27974796295166016s
epoch 55: train_loss: 0.15180; Allocated: 17670144; Reserved: 69206016; time used = 0.27445149421691895s
epoch 60: train_loss: 0.15385; Allocated: 17670144; Reserved: 69206016; time used = 0.27736663818359375s
epoch 65: train_loss: 0.14805; Allocated: 17670144; Reserved: 69206016; time used = 0.28998255729675293s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.547494411468506.
Training classifier using 20.00% nodes...
{'micro': 0.7397323488694048, 'macro': 0.7166184544712281, 'samples': 0.7397323488694048, 'weighted': 0.7354577609088602, 'accuracy': 0.7397323488694048}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.35631; Allocated: 455168; Reserved: 4194304; time used = 3.1072375774383545s
epoch 10: train_loss: 1.29847; Allocated: 455168; Reserved: 4194304; time used = 3.082838296890259s
epoch 15: train_loss: 1.26925; Allocated: 455168; Reserved: 4194304; time used = 3.214503288269043s
epoch 20: train_loss: 1.25223; Allocated: 455168; Reserved: 4194304; time used = 3.0917882919311523s
epoch 25: train_loss: 1.24502; Allocated: 455168; Reserved: 4194304; time used = 3.1092123985290527s
epoch 30: train_loss: 1.22959; Allocated: 455168; Reserved: 4194304; time used = 3.2717456817626953s
epoch 35: train_loss: 1.22986; Allocated: 455168; Reserved: 4194304; time used = 3.006747245788574s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 27.427014350891113.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7414965986394557, 'samples': 0.7631578947368421, 'weighted': 0.7533118510562119, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.25745; Allocated: 41490432; Reserved: 62914560; time used = 3.235400676727295s
epoch 10: train_loss: 1.07607; Allocated: 41490432; Reserved: 65011712; time used = 3.366565465927124s
epoch 15: train_loss: 0.99154; Allocated: 41490432; Reserved: 62914560; time used = 3.272470474243164s
epoch 20: train_loss: 0.92729; Allocated: 41490432; Reserved: 62914560; time used = 3.2962112426757812s
epoch 25: train_loss: 0.94386; Allocated: 41490432; Reserved: 62914560; time used = 3.232222557067871s
epoch 30: train_loss: 0.99419; Allocated: 41490432; Reserved: 65011712; time used = 3.3693275451660156s
epoch 35: train_loss: 0.96925; Allocated: 41490432; Reserved: 62914560; time used = 3.2279865741729736s
epoch 40: train_loss: 0.94231; Allocated: 41490432; Reserved: 65011712; time used = 3.364901304244995s
epoch 45: train_loss: 0.94664; Allocated: 41490432; Reserved: 62914560; time used = 3.1951990127563477s
epoch 50: train_loss: 0.93845; Allocated: 41490432; Reserved: 65011712; time used = 3.4523017406463623s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 38.16587734222412.
Training classifier using 20.00% nodes...
{'micro': 0.597312032458476, 'macro': 0.595461239699127, 'samples': 0.597312032458476, 'weighted': 0.5968682519726534, 'accuracy': 0.597312032458476}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.64240; Allocated: 843776; Reserved: 4194304; time used = 0.8756320476531982s
epoch 10: train_loss: 0.63236; Allocated: 843776; Reserved: 6291456; time used = 0.9004430770874023s
epoch 15: train_loss: 0.63292; Allocated: 843776; Reserved: 6291456; time used = 0.9083478450775146s
epoch 20: train_loss: 0.61582; Allocated: 843776; Reserved: 4194304; time used = 1.1879985332489014s
epoch 25: train_loss: 0.61901; Allocated: 843776; Reserved: 4194304; time used = 0.9111640453338623s
epoch 30: train_loss: 0.58901; Allocated: 843776; Reserved: 4194304; time used = 0.9039239883422852s
epoch 35: train_loss: 0.57354; Allocated: 843776; Reserved: 4194304; time used = 1.0635607242584229s
epoch 40: train_loss: 0.57594; Allocated: 843776; Reserved: 4194304; time used = 0.9027609825134277s
epoch 45: train_loss: 0.53123; Allocated: 843776; Reserved: 4194304; time used = 0.988896369934082s
epoch 50: train_loss: 0.50617; Allocated: 843776; Reserved: 4194304; time used = 1.1119232177734375s
epoch 55: train_loss: 0.53476; Allocated: 843776; Reserved: 4194304; time used = 0.9052488803863525s
epoch 60: train_loss: 0.55140; Allocated: 843776; Reserved: 4194304; time used = 0.9039797782897949s
epoch 65: train_loss: 0.55211; Allocated: 843776; Reserved: 4194304; time used = 0.9527246952056885s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.285948038101196.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.6057142857142858, 'samples': 0.6086956521739131, 'weighted': 0.6081987577639751, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2663.78it/s]100%|██████████| 1000/1000 [00:00<00:00, 3899.80it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.66369; Allocated: 783360; Reserved: 4194304; time used = 4.725180625915527s
epoch 10: train_loss: 1.47311; Allocated: 783360; Reserved: 4194304; time used = 4.9232497215271s
epoch 15: train_loss: 1.40958; Allocated: 783360; Reserved: 4194304; time used = 4.952099561691284s
epoch 20: train_loss: 1.36555; Allocated: 783360; Reserved: 4194304; time used = 4.907899618148804s
epoch 25: train_loss: 1.39606; Allocated: 783360; Reserved: 4194304; time used = 4.741746664047241s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.02962017059326.
Training classifier using 80.00% nodes...
{'micro': 0.6376811594202898, 'macro': 0.6349206349206349, 'samples': 0.6376811594202898, 'weighted': 0.6372210720036807, 'accuracy': 0.6376811594202898}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 15.62163; Allocated: 994304; Reserved: 8388608; time used = 2.02817440032959s
epoch 10: train_loss: 13.07264; Allocated: 994304; Reserved: 8388608; time used = 1.9879448413848877s
epoch 15: train_loss: 5.69352; Allocated: 994304; Reserved: 8388608; time used = 1.9773383140563965s
epoch 20: train_loss: 2.65153; Allocated: 994304; Reserved: 8388608; time used = 1.9920625686645508s
epoch 25: train_loss: 2.34127; Allocated: 994304; Reserved: 8388608; time used = 1.9481921195983887s
epoch 30: train_loss: 1.92108; Allocated: 994304; Reserved: 8388608; time used = 2.023615837097168s
epoch 35: train_loss: 1.61167; Allocated: 994304; Reserved: 8388608; time used = 2.008681297302246s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 18.105717420578003.
Training classifier using 80.00% nodes...
{'micro': 0.6231884057971014, 'macro': 0.6166666666666667, 'samples': 0.6231884057971014, 'weighted': 0.6202898550724637, 'accuracy': 0.6231884057971014}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.57239; Allocated: 780800; Reserved: 4194304; time used = 0.9401600360870361s
epoch 10: train_loss: 0.44363; Allocated: 780800; Reserved: 6291456; time used = 0.9444284439086914s
epoch 15: train_loss: 0.24013; Allocated: 780800; Reserved: 4194304; time used = 1.0110282897949219s
epoch 20: train_loss: 0.07858; Allocated: 780800; Reserved: 4194304; time used = 0.9660089015960693s
epoch 25: train_loss: 0.06516; Allocated: 780800; Reserved: 4194304; time used = 0.9470860958099365s
epoch 30: train_loss: 0.00781; Allocated: 780800; Reserved: 4194304; time used = 1.003288984298706s
epoch 35: train_loss: 0.00230; Allocated: 780800; Reserved: 4194304; time used = 1.078467607498169s
epoch 40: train_loss: 0.00190; Allocated: 780800; Reserved: 4194304; time used = 0.9925575256347656s
epoch 45: train_loss: 0.00231; Allocated: 780800; Reserved: 4194304; time used = 0.9780189990997314s
epoch 50: train_loss: 0.00068; Allocated: 780800; Reserved: 4194304; time used = 0.8953092098236084s
epoch 55: train_loss: 0.05616; Allocated: 780800; Reserved: 4194304; time used = 0.8890106678009033s
epoch 60: train_loss: 0.00919; Allocated: 780800; Reserved: 4194304; time used = 0.8976056575775146s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.652924537658691.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5071428571428571, 'samples': 0.5942028985507246, 'weighted': 0.5221532091097308, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.59226; Allocated: 716288; Reserved: 4194304; time used = 0.9955422878265381s
epoch 10: train_loss: 0.47785; Allocated: 716288; Reserved: 4194304; time used = 0.979381799697876s
epoch 15: train_loss: 0.29971; Allocated: 716288; Reserved: 4194304; time used = 0.9241459369659424s
epoch 20: train_loss: 0.21430; Allocated: 716288; Reserved: 4194304; time used = 0.9649462699890137s
epoch 25: train_loss: 0.18368; Allocated: 716288; Reserved: 4194304; time used = 0.9852855205535889s
epoch 30: train_loss: 0.13257; Allocated: 716288; Reserved: 4194304; time used = 0.95638108253479s
epoch 35: train_loss: 0.19680; Allocated: 716288; Reserved: 4194304; time used = 0.9996240139007568s
epoch 40: train_loss: 0.05487; Allocated: 716288; Reserved: 4194304; time used = 0.9855875968933105s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.275256633758545.
Training classifier using 80.00% nodes...
{'micro': 0.7894736842105263, 'macro': 0.7661538461538462, 'samples': 0.7894736842105263, 'weighted': 0.7778137651821863, 'accuracy': 0.7894736842105263}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2806.53it/s]100%|██████████| 1000/1000 [00:00<00:00, 4082.65it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.48467; Allocated: 419328; Reserved: 4194304; time used = 35.07329726219177s
epoch 10: train_loss: 1.41952; Allocated: 419328; Reserved: 4194304; time used = 35.23492455482483s
epoch 15: train_loss: 1.39854; Allocated: 419328; Reserved: 6291456; time used = 35.14506673812866s
epoch 20: train_loss: 1.39127; Allocated: 419328; Reserved: 6291456; time used = 35.25854158401489s
epoch 25: train_loss: 1.38807; Allocated: 419328; Reserved: 6291456; time used = 35.226593017578125s
epoch 30: train_loss: 1.38760; Allocated: 419328; Reserved: 4194304; time used = 34.85227560997009s
epoch 35: train_loss: 1.38720; Allocated: 419328; Reserved: 6291456; time used = 35.25773739814758s
epoch 40: train_loss: 1.38685; Allocated: 419328; Reserved: 4194304; time used = 35.274818420410156s
epoch 45: train_loss: 1.38658; Allocated: 419328; Reserved: 8388608; time used = 35.3466157913208s
epoch 50: train_loss: 1.38644; Allocated: 419328; Reserved: 4194304; time used = 35.278218507766724s
epoch 55: train_loss: 1.38637; Allocated: 419328; Reserved: 4194304; time used = 35.19201421737671s
epoch 60: train_loss: 1.38634; Allocated: 419328; Reserved: 6291456; time used = 34.98438501358032s
epoch 65: train_loss: 1.38633; Allocated: 419328; Reserved: 4194304; time used = 35.154052734375s
epoch 70: train_loss: 1.38632; Allocated: 419328; Reserved: 4194304; time used = 35.048012256622314s
epoch 75: train_loss: 1.38631; Allocated: 419328; Reserved: 8388608; time used = 35.435117959976196s
epoch 80: train_loss: 1.38631; Allocated: 419328; Reserved: 4194304; time used = 35.49899435043335s
epoch 85: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.62068581581116s
epoch 90: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 35.35079264640808s
epoch 95: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.558387756347656s
epoch 100: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.557220220565796s
epoch 105: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.56857657432556s
epoch 110: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 36.10278034210205s
epoch 115: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.238255977630615s
epoch 120: train_loss: 1.38630; Allocated: 419328; Reserved: 6291456; time used = 35.356605768203735s
epoch 125: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.402512073516846s
epoch 130: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.42928433418274s
epoch 135: train_loss: 1.38630; Allocated: 419328; Reserved: 6291456; time used = 35.442931175231934s
epoch 140: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.24651336669922s
epoch 145: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.283732652664185s
epoch 150: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.29941177368164s
epoch 155: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.53814744949341s
epoch 160: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 36.87458086013794s
epoch 165: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.21467590332031s
epoch 170: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 35.563387632369995s
epoch 175: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.0769476890564s
epoch 180: train_loss: 1.38630; Allocated: 419328; Reserved: 6291456; time used = 35.17404913902283s
epoch 185: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.245861530303955s
epoch 190: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.196093797683716s
epoch 195: train_loss: 1.38630; Allocated: 419328; Reserved: 6291456; time used = 35.69059228897095s
epoch 200: train_loss: 1.38629; Allocated: 419328; Reserved: 4194304; time used = 35.188435554504395s
epoch 205: train_loss: 1.38630; Allocated: 419328; Reserved: 6291456; time used = 35.11595416069031s
epoch 210: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.224602699279785s
epoch 215: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.42791271209717s
epoch 220: train_loss: 1.38630; Allocated: 419328; Reserved: 6291456; time used = 35.470454692840576s
epoch 225: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.27001595497131s
epoch 230: train_loss: 1.38630; Allocated: 419328; Reserved: 4194304; time used = 35.39206910133362s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1658.4911942481995.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2718.02it/s]100%|██████████| 1000/1000 [00:00<00:00, 3973.91it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69313; Allocated: 489984; Reserved: 6291456; time used = 35.79291534423828s
epoch 10: train_loss: 0.69283; Allocated: 489984; Reserved: 6291456; time used = 35.67057824134827s
epoch 15: train_loss: 0.69254; Allocated: 489984; Reserved: 6291456; time used = 35.50247502326965s
epoch 20: train_loss: 0.68415; Allocated: 489984; Reserved: 8388608; time used = 35.49760293960571s
epoch 25: train_loss: 0.68241; Allocated: 489984; Reserved: 6291456; time used = 35.45882797241211s
epoch 30: train_loss: 0.63422; Allocated: 489984; Reserved: 6291456; time used = 35.348642110824585s
epoch 35: train_loss: 0.62641; Allocated: 489984; Reserved: 6291456; time used = 35.115468978881836s
epoch 40: train_loss: 0.52877; Allocated: 489984; Reserved: 6291456; time used = 35.10116004943848s
epoch 45: train_loss: 0.48771; Allocated: 489984; Reserved: 8388608; time used = 35.4280366897583s
epoch 50: train_loss: 0.47747; Allocated: 489984; Reserved: 6291456; time used = 35.36571955680847s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 372.24539828300476.
Training classifier using 80.00% nodes...
{'micro': 0.695, 'macro': 0.6949923748093703, 'samples': 0.695, 'weighted': 0.6950228755718894, 'accuracy': 0.695}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2827.89it/s] 82%|████████▎ | 1650/2000 [00:00<00:00, 3627.58it/s]100%|██████████| 2000/2000 [00:00<00:00, 5902.55it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.69325; Allocated: 4264448; Reserved: 31457280; time used = 331.8867037296295s
epoch 10: train_loss: 0.69313; Allocated: 4264448; Reserved: 31457280; time used = 332.95886063575745s
epoch 15: train_loss: 0.69314; Allocated: 4264448; Reserved: 31457280; time used = 332.22349190711975s
epoch 20: train_loss: 0.69319; Allocated: 4264448; Reserved: 31457280; time used = 332.9336552619934s
epoch 25: train_loss: 0.69318; Allocated: 4264448; Reserved: 31457280; time used = 332.4895529747009s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1734.278710603714.
Training classifier using 80.00% nodes...
{'micro': 0.58, 'macro': 0.5703324808184143, 'samples': 0.58, 'weighted': 0.5683989769820972, 'accuracy': 0.58}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2719.21it/s]100%|██████████| 1500/1500 [00:00<00:00, 5057.75it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 557056; Reserved: 8388608; time used = 210.36911416053772s
epoch 10: train_loss: 0.69311; Allocated: 557056; Reserved: 8388608; time used = 207.8461525440216s
epoch 15: train_loss: 0.69233; Allocated: 557056; Reserved: 8388608; time used = 208.54983735084534s
epoch 20: train_loss: 0.68900; Allocated: 557056; Reserved: 8388608; time used = 211.2948169708252s
epoch 25: train_loss: 0.66660; Allocated: 557056; Reserved: 8388608; time used = 206.1093888282776s
epoch 30: train_loss: 0.68001; Allocated: 557056; Reserved: 10485760; time used = 207.10579776763916s
epoch 35: train_loss: 0.59636; Allocated: 557056; Reserved: 8388608; time used = 209.89357447624207s
epoch 40: train_loss: 0.46146; Allocated: 557056; Reserved: 8388608; time used = 212.32602739334106s
epoch 45: train_loss: 0.58870; Allocated: 557056; Reserved: 8388608; time used = 219.78657579421997s
epoch 50: train_loss: 0.43140; Allocated: 557056; Reserved: 8388608; time used = 213.4257836341858s
epoch 55: train_loss: 0.41750; Allocated: 557056; Reserved: 8388608; time used = 212.22166228294373s
epoch 60: train_loss: 0.41199; Allocated: 557056; Reserved: 8388608; time used = 211.54196286201477s
epoch 65: train_loss: 0.40196; Allocated: 557056; Reserved: 8388608; time used = 217.7563281059265s
epoch 70: train_loss: 0.41417; Allocated: 557056; Reserved: 10485760; time used = 222.99887228012085s
epoch 75: train_loss: 0.40136; Allocated: 557056; Reserved: 8388608; time used = 214.20588636398315s
epoch 80: train_loss: 0.40309; Allocated: 557056; Reserved: 8388608; time used = 214.16790223121643s
epoch 85: train_loss: 0.39516; Allocated: 557056; Reserved: 8388608; time used = 212.3418323993683s
epoch 90: train_loss: 0.38930; Allocated: 557056; Reserved: 8388608; time used = 214.7405388355255s
epoch 95: train_loss: 0.38873; Allocated: 557056; Reserved: 8388608; time used = 217.97381615638733s
epoch 100: train_loss: 0.38417; Allocated: 557056; Reserved: 8388608; time used = 215.94803190231323s
epoch 105: train_loss: 0.38080; Allocated: 557056; Reserved: 8388608; time used = 211.89655447006226s
epoch 110: train_loss: 0.38298; Allocated: 557056; Reserved: 8388608; time used = 208.97961139678955s
epoch 115: train_loss: 0.37897; Allocated: 557056; Reserved: 8388608; time used = 211.61829805374146s
epoch 120: train_loss: 0.37688; Allocated: 557056; Reserved: 8388608; time used = 213.83853721618652s
epoch 125: train_loss: 0.38187; Allocated: 557056; Reserved: 8388608; time used = 223.5655300617218s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 5510.801162958145.
Training classifier using 80.00% nodes...
{'micro': 0.47333333333333333, 'macro': 0.4099176892390042, 'samples': 0.47333333333333333, 'weighted': 0.4012723324748775, 'accuracy': 0.47333333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2871.31it/s]100%|██████████| 1000/1000 [00:00<00:00, 4153.01it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.48467; Allocated: 419328; Reserved: 8388608; time used = 215.01734805107117s
epoch 10: train_loss: 1.41952; Allocated: 419328; Reserved: 8388608; time used = 218.5205316543579s
epoch 15: train_loss: 1.39854; Allocated: 419328; Reserved: 8388608; time used = 203.06321597099304s
epoch 20: train_loss: 1.39127; Allocated: 419328; Reserved: 8388608; time used = 196.2701017856598s
epoch 25: train_loss: 1.38807; Allocated: 419328; Reserved: 8388608; time used = 195.3082811832428s
epoch 30: train_loss: 1.38760; Allocated: 419328; Reserved: 10485760; time used = 199.19291520118713s
epoch 35: train_loss: 1.38720; Allocated: 419328; Reserved: 8388608; time used = 206.9417908191681s
epoch 40: train_loss: 1.38685; Allocated: 419328; Reserved: 8388608; time used = 198.87096548080444s
epoch 45: train_loss: 1.38658; Allocated: 419328; Reserved: 8388608; time used = 199.4285888671875s
epoch 50: train_loss: 1.38644; Allocated: 419328; Reserved: 8388608; time used = 203.59828639030457s
epoch 55: train_loss: 1.38637; Allocated: 419328; Reserved: 8388608; time used = 198.01295971870422s
epoch 60: train_loss: 1.38634; Allocated: 419328; Reserved: 8388608; time used = 199.09664630889893s
epoch 65: train_loss: 1.38633; Allocated: 419328; Reserved: 8388608; time used = 196.1990475654602s
epoch 70: train_loss: 1.38632; Allocated: 419328; Reserved: 8388608; time used = 201.18694233894348s
epoch 75: train_loss: 1.38631; Allocated: 419328; Reserved: 8388608; time used = 202.57853651046753s
epoch 80: train_loss: 1.38631; Allocated: 419328; Reserved: 8388608; time used = 194.23530554771423s
epoch 85: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 194.1787769794464s
epoch 90: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 191.98951292037964s
epoch 95: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 190.17813968658447s
epoch 100: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 192.04130148887634s
epoch 105: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 197.23677325248718s
epoch 110: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 190.42338824272156s
epoch 115: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 196.85500192642212s
epoch 120: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 194.40410780906677s
epoch 125: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 196.7462296485901s
epoch 130: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 194.17281818389893s
epoch 135: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 190.65026330947876s
epoch 140: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 197.08535051345825s
epoch 145: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 190.63387060165405s
epoch 150: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 189.6156632900238s
epoch 155: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 198.9500811100006s
epoch 160: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 203.2087118625641s
epoch 165: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 195.46356320381165s
epoch 170: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 195.11113500595093s
epoch 175: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 199.96828532218933s
epoch 180: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 195.72386002540588s
epoch 185: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 198.04324746131897s
epoch 190: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 198.60790085792542s
epoch 195: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 196.68777298927307s
epoch 200: train_loss: 1.38630; Allocated: 419328; Reserved: 8388608; time used = 193.79903626441956s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7951.753475427628.
Training classifier using 80.00% nodes...
{'micro': 0.47, 'macro': 0.468671679197995, 'samples': 0.47, 'weighted': 0.468140350877193, 'accuracy': 0.47}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2750.94it/s]100%|██████████| 1500/1500 [00:00<00:00, 5092.01it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 5267.20111; Allocated: 497152; Reserved: 4194304; time used = 12.047020196914673s
epoch 10: train_loss: 1823.71318; Allocated: 497152; Reserved: 6291456; time used = 12.11921501159668s
epoch 15: train_loss: 734.15430; Allocated: 497152; Reserved: 6291456; time used = 11.993139743804932s
epoch 20: train_loss: 313.19442; Allocated: 497152; Reserved: 4194304; time used = 12.099820613861084s
epoch 25: train_loss: 258.81716; Allocated: 497152; Reserved: 4194304; time used = 11.949896097183228s
epoch 30: train_loss: 98.10373; Allocated: 497152; Reserved: 6291456; time used = 12.044185638427734s
epoch 35: train_loss: 56.54532; Allocated: 497152; Reserved: 4194304; time used = 11.9058198928833s
epoch 40: train_loss: 43.18389; Allocated: 497152; Reserved: 6291456; time used = 12.061983346939087s
epoch 45: train_loss: 24.51905; Allocated: 497152; Reserved: 4194304; time used = 12.120561122894287s
epoch 50: train_loss: 11.16304; Allocated: 497152; Reserved: 4194304; time used = 12.01762342453003s
epoch 55: train_loss: 8.16290; Allocated: 497152; Reserved: 6291456; time used = 11.955315351486206s
epoch 60: train_loss: 6.62326; Allocated: 497152; Reserved: 6291456; time used = 12.078906297683716s
epoch 65: train_loss: 4.29882; Allocated: 497152; Reserved: 6291456; time used = 12.08126449584961s
epoch 70: train_loss: 3.05141; Allocated: 497152; Reserved: 6291456; time used = 12.033198833465576s
epoch 75: train_loss: 2.47169; Allocated: 497152; Reserved: 6291456; time used = 13.212431192398071s
epoch 80: train_loss: 2.20636; Allocated: 497152; Reserved: 4194304; time used = 12.512012958526611s
epoch 85: train_loss: 1.99220; Allocated: 497152; Reserved: 6291456; time used = 12.060385704040527s
epoch 90: train_loss: 1.70837; Allocated: 497152; Reserved: 4194304; time used = 12.200659275054932s
epoch 95: train_loss: 1.59752; Allocated: 497152; Reserved: 6291456; time used = 12.015153169631958s
epoch 100: train_loss: 1.54397; Allocated: 497152; Reserved: 4194304; time used = 12.075237035751343s
epoch 105: train_loss: 1.45035; Allocated: 497152; Reserved: 4194304; time used = 12.121732473373413s
epoch 110: train_loss: 1.44076; Allocated: 497152; Reserved: 6291456; time used = 12.097805738449097s
epoch 115: train_loss: 1.40034; Allocated: 497152; Reserved: 6291456; time used = 11.871832370758057s
epoch 120: train_loss: 1.36189; Allocated: 497152; Reserved: 6291456; time used = 12.001708507537842s
epoch 125: train_loss: 1.35436; Allocated: 497152; Reserved: 4194304; time used = 12.197786569595337s
epoch 130: train_loss: 1.33155; Allocated: 497152; Reserved: 6291456; time used = 12.132439613342285s
epoch 135: train_loss: 1.33189; Allocated: 497152; Reserved: 8388608; time used = 11.989065408706665s
epoch 140: train_loss: 1.29848; Allocated: 497152; Reserved: 8388608; time used = 12.15546703338623s
epoch 145: train_loss: 1.28430; Allocated: 497152; Reserved: 4194304; time used = 12.083495378494263s
epoch 150: train_loss: 1.27069; Allocated: 497152; Reserved: 6291456; time used = 12.108904361724854s
epoch 155: train_loss: 1.27007; Allocated: 497152; Reserved: 6291456; time used = 11.992709159851074s
epoch 160: train_loss: 1.28399; Allocated: 497152; Reserved: 4194304; time used = 12.075950622558594s
epoch 165: train_loss: 1.27046; Allocated: 497152; Reserved: 6291456; time used = 11.979686498641968s
epoch 170: train_loss: 1.25792; Allocated: 497152; Reserved: 6291456; time used = 11.951194047927856s
epoch 175: train_loss: 1.25350; Allocated: 497152; Reserved: 6291456; time used = 12.017200231552124s
epoch 180: train_loss: 1.25407; Allocated: 497152; Reserved: 6291456; time used = 12.089544534683228s
epoch 185: train_loss: 1.23984; Allocated: 497152; Reserved: 4194304; time used = 12.116687536239624s
epoch 190: train_loss: 1.23978; Allocated: 497152; Reserved: 4194304; time used = 11.974512577056885s
epoch 195: train_loss: 1.23306; Allocated: 497152; Reserved: 6291456; time used = 12.170364618301392s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 482.4855444431305.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.4470928207104616, 'samples': 0.49, 'weighted': 0.4396342345624301, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 21.55939; Allocated: 866816; Reserved: 6291456; time used = 0.9895110130310059s
epoch 10: train_loss: 7.47599; Allocated: 866816; Reserved: 6291456; time used = 0.9782629013061523s
epoch 15: train_loss: 3.54912; Allocated: 866816; Reserved: 6291456; time used = 1.0815870761871338s
epoch 20: train_loss: 1.78141; Allocated: 866816; Reserved: 6291456; time used = 1.1258735656738281s
epoch 25: train_loss: 0.87315; Allocated: 866816; Reserved: 6291456; time used = 1.0925841331481934s
epoch 30: train_loss: 0.87347; Allocated: 866816; Reserved: 6291456; time used = 1.1052320003509521s
epoch 35: train_loss: 0.77146; Allocated: 866816; Reserved: 6291456; time used = 0.9978659152984619s
epoch 40: train_loss: 0.63860; Allocated: 866816; Reserved: 6291456; time used = 0.9918429851531982s
epoch 45: train_loss: 0.50792; Allocated: 866816; Reserved: 6291456; time used = 1.0024688243865967s
epoch 50: train_loss: 0.45783; Allocated: 866816; Reserved: 6291456; time used = 0.9700226783752441s
epoch 55: train_loss: 0.41094; Allocated: 866816; Reserved: 6291456; time used = 0.9743585586547852s
epoch 60: train_loss: 0.41724; Allocated: 866816; Reserved: 6291456; time used = 0.9972410202026367s
epoch 65: train_loss: 0.40674; Allocated: 866816; Reserved: 6291456; time used = 0.9735090732574463s
epoch 70: train_loss: 0.35520; Allocated: 866816; Reserved: 6291456; time used = 0.9722530841827393s
epoch 75: train_loss: 0.32396; Allocated: 866816; Reserved: 6291456; time used = 0.97794508934021s
epoch 80: train_loss: 0.30049; Allocated: 866816; Reserved: 6291456; time used = 0.9725809097290039s
epoch 85: train_loss: 0.30407; Allocated: 866816; Reserved: 6291456; time used = 0.9839398860931396s
epoch 90: train_loss: 0.27413; Allocated: 866816; Reserved: 6291456; time used = 0.9703502655029297s
epoch 95: train_loss: 0.25443; Allocated: 866816; Reserved: 6291456; time used = 0.9732050895690918s
epoch 100: train_loss: 0.26034; Allocated: 866816; Reserved: 6291456; time used = 0.963890790939331s
epoch 105: train_loss: 0.23518; Allocated: 866816; Reserved: 6291456; time used = 0.9748508930206299s
epoch 110: train_loss: 0.22427; Allocated: 866816; Reserved: 6291456; time used = 0.9680435657501221s
epoch 115: train_loss: 0.22848; Allocated: 866816; Reserved: 6291456; time used = 0.9796023368835449s
epoch 120: train_loss: 0.27486; Allocated: 866816; Reserved: 6291456; time used = 0.9797310829162598s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.116339921951294.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8093189964157707, 'samples': 0.8157894736842105, 'weighted': 0.8148651197887191, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.67821; Allocated: 650240; Reserved: 27262976; time used = 1.1069200038909912s
epoch 10: train_loss: 0.63631; Allocated: 650240; Reserved: 27262976; time used = 1.1125385761260986s
epoch 15: train_loss: 0.59409; Allocated: 650240; Reserved: 6291456; time used = 1.1198065280914307s
epoch 20: train_loss: 0.58218; Allocated: 650240; Reserved: 6291456; time used = 1.1166632175445557s
epoch 25: train_loss: 0.55531; Allocated: 650240; Reserved: 6291456; time used = 1.1223340034484863s
epoch 30: train_loss: 0.54970; Allocated: 650240; Reserved: 6291456; time used = 1.1264042854309082s
epoch 35: train_loss: 0.54634; Allocated: 650240; Reserved: 6291456; time used = 1.1325063705444336s
epoch 40: train_loss: 0.53824; Allocated: 650240; Reserved: 6291456; time used = 1.116194725036621s
epoch 45: train_loss: 0.53639; Allocated: 650240; Reserved: 6291456; time used = 1.129091501235962s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 14.437346935272217.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7414965986394557, 'samples': 0.7631578947368421, 'weighted': 0.7533118510562119, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2778.83it/s]100%|██████████| 1500/1500 [00:00<00:00, 5140.49it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 71.75302; Allocated: 492544; Reserved: 4194304; time used = 12.251897811889648s
epoch 10: train_loss: 103.48471; Allocated: 492544; Reserved: 6291456; time used = 12.25999665260315s
epoch 15: train_loss: 36.39527; Allocated: 492544; Reserved: 6291456; time used = 12.262243270874023s
epoch 20: train_loss: 31.13169; Allocated: 492544; Reserved: 6291456; time used = 12.3996262550354s
epoch 25: train_loss: 7.70108; Allocated: 492544; Reserved: 6291456; time used = 12.334508419036865s
epoch 30: train_loss: 6.17922; Allocated: 492544; Reserved: 4194304; time used = 12.364738464355469s
epoch 35: train_loss: 3.84726; Allocated: 492544; Reserved: 4194304; time used = 12.179082870483398s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 92.43683195114136.
Training classifier using 80.00% nodes...
{'micro': 0.48, 'macro': 0.4597866113714937, 'samples': 0.48, 'weighted': 0.4539175413322357, 'accuracy': 0.48}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2756.70it/s]100%|██████████| 1000/1000 [00:00<00:00, 4008.66it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.29284; Allocated: 40774656; Reserved: 62914560; time used = 2.9216413497924805s
epoch 10: train_loss: 1.22307; Allocated: 40774656; Reserved: 62914560; time used = 3.0535309314727783s
epoch 15: train_loss: 1.25671; Allocated: 40774656; Reserved: 62914560; time used = 2.8744072914123535s
epoch 20: train_loss: 1.13602; Allocated: 40774656; Reserved: 62914560; time used = 3.088862180709839s
epoch 25: train_loss: 1.06222; Allocated: 40774656; Reserved: 62914560; time used = 2.904909372329712s
epoch 30: train_loss: 1.02796; Allocated: 40774656; Reserved: 65011712; time used = 3.1307528018951416s
epoch 35: train_loss: 1.06079; Allocated: 40774656; Reserved: 62914560; time used = 2.920281410217285s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.99002242088318.
Training classifier using 20.00% nodes...
{'micro': 0.7495879295042475, 'macro': 0.7454818561668054, 'samples': 0.7495879295042475, 'weighted': 0.7493960186947057, 'accuracy': 0.7495879295042475}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.32962; Allocated: 659968; Reserved: 6291456; time used = 4.373387813568115s
epoch 10: train_loss: 1.27822; Allocated: 659968; Reserved: 6291456; time used = 4.356114864349365s
epoch 15: train_loss: 1.24707; Allocated: 659968; Reserved: 6291456; time used = 4.499071836471558s
epoch 20: train_loss: 1.23409; Allocated: 659968; Reserved: 6291456; time used = 4.369264602661133s
epoch 25: train_loss: 1.24025; Allocated: 659968; Reserved: 6291456; time used = 4.357209205627441s
epoch 30: train_loss: 1.20661; Allocated: 659968; Reserved: 6291456; time used = 4.509847640991211s
epoch 35: train_loss: 1.22018; Allocated: 659968; Reserved: 6291456; time used = 4.3549644947052s
epoch 40: train_loss: 1.20608; Allocated: 659968; Reserved: 6291456; time used = 4.366330623626709s
epoch 45: train_loss: 1.19706; Allocated: 659968; Reserved: 6291456; time used = 4.332201957702637s
epoch 50: train_loss: 1.17512; Allocated: 659968; Reserved: 6291456; time used = 4.531909227371216s
epoch 55: train_loss: 1.15978; Allocated: 659968; Reserved: 6291456; time used = 4.368215560913086s
epoch 60: train_loss: 1.17304; Allocated: 659968; Reserved: 6291456; time used = 4.363740921020508s
epoch 65: train_loss: 1.17607; Allocated: 659968; Reserved: 6291456; time used = 4.36012601852417s
epoch 70: train_loss: 1.13890; Allocated: 659968; Reserved: 6291456; time used = 4.507920503616333s
epoch 75: train_loss: 1.12760; Allocated: 659968; Reserved: 6291456; time used = 4.361073017120361s
epoch 80: train_loss: 1.14963; Allocated: 659968; Reserved: 6291456; time used = 4.3624138832092285s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 77.45696115493774.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2.55112; Allocated: 791552; Reserved: 6291456; time used = 0.881181001663208s
epoch 10: train_loss: 1.38558; Allocated: 791552; Reserved: 8388608; time used = 0.8886244297027588s
epoch 15: train_loss: 1.37101; Allocated: 791552; Reserved: 6291456; time used = 0.894024133682251s
epoch 20: train_loss: 1.36848; Allocated: 791552; Reserved: 6291456; time used = 0.89111328125s
epoch 25: train_loss: 1.37692; Allocated: 791552; Reserved: 6291456; time used = 0.8933415412902832s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.696495294570923.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5328820116054158, 'samples': 0.5942028985507246, 'weighted': 0.5451461889944776, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.39196; Allocated: 868864; Reserved: 2097152; time used = 3.2114417552948s
epoch 10: train_loss: 1.37142; Allocated: 868864; Reserved: 2097152; time used = 3.209078550338745s
epoch 15: train_loss: 1.36375; Allocated: 868864; Reserved: 2097152; time used = 3.3520472049713135s
epoch 20: train_loss: 1.36057; Allocated: 868864; Reserved: 2097152; time used = 3.201733350753784s
epoch 25: train_loss: 1.36231; Allocated: 868864; Reserved: 2097152; time used = 3.2005562782287598s
epoch 30: train_loss: 1.35785; Allocated: 868864; Reserved: 2097152; time used = 3.34870982170105s
epoch 35: train_loss: 1.35880; Allocated: 868864; Reserved: 2097152; time used = 3.1971445083618164s
epoch 40: train_loss: 1.36003; Allocated: 868864; Reserved: 2097152; time used = 3.212641954421997s
epoch 45: train_loss: 1.35872; Allocated: 868864; Reserved: 2097152; time used = 3.417818307876587s
epoch 50: train_loss: 1.35399; Allocated: 868864; Reserved: 2097152; time used = 3.2567713260650635s
epoch 55: train_loss: 1.35786; Allocated: 868864; Reserved: 2097152; time used = 3.3655781745910645s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 43.077528953552246.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.672156862745098, 'samples': 0.7105263157894737, 'weighted': 0.6898658410732714, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.53229; Allocated: 579584; Reserved: 6291456; time used = 3.202697277069092s
epoch 10: train_loss: 0.50939; Allocated: 579584; Reserved: 6291456; time used = 3.21734356880188s
epoch 15: train_loss: 0.51534; Allocated: 579584; Reserved: 6291456; time used = 3.3599514961242676s
epoch 20: train_loss: 0.48993; Allocated: 579584; Reserved: 6291456; time used = 3.2087881565093994s
epoch 25: train_loss: 0.49024; Allocated: 579584; Reserved: 6291456; time used = 3.228626251220703s
epoch 30: train_loss: 0.49009; Allocated: 579584; Reserved: 6291456; time used = 3.197718620300293s
epoch 35: train_loss: 0.49423; Allocated: 579584; Reserved: 6291456; time used = 3.345010995864868s
epoch 40: train_loss: 0.49610; Allocated: 579584; Reserved: 6291456; time used = 3.205156087875366s
epoch 45: train_loss: 0.48852; Allocated: 579584; Reserved: 6291456; time used = 3.203176498413086s
epoch 50: train_loss: 0.49225; Allocated: 579584; Reserved: 6291456; time used = 3.356323719024658s
epoch 55: train_loss: 0.47124; Allocated: 579584; Reserved: 6291456; time used = 3.221083641052246s
epoch 60: train_loss: 0.47935; Allocated: 579584; Reserved: 6291456; time used = 3.196927785873413s
epoch 65: train_loss: 0.47477; Allocated: 579584; Reserved: 6291456; time used = 3.2128610610961914s
epoch 70: train_loss: 0.48498; Allocated: 579584; Reserved: 6291456; time used = 3.3810665607452393s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 52.2130765914917.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8606016140865738, 'samples': 0.868421052631579, 'weighted': 0.8658145731165773, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2636.33it/s] 82%|████████▎ | 1650/2000 [00:00<00:00, 3405.56it/s]100%|██████████| 2000/2000 [00:00<00:00, 5656.21it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 76451.07728; Allocated: 3985920; Reserved: 29360128; time used = 1172.0323657989502s
epoch 10: train_loss: 9711.97145; Allocated: 3985920; Reserved: 31457280; time used = 1173.0145525932312s
epoch 15: train_loss: 6951.36813; Allocated: 3985920; Reserved: 31457280; time used = 1190.6448545455933s
epoch 20: train_loss: 2268.63699; Allocated: 3985920; Reserved: 29360128; time used = 1184.601063489914s
epoch 25: train_loss: 103.98085; Allocated: 3985920; Reserved: 31457280; time used = 1280.352757692337s
epoch 30: train_loss: 200.83373; Allocated: 3985920; Reserved: 29360128; time used = 1199.4102461338043s
epoch 35: train_loss: 1.40043; Allocated: 3985920; Reserved: 31457280; time used = 1176.2587842941284s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9204.06220459938.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 1968.55it/s]100%|██████████| 1000/1000 [00:00<00:00, 2999.52it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1013.33051; Allocated: 560128; Reserved: 10485760; time used = 202.07279324531555s
epoch 10: train_loss: 147.03240; Allocated: 560128; Reserved: 8388608; time used = 191.36089658737183s
epoch 15: train_loss: 6.95848; Allocated: 560128; Reserved: 8388608; time used = 188.47358894348145s
epoch 20: train_loss: 12.24879; Allocated: 560128; Reserved: 8388608; time used = 189.8577229976654s
epoch 25: train_loss: 1.41318; Allocated: 560128; Reserved: 8388608; time used = 188.5039451122284s
epoch 30: train_loss: 1.39710; Allocated: 560128; Reserved: 8388608; time used = 188.6666338443756s
epoch 35: train_loss: 1.38644; Allocated: 560128; Reserved: 8388608; time used = 188.98035740852356s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1490.5550589561462.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.53279; Allocated: 53675008; Reserved: 109051904; time used = 4.159246921539307s
epoch 10: train_loss: 0.19406; Allocated: 53675008; Reserved: 109051904; time used = 4.3355371952056885s
epoch 15: train_loss: 0.09506; Allocated: 53675008; Reserved: 109051904; time used = 4.146472454071045s
epoch 20: train_loss: 0.01303; Allocated: 53675008; Reserved: 109051904; time used = 4.32581090927124s
epoch 25: train_loss: 0.01723; Allocated: 53675008; Reserved: 109051904; time used = 4.140217065811157s
epoch 30: train_loss: 0.01695; Allocated: 53675008; Reserved: 109051904; time used = 4.140568256378174s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.892675161361694.
Training classifier using 20.00% nodes...
{'micro': 0.3702602230483271, 'macro': 0.23764933031380406, 'samples': 0.37415477084898574, 'weighted': 0.2826508804867453, 'accuracy': 0.37415477084898574}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2771.61it/s]100%|██████████| 1000/1000 [00:00<00:00, 4044.51it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2805.87it/s] 82%|████████▏ | 1645/2000 [00:00<00:00, 3600.03it/s]100%|██████████| 2000/2000 [00:00<00:00, 5848.00it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.78351283073425s
epoch 10: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.42834210395813s
epoch 15: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 55.84585905075073s
epoch 20: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.39114809036255s
epoch 25: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 53.97639989852905s
epoch 30: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.8893506526947s
epoch 35: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.660597801208496s
epoch 40: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.01278519630432s
epoch 45: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.66936922073364s
epoch 50: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.487292766571045s
epoch 55: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.29738926887512s
epoch 60: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.78943586349487s
epoch 65: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.397711753845215s
epoch 70: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 60.04368853569031s
epoch 75: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.310198068618774s
epoch 80: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.38449668884277s
epoch 85: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.52273893356323s
epoch 90: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.64020919799805s
epoch 95: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.59056305885315s
epoch 100: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.32583832740784s
epoch 105: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.24046850204468s
epoch 110: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.92499852180481s
epoch 115: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.37535309791565s
epoch 120: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.89051151275635s
epoch 125: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.566394090652466s
epoch 130: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.20230317115784s
epoch 135: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.693506717681885s
epoch 140: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.547067165374756s
epoch 145: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.392425298690796s
epoch 150: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.31610894203186s
epoch 155: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.31133198738098s
epoch 160: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.70012450218201s
epoch 165: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.153664112091064s
epoch 170: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.30709981918335s
epoch 175: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.67054986953735s
epoch 180: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.93363165855408s
epoch 185: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.28828573226929s
epoch 190: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.868122577667236s
epoch 195: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 60.353392601013184s
epoch 200: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.60755133628845s
epoch 205: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.36283254623413s
epoch 210: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.621331453323364s
epoch 215: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.43797206878662s
epoch 220: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.93798279762268s
epoch 225: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.23116421699524s
epoch 230: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.6594660282135s
epoch 235: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.84381866455078s
epoch 240: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.75750803947449s
epoch 245: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.86852169036865s
epoch 250: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.93657064437866s
epoch 255: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.574334144592285s
epoch 260: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.83033561706543s
epoch 265: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.13732886314392s
epoch 270: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.90974497795105s
epoch 275: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 55.26011848449707s
epoch 280: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.18674302101135s
epoch 285: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.92231583595276s
epoch 290: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 55.86420965194702s
epoch 295: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.35346508026123s
epoch 300: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.0142560005188s
epoch 305: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.32028269767761s
epoch 310: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.38014268875122s
epoch 315: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.01076149940491s
epoch 320: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.19205951690674s
epoch 325: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.075477600097656s
epoch 330: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.732404470443726s
epoch 335: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.08633065223694s
epoch 340: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 55.521294593811035s
epoch 345: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 55.56414532661438s
epoch 350: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.8529953956604s
epoch 355: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.33610153198242s
epoch 360: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.45175814628601s
epoch 365: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.251686811447144s
epoch 370: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.31638145446777s
epoch 375: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.19519519805908s
epoch 380: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.526017904281616s
epoch 385: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.18729853630066s
epoch 390: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.70446968078613s
epoch 395: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.55496907234192s
epoch 400: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 53.897693157196045s
epoch 405: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.52657389640808s
epoch 410: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.996402740478516s
epoch 415: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.23512864112854s
epoch 420: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.357733488082886s
epoch 425: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.62948703765869s
epoch 430: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.608882665634155s
epoch 435: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.92386293411255s
epoch 440: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.5694055557251s
epoch 445: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.214338541030884s
epoch 450: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.180768728256226s
epoch 455: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.61258339881897s
epoch 460: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 57.12765979766846s
epoch 465: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 60.57001495361328s
epoch 470: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 60.394063234329224s
epoch 475: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.07000660896301s
epoch 480: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.21624946594238s
epoch 485: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 60.29779839515686s
epoch 490: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 59.91421461105347s
epoch 495: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 56.059014081954956s
epoch 500: train_loss: 0.69315; Allocated: 3984384; Reserved: 31457280; time used = 58.50917720794678s
Finished training. Time used = 5799.732437372208.
Training classifier using 80.00% nodes...
{'micro': 0.7075, 'macro': 0.7026664718327309, 'samples': 0.7075, 'weighted': 0.7015291710874911, 'accuracy': 0.7075}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.38188; Allocated: 40894464; Reserved: 62914560; time used = 3.870504379272461s
epoch 10: train_loss: 1.35920; Allocated: 40894464; Reserved: 62914560; time used = 3.623570680618286s
epoch 15: train_loss: 1.36673; Allocated: 40894464; Reserved: 62914560; time used = 3.8780651092529297s
epoch 20: train_loss: 1.36281; Allocated: 40894464; Reserved: 62914560; time used = 3.590648889541626s
epoch 25: train_loss: 1.36009; Allocated: 40894464; Reserved: 62914560; time used = 3.784705400466919s
epoch 30: train_loss: 1.35876; Allocated: 40894464; Reserved: 62914560; time used = 3.6866140365600586s
epoch 35: train_loss: 1.34322; Allocated: 40894464; Reserved: 62914560; time used = 3.837350845336914s
epoch 40: train_loss: 1.35032; Allocated: 40894464; Reserved: 62914560; time used = 3.5942306518554688s
epoch 45: train_loss: 1.33299; Allocated: 40894464; Reserved: 62914560; time used = 3.687849283218384s
epoch 50: train_loss: 1.35596; Allocated: 40894464; Reserved: 62914560; time used = 3.517803192138672s
epoch 55: train_loss: 1.31025; Allocated: 40894464; Reserved: 62914560; time used = 3.721395254135132s
epoch 60: train_loss: 1.32766; Allocated: 40894464; Reserved: 62914560; time used = 3.811577558517456s
epoch 65: train_loss: 1.32370; Allocated: 40894464; Reserved: 62914560; time used = 3.718719005584717s
epoch 70: train_loss: 1.32178; Allocated: 40894464; Reserved: 62914560; time used = 3.8633346557617188s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 59.50477433204651.
Training classifier using 20.00% nodes...
{'micro': 0.5577532648662356, 'macro': 0.5341675555189759, 'samples': 0.5577532648662356, 'weighted': 0.5519200744111433, 'accuracy': 0.5577532648662356}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.31509; Allocated: 573952; Reserved: 4194304; time used = 0.5737330913543701s
epoch 10: train_loss: 1.23787; Allocated: 573952; Reserved: 4194304; time used = 0.5688693523406982s
epoch 15: train_loss: 1.24514; Allocated: 573952; Reserved: 4194304; time used = 0.5746886730194092s
epoch 20: train_loss: 1.22647; Allocated: 573952; Reserved: 4194304; time used = 0.5745363235473633s
epoch 25: train_loss: 1.23179; Allocated: 573952; Reserved: 4194304; time used = 0.5701868534088135s
epoch 30: train_loss: 1.21632; Allocated: 573952; Reserved: 4194304; time used = 0.5816464424133301s
epoch 35: train_loss: 1.22820; Allocated: 573952; Reserved: 4194304; time used = 0.5737817287445068s
epoch 40: train_loss: 1.22307; Allocated: 573952; Reserved: 4194304; time used = 0.7352044582366943s
epoch 45: train_loss: 1.22066; Allocated: 573952; Reserved: 4194304; time used = 0.5696225166320801s
epoch 50: train_loss: 1.22319; Allocated: 573952; Reserved: 4194304; time used = 0.5752973556518555s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.75366997718811.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.638095238095238, 'samples': 0.7105263157894737, 'weighted': 0.6636591478696743, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.35467; Allocated: 440832; Reserved: 4194304; time used = 2.937286138534546s
epoch 10: train_loss: 1.32114; Allocated: 440832; Reserved: 4194304; time used = 2.9361283779144287s
epoch 15: train_loss: 1.30585; Allocated: 440832; Reserved: 4194304; time used = 3.1170196533203125s
epoch 20: train_loss: 1.30765; Allocated: 440832; Reserved: 4194304; time used = 2.932448148727417s
epoch 25: train_loss: 1.29823; Allocated: 440832; Reserved: 4194304; time used = 2.934091806411743s
epoch 30: train_loss: 1.30549; Allocated: 440832; Reserved: 4194304; time used = 3.0799508094787598s
epoch 35: train_loss: 1.29979; Allocated: 440832; Reserved: 4194304; time used = 2.933042526245117s
epoch 40: train_loss: 1.30225; Allocated: 440832; Reserved: 4194304; time used = 2.929304361343384s
epoch 45: train_loss: 1.29277; Allocated: 440832; Reserved: 4194304; time used = 3.0960628986358643s
epoch 50: train_loss: 1.29888; Allocated: 440832; Reserved: 4194304; time used = 2.9290921688079834s
epoch 55: train_loss: 1.30139; Allocated: 440832; Reserved: 4194304; time used = 3.1192190647125244s
epoch 60: train_loss: 1.29288; Allocated: 440832; Reserved: 4194304; time used = 2.9225738048553467s
epoch 65: train_loss: 1.29674; Allocated: 440832; Reserved: 4194304; time used = 2.9148507118225098s
epoch 70: train_loss: 1.29953; Allocated: 440832; Reserved: 4194304; time used = 3.078481674194336s
epoch 75: train_loss: 1.29320; Allocated: 440832; Reserved: 4194304; time used = 2.919236660003662s
epoch 80: train_loss: 1.30982; Allocated: 440832; Reserved: 4194304; time used = 2.920834541320801s
epoch 85: train_loss: 1.30876; Allocated: 440832; Reserved: 4194304; time used = 3.0707132816314697s
epoch 90: train_loss: 1.30669; Allocated: 440832; Reserved: 4194304; time used = 2.9098684787750244s
epoch 95: train_loss: 1.29625; Allocated: 440832; Reserved: 4194304; time used = 2.9161229133605957s
epoch 100: train_loss: 1.30146; Allocated: 440832; Reserved: 4194304; time used = 3.0551788806915283s
epoch 105: train_loss: 1.29552; Allocated: 440832; Reserved: 4194304; time used = 2.9163854122161865s
epoch 110: train_loss: 1.29677; Allocated: 440832; Reserved: 4194304; time used = 2.92733097076416s
epoch 115: train_loss: 1.30798; Allocated: 440832; Reserved: 4194304; time used = 3.0684568881988525s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 72.27538251876831.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.61639; Allocated: 776192; Reserved: 4194304; time used = 6.408713102340698s
epoch 10: train_loss: 0.61756; Allocated: 776192; Reserved: 4194304; time used = 6.2242724895477295s
epoch 15: train_loss: 0.61379; Allocated: 776192; Reserved: 4194304; time used = 6.368633031845093s
epoch 20: train_loss: 0.61477; Allocated: 776192; Reserved: 4194304; time used = 6.363456726074219s
epoch 25: train_loss: 0.60868; Allocated: 776192; Reserved: 4194304; time used = 6.373987674713135s
epoch 30: train_loss: 0.60666; Allocated: 776192; Reserved: 4194304; time used = 6.196737766265869s
epoch 35: train_loss: 0.61224; Allocated: 776192; Reserved: 4194304; time used = 6.3961451053619385s
epoch 40: train_loss: 0.61463; Allocated: 776192; Reserved: 4194304; time used = 6.352797031402588s
epoch 45: train_loss: 0.61456; Allocated: 776192; Reserved: 4194304; time used = 6.221043348312378s
epoch 50: train_loss: 0.58738; Allocated: 776192; Reserved: 4194304; time used = 6.351863622665405s
epoch 55: train_loss: 0.62453; Allocated: 776192; Reserved: 4194304; time used = 6.3605711460113525s
epoch 60: train_loss: 0.59510; Allocated: 776192; Reserved: 4194304; time used = 6.375524044036865s
epoch 65: train_loss: 0.61918; Allocated: 776192; Reserved: 4194304; time used = 6.213052988052368s
epoch 70: train_loss: 0.62801; Allocated: 776192; Reserved: 4194304; time used = 6.441566467285156s
epoch 75: train_loss: 0.63482; Allocated: 776192; Reserved: 4194304; time used = 6.298791170120239s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 98.65839433670044.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.5179175118323192, 'samples': 0.5507246376811594, 'weighted': 0.5270306023458858, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2697.38it/s]100%|██████████| 1000/1000 [00:00<00:00, 3948.82it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68860; Allocated: 492032; Reserved: 8388608; time used = 190.98681735992432s
epoch 10: train_loss: 0.67284; Allocated: 492032; Reserved: 8388608; time used = 190.3321430683136s
epoch 15: train_loss: 0.64292; Allocated: 492032; Reserved: 8388608; time used = 188.8581087589264s
epoch 20: train_loss: 0.50943; Allocated: 492032; Reserved: 8388608; time used = 190.33670353889465s
epoch 25: train_loss: 0.37125; Allocated: 492032; Reserved: 8388608; time used = 188.9465296268463s
epoch 30: train_loss: 0.34041; Allocated: 492032; Reserved: 8388608; time used = 188.70500421524048s
epoch 35: train_loss: 0.27303; Allocated: 492032; Reserved: 8388608; time used = 190.68786549568176s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1407.4503104686737.
Training classifier using 80.00% nodes...
{'micro': 0.63, 'macro': 0.6269785260610948, 'samples': 0.63, 'weighted': 0.6263070874080049, 'accuracy': 0.63}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.69323; Allocated: 41418752; Reserved: 1065353216; time used = 971.0213210582733s
epoch 10: train_loss: 0.69299; Allocated: 41418752; Reserved: 1067450368; time used = 947.4574129581451s
epoch 15: train_loss: 0.69287; Allocated: 41418752; Reserved: 1067450368; time used = 936.5772886276245s
epoch 20: train_loss: 0.69296; Allocated: 41418752; Reserved: 1067450368; time used = 946.6465153694153s
epoch 25: train_loss: 0.69317; Allocated: 41418752; Reserved: 1067450368; time used = 950.7176060676575s
epoch 30: train_loss: 0.69316; Allocated: 41418752; Reserved: 1067450368; time used = 945.9736108779907s
epoch 35: train_loss: 0.69317; Allocated: 41418752; Reserved: 1067450368; time used = 954.9798765182495s
epoch 40: train_loss: 0.69312; Allocated: 41418752; Reserved: 1067450368; time used = 945.3218715190887s
epoch 45: train_loss: 0.69312; Allocated: 41418752; Reserved: 1067450368; time used = 941.3254384994507s
epoch 50: train_loss: 0.69315; Allocated: 41418752; Reserved: 1067450368; time used = 940.6766932010651s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12132.717720985413.
Training classifier using 20.00% nodes...
{'micro': 0.7346266007353873, 'macro': 0.7396624362864745, 'samples': 0.7346266007353873, 'weighted': 0.7349338412945796, 'accuracy': 0.7346266007353873}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.69146; Allocated: 57824256; Reserved: 299892736; time used = 3.372032403945923s
epoch 10: train_loss: 0.69318; Allocated: 57824256; Reserved: 299892736; time used = 3.3343141078948975s
epoch 15: train_loss: 0.69313; Allocated: 57824256; Reserved: 299892736; time used = 3.290501117706299s
epoch 20: train_loss: 0.69309; Allocated: 57824256; Reserved: 299892736; time used = 3.315715789794922s
epoch 25: train_loss: 0.69321; Allocated: 57824256; Reserved: 299892736; time used = 3.3280022144317627s
epoch 30: train_loss: 0.69321; Allocated: 57824256; Reserved: 299892736; time used = 3.332594394683838s
epoch 35: train_loss: 0.69313; Allocated: 57824256; Reserved: 299892736; time used = 3.374746561050415s
epoch 40: train_loss: 0.69315; Allocated: 57824256; Reserved: 299892736; time used = 3.269912004470825s
epoch 45: train_loss: 0.69316; Allocated: 57824256; Reserved: 299892736; time used = 3.327796697616577s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 45.889217376708984.
Training classifier using 20.00% nodes...
{'micro': 0.19442379182156136, 'macro': 0.05473574045002617, 'samples': 0.19646882043576258, 'weighted': 0.06486433290490261, 'accuracy': 0.19646882043576258}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38901; Allocated: 868864; Reserved: 6291456; time used = 3.4857566356658936s
epoch 10: train_loss: 1.38168; Allocated: 868864; Reserved: 6291456; time used = 3.4228925704956055s
epoch 15: train_loss: 1.37322; Allocated: 868864; Reserved: 6291456; time used = 3.5828897953033447s
epoch 20: train_loss: 1.37432; Allocated: 868864; Reserved: 6291456; time used = 3.4037556648254395s
epoch 25: train_loss: 1.36243; Allocated: 868864; Reserved: 6291456; time used = 3.4033899307250977s
epoch 30: train_loss: 1.36430; Allocated: 868864; Reserved: 6291456; time used = 3.414397716522217s
epoch 35: train_loss: 1.36629; Allocated: 868864; Reserved: 6291456; time used = 3.566143274307251s
epoch 40: train_loss: 1.36862; Allocated: 868864; Reserved: 6291456; time used = 3.421034097671509s
epoch 45: train_loss: 1.36302; Allocated: 868864; Reserved: 6291456; time used = 3.412396192550659s
epoch 50: train_loss: 1.37100; Allocated: 868864; Reserved: 6291456; time used = 3.40769624710083s
epoch 55: train_loss: 1.37594; Allocated: 868864; Reserved: 6291456; time used = 3.578925132751465s
epoch 60: train_loss: 1.36926; Allocated: 868864; Reserved: 6291456; time used = 3.4015161991119385s
epoch 65: train_loss: 1.36071; Allocated: 868864; Reserved: 6291456; time used = 3.4252817630767822s
epoch 70: train_loss: 1.37051; Allocated: 868864; Reserved: 6291456; time used = 3.438328504562378s
epoch 75: train_loss: 1.36506; Allocated: 868864; Reserved: 6291456; time used = 3.553201913833618s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 56.27423167228699.
Training classifier using 80.00% nodes...
{'micro': 0.7368421052631579, 'macro': 0.6801346801346801, 'samples': 0.7368421052631579, 'weighted': 0.7013999645578592, 'accuracy': 0.7368421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2630.62it/s]100%|██████████| 1500/1500 [00:00<00:00, 5060.19it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 324.19496; Allocated: 699904; Reserved: 12582912; time used = 7.834357261657715s
epoch 10: train_loss: 58.48946; Allocated: 699904; Reserved: 33554432; time used = 7.70097804069519s
epoch 15: train_loss: 256.40081; Allocated: 699904; Reserved: 12582912; time used = 7.630997896194458s
epoch 20: train_loss: 315.21056; Allocated: 699904; Reserved: 12582912; time used = 7.751042366027832s
epoch 25: train_loss: 447.67614; Allocated: 699904; Reserved: 12582912; time used = 7.871518135070801s
epoch 30: train_loss: 279.43100; Allocated: 699904; Reserved: 33554432; time used = 7.6860668659210205s
epoch 35: train_loss: 52.24968; Allocated: 699904; Reserved: 12582912; time used = 7.693626642227173s
epoch 40: train_loss: 174.47062; Allocated: 699904; Reserved: 12582912; time used = 7.9481422901153564s
epoch 45: train_loss: 8.46842; Allocated: 699904; Reserved: 12582912; time used = 7.627855539321899s
epoch 50: train_loss: 18.11626; Allocated: 699904; Reserved: 12582912; time used = 7.72086501121521s
epoch 55: train_loss: 93.54050; Allocated: 699904; Reserved: 12582912; time used = 7.730393171310425s
epoch 60: train_loss: 148.88997; Allocated: 699904; Reserved: 35651584; time used = 7.948591709136963s
epoch 65: train_loss: 6.38389; Allocated: 699904; Reserved: 12582912; time used = 7.693308353424072s
epoch 70: train_loss: 65.45705; Allocated: 699904; Reserved: 33554432; time used = 7.693411827087402s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 113.26932072639465.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2754.59it/s] 98%|█████████▊| 1957/2000 [00:00<00:00, 3623.69it/s]100%|██████████| 2000/2000 [00:00<00:00, 6358.46it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68957; Allocated: 3985920; Reserved: 31457280; time used = 930.8939874172211s
epoch 10: train_loss: 0.66965; Allocated: 3985920; Reserved: 31457280; time used = 925.9843332767487s
epoch 15: train_loss: 0.63799; Allocated: 3985920; Reserved: 31457280; time used = 929.0157084465027s
epoch 20: train_loss: 0.61102; Allocated: 3985920; Reserved: 33554432; time used = 936.8943657875061s
epoch 25: train_loss: 0.58822; Allocated: 3985920; Reserved: 31457280; time used = 929.7859845161438s
epoch 30: train_loss: 0.61269; Allocated: 3985920; Reserved: 31457280; time used = 935.0263993740082s
epoch 35: train_loss: 0.56704; Allocated: 3985920; Reserved: 31457280; time used = 930.6485674381256s
epoch 40: train_loss: 0.56898; Allocated: 3985920; Reserved: 31457280; time used = 931.8110542297363s
epoch 45: train_loss: 0.54152; Allocated: 3985920; Reserved: 31457280; time used = 924.9180517196655s
epoch 50: train_loss: 0.55697; Allocated: 3985920; Reserved: 33554432; time used = 935.3601415157318s
epoch 55: train_loss: 0.51657; Allocated: 3985920; Reserved: 31457280; time used = 932.3689150810242s
epoch 60: train_loss: 0.36365; Allocated: 3985920; Reserved: 31457280; time used = 932.427832365036s
epoch 65: train_loss: 0.69315; Allocated: 3985920; Reserved: 31457280; time used = 922.8754076957703s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12474.554141044617.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2735.09it/s]100%|██████████| 1000/1000 [00:00<00:00, 3983.04it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.40171; Allocated: 495104; Reserved: 8388608; time used = 35.81725883483887s
epoch 10: train_loss: 1.41363; Allocated: 495104; Reserved: 8388608; time used = 36.19791841506958s
epoch 15: train_loss: 1.38989; Allocated: 495104; Reserved: 6291456; time used = 35.861124753952026s
epoch 20: train_loss: 1.38969; Allocated: 495104; Reserved: 6291456; time used = 36.079275131225586s
epoch 25: train_loss: 1.38711; Allocated: 495104; Reserved: 6291456; time used = 35.66489839553833s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 190.49475765228271.
Training classifier using 80.00% nodes...
{'micro': 0.565, 'macro': 0.5647279549718575, 'samples': 0.565, 'weighted': 0.5645103189493433, 'accuracy': 0.565}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.48599; Allocated: 1417216; Reserved: 10485760; time used = 3.4208149909973145s
epoch 10: train_loss: 1.38255; Allocated: 1417216; Reserved: 10485760; time used = 3.321406841278076s
epoch 15: train_loss: 1.35108; Allocated: 1417216; Reserved: 10485760; time used = 3.280478000640869s
epoch 20: train_loss: 1.31551; Allocated: 1417216; Reserved: 10485760; time used = 3.359257221221924s
epoch 25: train_loss: 1.27277; Allocated: 1417216; Reserved: 10485760; time used = 3.3156795501708984s
epoch 30: train_loss: 1.21560; Allocated: 1417216; Reserved: 10485760; time used = 3.301731824874878s
epoch 35: train_loss: 1.15406; Allocated: 1417216; Reserved: 10485760; time used = 3.3459203243255615s
epoch 40: train_loss: 1.11231; Allocated: 1417216; Reserved: 10485760; time used = 3.3842811584472656s
epoch 45: train_loss: 0.99776; Allocated: 1417216; Reserved: 10485760; time used = 3.337559938430786s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 36.33765697479248.
Training classifier using 80.00% nodes...
{'micro': 0.4492753623188406, 'macro': 0.44354838709677424, 'samples': 0.4492753623188406, 'weighted': 0.4476390836839645, 'accuracy': 0.4492753623188406}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.46825; Allocated: 57484288; Reserved: 115343360; time used = 4.294412851333618s
epoch 10: train_loss: 0.40146; Allocated: 57484288; Reserved: 115343360; time used = 4.431342840194702s
epoch 15: train_loss: 0.38846; Allocated: 57484288; Reserved: 115343360; time used = 4.281142234802246s
epoch 20: train_loss: 0.38365; Allocated: 57484288; Reserved: 115343360; time used = 4.46955418586731s
epoch 25: train_loss: 0.38268; Allocated: 57484288; Reserved: 115343360; time used = 4.284594297409058s
epoch 30: train_loss: 0.38065; Allocated: 57484288; Reserved: 115343360; time used = 4.281480073928833s
epoch 35: train_loss: 0.36931; Allocated: 57484288; Reserved: 115343360; time used = 4.439287424087524s
epoch 40: train_loss: 0.36484; Allocated: 57484288; Reserved: 115343360; time used = 4.310725688934326s
epoch 45: train_loss: 0.36271; Allocated: 57484288; Reserved: 115343360; time used = 4.48846435546875s
epoch 50: train_loss: 0.35917; Allocated: 57484288; Reserved: 115343360; time used = 4.300446510314941s
epoch 55: train_loss: 0.35319; Allocated: 57484288; Reserved: 115343360; time used = 4.479164123535156s
epoch 60: train_loss: 0.35142; Allocated: 57484288; Reserved: 115343360; time used = 4.286028861999512s
epoch 65: train_loss: 0.34968; Allocated: 57484288; Reserved: 115343360; time used = 4.290124416351318s
epoch 70: train_loss: 0.35105; Allocated: 57484288; Reserved: 115343360; time used = 4.465008020401001s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 64.79589486122131.
Training classifier using 20.00% nodes...
{'micro': 0.6249070631970259, 'macro': 0.5426961721319784, 'samples': 0.6314800901577761, 'weighted': 0.6014651944079389, 'accuracy': 0.6314800901577761}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2761.94it/s]100%|██████████| 1500/1500 [00:00<00:00, 5131.41it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 323.68126; Allocated: 839680; Reserved: 14680064; time used = 8.07850170135498s
epoch 10: train_loss: 65.50676; Allocated: 839680; Reserved: 14680064; time used = 7.854841947555542s
epoch 15: train_loss: 277.76658; Allocated: 839680; Reserved: 14680064; time used = 7.7990403175354s
epoch 20: train_loss: 166.55169; Allocated: 839680; Reserved: 14680064; time used = 7.944279432296753s
epoch 25: train_loss: 58.84095; Allocated: 839680; Reserved: 14680064; time used = 8.06618595123291s
epoch 30: train_loss: 70.64063; Allocated: 839680; Reserved: 14680064; time used = 7.857604742050171s
epoch 35: train_loss: 28.94999; Allocated: 839680; Reserved: 14680064; time used = 7.773930788040161s
epoch 40: train_loss: 60.74369; Allocated: 839680; Reserved: 14680064; time used = 7.783748626708984s
epoch 45: train_loss: 8.48904; Allocated: 839680; Reserved: 14680064; time used = 7.961649417877197s
epoch 50: train_loss: 44.42746; Allocated: 839680; Reserved: 14680064; time used = 7.76231837272644s
epoch 55: train_loss: 13.18445; Allocated: 839680; Reserved: 14680064; time used = 8.246915817260742s
epoch 60: train_loss: 3.12354; Allocated: 839680; Reserved: 14680064; time used = 8.817291259765625s
epoch 65: train_loss: 2.23214; Allocated: 839680; Reserved: 14680064; time used = 7.7746262550354s
epoch 70: train_loss: 1.42143; Allocated: 839680; Reserved: 14680064; time used = 7.7595367431640625s
epoch 75: train_loss: 1.38731; Allocated: 839680; Reserved: 14680064; time used = 8.247220754623413s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 130.65423727035522.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.63288; Allocated: 1052160; Reserved: 8388608; time used = 1.7350599765777588s
epoch 10: train_loss: 1.40583; Allocated: 1052160; Reserved: 8388608; time used = 1.7019731998443604s
epoch 15: train_loss: 1.30164; Allocated: 1052160; Reserved: 8388608; time used = 1.6826324462890625s
epoch 20: train_loss: 1.31497; Allocated: 1052160; Reserved: 8388608; time used = 1.6985516548156738s
epoch 25: train_loss: 1.28781; Allocated: 1052160; Reserved: 8388608; time used = 1.7036473751068115s
epoch 30: train_loss: 1.26984; Allocated: 1052160; Reserved: 8388608; time used = 1.7068052291870117s
epoch 35: train_loss: 1.22490; Allocated: 1052160; Reserved: 8388608; time used = 1.6819605827331543s
epoch 40: train_loss: 1.22572; Allocated: 1052160; Reserved: 8388608; time used = 1.6865699291229248s
epoch 45: train_loss: 1.19108; Allocated: 1052160; Reserved: 8388608; time used = 1.6845438480377197s
epoch 50: train_loss: 1.16945; Allocated: 1052160; Reserved: 8388608; time used = 1.6878612041473389s
epoch 55: train_loss: 1.15315; Allocated: 1052160; Reserved: 8388608; time used = 1.6946072578430176s
epoch 60: train_loss: 1.14105; Allocated: 1052160; Reserved: 8388608; time used = 1.693268060684204s
epoch 65: train_loss: 1.12032; Allocated: 1052160; Reserved: 8388608; time used = 1.6779627799987793s
epoch 70: train_loss: 1.10742; Allocated: 1052160; Reserved: 8388608; time used = 1.6986701488494873s
epoch 75: train_loss: 1.09639; Allocated: 1052160; Reserved: 8388608; time used = 1.6995213031768799s
epoch 80: train_loss: 1.07269; Allocated: 1052160; Reserved: 8388608; time used = 1.6762988567352295s
epoch 85: train_loss: 1.06443; Allocated: 1052160; Reserved: 8388608; time used = 1.6786773204803467s
epoch 90: train_loss: 1.05498; Allocated: 1052160; Reserved: 8388608; time used = 1.6918795108795166s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 34.66774106025696.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.5606960950764007, 'samples': 0.5652173913043478, 'weighted': 0.5639255923820773, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.29983; Allocated: 705024; Reserved: 2097152; time used = 2.976746082305908s
epoch 10: train_loss: 1.23304; Allocated: 705024; Reserved: 2097152; time used = 2.9687225818634033s
epoch 15: train_loss: 1.23835; Allocated: 705024; Reserved: 2097152; time used = 3.144627571105957s
epoch 20: train_loss: 1.23226; Allocated: 705024; Reserved: 2097152; time used = 2.9776840209960938s
epoch 25: train_loss: 1.22432; Allocated: 705024; Reserved: 2097152; time used = 2.963383913040161s
epoch 30: train_loss: 1.21935; Allocated: 705024; Reserved: 2097152; time used = 3.1158597469329834s
epoch 35: train_loss: 1.22744; Allocated: 705024; Reserved: 2097152; time used = 2.976494073867798s
epoch 40: train_loss: 1.22355; Allocated: 705024; Reserved: 2097152; time used = 2.946514368057251s
epoch 45: train_loss: 1.22314; Allocated: 705024; Reserved: 2097152; time used = 3.1354620456695557s
epoch 50: train_loss: 1.22708; Allocated: 705024; Reserved: 2097152; time used = 2.9582982063293457s
epoch 55: train_loss: 1.21901; Allocated: 705024; Reserved: 2097152; time used = 3.1062417030334473s
epoch 60: train_loss: 1.21663; Allocated: 705024; Reserved: 2097152; time used = 2.967555522918701s
epoch 65: train_loss: 1.22822; Allocated: 705024; Reserved: 2097152; time used = 2.9602439403533936s
epoch 70: train_loss: 1.22118; Allocated: 705024; Reserved: 2097152; time used = 3.1311442852020264s
epoch 75: train_loss: 1.21471; Allocated: 705024; Reserved: 2097152; time used = 2.960672616958618s
epoch 80: train_loss: 1.22320; Allocated: 705024; Reserved: 2097152; time used = 2.9578585624694824s
epoch 85: train_loss: 1.22525; Allocated: 705024; Reserved: 2097152; time used = 3.1163618564605713s
epoch 90: train_loss: 1.22027; Allocated: 705024; Reserved: 2097152; time used = 2.9616191387176514s
epoch 95: train_loss: 1.21851; Allocated: 705024; Reserved: 2097152; time used = 2.9587762355804443s
epoch 100: train_loss: 1.22266; Allocated: 705024; Reserved: 2097152; time used = 3.12782883644104s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 66.45613932609558.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.638095238095238, 'samples': 0.7105263157894737, 'weighted': 0.6636591478696743, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.35753; Allocated: 797184; Reserved: 2097152; time used = 3.1347758769989014s
epoch 10: train_loss: 1.15715; Allocated: 797184; Reserved: 2097152; time used = 3.1307373046875s
epoch 15: train_loss: 1.08355; Allocated: 797184; Reserved: 2097152; time used = 3.312346935272217s
epoch 20: train_loss: 1.01960; Allocated: 797184; Reserved: 2097152; time used = 3.1279380321502686s
epoch 25: train_loss: 1.04218; Allocated: 797184; Reserved: 2097152; time used = 3.1456005573272705s
epoch 30: train_loss: 0.97555; Allocated: 797184; Reserved: 2097152; time used = 3.270681858062744s
epoch 35: train_loss: 0.99892; Allocated: 797184; Reserved: 2097152; time used = 3.131828784942627s
epoch 40: train_loss: 0.94613; Allocated: 797184; Reserved: 2097152; time used = 3.1261141300201416s
epoch 45: train_loss: 0.93586; Allocated: 797184; Reserved: 2097152; time used = 3.2625763416290283s
epoch 50: train_loss: 0.91208; Allocated: 797184; Reserved: 2097152; time used = 3.12423038482666s
epoch 55: train_loss: 0.88091; Allocated: 797184; Reserved: 2097152; time used = 3.2723653316497803s
epoch 60: train_loss: 0.85848; Allocated: 797184; Reserved: 2097152; time used = 3.1267757415771484s
epoch 65: train_loss: 0.83965; Allocated: 797184; Reserved: 2097152; time used = 3.126213550567627s
epoch 70: train_loss: 0.79095; Allocated: 797184; Reserved: 2097152; time used = 3.2982215881347656s
epoch 75: train_loss: 0.79925; Allocated: 797184; Reserved: 2097152; time used = 3.1233420372009277s
epoch 80: train_loss: 0.76913; Allocated: 797184; Reserved: 2097152; time used = 3.1191656589508057s
epoch 85: train_loss: 0.74323; Allocated: 797184; Reserved: 2097152; time used = 3.2896668910980225s
epoch 90: train_loss: 0.69751; Allocated: 797184; Reserved: 2097152; time used = 3.244853973388672s
epoch 95: train_loss: 0.72066; Allocated: 797184; Reserved: 2097152; time used = 3.1272506713867188s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 64.88456678390503.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7490829053558328, 'samples': 0.7631578947368421, 'weighted': 0.7584662316098391, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 3519.72766; Allocated: 794624; Reserved: 29360128; time used = 1.140394687652588s
epoch 10: train_loss: 1856.17357; Allocated: 794624; Reserved: 29360128; time used = 1.1296706199645996s
epoch 15: train_loss: 222.13788; Allocated: 794624; Reserved: 8388608; time used = 1.1462411880493164s
epoch 20: train_loss: 66.08029; Allocated: 794624; Reserved: 8388608; time used = 1.1257550716400146s
epoch 25: train_loss: 75.21124; Allocated: 794624; Reserved: 8388608; time used = 1.1267931461334229s
epoch 30: train_loss: 30.38876; Allocated: 794624; Reserved: 8388608; time used = 1.1267800331115723s
epoch 35: train_loss: 56.53613; Allocated: 794624; Reserved: 8388608; time used = 1.1299400329589844s
epoch 40: train_loss: 33.21850; Allocated: 794624; Reserved: 8388608; time used = 1.1243057250976562s
epoch 45: train_loss: 12.75337; Allocated: 794624; Reserved: 10485760; time used = 1.1255590915679932s
epoch 50: train_loss: 5.00260; Allocated: 794624; Reserved: 29360128; time used = 1.1549592018127441s
epoch 55: train_loss: 12.58366; Allocated: 794624; Reserved: 8388608; time used = 1.1317250728607178s
epoch 60: train_loss: 2.11808; Allocated: 794624; Reserved: 8388608; time used = 1.1214091777801514s
epoch 65: train_loss: 10.65201; Allocated: 794624; Reserved: 8388608; time used = 1.1198420524597168s
epoch 70: train_loss: 38.18462; Allocated: 794624; Reserved: 8388608; time used = 1.1223995685577393s
epoch 75: train_loss: 33.77822; Allocated: 794624; Reserved: 29360128; time used = 1.140641689300537s
epoch 80: train_loss: 15.75526; Allocated: 794624; Reserved: 8388608; time used = 1.1323435306549072s
epoch 85: train_loss: 1.81500; Allocated: 794624; Reserved: 8388608; time used = 1.1194226741790771s
epoch 90: train_loss: 1.51041; Allocated: 794624; Reserved: 8388608; time used = 1.1196553707122803s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.812830924987793.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7194421657095981, 'samples': 0.7631578947368421, 'weighted': 0.7369284573204957, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2760.80it/s] 82%|████████▏ | 1643/2000 [00:00<00:00, 3547.69it/s]100%|██████████| 2000/2000 [00:00<00:00, 5797.15it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.38678; Allocated: 3908096; Reserved: 33554432; time used = 1153.8375043869019s
epoch 10: train_loss: 1.38643; Allocated: 3908096; Reserved: 33554432; time used = 1154.4267327785492s
epoch 15: train_loss: 1.38635; Allocated: 3908096; Reserved: 33554432; time used = 1148.763462305069s
epoch 20: train_loss: 1.38632; Allocated: 3908096; Reserved: 33554432; time used = 1152.3258821964264s
epoch 25: train_loss: 1.38630; Allocated: 3908096; Reserved: 35651584; time used = 1150.7439942359924s
epoch 30: train_loss: 1.38630; Allocated: 3908096; Reserved: 33554432; time used = 1155.8712441921234s
epoch 35: train_loss: 1.38630; Allocated: 3908096; Reserved: 33554432; time used = 1154.7642874717712s
epoch 40: train_loss: 1.38630; Allocated: 3908096; Reserved: 31457280; time used = 1144.9074878692627s
epoch 45: train_loss: 1.38629; Allocated: 3908096; Reserved: 33554432; time used = 1130.1978831291199s
epoch 50: train_loss: 1.38629; Allocated: 3908096; Reserved: 33554432; time used = 1126.4485964775085s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12385.460878610611.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2747.49it/s]100%|██████████| 1000/1000 [00:00<00:00, 4005.13it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 190.073504447937s
epoch 10: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 192.20304942131042s
epoch 15: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.6184663772583s
epoch 20: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.0395860671997s
epoch 25: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.36595129966736s
epoch 30: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.84757471084595s
epoch 35: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.98496294021606s
epoch 40: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 183.5609996318817s
epoch 45: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.63588666915894s
epoch 50: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.4677083492279s
epoch 55: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.58322262763977s
epoch 60: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.04632377624512s
epoch 65: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.10305666923523s
epoch 70: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.46665835380554s
epoch 75: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.54058384895325s
epoch 80: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.66680574417114s
epoch 85: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.42719292640686s
epoch 90: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 185.65449404716492s
epoch 95: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 184.1558394432068s
epoch 100: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.02725505828857s
epoch 105: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.6868851184845s
epoch 110: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.97411823272705s
epoch 115: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.02965831756592s
epoch 120: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.52652168273926s
epoch 125: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.61373662948608s
epoch 130: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.64185333251953s
epoch 135: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.96267008781433s
epoch 140: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 192.48101377487183s
epoch 145: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 190.1727578639984s
epoch 150: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.58039474487305s
epoch 155: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 194.45254921913147s
epoch 160: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 192.54989457130432s
epoch 165: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 187.68817281723022s
epoch 170: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 192.33048009872437s
epoch 175: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.22134709358215s
epoch 180: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.85603857040405s
epoch 185: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 185.90086364746094s
epoch 190: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.25122499465942s
epoch 195: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.41832280158997s
epoch 200: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.8493688106537s
epoch 205: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 192.26904129981995s
epoch 210: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.3285391330719s
epoch 215: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.9866325855255s
epoch 220: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.57903122901917s
epoch 225: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.5327844619751s
epoch 230: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.68313574790955s
epoch 235: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 188.47524333000183s
epoch 240: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 189.18453335762024s
epoch 245: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.89446878433228s
epoch 250: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 192.1181252002716s
epoch 255: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.47416162490845s
epoch 260: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.19359493255615s
epoch 265: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.72128129005432s
epoch 270: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.38244318962097s
epoch 275: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.6610288619995s
epoch 280: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.83941745758057s
epoch 285: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.5369954109192s
epoch 290: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 186.43590331077576s
epoch 295: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.75729632377625s
epoch 300: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 192.21269631385803s
epoch 305: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.91587138175964s
epoch 310: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.45296907424927s
epoch 315: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 190.8940281867981s
epoch 320: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.03505945205688s
epoch 325: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.99720001220703s
epoch 330: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.54294085502625s
epoch 335: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 188.0895881652832s
epoch 340: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 191.90050554275513s
epoch 345: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.73493075370789s
epoch 350: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 185.9618866443634s
epoch 355: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.24960589408875s
epoch 360: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.00182795524597s
epoch 365: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.3299217224121s
epoch 370: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 192.65340900421143s
epoch 375: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.35778951644897s
epoch 380: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.88648772239685s
epoch 385: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.9320809841156s
epoch 390: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.89435744285583s
epoch 395: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 185.94119715690613s
epoch 400: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.08247590065002s
epoch 405: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 188.7172713279724s
epoch 410: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 188.7538721561432s
epoch 415: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.71655941009521s
epoch 420: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.69811367988586s
epoch 425: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 194.38300395011902s
epoch 430: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 191.82565474510193s
epoch 435: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.78167033195496s
epoch 440: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.18591046333313s
epoch 445: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.91633796691895s
epoch 450: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 188.79394364356995s
epoch 455: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.29561352729797s
epoch 460: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.84522891044617s
epoch 465: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.1056787967682s
epoch 470: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.50783276557922s
epoch 475: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 186.16064715385437s
epoch 480: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 189.53719186782837s
epoch 485: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 188.9101107120514s
epoch 490: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 190.06093835830688s
epoch 495: train_loss: 0.69315; Allocated: 486912; Reserved: 10485760; time used = 190.23692154884338s
epoch 500: train_loss: 0.69315; Allocated: 486912; Reserved: 8388608; time used = 187.36486077308655s
Finished training. Time used = 18908.01452088356.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 5.70660; Allocated: 593920; Reserved: 2097152; time used = 2.951967477798462s
epoch 10: train_loss: 1.49044; Allocated: 593920; Reserved: 2097152; time used = 2.9890260696411133s
epoch 15: train_loss: 1.39724; Allocated: 593920; Reserved: 2097152; time used = 3.1814005374908447s
epoch 20: train_loss: 1.38204; Allocated: 593920; Reserved: 2097152; time used = 2.9821667671203613s
epoch 25: train_loss: 1.38278; Allocated: 593920; Reserved: 2097152; time used = 2.9575541019439697s
epoch 30: train_loss: 1.37737; Allocated: 593920; Reserved: 2097152; time used = 3.0906825065612793s
epoch 35: train_loss: 1.37428; Allocated: 593920; Reserved: 2097152; time used = 2.9796864986419678s
epoch 40: train_loss: 1.36809; Allocated: 593920; Reserved: 2097152; time used = 2.938451051712036s
epoch 45: train_loss: 1.36804; Allocated: 593920; Reserved: 2097152; time used = 3.076624870300293s
epoch 50: train_loss: 1.36539; Allocated: 593920; Reserved: 2097152; time used = 2.9459502696990967s
epoch 55: train_loss: 1.36340; Allocated: 593920; Reserved: 2097152; time used = 3.0893397331237793s
epoch 60: train_loss: 1.36243; Allocated: 593920; Reserved: 2097152; time used = 2.928804397583008s
epoch 65: train_loss: 1.36046; Allocated: 593920; Reserved: 2097152; time used = 2.9561965465545654s
epoch 70: train_loss: 1.35887; Allocated: 593920; Reserved: 2097152; time used = 3.0852231979370117s
epoch 75: train_loss: 1.35949; Allocated: 593920; Reserved: 2097152; time used = 2.9597363471984863s
epoch 80: train_loss: 1.36133; Allocated: 593920; Reserved: 2097152; time used = 2.961629629135132s
epoch 85: train_loss: 1.35964; Allocated: 593920; Reserved: 2097152; time used = 3.09452486038208s
epoch 90: train_loss: 1.35688; Allocated: 593920; Reserved: 2097152; time used = 2.944551944732666s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 59.07706356048584.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8606016140865738, 'samples': 0.868421052631579, 'weighted': 0.8658145731165773, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2744.55it/s]100%|██████████| 1500/1500 [00:00<00:00, 5097.43it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.474696397781372s
epoch 10: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.250987768173218s
epoch 15: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.2411582469940186s
epoch 20: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.216201305389404s
epoch 25: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.492535591125488s
epoch 30: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.259927749633789s
epoch 35: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.216695070266724s
epoch 40: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.173454999923706s
epoch 45: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.434396266937256s
epoch 50: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.229307651519775s
epoch 55: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.276743173599243s
epoch 60: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.442087888717651s
epoch 65: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.192423582077026s
epoch 70: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.275335311889648s
epoch 75: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.157351732254028s
epoch 80: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.450747728347778s
epoch 85: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.202841520309448s
epoch 90: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.219459533691406s
epoch 95: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.394508600234985s
epoch 100: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.2351298332214355s
epoch 105: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.208537578582764s
epoch 110: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.2071051597595215s
epoch 115: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.427366495132446s
epoch 120: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.244365453720093s
epoch 125: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.2275166511535645s
epoch 130: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.323569059371948s
epoch 135: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.506770133972168s
epoch 140: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.2087178230285645s
epoch 145: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.259822368621826s
epoch 150: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.451799631118774s
epoch 155: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.21032977104187s
epoch 160: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.231465816497803s
epoch 165: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.24254035949707s
epoch 170: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.42249059677124s
epoch 175: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.221112966537476s
epoch 180: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.29245924949646s
epoch 185: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.369504690170288s
epoch 190: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.202123165130615s
epoch 195: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.250546455383301s
epoch 200: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.200307130813599s
epoch 205: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.396850824356079s
epoch 210: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.253818035125732s
epoch 215: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.242875337600708s
epoch 220: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.260569095611572s
epoch 225: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.414186000823975s
epoch 230: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.25458025932312s
epoch 235: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.350249290466309s
epoch 240: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.420248508453369s
epoch 245: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.2158026695251465s
epoch 250: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.2418904304504395s
epoch 255: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.225842714309692s
epoch 260: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.432442903518677s
epoch 265: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.3020265102386475s
epoch 270: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.229462146759033s
epoch 275: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.429161548614502s
epoch 280: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.2008819580078125s
epoch 285: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.272771596908569s
epoch 290: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.214714527130127s
epoch 295: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.370598316192627s
epoch 300: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.284145832061768s
epoch 305: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.255375146865845s
epoch 310: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.437678813934326s
epoch 315: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.235381603240967s
epoch 320: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.251672744750977s
epoch 325: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.240641832351685s
epoch 330: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.388048887252808s
epoch 335: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.246908664703369s
epoch 340: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.277216196060181s
epoch 345: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.255797863006592s
epoch 350: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.443093538284302s
epoch 355: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.2887139320373535s
epoch 360: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.280709743499756s
epoch 365: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.392982006072998s
epoch 370: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.300509691238403s
epoch 375: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.23145604133606s
epoch 380: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.2325358390808105s
epoch 385: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.459028244018555s
epoch 390: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.237436771392822s
epoch 395: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.219000577926636s
epoch 400: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.41732382774353s
epoch 405: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.213359355926514s
epoch 410: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.212077617645264s
epoch 415: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.195250749588013s
epoch 420: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.383769512176514s
epoch 425: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.234796047210693s
epoch 430: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.203131198883057s
epoch 435: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.233089923858643s
epoch 440: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.482903242111206s
epoch 445: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.211984634399414s
epoch 450: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.228408098220825s
epoch 455: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.480523347854614s
epoch 460: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.225306272506714s
epoch 465: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.279148578643799s
epoch 470: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.25223970413208s
epoch 475: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.368869304656982s
epoch 480: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.232508420944214s
epoch 485: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.200916767120361s
epoch 490: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.411370038986206s
epoch 495: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.239850044250488s
epoch 500: train_loss: 0.69315; Allocated: 629760; Reserved: 12582912; time used = 7.324004173278809s
Finished training. Time used = 733.0270595550537.
Training classifier using 80.00% nodes...
{'micro': 0.5033333333333333, 'macro': 0.4344487456559083, 'samples': 0.5033333333333333, 'weighted': 0.42449220636315416, 'accuracy': 0.5033333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2785.85it/s]100%|██████████| 1500/1500 [00:00<00:00, 5152.49it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68447; Allocated: 631296; Reserved: 6291456; time used = 195.62237429618835s
epoch 10: train_loss: 0.64697; Allocated: 631296; Reserved: 8388608; time used = 198.28424835205078s
epoch 15: train_loss: 0.62671; Allocated: 631296; Reserved: 8388608; time used = 200.08482241630554s
epoch 20: train_loss: 0.27041; Allocated: 631296; Reserved: 6291456; time used = 197.0911729335785s
epoch 25: train_loss: 0.23647; Allocated: 631296; Reserved: 6291456; time used = 196.14447951316833s
epoch 30: train_loss: 0.04341; Allocated: 631296; Reserved: 8388608; time used = 198.5544936656952s
epoch 35: train_loss: 0.02592; Allocated: 631296; Reserved: 6291456; time used = 199.1546585559845s
epoch 40: train_loss: 0.00215; Allocated: 631296; Reserved: 6291456; time used = 193.2385458946228s
epoch 45: train_loss: 0.06617; Allocated: 631296; Reserved: 6291456; time used = 222.12608575820923s
epoch 50: train_loss: 0.18773; Allocated: 631296; Reserved: 6291456; time used = 214.2436854839325s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2018.0856885910034.
Training classifier using 80.00% nodes...
{'micro': 0.34, 'macro': 0.26052631578947366, 'samples': 0.34, 'weighted': 0.25271052631578944, 'accuracy': 0.34}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2674.12it/s] 82%|████████▏ | 1641/2000 [00:00<00:00, 3446.47it/s]100%|██████████| 2000/2000 [00:00<00:00, 5673.11it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.51003; Allocated: 4054016; Reserved: 1214251008; time used = 1980.9813902378082s
epoch 10: train_loss: 0.54544; Allocated: 4054016; Reserved: 1604321280; time used = 2269.8257360458374s
epoch 15: train_loss: 0.50228; Allocated: 4054016; Reserved: 792723456; time used = 2377.2864713668823s
epoch 20: train_loss: 0.50866; Allocated: 4054016; Reserved: 1725956096; time used = 2434.641983985901s
epoch 25: train_loss: 0.52120; Allocated: 4054016; Reserved: 922746880; time used = 2460.5736377239227s
epoch 30: train_loss: 0.52958; Allocated: 4054016; Reserved: 654311424; time used = 2414.0936658382416s
epoch 35: train_loss: 0.53439; Allocated: 4054016; Reserved: 817889280; time used = 2481.442389011383s
epoch 40: train_loss: 0.52828; Allocated: 4054016; Reserved: 1197473792; time used = 2355.2759370803833s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 20000.953401088715.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2944.80it/s]100%|██████████| 1000/1000 [00:00<00:00, 4252.51it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.45695; Allocated: 789504; Reserved: 6291456; time used = 0.8720548152923584s
epoch 10: train_loss: 0.42742; Allocated: 789504; Reserved: 6291456; time used = 0.9246041774749756s
epoch 15: train_loss: 0.41498; Allocated: 789504; Reserved: 8388608; time used = 0.9152507781982422s
epoch 20: train_loss: 0.41472; Allocated: 789504; Reserved: 6291456; time used = 0.9262018203735352s
epoch 25: train_loss: 0.41026; Allocated: 789504; Reserved: 6291456; time used = 0.950263500213623s
epoch 30: train_loss: 0.40379; Allocated: 789504; Reserved: 6291456; time used = 0.9066355228424072s
epoch 35: train_loss: 0.41003; Allocated: 789504; Reserved: 6291456; time used = 1.1047496795654297s
epoch 40: train_loss: 0.40959; Allocated: 789504; Reserved: 6291456; time used = 0.8604733943939209s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.562348127365112.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.5706929843381249, 'samples': 0.5797101449275363, 'weighted': 0.5752015646328306, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2787.85it/s]100%|██████████| 1500/1500 [00:00<00:00, 5161.66it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 67.04694; Allocated: 499200; Reserved: 4194304; time used = 11.776572465896606s
epoch 10: train_loss: 47.64566; Allocated: 499200; Reserved: 6291456; time used = 11.843512296676636s
epoch 15: train_loss: 21.55514; Allocated: 499200; Reserved: 6291456; time used = 11.698503732681274s
epoch 20: train_loss: 9.03413; Allocated: 499200; Reserved: 6291456; time used = 11.83995532989502s
epoch 25: train_loss: 6.57075; Allocated: 499200; Reserved: 4194304; time used = 11.79563856124878s
epoch 30: train_loss: 4.41809; Allocated: 499200; Reserved: 6291456; time used = 11.879961252212524s
epoch 35: train_loss: 1.85233; Allocated: 499200; Reserved: 4194304; time used = 11.583533763885498s
epoch 40: train_loss: 1.88733; Allocated: 499200; Reserved: 6291456; time used = 11.810696840286255s
epoch 45: train_loss: 2.97635; Allocated: 499200; Reserved: 6291456; time used = 11.848591089248657s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 109.77302122116089.
Training classifier using 80.00% nodes...
{'micro': 0.51, 'macro': 0.5021182077496719, 'samples': 0.51, 'weighted': 0.49849974822238396, 'accuracy': 0.51}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2804.22it/s] 82%|████████▏ | 1643/2000 [00:00<00:00, 3597.88it/s]100%|██████████| 2000/2000 [00:00<00:00, 5864.13it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.42011; Allocated: 4127232; Reserved: 31457280; time used = 988.587730884552s
epoch 10: train_loss: 1.38282; Allocated: 4127232; Reserved: 29360128; time used = 993.0204768180847s
epoch 15: train_loss: 1.34533; Allocated: 4127232; Reserved: 29360128; time used = 1002.7184019088745s
epoch 20: train_loss: 1.69386; Allocated: 4127232; Reserved: 29360128; time used = 987.5264739990234s
epoch 25: train_loss: 1.24271; Allocated: 4127232; Reserved: 29360128; time used = 986.3982980251312s
epoch 30: train_loss: 1.10341; Allocated: 4127232; Reserved: 31457280; time used = 1011.8253977298737s
epoch 35: train_loss: 1.03267; Allocated: 4127232; Reserved: 29360128; time used = 998.5147812366486s
epoch 40: train_loss: 0.95019; Allocated: 4127232; Reserved: 31457280; time used = 995.1248581409454s
epoch 45: train_loss: 0.87389; Allocated: 4127232; Reserved: 29360128; time used = 985.2973334789276s
epoch 50: train_loss: 0.86044; Allocated: 4127232; Reserved: 31457280; time used = 983.9804801940918s
epoch 55: train_loss: 0.82666; Allocated: 4127232; Reserved: 29360128; time used = 987.2715167999268s
epoch 60: train_loss: 0.78199; Allocated: 4127232; Reserved: 29360128; time used = 987.2515778541565s
epoch 65: train_loss: 0.75152; Allocated: 4127232; Reserved: 31457280; time used = 1012.8912432193756s
epoch 70: train_loss: 0.72023; Allocated: 4127232; Reserved: 31457280; time used = 990.9854168891907s
epoch 75: train_loss: 0.71105; Allocated: 4127232; Reserved: 29360128; time used = 991.744784116745s
epoch 80: train_loss: 0.67741; Allocated: 4127232; Reserved: 29360128; time used = 1036.3183159828186s
epoch 85: train_loss: 0.64372; Allocated: 4127232; Reserved: 31457280; time used = 1029.3927528858185s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 17588.054399728775.
Training classifier using 80.00% nodes...
{'micro': 0.705, 'macro': 0.7046381817726715, 'samples': 0.705, 'weighted': 0.7049483116818103, 'accuracy': 0.705}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.35088; Allocated: 872448; Reserved: 4194304; time used = 5.1479692459106445s
epoch 10: train_loss: 1.31638; Allocated: 872448; Reserved: 6291456; time used = 5.0004730224609375s
epoch 15: train_loss: 1.26945; Allocated: 872448; Reserved: 6291456; time used = 5.1886725425720215s
epoch 20: train_loss: 1.22629; Allocated: 872448; Reserved: 4194304; time used = 5.094906806945801s
epoch 25: train_loss: 1.18504; Allocated: 872448; Reserved: 6291456; time used = 4.938213586807251s
epoch 30: train_loss: 1.18177; Allocated: 872448; Reserved: 4194304; time used = 5.140533685684204s
epoch 35: train_loss: 1.18044; Allocated: 872448; Reserved: 4194304; time used = 5.128120422363281s
epoch 40: train_loss: 1.16072; Allocated: 872448; Reserved: 4194304; time used = 4.93827486038208s
epoch 45: train_loss: 1.18179; Allocated: 872448; Reserved: 4194304; time used = 5.065401554107666s
epoch 50: train_loss: 1.11744; Allocated: 872448; Reserved: 4194304; time used = 5.078687429428101s
epoch 55: train_loss: 1.15034; Allocated: 872448; Reserved: 4194304; time used = 4.902125120162964s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 63.41796684265137.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.4362745098039216, 'samples': 0.5652173913043478, 'weighted': 0.4558113100312589, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 6.43187; Allocated: 915968; Reserved: 8388608; time used = 1.9368865489959717s
epoch 10: train_loss: 3.25063; Allocated: 915968; Reserved: 8388608; time used = 1.9700798988342285s
epoch 15: train_loss: 1.68322; Allocated: 915968; Reserved: 8388608; time used = 1.9844088554382324s
epoch 20: train_loss: 1.17849; Allocated: 915968; Reserved: 8388608; time used = 1.9730839729309082s
epoch 25: train_loss: 1.07382; Allocated: 915968; Reserved: 8388608; time used = 1.9846255779266357s
epoch 30: train_loss: 1.05522; Allocated: 915968; Reserved: 8388608; time used = 1.9890108108520508s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.850383043289185.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5328820116054158, 'samples': 0.5942028985507246, 'weighted': 0.5451461889944776, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2844.36it/s]100%|██████████| 1000/1000 [00:00<00:00, 4129.46it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 56.36157; Allocated: 489472; Reserved: 10485760; time used = 208.30405616760254s
epoch 10: train_loss: 78.65827; Allocated: 489472; Reserved: 8388608; time used = 200.53237628936768s
epoch 15: train_loss: 70.08333; Allocated: 489472; Reserved: 8388608; time used = 194.28094959259033s
epoch 20: train_loss: 24.14318; Allocated: 489472; Reserved: 8388608; time used = 196.99476599693298s
epoch 25: train_loss: 18.73945; Allocated: 489472; Reserved: 8388608; time used = 194.03145909309387s
epoch 30: train_loss: 6.12607; Allocated: 489472; Reserved: 8388608; time used = 192.18491315841675s
epoch 35: train_loss: 1.29870; Allocated: 489472; Reserved: 10485760; time used = 195.42845487594604s
epoch 40: train_loss: 2.10978; Allocated: 489472; Reserved: 8388608; time used = 188.28951859474182s
epoch 45: train_loss: 1.64929; Allocated: 489472; Reserved: 8388608; time used = 191.30352354049683s
epoch 50: train_loss: 1.30789; Allocated: 489472; Reserved: 8388608; time used = 192.3986325263977s
epoch 55: train_loss: 1.27592; Allocated: 489472; Reserved: 8388608; time used = 192.07130694389343s
epoch 60: train_loss: 1.26413; Allocated: 489472; Reserved: 8388608; time used = 192.3978385925293s
epoch 65: train_loss: 1.25648; Allocated: 489472; Reserved: 8388608; time used = 191.04662895202637s
epoch 70: train_loss: 1.25544; Allocated: 489472; Reserved: 8388608; time used = 195.45887780189514s
epoch 75: train_loss: 1.26240; Allocated: 489472; Reserved: 8388608; time used = 193.71779990196228s
epoch 80: train_loss: 1.24687; Allocated: 489472; Reserved: 8388608; time used = 196.32055950164795s
epoch 85: train_loss: 1.24180; Allocated: 489472; Reserved: 8388608; time used = 202.2447099685669s
epoch 90: train_loss: 1.23543; Allocated: 489472; Reserved: 8388608; time used = 205.70944595336914s
epoch 95: train_loss: 1.23312; Allocated: 489472; Reserved: 8388608; time used = 201.10726499557495s
epoch 100: train_loss: 1.22808; Allocated: 489472; Reserved: 8388608; time used = 198.53231596946716s
epoch 105: train_loss: 1.22509; Allocated: 489472; Reserved: 8388608; time used = 205.22919368743896s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 4211.854479551315.
Training classifier using 80.00% nodes...
{'micro': 0.7100000000000001, 'macro': 0.7098839535814325, 'samples': 0.71, 'weighted': 0.71, 'accuracy': 0.71}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2.05778; Allocated: 1064448; Reserved: 8388608; time used = 1.8358795642852783s
epoch 10: train_loss: 2.19511; Allocated: 1064448; Reserved: 8388608; time used = 1.747737169265747s
epoch 15: train_loss: 2.07900; Allocated: 1064448; Reserved: 8388608; time used = 1.6794517040252686s
epoch 20: train_loss: 1.66670; Allocated: 1064448; Reserved: 8388608; time used = 1.7116494178771973s
epoch 25: train_loss: 1.46009; Allocated: 1064448; Reserved: 8388608; time used = 1.7096171379089355s
epoch 30: train_loss: 1.32879; Allocated: 1064448; Reserved: 8388608; time used = 1.665212869644165s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 13.81657600402832.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.37556561085972856, 'samples': 0.5362318840579711, 'weighted': 0.39851793560233467, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2821.95it/s]100%|██████████| 1500/1500 [00:00<00:00, 5220.86it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 631914068.00000; Allocated: 709120; Reserved: 4194304; time used = 36.73517417907715s
epoch 10: train_loss: 65779836.00000; Allocated: 709120; Reserved: 4194304; time used = 36.10019540786743s
epoch 15: train_loss: 67542636.50000; Allocated: 709120; Reserved: 6291456; time used = 36.55629587173462s
epoch 20: train_loss: 24945398.75000; Allocated: 709120; Reserved: 4194304; time used = 36.75597834587097s
epoch 25: train_loss: 50279541.00000; Allocated: 709120; Reserved: 4194304; time used = 36.472973108291626s
epoch 30: train_loss: 22500717.62500; Allocated: 709120; Reserved: 4194304; time used = 36.98410987854004s
epoch 35: train_loss: 20110197.68750; Allocated: 709120; Reserved: 4194304; time used = 36.74588680267334s
epoch 40: train_loss: 14757247.37500; Allocated: 709120; Reserved: 4194304; time used = 35.81131958961487s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 324.6288115978241.
Training classifier using 80.00% nodes...
{'micro': 0.44333333333333336, 'macro': 0.3587453482190324, 'samples': 0.44333333333333336, 'weighted': 0.34798298777246145, 'accuracy': 0.44333333333333336}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2700.26it/s] 82%|████████▏ | 1649/2000 [00:00<00:00, 3479.48it/s]100%|██████████| 2000/2000 [00:00<00:00, 5737.29it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68269; Allocated: 4067840; Reserved: 31457280; time used = 970.7635221481323s
epoch 10: train_loss: 0.68012; Allocated: 4067840; Reserved: 31457280; time used = 993.3320889472961s
epoch 15: train_loss: 0.68962; Allocated: 4067840; Reserved: 31457280; time used = 999.5480508804321s
epoch 20: train_loss: 0.65917; Allocated: 4067840; Reserved: 33554432; time used = 1002.8438189029694s
epoch 25: train_loss: 0.45603; Allocated: 4067840; Reserved: 31457280; time used = 1007.8088819980621s
epoch 30: train_loss: 0.17883; Allocated: 4067840; Reserved: 31457280; time used = 1004.3960950374603s
epoch 35: train_loss: 0.15850; Allocated: 4067840; Reserved: 31457280; time used = 979.578720331192s
epoch 40: train_loss: 0.10657; Allocated: 4067840; Reserved: 31457280; time used = 982.9172515869141s
epoch 45: train_loss: 0.08800; Allocated: 4067840; Reserved: 31457280; time used = 982.1936683654785s
epoch 50: train_loss: 0.06796; Allocated: 4067840; Reserved: 31457280; time used = 970.2073450088501s
epoch 55: train_loss: 0.11032; Allocated: 4067840; Reserved: 31457280; time used = 964.9037752151489s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11638.605623483658.
Training classifier using 80.00% nodes...
{'micro': 0.695, 'macro': 0.6787360105332456, 'samples': 0.695, 'weighted': 0.676567478604345, 'accuracy': 0.695}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.67321; Allocated: 1052160; Reserved: 8388608; time used = 1.9851961135864258s
epoch 10: train_loss: 0.60113; Allocated: 1052160; Reserved: 8388608; time used = 1.9964203834533691s
epoch 15: train_loss: 0.62577; Allocated: 1052160; Reserved: 8388608; time used = 1.988086462020874s
epoch 20: train_loss: 0.61510; Allocated: 1052160; Reserved: 8388608; time used = 2.065570116043091s
epoch 25: train_loss: 0.56229; Allocated: 1052160; Reserved: 8388608; time used = 2.062267303466797s
epoch 30: train_loss: 0.58088; Allocated: 1052160; Reserved: 8388608; time used = 2.046678304672241s
epoch 35: train_loss: 0.55158; Allocated: 1052160; Reserved: 8388608; time used = 1.9882917404174805s
epoch 40: train_loss: 0.51448; Allocated: 1052160; Reserved: 8388608; time used = 2.0754334926605225s
epoch 45: train_loss: 0.54398; Allocated: 1052160; Reserved: 8388608; time used = 2.0349056720733643s
epoch 50: train_loss: 0.56238; Allocated: 1052160; Reserved: 8388608; time used = 2.0021400451660156s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.017038345336914.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.34908; Allocated: 455168; Reserved: 4194304; time used = 0.6501076221466064s
epoch 10: train_loss: 1.29563; Allocated: 455168; Reserved: 4194304; time used = 0.632678747177124s
epoch 15: train_loss: 1.26270; Allocated: 455168; Reserved: 4194304; time used = 0.631047248840332s
epoch 20: train_loss: 1.25203; Allocated: 455168; Reserved: 4194304; time used = 0.6369009017944336s
epoch 25: train_loss: 1.24763; Allocated: 455168; Reserved: 4194304; time used = 0.6343934535980225s
epoch 30: train_loss: 1.24393; Allocated: 455168; Reserved: 4194304; time used = 0.6282808780670166s
epoch 35: train_loss: 1.24300; Allocated: 455168; Reserved: 4194304; time used = 0.6352241039276123s
epoch 40: train_loss: 1.23090; Allocated: 455168; Reserved: 4194304; time used = 0.8109090328216553s
epoch 45: train_loss: 1.23047; Allocated: 455168; Reserved: 4194304; time used = 0.6325581073760986s
epoch 50: train_loss: 1.22577; Allocated: 455168; Reserved: 4194304; time used = 0.6343047618865967s
epoch 55: train_loss: 1.23085; Allocated: 455168; Reserved: 4194304; time used = 0.6361589431762695s
epoch 60: train_loss: 1.22617; Allocated: 455168; Reserved: 4194304; time used = 0.6308598518371582s
epoch 65: train_loss: 1.22247; Allocated: 455168; Reserved: 4194304; time used = 0.630157470703125s
epoch 70: train_loss: 1.22303; Allocated: 455168; Reserved: 4194304; time used = 0.6357507705688477s
epoch 75: train_loss: 1.22396; Allocated: 455168; Reserved: 4194304; time used = 0.636695384979248s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 13.368837118148804.
Training classifier using 80.00% nodes...
{'micro': 0.6842105263157895, 'macro': 0.6346153846153846, 'samples': 0.6842105263157895, 'weighted': 0.6558704453441294, 'accuracy': 0.6842105263157895}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2747.75it/s] 82%|████████▎ | 1650/2000 [00:00<00:00, 3535.07it/s]100%|██████████| 2000/2000 [00:00<00:00, 5793.65it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 78, in forward
    neg_score = get_score(hxn, neg)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 73, in get_score
    h = self.embed(sample)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 50, in embed
    return F.normalize(self.encoder(x), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 60, in forward
    hx = layer([hx, adj])
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/graph_attentionc.py", line 124, in forward
    c = masked_softmax(torch.nn.functional.leaky_relu(c, 0.2), adj)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/graph_attentionc.py", line 99, in masked_softmax
    return (masked_exps/masked_sums)
RuntimeError: CUDA out of memory. Tried to allocate 724.00 MiB (GPU 0; 10.76 GiB total capacity; 9.16 GiB already allocated; 503.12 MiB free; 9.26 GiB reserved in total by PyTorch)
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.52094; Allocated: 17328640; Reserved: 39845888; time used = 3.3511626720428467s
epoch 10: train_loss: 0.44905; Allocated: 17328640; Reserved: 39845888; time used = 3.3131914138793945s
epoch 15: train_loss: 0.44135; Allocated: 17328640; Reserved: 39845888; time used = 3.348315954208374s
epoch 20: train_loss: 0.43868; Allocated: 17328640; Reserved: 39845888; time used = 3.5156567096710205s
epoch 25: train_loss: 0.42318; Allocated: 17328640; Reserved: 39845888; time used = 3.342653274536133s
epoch 30: train_loss: 0.42638; Allocated: 17328640; Reserved: 39845888; time used = 3.347975969314575s
epoch 35: train_loss: 0.41310; Allocated: 17328640; Reserved: 39845888; time used = 3.317072868347168s
epoch 40: train_loss: 0.40260; Allocated: 17328640; Reserved: 39845888; time used = 3.3287513256073s
epoch 45: train_loss: 0.41194; Allocated: 17328640; Reserved: 39845888; time used = 3.4697751998901367s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 34.161378622055054.
Training classifier using 20.00% nodes...
{'micro': 0.7844946931241348, 'macro': 0.7589110798951343, 'samples': 0.7844946931241348, 'weighted': 0.7835163951006929, 'accuracy': 0.7844946931241348}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 8.72589; Allocated: 861696; Reserved: 6291456; time used = 6.381205320358276s
epoch 10: train_loss: 1.45719; Allocated: 861696; Reserved: 6291456; time used = 6.2236456871032715s
epoch 15: train_loss: 1.36961; Allocated: 861696; Reserved: 8388608; time used = 6.366730451583862s
epoch 20: train_loss: 1.38900; Allocated: 861696; Reserved: 6291456; time used = 6.393183708190918s
epoch 25: train_loss: 1.38811; Allocated: 861696; Reserved: 6291456; time used = 6.255795478820801s
epoch 30: train_loss: 1.36741; Allocated: 861696; Reserved: 6291456; time used = 6.333133697509766s
epoch 35: train_loss: 1.33985; Allocated: 861696; Reserved: 6291456; time used = 6.694250583648682s
epoch 40: train_loss: 1.36260; Allocated: 861696; Reserved: 6291456; time used = 7.150500297546387s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 57.842469930648804.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.39322; Allocated: 41036800; Reserved: 62914560; time used = 0.2611501216888428s
epoch 10: train_loss: 1.30725; Allocated: 41036800; Reserved: 62914560; time used = 0.24948358535766602s
epoch 15: train_loss: 1.20061; Allocated: 41036800; Reserved: 62914560; time used = 0.25321269035339355s
epoch 20: train_loss: 1.12660; Allocated: 41036800; Reserved: 62914560; time used = 0.24745774269104004s
epoch 25: train_loss: 1.09884; Allocated: 41036800; Reserved: 62914560; time used = 0.245497465133667s
epoch 30: train_loss: 1.06324; Allocated: 41036800; Reserved: 62914560; time used = 0.2513456344604492s
epoch 35: train_loss: 1.05300; Allocated: 41036800; Reserved: 62914560; time used = 0.24390554428100586s
epoch 40: train_loss: 1.03430; Allocated: 41036800; Reserved: 62914560; time used = 0.32736778259277344s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6.3030102252960205.
Training classifier using 20.00% nodes...
{'micro': 0.7576391530366426, 'macro': 0.7496817397264032, 'samples': 0.7576391530366425, 'weighted': 0.7567514274390652, 'accuracy': 0.7576391530366425}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.32062; Allocated: 40695808; Reserved: 62914560; time used = 3.698225498199463s
epoch 10: train_loss: 1.22161; Allocated: 40695808; Reserved: 62914560; time used = 3.9278695583343506s
epoch 15: train_loss: 1.15627; Allocated: 40695808; Reserved: 62914560; time used = 3.737769365310669s
epoch 20: train_loss: 1.15899; Allocated: 40695808; Reserved: 62914560; time used = 3.9005610942840576s
epoch 25: train_loss: 1.12057; Allocated: 40695808; Reserved: 62914560; time used = 3.939505100250244s
epoch 30: train_loss: 1.10639; Allocated: 40695808; Reserved: 62914560; time used = 3.817561149597168s
epoch 35: train_loss: 1.08828; Allocated: 40695808; Reserved: 62914560; time used = 3.9074058532714844s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 34.242127656936646.
Training classifier using 20.00% nodes...
{'micro': 0.7894002789400278, 'macro': 0.7925976699601138, 'samples': 0.7894002789400278, 'weighted': 0.789350991437522, 'accuracy': 0.7894002789400278}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.59859; Allocated: 849408; Reserved: 4194304; time used = 0.9520924091339111s
epoch 10: train_loss: 0.54816; Allocated: 849408; Reserved: 6291456; time used = 0.9329607486724854s
epoch 15: train_loss: 0.55434; Allocated: 849408; Reserved: 6291456; time used = 0.9361658096313477s
epoch 20: train_loss: 0.55134; Allocated: 849408; Reserved: 4194304; time used = 0.9368093013763428s
epoch 25: train_loss: 0.52445; Allocated: 849408; Reserved: 4194304; time used = 0.9576766490936279s
epoch 30: train_loss: 0.50328; Allocated: 849408; Reserved: 4194304; time used = 0.9403302669525146s
epoch 35: train_loss: 0.50928; Allocated: 849408; Reserved: 4194304; time used = 1.2242493629455566s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10.939155101776123.
Training classifier using 80.00% nodes...
{'micro': 0.6231884057971014, 'macro': 0.6211993243243243, 'samples': 0.6231884057971014, 'weighted': 0.6231884057971014, 'accuracy': 0.6231884057971014}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2.28166; Allocated: 579584; Reserved: 4194304; time used = 3.14587664604187s
epoch 10: train_loss: 1.37094; Allocated: 579584; Reserved: 4194304; time used = 3.1722450256347656s
epoch 15: train_loss: 1.38265; Allocated: 579584; Reserved: 4194304; time used = 3.3746888637542725s
epoch 20: train_loss: 1.38447; Allocated: 579584; Reserved: 4194304; time used = 3.1137402057647705s
epoch 25: train_loss: 1.37820; Allocated: 579584; Reserved: 4194304; time used = 3.1567180156707764s
epoch 30: train_loss: 1.35693; Allocated: 579584; Reserved: 4194304; time used = 3.2672300338745117s
epoch 35: train_loss: 1.31269; Allocated: 579584; Reserved: 4194304; time used = 3.087975025177002s
epoch 40: train_loss: 1.29820; Allocated: 579584; Reserved: 4194304; time used = 3.084451198577881s
epoch 45: train_loss: 1.28894; Allocated: 579584; Reserved: 4194304; time used = 3.237666606903076s
epoch 50: train_loss: 1.26981; Allocated: 579584; Reserved: 4194304; time used = 3.113537311553955s
epoch 55: train_loss: 1.26094; Allocated: 579584; Reserved: 4194304; time used = 3.2380053997039795s
epoch 60: train_loss: 1.24593; Allocated: 579584; Reserved: 4194304; time used = 3.1834564208984375s
epoch 65: train_loss: 1.25108; Allocated: 579584; Reserved: 4194304; time used = 3.152055501937866s
epoch 70: train_loss: 1.24323; Allocated: 579584; Reserved: 4194304; time used = 3.313042163848877s
epoch 75: train_loss: 1.23796; Allocated: 579584; Reserved: 4194304; time used = 3.1192073822021484s
epoch 80: train_loss: 1.23044; Allocated: 579584; Reserved: 4194304; time used = 3.0741217136383057s
epoch 85: train_loss: 1.22773; Allocated: 579584; Reserved: 4194304; time used = 3.3077433109283447s
epoch 90: train_loss: 1.23013; Allocated: 579584; Reserved: 4194304; time used = 3.0976881980895996s
epoch 95: train_loss: 1.22999; Allocated: 579584; Reserved: 4194304; time used = 3.0935144424438477s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 64.08280062675476.
Training classifier using 80.00% nodes...
{'micro': 0.631578947368421, 'macro': 0.49042145593869735, 'samples': 0.631578947368421, 'weighted': 0.5327687033676145, 'accuracy': 0.631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2653.57it/s] 82%|████████▏ | 1645/2000 [00:00<00:00, 3423.78it/s]100%|██████████| 2000/2000 [00:00<00:00, 5654.58it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.47271; Allocated: 3844608; Reserved: 31457280; time used = 818.099413394928s
epoch 10: train_loss: 1.39124; Allocated: 3844608; Reserved: 33554432; time used = 819.8858942985535s
epoch 15: train_loss: 1.38727; Allocated: 3844608; Reserved: 31457280; time used = 818.5815579891205s
epoch 20: train_loss: 1.38635; Allocated: 3844608; Reserved: 33554432; time used = 812.7601215839386s
epoch 25: train_loss: 1.38654; Allocated: 3844608; Reserved: 31457280; time used = 810.5192799568176s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 4730.768107652664.
Training classifier using 80.00% nodes...
{'micro': 0.7299999999999999, 'macro': 0.7295673076923078, 'samples': 0.73, 'weighted': 0.7292427884615387, 'accuracy': 0.73}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2796.43it/s] 82%|████████▏ | 1648/2000 [00:00<00:00, 3590.55it/s]100%|██████████| 2000/2000 [00:00<00:00, 5861.11it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 138, in evaluate
    loss.backward()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/tensor.py", line 221, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/autograd/__init__.py", line 132, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: CUDA out of memory. Tried to allocate 306.00 MiB (GPU 0; 10.76 GiB total capacity; 9.46 GiB already allocated; 99.12 MiB free; 9.65 GiB reserved in total by PyTorch)
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.61093; Allocated: 715264; Reserved: 4194304; time used = 0.9174597263336182s
epoch 10: train_loss: 0.49273; Allocated: 715264; Reserved: 4194304; time used = 0.9155075550079346s
epoch 15: train_loss: 0.40980; Allocated: 715264; Reserved: 4194304; time used = 0.911442756652832s
epoch 20: train_loss: 0.32116; Allocated: 715264; Reserved: 4194304; time used = 0.9083249568939209s
epoch 25: train_loss: 0.24972; Allocated: 715264; Reserved: 4194304; time used = 0.9229061603546143s
epoch 30: train_loss: 0.16969; Allocated: 715264; Reserved: 4194304; time used = 0.9249305725097656s
epoch 35: train_loss: 0.10312; Allocated: 715264; Reserved: 4194304; time used = 1.0819618701934814s
epoch 40: train_loss: 0.06210; Allocated: 715264; Reserved: 4194304; time used = 0.9228127002716064s
epoch 45: train_loss: 0.02323; Allocated: 715264; Reserved: 4194304; time used = 0.9209308624267578s
epoch 50: train_loss: 0.01432; Allocated: 715264; Reserved: 4194304; time used = 0.9175906181335449s
epoch 55: train_loss: 0.02025; Allocated: 715264; Reserved: 4194304; time used = 0.917921781539917s
epoch 60: train_loss: 0.00516; Allocated: 715264; Reserved: 4194304; time used = 0.9214382171630859s
epoch 65: train_loss: 0.08516; Allocated: 715264; Reserved: 4194304; time used = 0.9542186260223389s
epoch 70: train_loss: 0.01222; Allocated: 715264; Reserved: 4194304; time used = 0.9514546394348145s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.766148805618286.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.5739833936555248, 'samples': 0.5797101449275363, 'weighted': 0.5775626132005319, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2828.26it/s]100%|██████████| 1500/1500 [00:00<00:00, 5225.21it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 1.39407; Allocated: 494080; Reserved: 6291456; time used = 35.51146936416626s
epoch 10: train_loss: 1.42552; Allocated: 494080; Reserved: 6291456; time used = 35.382359981536865s
epoch 15: train_loss: 1.39666; Allocated: 494080; Reserved: 4194304; time used = 35.590901613235474s
epoch 20: train_loss: 1.39068; Allocated: 494080; Reserved: 4194304; time used = 35.27437663078308s
epoch 25: train_loss: 1.38592; Allocated: 494080; Reserved: 8388608; time used = 36.621586322784424s
epoch 30: train_loss: 1.38690; Allocated: 494080; Reserved: 4194304; time used = 35.61183476448059s
epoch 35: train_loss: 1.38562; Allocated: 494080; Reserved: 8388608; time used = 35.91024351119995s
epoch 40: train_loss: 1.38390; Allocated: 494080; Reserved: 6291456; time used = 35.61353015899658s
epoch 45: train_loss: 1.38398; Allocated: 494080; Reserved: 6291456; time used = 35.434465169906616s
epoch 50: train_loss: 1.38468; Allocated: 494080; Reserved: 6291456; time used = 34.97873497009277s
epoch 55: train_loss: 1.38354; Allocated: 494080; Reserved: 4194304; time used = 35.50887966156006s
epoch 60: train_loss: 1.38324; Allocated: 494080; Reserved: 4194304; time used = 35.37018132209778s
epoch 65: train_loss: 1.38404; Allocated: 494080; Reserved: 8388608; time used = 35.45475506782532s
epoch 70: train_loss: 1.38309; Allocated: 494080; Reserved: 4194304; time used = 35.97019124031067s
epoch 75: train_loss: 1.38377; Allocated: 494080; Reserved: 6291456; time used = 35.77137851715088s
epoch 80: train_loss: 1.38311; Allocated: 494080; Reserved: 4194304; time used = 35.882537603378296s
epoch 85: train_loss: 1.38288; Allocated: 494080; Reserved: 6291456; time used = 35.77775549888611s
epoch 90: train_loss: 1.38335; Allocated: 494080; Reserved: 6291456; time used = 35.638901710510254s
epoch 95: train_loss: 1.38279; Allocated: 494080; Reserved: 6291456; time used = 35.77891802787781s
epoch 100: train_loss: 1.38277; Allocated: 494080; Reserved: 6291456; time used = 35.670982122421265s
epoch 105: train_loss: 1.38507; Allocated: 494080; Reserved: 4194304; time used = 35.18389415740967s
epoch 110: train_loss: 1.38343; Allocated: 494080; Reserved: 6291456; time used = 36.58154249191284s
epoch 115: train_loss: 1.38189; Allocated: 494080; Reserved: 6291456; time used = 36.430823802948s
epoch 120: train_loss: 1.38088; Allocated: 494080; Reserved: 6291456; time used = 36.64350700378418s
epoch 125: train_loss: 1.38009; Allocated: 494080; Reserved: 6291456; time used = 36.17763686180115s
epoch 130: train_loss: 1.38131; Allocated: 494080; Reserved: 6291456; time used = 35.93495321273804s
epoch 135: train_loss: 1.37863; Allocated: 494080; Reserved: 6291456; time used = 35.489718437194824s
epoch 140: train_loss: 1.37981; Allocated: 494080; Reserved: 6291456; time used = 35.96133089065552s
epoch 145: train_loss: 1.37789; Allocated: 494080; Reserved: 4194304; time used = 36.076860666275024s
epoch 150: train_loss: 1.37628; Allocated: 494080; Reserved: 6291456; time used = 36.113821506500244s
epoch 155: train_loss: 1.37602; Allocated: 494080; Reserved: 6291456; time used = 35.51107621192932s
epoch 160: train_loss: 1.37852; Allocated: 494080; Reserved: 4194304; time used = 36.17784070968628s
epoch 165: train_loss: 1.37482; Allocated: 494080; Reserved: 6291456; time used = 35.74530839920044s
epoch 170: train_loss: 1.37427; Allocated: 494080; Reserved: 8388608; time used = 35.964378356933594s
epoch 175: train_loss: 1.37526; Allocated: 494080; Reserved: 6291456; time used = 36.491668701171875s
epoch 180: train_loss: 1.37341; Allocated: 494080; Reserved: 4194304; time used = 36.369952917099s
epoch 185: train_loss: 1.37426; Allocated: 494080; Reserved: 6291456; time used = 36.0825355052948s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1336.6230280399323.
Training classifier using 80.00% nodes...
{'micro': 0.3333333333333333, 'macro': 0.2081775118424333, 'samples': 0.3333333333333333, 'weighted': 0.20193218648716033, 'accuracy': 0.3333333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2863.72it/s]100%|██████████| 1500/1500 [00:00<00:00, 5266.45it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.39298; Allocated: 483840; Reserved: 4194304; time used = 56.26938080787659s
epoch 10: train_loss: 1.38893; Allocated: 483840; Reserved: 6291456; time used = 56.40076208114624s
epoch 15: train_loss: 1.38709; Allocated: 483840; Reserved: 6291456; time used = 56.04062080383301s
epoch 20: train_loss: 1.38663; Allocated: 483840; Reserved: 6291456; time used = 55.904083490371704s
epoch 25: train_loss: 1.38648; Allocated: 483840; Reserved: 6291456; time used = 56.043936252593994s
epoch 30: train_loss: 1.38639; Allocated: 483840; Reserved: 4194304; time used = 56.02565574645996s
epoch 35: train_loss: 1.38634; Allocated: 483840; Reserved: 4194304; time used = 55.45077729225159s
epoch 40: train_loss: 1.38632; Allocated: 483840; Reserved: 6291456; time used = 56.27403736114502s
epoch 45: train_loss: 1.38631; Allocated: 483840; Reserved: 6291456; time used = 55.63259315490723s
epoch 50: train_loss: 1.38630; Allocated: 483840; Reserved: 4194304; time used = 55.745749711990356s
epoch 55: train_loss: 1.38630; Allocated: 483840; Reserved: 4194304; time used = 56.11913204193115s
epoch 60: train_loss: 1.38630; Allocated: 483840; Reserved: 8388608; time used = 55.81311511993408s
epoch 65: train_loss: 1.38630; Allocated: 483840; Reserved: 8388608; time used = 56.30512285232544s
epoch 70: train_loss: 1.38630; Allocated: 483840; Reserved: 6291456; time used = 55.25945162773132s
epoch 75: train_loss: 1.38630; Allocated: 483840; Reserved: 4194304; time used = 55.15052032470703s
epoch 80: train_loss: 1.38629; Allocated: 483840; Reserved: 4194304; time used = 56.573795318603516s
epoch 85: train_loss: 1.38629; Allocated: 483840; Reserved: 4194304; time used = 55.53137493133545s
epoch 90: train_loss: 1.38629; Allocated: 483840; Reserved: 4194304; time used = 55.267009258270264s
epoch 95: train_loss: 1.38629; Allocated: 483840; Reserved: 4194304; time used = 54.78714632987976s
epoch 100: train_loss: 1.38629; Allocated: 483840; Reserved: 4194304; time used = 55.01247787475586s
epoch 105: train_loss: 1.38629; Allocated: 483840; Reserved: 6291456; time used = 56.16079616546631s
epoch 110: train_loss: 1.38629; Allocated: 483840; Reserved: 6291456; time used = 54.49744701385498s
epoch 115: train_loss: 1.38629; Allocated: 483840; Reserved: 8388608; time used = 54.91841006278992s
epoch 120: train_loss: 1.38629; Allocated: 483840; Reserved: 6291456; time used = 55.2957980632782s
epoch 125: train_loss: 1.38629; Allocated: 483840; Reserved: 6291456; time used = 55.93496799468994s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1429.7484803199768.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2606.20it/s]100%|██████████| 1500/1500 [00:00<00:00, 4923.76it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.41009783744812s
epoch 10: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.180089473724365s
epoch 15: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.076163291931152s
epoch 20: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.025043249130249s
epoch 25: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.279393911361694s
epoch 30: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.10672378540039s
epoch 35: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.114974975585938s
epoch 40: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.039149522781372s
epoch 45: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.198630332946777s
epoch 50: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.14769458770752s
epoch 55: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.019944190979004s
epoch 60: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.407678365707397s
epoch 65: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.167317152023315s
epoch 70: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.169723749160767s
epoch 75: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.13825798034668s
epoch 80: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.328351020812988s
epoch 85: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.072309017181396s
epoch 90: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.114156484603882s
epoch 95: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.316019296646118s
epoch 100: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.072590827941895s
epoch 105: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.118440389633179s
epoch 110: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.078125715255737s
epoch 115: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.145374298095703s
epoch 120: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.948147773742676s
epoch 125: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.041191577911377s
epoch 130: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.960097789764404s
epoch 135: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.0968918800354s
epoch 140: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.03166675567627s
epoch 145: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.063611268997192s
epoch 150: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.152090549468994s
epoch 155: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.927006244659424s
epoch 160: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.020958423614502s
epoch 165: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.031366348266602s
epoch 170: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.226804971694946s
epoch 175: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.895117998123169s
epoch 180: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.890073537826538s
epoch 185: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.208842515945435s
epoch 190: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.091701745986938s
epoch 195: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.058104991912842s
epoch 200: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.063115119934082s
epoch 205: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.23272967338562s
epoch 210: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.075500726699829s
epoch 215: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.969030857086182s
epoch 220: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.980088710784912s
epoch 225: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.183672904968262s
epoch 230: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.935755968093872s
epoch 235: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.962391138076782s
epoch 240: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.156354427337646s
epoch 245: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.015399932861328s
epoch 250: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.035896301269531s
epoch 255: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.914527654647827s
epoch 260: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.095296144485474s
epoch 265: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.098503589630127s
epoch 270: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.899918079376221s
epoch 275: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.185485124588013s
epoch 280: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.098369359970093s
epoch 285: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.963341474533081s
epoch 290: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.093676328659058s
epoch 295: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.174612998962402s
epoch 300: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.035009860992432s
epoch 305: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.101927280426025s
epoch 310: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.297595024108887s
epoch 315: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.103718519210815s
epoch 320: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.079911470413208s
epoch 325: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.035853624343872s
epoch 330: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.234413385391235s
epoch 335: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.174459457397461s
epoch 340: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.955567359924316s
epoch 345: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.999900817871094s
epoch 350: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.22262692451477s
epoch 355: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.949224948883057s
epoch 360: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.937616586685181s
epoch 365: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.118271827697754s
epoch 370: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.997303009033203s
epoch 375: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.050198793411255s
epoch 380: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.942582845687866s
epoch 385: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.24079155921936s
epoch 390: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.059297323226929s
epoch 395: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.14454460144043s
epoch 400: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.138612508773804s
epoch 405: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.046125888824463s
epoch 410: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.232057094573975s
epoch 415: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 7.957211971282959s
epoch 420: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.312640905380249s
epoch 425: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.083487033843994s
epoch 430: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.125756740570068s
epoch 435: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.106158256530762s
epoch 440: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.267699003219604s
epoch 445: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.134242534637451s
epoch 450: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.181527614593506s
epoch 455: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.353989124298096s
epoch 460: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.15682601928711s
epoch 465: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.095650434494019s
epoch 470: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.077372550964355s
epoch 475: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.189729928970337s
epoch 480: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.102250099182129s
epoch 485: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.136662006378174s
epoch 490: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.267282485961914s
epoch 495: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.022635698318481s
epoch 500: train_loss: 0.69315; Allocated: 759808; Reserved: 12582912; time used = 8.121539831161499s
Finished training. Time used = 813.9555249214172.
Training classifier using 80.00% nodes...
{'micro': 0.36, 'macro': 0.2471347759342208, 'samples': 0.36, 'weighted': 0.2397207326561942, 'accuracy': 0.36}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2813.92it/s]100%|██████████| 1000/1000 [00:00<00:00, 4088.80it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.25802; Allocated: 40765952; Reserved: 65011712; time used = 3.857921838760376s
epoch 10: train_loss: 1.11147; Allocated: 40765952; Reserved: 65011712; time used = 4.019882440567017s
epoch 15: train_loss: 0.98853; Allocated: 40765952; Reserved: 65011712; time used = 3.8858673572540283s
epoch 20: train_loss: 0.88260; Allocated: 40765952; Reserved: 65011712; time used = 4.013707160949707s
epoch 25: train_loss: 0.75150; Allocated: 40765952; Reserved: 65011712; time used = 4.02954363822937s
epoch 30: train_loss: 0.69884; Allocated: 40765952; Reserved: 65011712; time used = 3.7850334644317627s
epoch 35: train_loss: 0.77803; Allocated: 40765952; Reserved: 65011712; time used = 3.9296176433563232s
epoch 40: train_loss: 0.78403; Allocated: 40765952; Reserved: 65011712; time used = 3.713953971862793s
epoch 45: train_loss: 0.69830; Allocated: 40765952; Reserved: 65011712; time used = 3.9918360710144043s
epoch 50: train_loss: 0.72111; Allocated: 40765952; Reserved: 65011712; time used = 3.743187189102173s
epoch 55: train_loss: 0.67563; Allocated: 40765952; Reserved: 65011712; time used = 3.6545372009277344s
epoch 60: train_loss: 0.63667; Allocated: 40765952; Reserved: 65011712; time used = 3.9307665824890137s
epoch 65: train_loss: 0.64324; Allocated: 40765952; Reserved: 65011712; time used = 3.752800226211548s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 57.762279748916626.
Training classifier using 20.00% nodes...
{'micro': 0.7382401420058324, 'macro': 0.7360366317079751, 'samples': 0.7382401420058324, 'weighted': 0.7371544672368301, 'accuracy': 0.7382401420058324}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2836.17it/s]100%|██████████| 1500/1500 [00:00<00:00, 5221.73it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 487.01606; Allocated: 761856; Reserved: 12582912; time used = 7.887170791625977s
epoch 10: train_loss: 112.88577; Allocated: 761856; Reserved: 12582912; time used = 7.732064723968506s
epoch 15: train_loss: 6.81156; Allocated: 761856; Reserved: 12582912; time used = 7.77750825881958s
epoch 20: train_loss: 2.78149; Allocated: 761856; Reserved: 12582912; time used = 7.831135988235474s
epoch 25: train_loss: 1.85142; Allocated: 761856; Reserved: 12582912; time used = 8.019061088562012s
epoch 30: train_loss: 1.40286; Allocated: 761856; Reserved: 12582912; time used = 7.789580821990967s
epoch 35: train_loss: 1.40081; Allocated: 761856; Reserved: 12582912; time used = 7.817858934402466s
epoch 40: train_loss: 1.39632; Allocated: 761856; Reserved: 12582912; time used = 7.723121881484985s
epoch 45: train_loss: 1.38644; Allocated: 761856; Reserved: 12582912; time used = 7.921684980392456s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 77.2151210308075.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 4.42767; Allocated: 53561856; Reserved: 109051904; time used = 3.854532480239868s
epoch 10: train_loss: 1.53503; Allocated: 53561856; Reserved: 109051904; time used = 4.032931804656982s
epoch 15: train_loss: 1.38303; Allocated: 53561856; Reserved: 109051904; time used = 3.8609089851379395s
epoch 20: train_loss: 1.38220; Allocated: 53561856; Reserved: 109051904; time used = 3.912973165512085s
epoch 25: train_loss: 1.34622; Allocated: 53561856; Reserved: 109051904; time used = 4.002740144729614s
epoch 30: train_loss: 1.32217; Allocated: 53561856; Reserved: 109051904; time used = 3.8953990936279297s
epoch 35: train_loss: 1.34332; Allocated: 53561856; Reserved: 109051904; time used = 3.9677209854125977s
epoch 40: train_loss: 1.30462; Allocated: 53561856; Reserved: 109051904; time used = 4.020273447036743s
epoch 45: train_loss: 1.30131; Allocated: 53561856; Reserved: 109051904; time used = 3.8639485836029053s
epoch 50: train_loss: 1.30691; Allocated: 53561856; Reserved: 109051904; time used = 3.9659042358398438s
epoch 55: train_loss: 1.31906; Allocated: 53561856; Reserved: 109051904; time used = 3.8539059162139893s
epoch 60: train_loss: 1.26740; Allocated: 53561856; Reserved: 109051904; time used = 4.013852596282959s
epoch 65: train_loss: 1.26435; Allocated: 53561856; Reserved: 109051904; time used = 3.889753818511963s
epoch 70: train_loss: 1.24970; Allocated: 53561856; Reserved: 109051904; time used = 3.8502323627471924s
epoch 75: train_loss: 1.24062; Allocated: 53561856; Reserved: 109051904; time used = 3.875021457672119s
epoch 80: train_loss: 1.22444; Allocated: 53561856; Reserved: 109051904; time used = 3.9787955284118652s
epoch 85: train_loss: 1.20062; Allocated: 53561856; Reserved: 109051904; time used = 3.8819832801818848s
epoch 90: train_loss: 1.15646; Allocated: 53561856; Reserved: 109051904; time used = 3.870642900466919s
epoch 95: train_loss: 1.16632; Allocated: 53561856; Reserved: 109051904; time used = 3.8660058975219727s
epoch 100: train_loss: 1.11909; Allocated: 53561856; Reserved: 109051904; time used = 4.028455018997192s
epoch 105: train_loss: 1.14920; Allocated: 53561856; Reserved: 109051904; time used = 3.847533941268921s
epoch 110: train_loss: 1.12346; Allocated: 53561856; Reserved: 109051904; time used = 3.8777196407318115s
epoch 115: train_loss: 1.09468; Allocated: 53561856; Reserved: 109051904; time used = 3.9047048091888428s
epoch 120: train_loss: 1.06727; Allocated: 53561856; Reserved: 109051904; time used = 3.9931693077087402s
epoch 125: train_loss: 1.09095; Allocated: 53561856; Reserved: 109051904; time used = 3.907900094985962s
epoch 130: train_loss: 1.06979; Allocated: 53561856; Reserved: 109051904; time used = 3.919431686401367s
epoch 135: train_loss: 1.08489; Allocated: 53561856; Reserved: 109051904; time used = 3.835881471633911s
epoch 140: train_loss: 1.04674; Allocated: 53561856; Reserved: 109051904; time used = 4.020982980728149s
epoch 145: train_loss: 1.05661; Allocated: 53561856; Reserved: 109051904; time used = 3.8536264896392822s
epoch 150: train_loss: 1.04347; Allocated: 53561856; Reserved: 109051904; time used = 3.8912250995635986s
epoch 155: train_loss: 1.02262; Allocated: 53561856; Reserved: 109051904; time used = 3.8964314460754395s
epoch 160: train_loss: 1.01337; Allocated: 53561856; Reserved: 109051904; time used = 4.0561301708221436s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 131.3636918067932.
Training classifier using 20.00% nodes...
{'micro': 0.46877323420074357, 'macro': 0.399173578019867, 'samples': 0.47370398196844477, 'weighted': 0.449508382184195, 'accuracy': 0.47370398196844477}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2790.97it/s]100%|██████████| 1000/1000 [00:00<00:00, 4058.24it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 472205.28125; Allocated: 625664; Reserved: 6291456; time used = 56.802016496658325s
epoch 10: train_loss: 50385.23340; Allocated: 625664; Reserved: 6291456; time used = 56.48386335372925s
epoch 15: train_loss: 33291.96582; Allocated: 625664; Reserved: 6291456; time used = 56.336464643478394s
epoch 20: train_loss: 13906.44739; Allocated: 625664; Reserved: 6291456; time used = 55.88500928878784s
epoch 25: train_loss: 11548.88031; Allocated: 625664; Reserved: 6291456; time used = 55.61612343788147s
epoch 30: train_loss: 111.04335; Allocated: 625664; Reserved: 6291456; time used = 56.47675704956055s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 386.60044169425964.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.69623; Allocated: 657920; Reserved: 29360128; time used = 1.47636079788208s
epoch 10: train_loss: 0.67356; Allocated: 657920; Reserved: 29360128; time used = 1.4775755405426025s
epoch 15: train_loss: 0.63274; Allocated: 657920; Reserved: 8388608; time used = 1.431401014328003s
epoch 20: train_loss: 0.61024; Allocated: 657920; Reserved: 8388608; time used = 1.4637706279754639s
epoch 25: train_loss: 0.58488; Allocated: 657920; Reserved: 8388608; time used = 1.4570178985595703s
epoch 30: train_loss: 0.58182; Allocated: 657920; Reserved: 8388608; time used = 1.4609441757202148s
epoch 35: train_loss: 0.56585; Allocated: 657920; Reserved: 8388608; time used = 1.4386756420135498s
epoch 40: train_loss: 0.56130; Allocated: 657920; Reserved: 8388608; time used = 1.461211919784546s
epoch 45: train_loss: 0.55529; Allocated: 657920; Reserved: 8388608; time used = 1.4734342098236084s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 17.648955583572388.
Training classifier using 80.00% nodes...
{'micro': 0.5789473684210527, 'macro': 0.3666666666666667, 'samples': 0.5789473684210527, 'weighted': 0.4245614035087719, 'accuracy': 0.5789473684210527}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2739.58it/s] 82%|████████▏ | 1640/2000 [00:00<00:00, 3522.37it/s]100%|██████████| 2000/2000 [00:00<00:00, 5768.67it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 321798.03800; Allocated: 4254208; Reserved: 31457280; time used = 99.45006680488586s
epoch 10: train_loss: 25669.92491; Allocated: 4254208; Reserved: 31457280; time used = 101.03343176841736s
epoch 15: train_loss: 30050.82782; Allocated: 4254208; Reserved: 31457280; time used = 99.38992047309875s
epoch 20: train_loss: 6098.28493; Allocated: 4254208; Reserved: 31457280; time used = 99.34072279930115s
epoch 25: train_loss: 8655.86469; Allocated: 4254208; Reserved: 31457280; time used = 101.25835299491882s
epoch 30: train_loss: 17507.91106; Allocated: 4254208; Reserved: 31457280; time used = 100.79348802566528s
epoch 35: train_loss: 12771.61655; Allocated: 4254208; Reserved: 31457280; time used = 99.179931640625s
epoch 40: train_loss: 5801.91526; Allocated: 4254208; Reserved: 31457280; time used = 98.73185968399048s
epoch 45: train_loss: 1.41489; Allocated: 4254208; Reserved: 31457280; time used = 101.92011570930481s
epoch 50: train_loss: 1.38750; Allocated: 4254208; Reserved: 31457280; time used = 101.61015391349792s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1087.8652069568634.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.64621; Allocated: 778240; Reserved: 4194304; time used = 4.227153062820435s
epoch 10: train_loss: 0.63403; Allocated: 778240; Reserved: 4194304; time used = 4.390507698059082s
epoch 15: train_loss: 0.63256; Allocated: 778240; Reserved: 4194304; time used = 4.292530536651611s
epoch 20: train_loss: 0.62034; Allocated: 778240; Reserved: 4194304; time used = 4.403890132904053s
epoch 25: train_loss: 0.63521; Allocated: 778240; Reserved: 4194304; time used = 4.166069269180298s
epoch 30: train_loss: 0.62533; Allocated: 778240; Reserved: 4194304; time used = 4.314319372177124s
epoch 35: train_loss: 0.62267; Allocated: 778240; Reserved: 4194304; time used = 4.180107116699219s
epoch 40: train_loss: 0.62762; Allocated: 778240; Reserved: 6291456; time used = 4.359827518463135s
epoch 45: train_loss: 0.62789; Allocated: 778240; Reserved: 4194304; time used = 4.217592239379883s
epoch 50: train_loss: 0.62451; Allocated: 778240; Reserved: 4194304; time used = 4.321192026138306s
epoch 55: train_loss: 0.59066; Allocated: 778240; Reserved: 4194304; time used = 4.149360418319702s
epoch 60: train_loss: 0.55442; Allocated: 778240; Reserved: 4194304; time used = 4.430257558822632s
epoch 65: train_loss: 0.54853; Allocated: 778240; Reserved: 4194304; time used = 4.221387147903442s
epoch 70: train_loss: 0.49137; Allocated: 778240; Reserved: 4194304; time used = 4.223700284957886s
epoch 75: train_loss: 0.54520; Allocated: 778240; Reserved: 6291456; time used = 4.355208158493042s
epoch 80: train_loss: 0.51518; Allocated: 778240; Reserved: 6291456; time used = 4.2241504192352295s
epoch 85: train_loss: 0.50330; Allocated: 778240; Reserved: 6291456; time used = 4.3897764682769775s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 78.92243695259094.
Training classifier using 80.00% nodes...
{'micro': 0.6231884057971014, 'macro': 0.5922727272727273, 'samples': 0.6231884057971014, 'weighted': 0.6004084321475626, 'accuracy': 0.6231884057971014}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2764.29it/s] 82%|████████▏ | 1636/2000 [00:00<00:00, 3549.59it/s]100%|██████████| 2000/2000 [00:00<00:00, 5796.19it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3842560; Reserved: 29360128; time used = 1192.5802493095398s
epoch 10: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1178.9794189929962s
epoch 15: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1170.051542520523s
epoch 20: train_loss: 0.69315; Allocated: 3842560; Reserved: 35651584; time used = 1172.434329032898s
epoch 25: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1168.7338650226593s
epoch 30: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1175.6795105934143s
epoch 35: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1172.1075584888458s
epoch 40: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1173.939480304718s
epoch 45: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1176.1187291145325s
epoch 50: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1170.7719802856445s
epoch 55: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1236.904189825058s
epoch 60: train_loss: 0.69315; Allocated: 3842560; Reserved: 29360128; time used = 1352.515822649002s
epoch 65: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1356.2839486598969s
epoch 70: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1358.8860940933228s
epoch 75: train_loss: 0.69315; Allocated: 3842560; Reserved: 35651584; time used = 1344.652811050415s
epoch 80: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1353.0224359035492s
epoch 85: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1372.256851196289s
epoch 90: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1390.7231514453888s
epoch 95: train_loss: 0.69315; Allocated: 3842560; Reserved: 35651584; time used = 1342.5434250831604s
epoch 100: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1166.9784660339355s
epoch 105: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1164.0858554840088s
epoch 110: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1163.8960189819336s
epoch 115: train_loss: 0.69315; Allocated: 3842560; Reserved: 33554432; time used = 1164.7547702789307s
epoch 120: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1170.4496386051178s
epoch 125: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1168.1256365776062s
epoch 130: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1168.6317224502563s
epoch 135: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1168.011803150177s
epoch 140: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1171.4449625015259s
epoch 145: train_loss: 0.69315; Allocated: 3842560; Reserved: 31457280; time used = 1166.685038805008s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 35535.96806359291.
Training classifier using 80.00% nodes...
{'micro': 0.72, 'macro': 0.7184160905091137, 'samples': 0.72, 'weighted': 0.7177825267127593, 'accuracy': 0.72}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.42653; Allocated: 41490432; Reserved: 65011712; time used = 0.80747389793396s
epoch 10: train_loss: 0.40799; Allocated: 41490432; Reserved: 65011712; time used = 0.7941901683807373s
epoch 15: train_loss: 0.39733; Allocated: 41490432; Reserved: 65011712; time used = 0.7877202033996582s
epoch 20: train_loss: 0.37801; Allocated: 41490432; Reserved: 65011712; time used = 1.0181264877319336s
epoch 25: train_loss: 0.37491; Allocated: 41490432; Reserved: 65011712; time used = 0.7982263565063477s
epoch 30: train_loss: 0.34761; Allocated: 41490432; Reserved: 65011712; time used = 0.7848751544952393s
epoch 35: train_loss: 0.29109; Allocated: 41490432; Reserved: 65011712; time used = 0.7837550640106201s
epoch 40: train_loss: 0.24687; Allocated: 41490432; Reserved: 65011712; time used = 0.7804501056671143s
epoch 45: train_loss: 0.20931; Allocated: 41490432; Reserved: 65011712; time used = 1.0343492031097412s
epoch 50: train_loss: 0.20667; Allocated: 41490432; Reserved: 65011712; time used = 0.7780389785766602s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.868730306625366.
Training classifier using 20.00% nodes...
{'micro': 0.44535311271712946, 'macro': 0.3605630833589501, 'samples': 0.44535311271712946, 'weighted': 0.3941880422894906, 'accuracy': 0.44535311271712946}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.70053; Allocated: 849920; Reserved: 27262976; time used = 1.2285752296447754s
epoch 10: train_loss: 0.69640; Allocated: 849920; Reserved: 27262976; time used = 1.2171409130096436s
epoch 15: train_loss: 0.69313; Allocated: 849920; Reserved: 6291456; time used = 1.2323086261749268s
epoch 20: train_loss: 0.69454; Allocated: 849920; Reserved: 6291456; time used = 1.2248258590698242s
epoch 25: train_loss: 0.69487; Allocated: 849920; Reserved: 6291456; time used = 1.2301321029663086s
epoch 30: train_loss: 0.69249; Allocated: 849920; Reserved: 6291456; time used = 1.2134978771209717s
epoch 35: train_loss: 0.69668; Allocated: 849920; Reserved: 6291456; time used = 1.2276742458343506s
epoch 40: train_loss: 0.68727; Allocated: 849920; Reserved: 6291456; time used = 1.2283215522766113s
epoch 45: train_loss: 0.67216; Allocated: 849920; Reserved: 6291456; time used = 1.2282729148864746s
epoch 50: train_loss: 0.70496; Allocated: 849920; Reserved: 27262976; time used = 1.2190439701080322s
epoch 55: train_loss: 0.69004; Allocated: 849920; Reserved: 6291456; time used = 1.2348237037658691s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 17.583974599838257.
Training classifier using 80.00% nodes...
{'micro': 0.5789473684210527, 'macro': 0.3666666666666667, 'samples': 0.5789473684210527, 'weighted': 0.4245614035087719, 'accuracy': 0.5789473684210527}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.58363; Allocated: 666112; Reserved: 2097152; time used = 3.0438904762268066s
epoch 10: train_loss: 0.46543; Allocated: 666112; Reserved: 2097152; time used = 3.0490760803222656s
epoch 15: train_loss: 0.36138; Allocated: 666112; Reserved: 2097152; time used = 3.2054202556610107s
epoch 20: train_loss: 0.69250; Allocated: 666112; Reserved: 2097152; time used = 3.038647174835205s
epoch 25: train_loss: 0.69150; Allocated: 666112; Reserved: 2097152; time used = 3.0452988147735596s
epoch 30: train_loss: 0.66875; Allocated: 666112; Reserved: 2097152; time used = 3.18747878074646s
epoch 35: train_loss: 0.35509; Allocated: 666112; Reserved: 2097152; time used = 3.0373148918151855s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.45647430419922.
Training classifier using 80.00% nodes...
{'micro': 0.6578947368421053, 'macro': 0.6557491289198606, 'samples': 0.6578947368421053, 'weighted': 0.6600403447643499, 'accuracy': 0.6578947368421053}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2768.24it/s]100%|██████████| 1500/1500 [00:00<00:00, 5138.66it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69314; Allocated: 709120; Reserved: 6291456; time used = 36.359933614730835s
epoch 10: train_loss: 0.69314; Allocated: 709120; Reserved: 6291456; time used = 35.829010248184204s
epoch 15: train_loss: 0.69313; Allocated: 709120; Reserved: 8388608; time used = 36.244295597076416s
epoch 20: train_loss: 0.69322; Allocated: 709120; Reserved: 6291456; time used = 36.372878551483154s
epoch 25: train_loss: 0.69317; Allocated: 709120; Reserved: 6291456; time used = 36.42264485359192s
epoch 30: train_loss: 0.69314; Allocated: 709120; Reserved: 6291456; time used = 36.25303912162781s
epoch 35: train_loss: 0.69314; Allocated: 709120; Reserved: 6291456; time used = 35.63941979408264s
epoch 40: train_loss: 0.69315; Allocated: 709120; Reserved: 6291456; time used = 35.81331539154053s
epoch 45: train_loss: 0.69314; Allocated: 709120; Reserved: 6291456; time used = 36.15801763534546s
epoch 50: train_loss: 0.69313; Allocated: 709120; Reserved: 6291456; time used = 35.58879041671753s
epoch 55: train_loss: 0.69323; Allocated: 709120; Reserved: 6291456; time used = 36.040953636169434s
epoch 60: train_loss: 0.69303; Allocated: 709120; Reserved: 6291456; time used = 35.89135122299194s
epoch 65: train_loss: 0.69123; Allocated: 709120; Reserved: 6291456; time used = 35.83403539657593s
epoch 70: train_loss: 0.69310; Allocated: 709120; Reserved: 6291456; time used = 35.91735315322876s
epoch 75: train_loss: 0.69340; Allocated: 709120; Reserved: 6291456; time used = 35.75361680984497s
epoch 80: train_loss: 0.68366; Allocated: 709120; Reserved: 8388608; time used = 35.88560628890991s
epoch 85: train_loss: 0.69349; Allocated: 709120; Reserved: 6291456; time used = 35.74495601654053s
epoch 90: train_loss: 0.69282; Allocated: 709120; Reserved: 6291456; time used = 35.48753499984741s
epoch 95: train_loss: 0.69209; Allocated: 709120; Reserved: 6291456; time used = 35.90024447441101s
epoch 100: train_loss: 0.68829; Allocated: 709120; Reserved: 6291456; time used = 35.77014183998108s
epoch 105: train_loss: 0.60381; Allocated: 709120; Reserved: 6291456; time used = 35.9255006313324s
epoch 110: train_loss: 0.13524; Allocated: 709120; Reserved: 6291456; time used = 35.59552788734436s
epoch 115: train_loss: 0.21253; Allocated: 709120; Reserved: 6291456; time used = 35.684876680374146s
epoch 120: train_loss: 0.68975; Allocated: 709120; Reserved: 6291456; time used = 35.72141194343567s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 872.722380399704.
Training classifier using 80.00% nodes...
{'micro': 0.33666666666666667, 'macro': 0.20103520168723385, 'samples': 0.33666666666666667, 'weighted': 0.19500414563661683, 'accuracy': 0.33666666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.41678; Allocated: 40702464; Reserved: 65011712; time used = 3.9057297706604004s
epoch 10: train_loss: 0.39178; Allocated: 40702464; Reserved: 65011712; time used = 3.6117982864379883s
epoch 15: train_loss: 0.34974; Allocated: 40702464; Reserved: 65011712; time used = 3.826631546020508s
epoch 20: train_loss: 0.34581; Allocated: 40702464; Reserved: 65011712; time used = 3.6594271659851074s
epoch 25: train_loss: 0.33638; Allocated: 40702464; Reserved: 65011712; time used = 3.827083110809326s
epoch 30: train_loss: 0.33903; Allocated: 40702464; Reserved: 65011712; time used = 3.8974597454071045s
epoch 35: train_loss: 0.32799; Allocated: 40702464; Reserved: 65011712; time used = 3.683006525039673s
epoch 40: train_loss: 0.32576; Allocated: 40702464; Reserved: 65011712; time used = 3.7793238162994385s
epoch 45: train_loss: 0.33328; Allocated: 40702464; Reserved: 65011712; time used = 3.6858084201812744s
epoch 50: train_loss: 0.33282; Allocated: 40702464; Reserved: 65011712; time used = 3.790677309036255s
epoch 55: train_loss: 0.32041; Allocated: 40702464; Reserved: 65011712; time used = 3.682664632797241s
epoch 60: train_loss: 0.31644; Allocated: 40702464; Reserved: 65011712; time used = 3.7804970741271973s
epoch 65: train_loss: 0.32467; Allocated: 40702464; Reserved: 65011712; time used = 3.6460819244384766s
epoch 70: train_loss: 0.32356; Allocated: 40702464; Reserved: 65011712; time used = 3.868105411529541s
epoch 75: train_loss: 0.32779; Allocated: 40702464; Reserved: 65011712; time used = 3.6416804790496826s
epoch 80: train_loss: 0.32692; Allocated: 40702464; Reserved: 65011712; time used = 3.8015713691711426s
epoch 85: train_loss: 0.32112; Allocated: 40702464; Reserved: 65011712; time used = 3.870356321334839s
epoch 90: train_loss: 0.31422; Allocated: 40702464; Reserved: 65011712; time used = 3.625140428543091s
epoch 95: train_loss: 0.32048; Allocated: 40702464; Reserved: 65011712; time used = 3.711670160293579s
epoch 100: train_loss: 0.32725; Allocated: 40702464; Reserved: 65011712; time used = 3.7184290885925293s
epoch 105: train_loss: 0.32185; Allocated: 40702464; Reserved: 65011712; time used = 3.9220874309539795s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 86.19316792488098.
Training classifier using 20.00% nodes...
{'micro': 0.8175478635729682, 'macro': 0.8128475262750453, 'samples': 0.8175478635729682, 'weighted': 0.8173131703777641, 'accuracy': 0.8175478635729682}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.22457; Allocated: 40836608; Reserved: 62914560; time used = 2.4306814670562744s
epoch 10: train_loss: 1.58351; Allocated: 40836608; Reserved: 62914560; time used = 2.640001058578491s
epoch 15: train_loss: 1.22365; Allocated: 40836608; Reserved: 62914560; time used = 2.3527393341064453s
epoch 20: train_loss: 1.11963; Allocated: 40836608; Reserved: 62914560; time used = 2.3682198524475098s
epoch 25: train_loss: 1.10597; Allocated: 40836608; Reserved: 62914560; time used = 2.3772571086883545s
epoch 30: train_loss: 1.04412; Allocated: 40836608; Reserved: 62914560; time used = 2.66821551322937s
epoch 35: train_loss: 0.98434; Allocated: 40836608; Reserved: 62914560; time used = 2.349133253097534s
epoch 40: train_loss: 0.98306; Allocated: 40836608; Reserved: 62914560; time used = 2.42467999458313s
epoch 45: train_loss: 0.92647; Allocated: 40836608; Reserved: 62914560; time used = 2.670675754547119s
epoch 50: train_loss: 0.92271; Allocated: 40836608; Reserved: 62914560; time used = 2.3301897048950195s
epoch 55: train_loss: 0.88431; Allocated: 40836608; Reserved: 62914560; time used = 2.382045030593872s
epoch 60: train_loss: 0.89110; Allocated: 40836608; Reserved: 62914560; time used = 2.4081404209136963s
epoch 65: train_loss: 0.90538; Allocated: 40836608; Reserved: 62914560; time used = 2.610778331756592s
epoch 70: train_loss: 0.90758; Allocated: 40836608; Reserved: 62914560; time used = 2.4004099369049072s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 40.51882314682007.
Training classifier using 20.00% nodes...
{'micro': 0.6623557753264866, 'macro': 0.640346952466, 'samples': 0.6623557753264866, 'weighted': 0.6561589998256626, 'accuracy': 0.6623557753264866}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.52246; Allocated: 587264; Reserved: 2097152; time used = 2.9933009147644043s
epoch 10: train_loss: 0.36734; Allocated: 587264; Reserved: 2097152; time used = 2.9990808963775635s
epoch 15: train_loss: 0.29190; Allocated: 587264; Reserved: 2097152; time used = 3.161484479904175s
epoch 20: train_loss: 0.18140; Allocated: 587264; Reserved: 2097152; time used = 2.981597423553467s
epoch 25: train_loss: 0.08191; Allocated: 587264; Reserved: 2097152; time used = 3.006465435028076s
epoch 30: train_loss: 0.07670; Allocated: 587264; Reserved: 2097152; time used = 3.199486255645752s
epoch 35: train_loss: 0.08178; Allocated: 587264; Reserved: 2097152; time used = 2.991379737854004s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.763307809829712.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7490829053558328, 'samples': 0.7631578947368421, 'weighted': 0.7584662316098391, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.64172; Allocated: 907264; Reserved: 4194304; time used = 0.9075496196746826s
epoch 10: train_loss: 0.63379; Allocated: 907264; Reserved: 6291456; time used = 0.9012928009033203s
epoch 15: train_loss: 0.64872; Allocated: 907264; Reserved: 6291456; time used = 0.8967642784118652s
epoch 20: train_loss: 0.62490; Allocated: 907264; Reserved: 4194304; time used = 0.9003260135650635s
epoch 25: train_loss: 0.62919; Allocated: 907264; Reserved: 4194304; time used = 0.8984458446502686s
epoch 30: train_loss: 0.62061; Allocated: 907264; Reserved: 4194304; time used = 1.1220762729644775s
epoch 35: train_loss: 0.63606; Allocated: 907264; Reserved: 4194304; time used = 1.0537102222442627s
epoch 40: train_loss: 0.64128; Allocated: 907264; Reserved: 4194304; time used = 0.8879821300506592s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11.269775867462158.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.566601689408707, 'samples': 0.5797101449275363, 'weighted': 0.5720635458748858, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2924.92it/s] 83%|████████▎ | 1653/2000 [00:00<00:00, 3740.01it/s]100%|██████████| 2000/2000 [00:00<00:00, 6034.15it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68343; Allocated: 3849728; Reserved: 29360128; time used = 117.14973759651184s
epoch 10: train_loss: 0.61545; Allocated: 3849728; Reserved: 29360128; time used = 117.62034153938293s
epoch 15: train_loss: 0.57832; Allocated: 3849728; Reserved: 29360128; time used = 120.17799830436707s
epoch 20: train_loss: 0.51823; Allocated: 3849728; Reserved: 29360128; time used = 119.54328513145447s
epoch 25: train_loss: 0.54881; Allocated: 3849728; Reserved: 29360128; time used = 117.80002236366272s
epoch 30: train_loss: 0.66306; Allocated: 3849728; Reserved: 29360128; time used = 114.35751867294312s
epoch 35: train_loss: 0.56505; Allocated: 3849728; Reserved: 31457280; time used = 116.81949496269226s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 827.5495505332947.
Training classifier using 80.00% nodes...
{'micro': 0.64, 'macro': 0.6069439895185064, 'samples': 0.64, 'weighted': 0.6035244022273174, 'accuracy': 0.64}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.43560; Allocated: 40970240; Reserved: 62914560; time used = 0.5444474220275879s
epoch 10: train_loss: 0.26314; Allocated: 40970240; Reserved: 62914560; time used = 0.5237817764282227s
epoch 15: train_loss: 0.13566; Allocated: 40970240; Reserved: 62914560; time used = 0.5171668529510498s
epoch 20: train_loss: 0.06555; Allocated: 40970240; Reserved: 62914560; time used = 0.742262601852417s
epoch 25: train_loss: 0.07788; Allocated: 40970240; Reserved: 62914560; time used = 0.5640418529510498s
epoch 30: train_loss: 0.06316; Allocated: 40970240; Reserved: 62914560; time used = 0.5354301929473877s
epoch 35: train_loss: 0.06446; Allocated: 40970240; Reserved: 62914560; time used = 0.5523681640625s
epoch 40: train_loss: 0.09760; Allocated: 40970240; Reserved: 62914560; time used = 0.5272612571716309s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.82151746749878.
Training classifier using 20.00% nodes...
{'micro': 0.5823507036896158, 'macro': 0.43034642298617315, 'samples': 0.5823507036896158, 'weighted': 0.5084966303798795, 'accuracy': 0.5823507036896158}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2067.31it/s] 81%|████████  | 1616/2000 [00:00<00:00, 2719.88it/s]100%|██████████| 2000/2000 [00:00<00:00, 4772.84it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.66689; Allocated: 3995648; Reserved: 31457280; time used = 966.8671967983246s
epoch 10: train_loss: 0.49600; Allocated: 3995648; Reserved: 31457280; time used = 959.8396542072296s
epoch 15: train_loss: 0.34494; Allocated: 3995648; Reserved: 31457280; time used = 954.6251564025879s
epoch 20: train_loss: 0.21720; Allocated: 3995648; Reserved: 33554432; time used = 948.9315934181213s
epoch 25: train_loss: 0.16006; Allocated: 3995648; Reserved: 31457280; time used = 947.3522880077362s
epoch 30: train_loss: 0.07374; Allocated: 3995648; Reserved: 31457280; time used = 943.0678372383118s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6291.8996489048.
Training classifier using 80.00% nodes...
{'micro': 0.8025, 'macro': 0.8022911700483636, 'samples': 0.8025, 'weighted': 0.8024839361575664, 'accuracy': 0.8025}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2805.18it/s]100%|██████████| 1000/1000 [00:00<00:00, 4076.77it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 27.82257; Allocated: 493568; Reserved: 6291456; time used = 53.22930598258972s
epoch 10: train_loss: 65.37362; Allocated: 493568; Reserved: 6291456; time used = 53.109543561935425s
epoch 15: train_loss: 24.69805; Allocated: 493568; Reserved: 4194304; time used = 52.97608137130737s
epoch 20: train_loss: 7.09700; Allocated: 493568; Reserved: 4194304; time used = 53.01025629043579s
epoch 25: train_loss: 3.34281; Allocated: 493568; Reserved: 6291456; time used = 53.26822257041931s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 269.08370542526245.
Training classifier using 80.00% nodes...
{'micro': 0.69, 'macro': 0.68996899689969, 'samples': 0.69, 'weighted': 0.6899069906990701, 'accuracy': 0.69}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.54077; Allocated: 19282432; Reserved: 50331648; time used = 1.0694570541381836s
epoch 10: train_loss: 0.52712; Allocated: 19282432; Reserved: 50331648; time used = 1.032529592514038s
epoch 15: train_loss: 0.35129; Allocated: 19282432; Reserved: 50331648; time used = 1.0534143447875977s
epoch 20: train_loss: 0.15124; Allocated: 19282432; Reserved: 50331648; time used = 1.0338521003723145s
epoch 25: train_loss: 0.07728; Allocated: 19282432; Reserved: 50331648; time used = 1.0340468883514404s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.324397563934326.
Training classifier using 20.00% nodes...
{'micro': 0.46054453161052145, 'macro': 0.26817544611285843, 'samples': 0.46054453161052145, 'weighted': 0.3641829333517277, 'accuracy': 0.46054453161052145}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.44148; Allocated: 57209856; Reserved: 113246208; time used = 4.1316773891448975s
epoch 10: train_loss: 0.38755; Allocated: 57209856; Reserved: 113246208; time used = 4.267461061477661s
epoch 15: train_loss: 0.37300; Allocated: 57209856; Reserved: 113246208; time used = 4.111917495727539s
epoch 20: train_loss: 0.36355; Allocated: 57209856; Reserved: 113246208; time used = 4.252292156219482s
epoch 25: train_loss: 0.35664; Allocated: 57209856; Reserved: 113246208; time used = 4.106645822525024s
epoch 30: train_loss: 0.35590; Allocated: 57209856; Reserved: 113246208; time used = 4.102383613586426s
epoch 35: train_loss: 0.35429; Allocated: 57209856; Reserved: 113246208; time used = 4.250486612319946s
epoch 40: train_loss: 0.35043; Allocated: 57209856; Reserved: 113246208; time used = 4.113847494125366s
epoch 45: train_loss: 0.35000; Allocated: 57209856; Reserved: 113246208; time used = 4.298081874847412s
epoch 50: train_loss: 0.34549; Allocated: 57209856; Reserved: 113246208; time used = 4.097342252731323s
epoch 55: train_loss: 0.34848; Allocated: 57209856; Reserved: 113246208; time used = 4.247854709625244s
epoch 60: train_loss: 0.34310; Allocated: 57209856; Reserved: 113246208; time used = 4.1026997566223145s
epoch 65: train_loss: 0.34216; Allocated: 57209856; Reserved: 113246208; time used = 4.100840091705322s
epoch 70: train_loss: 0.34269; Allocated: 57209856; Reserved: 113246208; time used = 4.254972457885742s
epoch 75: train_loss: 0.34047; Allocated: 57209856; Reserved: 113246208; time used = 4.088600397109985s
epoch 80: train_loss: 0.33950; Allocated: 57209856; Reserved: 113246208; time used = 4.2324299812316895s
epoch 85: train_loss: 0.33981; Allocated: 57209856; Reserved: 113246208; time used = 4.0992608070373535s
epoch 90: train_loss: 0.33999; Allocated: 57209856; Reserved: 113246208; time used = 4.092410087585449s
epoch 95: train_loss: 0.33948; Allocated: 57209856; Reserved: 113246208; time used = 4.290077447891235s
epoch 100: train_loss: 0.33966; Allocated: 57209856; Reserved: 113246208; time used = 4.093312501907349s
epoch 105: train_loss: 0.33793; Allocated: 57209856; Reserved: 113246208; time used = 4.229488372802734s
epoch 110: train_loss: 0.33730; Allocated: 57209856; Reserved: 113246208; time used = 4.0958778858184814s
epoch 115: train_loss: 0.33710; Allocated: 57209856; Reserved: 113246208; time used = 4.220200538635254s
epoch 120: train_loss: 0.33644; Allocated: 57209856; Reserved: 113246208; time used = 4.076480150222778s
epoch 125: train_loss: 0.33317; Allocated: 57209856; Reserved: 113246208; time used = 4.073879241943359s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 110.21899175643921.
Training classifier using 20.00% nodes...
{'micro': 0.6899628252788105, 'macro': 0.5969493782334713, 'samples': 0.6972201352366642, 'weighted': 0.6632215861796273, 'accuracy': 0.6972201352366642}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2812.50it/s]100%|██████████| 1000/1000 [00:00<00:00, 4088.81it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 53.36262; Allocated: 500224; Reserved: 8388608; time used = 190.6484179496765s
epoch 10: train_loss: 12.09489; Allocated: 500224; Reserved: 8388608; time used = 192.7049503326416s
epoch 15: train_loss: 14.15975; Allocated: 500224; Reserved: 8388608; time used = 191.22930598258972s
epoch 20: train_loss: 6.16473; Allocated: 500224; Reserved: 8388608; time used = 192.2407259941101s
epoch 25: train_loss: 5.33952; Allocated: 500224; Reserved: 8388608; time used = 190.2244336605072s
epoch 30: train_loss: 2.41474; Allocated: 500224; Reserved: 8388608; time used = 187.9455258846283s
epoch 35: train_loss: 1.79190; Allocated: 500224; Reserved: 8388608; time used = 188.8000226020813s
epoch 40: train_loss: 1.29185; Allocated: 500224; Reserved: 8388608; time used = 183.68142700195312s
epoch 45: train_loss: 1.36519; Allocated: 500224; Reserved: 8388608; time used = 188.2076075077057s
epoch 50: train_loss: 1.43473; Allocated: 500224; Reserved: 8388608; time used = 191.26061034202576s
epoch 55: train_loss: 1.50765; Allocated: 500224; Reserved: 8388608; time used = 191.70753264427185s
epoch 60: train_loss: 1.32788; Allocated: 500224; Reserved: 8388608; time used = 192.53586673736572s
epoch 65: train_loss: 1.28775; Allocated: 500224; Reserved: 8388608; time used = 188.4484851360321s
epoch 70: train_loss: 1.29489; Allocated: 500224; Reserved: 8388608; time used = 189.03299808502197s
epoch 75: train_loss: 1.29170; Allocated: 500224; Reserved: 8388608; time used = 188.87354040145874s
epoch 80: train_loss: 1.29120; Allocated: 500224; Reserved: 8388608; time used = 189.0690393447876s
epoch 85: train_loss: 1.28968; Allocated: 500224; Reserved: 8388608; time used = 189.24841785430908s
epoch 90: train_loss: 1.28120; Allocated: 500224; Reserved: 8388608; time used = 187.672922372818s
epoch 95: train_loss: 1.28096; Allocated: 500224; Reserved: 8388608; time used = 185.187326669693s
epoch 100: train_loss: 1.28109; Allocated: 500224; Reserved: 8388608; time used = 187.3808925151825s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 3789.5328590869904.
Training classifier using 80.00% nodes...
{'micro': 0.7100000000000001, 'macro': 0.7098839535814325, 'samples': 0.71, 'weighted': 0.7097679071628652, 'accuracy': 0.71}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2797.87it/s] 82%|████████▏ | 1647/2000 [00:00<00:00, 3592.07it/s]100%|██████████| 2000/2000 [00:00<00:00, 5861.48it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 15228099.53768; Allocated: 3928064; Reserved: 29360128; time used = 928.4209733009338s
epoch 10: train_loss: 2039739.94457; Allocated: 3928064; Reserved: 29360128; time used = 937.7186346054077s
epoch 15: train_loss: 326282.84894; Allocated: 3928064; Reserved: 29360128; time used = 934.0393891334534s
epoch 20: train_loss: 445.77457; Allocated: 3928064; Reserved: 29360128; time used = 935.6254689693451s
epoch 25: train_loss: 433.00689; Allocated: 3928064; Reserved: 29360128; time used = 936.4691410064697s
epoch 30: train_loss: 311.10343; Allocated: 3928064; Reserved: 29360128; time used = 934.759831905365s
epoch 35: train_loss: 254.54089; Allocated: 3928064; Reserved: 29360128; time used = 930.4680399894714s
epoch 40: train_loss: 220.16306; Allocated: 3928064; Reserved: 31457280; time used = 945.0204651355743s
epoch 45: train_loss: 195.77559; Allocated: 3928064; Reserved: 29360128; time used = 958.2332074642181s
epoch 50: train_loss: 177.50603; Allocated: 3928064; Reserved: 31457280; time used = 953.6894965171814s
epoch 55: train_loss: 167.89178; Allocated: 3928064; Reserved: 29360128; time used = 958.6051027774811s
epoch 60: train_loss: 150.90393; Allocated: 3928064; Reserved: 29360128; time used = 947.6368465423584s
epoch 65: train_loss: 143.32262; Allocated: 3928064; Reserved: 29360128; time used = 950.2668581008911s
epoch 70: train_loss: 134.36448; Allocated: 3928064; Reserved: 31457280; time used = 950.7416729927063s
epoch 75: train_loss: 119.40295; Allocated: 3928064; Reserved: 29360128; time used = 953.963198184967s
epoch 80: train_loss: 111.70664; Allocated: 3928064; Reserved: 29360128; time used = 956.304069519043s
epoch 85: train_loss: 107.16136; Allocated: 3928064; Reserved: 29360128; time used = 964.001650094986s
epoch 90: train_loss: 107.94414; Allocated: 3928064; Reserved: 29360128; time used = 940.3115525245667s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 17020.319854021072.
Training classifier using 80.00% nodes...
{'micro': 0.76, 'macro': 0.7598499061913696, 'samples': 0.76, 'weighted': 0.7600300187617262, 'accuracy': 0.76}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 3.68194; Allocated: 521728; Reserved: 2097152; time used = 0.5694096088409424s
epoch 10: train_loss: 1.55078; Allocated: 521728; Reserved: 2097152; time used = 0.5738525390625s
epoch 15: train_loss: 1.38351; Allocated: 521728; Reserved: 2097152; time used = 0.5670480728149414s
epoch 20: train_loss: 1.40381; Allocated: 521728; Reserved: 2097152; time used = 0.5685315132141113s
epoch 25: train_loss: 1.38555; Allocated: 521728; Reserved: 2097152; time used = 0.5675523281097412s
epoch 30: train_loss: 1.37250; Allocated: 521728; Reserved: 2097152; time used = 0.5718593597412109s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.3542845249176025.
Training classifier using 80.00% nodes...
{'micro': 0.8947368421052632, 'macro': 0.889855072463768, 'samples': 0.8947368421052632, 'weighted': 0.8935163996948893, 'accuracy': 0.8947368421052632}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2923.74it/s]100%|██████████| 1500/1500 [00:00<00:00, 5349.04it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.48467; Allocated: 418304; Reserved: 4194304; time used = 12.00745415687561s
epoch 10: train_loss: 1.41952; Allocated: 418304; Reserved: 6291456; time used = 12.100101947784424s
epoch 15: train_loss: 1.39854; Allocated: 418304; Reserved: 6291456; time used = 11.951313257217407s
epoch 20: train_loss: 1.39127; Allocated: 418304; Reserved: 6291456; time used = 12.096757650375366s
epoch 25: train_loss: 1.38807; Allocated: 418304; Reserved: 6291456; time used = 12.006271362304688s
epoch 30: train_loss: 1.38760; Allocated: 418304; Reserved: 4194304; time used = 12.11536169052124s
epoch 35: train_loss: 1.38720; Allocated: 418304; Reserved: 4194304; time used = 11.932910919189453s
epoch 40: train_loss: 1.38685; Allocated: 418304; Reserved: 6291456; time used = 12.061538219451904s
epoch 45: train_loss: 1.38658; Allocated: 418304; Reserved: 6291456; time used = 12.14652967453003s
epoch 50: train_loss: 1.38644; Allocated: 418304; Reserved: 6291456; time used = 12.094242572784424s
epoch 55: train_loss: 1.38637; Allocated: 418304; Reserved: 6291456; time used = 12.048567771911621s
epoch 60: train_loss: 1.38634; Allocated: 418304; Reserved: 6291456; time used = 12.117364168167114s
epoch 65: train_loss: 1.38632; Allocated: 418304; Reserved: 6291456; time used = 12.140082597732544s
epoch 70: train_loss: 1.38632; Allocated: 418304; Reserved: 4194304; time used = 12.14915418624878s
epoch 75: train_loss: 1.38631; Allocated: 418304; Reserved: 6291456; time used = 12.098639726638794s
epoch 80: train_loss: 1.38631; Allocated: 418304; Reserved: 4194304; time used = 12.139994621276855s
epoch 85: train_loss: 1.38630; Allocated: 418304; Reserved: 8388608; time used = 12.027466535568237s
epoch 90: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 12.109109878540039s
epoch 95: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.88843560218811s
epoch 100: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.993123531341553s
epoch 105: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.945680618286133s
epoch 110: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 12.046519041061401s
epoch 115: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.868364810943604s
epoch 120: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 12.008034706115723s
epoch 125: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 12.150320768356323s
epoch 130: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 12.18212080001831s
epoch 135: train_loss: 1.38630; Allocated: 418304; Reserved: 8388608; time used = 12.04771637916565s
epoch 140: train_loss: 1.38630; Allocated: 418304; Reserved: 8388608; time used = 12.228690147399902s
epoch 145: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 12.102208137512207s
epoch 150: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 12.179794073104858s
epoch 155: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.982385158538818s
epoch 160: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 12.087622165679932s
epoch 165: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 12.045083284378052s
epoch 170: train_loss: 1.38630; Allocated: 418304; Reserved: 8388608; time used = 12.112756252288818s
epoch 175: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 12.11515188217163s
epoch 180: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 11.975168704986572s
epoch 185: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 12.12185525894165s
epoch 190: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 11.969417810440063s
epoch 195: train_loss: 1.38630; Allocated: 418304; Reserved: 6291456; time used = 12.01813268661499s
epoch 200: train_loss: 1.38630; Allocated: 418304; Reserved: 4194304; time used = 11.92220664024353s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 488.3511531352997.
Training classifier using 80.00% nodes...
{'micro': 0.32, 'macro': 0.25866071037533395, 'samples': 0.32, 'weighted': 0.25090088906407393, 'accuracy': 0.32}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 2798.51it/s] 82%|████████▏ | 1642/2000 [00:00<00:00, 3590.68it/s]100%|██████████| 2000/2000 [00:00<00:00, 5848.98it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.83490991592407s
epoch 10: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.31644368171692s
epoch 15: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.48330640792847s
epoch 20: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 61.41381239891052s
epoch 25: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.65977931022644s
epoch 30: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.74560213088989s
epoch 35: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.24625372886658s
epoch 40: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.45167779922485s
epoch 45: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.90008759498596s
epoch 50: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.079901456832886s
epoch 55: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.51510405540466s
epoch 60: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.727388858795166s
epoch 65: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.34319567680359s
epoch 70: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.833972454071045s
epoch 75: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.66240048408508s
epoch 80: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.20867967605591s
epoch 85: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.77836227416992s
epoch 90: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.83796143531799s
epoch 95: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.61843156814575s
epoch 100: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 62.1617329120636s
epoch 105: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.37687802314758s
epoch 110: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.88001847267151s
epoch 115: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.058838844299316s
epoch 120: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.27629566192627s
epoch 125: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.08294057846069s
epoch 130: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.647780656814575s
epoch 135: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 61.209563970565796s
epoch 140: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.282190799713135s
epoch 145: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.83574414253235s
epoch 150: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 57.68090200424194s
epoch 155: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.52793312072754s
epoch 160: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.98775601387024s
epoch 165: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.64852595329285s
epoch 170: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 61.34931993484497s
epoch 175: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.618022441864014s
epoch 180: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.41633677482605s
epoch 185: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 61.14503598213196s
epoch 190: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 61.03233528137207s
epoch 195: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.29061818122864s
epoch 200: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.721435546875s
epoch 205: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 56.71907711029053s
epoch 210: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 61.03846836090088s
epoch 215: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.216949224472046s
epoch 220: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.127236127853394s
epoch 225: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.27548837661743s
epoch 230: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 57.69261431694031s
epoch 235: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.82745099067688s
epoch 240: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.69403648376465s
epoch 245: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.292110204696655s
epoch 250: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.178449869155884s
epoch 255: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.667649269104004s
epoch 260: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.74078416824341s
epoch 265: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 61.003177642822266s
epoch 270: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.754847049713135s
epoch 275: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.873841762542725s
epoch 280: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.776379108428955s
epoch 285: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.0795373916626s
epoch 290: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.90885877609253s
epoch 295: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.715075969696045s
epoch 300: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.38800835609436s
epoch 305: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.64918088912964s
epoch 310: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 61.30087208747864s
epoch 315: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.3666353225708s
epoch 320: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.55058717727661s
epoch 325: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.59887194633484s
epoch 330: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 61.03495931625366s
epoch 335: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.702702045440674s
epoch 340: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.059913873672485s
epoch 345: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.215256690979004s
epoch 350: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.86857628822327s
epoch 355: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.03214979171753s
epoch 360: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.12113642692566s
epoch 365: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.966121673583984s
epoch 370: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.37534213066101s
epoch 375: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.03700137138367s
epoch 380: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.38357472419739s
epoch 385: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.640905141830444s
epoch 390: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 57.39323616027832s
epoch 395: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.709054708480835s
epoch 400: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.189345836639404s
epoch 405: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.98395848274231s
epoch 410: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 57.80084562301636s
epoch 415: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.26951718330383s
epoch 420: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.059425354003906s
epoch 425: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.952648401260376s
epoch 430: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.459280014038086s
epoch 435: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.910199880599976s
epoch 440: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.37563514709473s
epoch 445: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.511810064315796s
epoch 450: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.88225603103638s
epoch 455: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.842278718948364s
epoch 460: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.71118426322937s
epoch 465: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 58.84293174743652s
epoch 470: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.322542667388916s
epoch 475: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.80870485305786s
epoch 480: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.213414907455444s
epoch 485: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.04095530509949s
epoch 490: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.7066490650177s
epoch 495: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 60.37040114402771s
epoch 500: train_loss: 0.69315; Allocated: 3982336; Reserved: 31457280; time used = 59.575358390808105s
Finished training. Time used = 5987.60915517807.
Training classifier using 80.00% nodes...
{'micro': 0.65, 'macro': 0.6256584400652423, 'samples': 0.65, 'weighted': 0.6227947271317414, 'accuracy': 0.65}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2762.44it/s] 81%|████████▏ | 1628/2000 [00:00<00:00, 3544.75it/s]100%|██████████| 2000/2000 [00:00<00:00, 5776.92it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 138, in evaluate
    loss.backward()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/tensor.py", line 221, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/autograd/__init__.py", line 132, in backward
    allow_unreachable=True)  # allow_unreachable flag
RuntimeError: merge_sort: failed to synchronize: cudaErrorIllegalAddress: an illegal memory access was encountered
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 2613054517.86306; Allocated: 4118528; Reserved: 1214251008; time used = 2126.8312561511993s
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2899.42it/s] 82%|████████▏ | 1647/2000 [00:00<00:00, 3708.69it/s]100%|██████████| 2000/2000 [00:00<00:00, 5985.42it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 55529.09987; Allocated: 3855872; Reserved: 29360128; time used = 109.63571262359619s
epoch 10: train_loss: 18153.27623; Allocated: 3855872; Reserved: 29360128; time used = 109.16201305389404s
epoch 15: train_loss: 7292.46198; Allocated: 3855872; Reserved: 29360128; time used = 107.61356925964355s
epoch 20: train_loss: 2757.37371; Allocated: 3855872; Reserved: 31457280; time used = 105.70685076713562s
epoch 25: train_loss: 1521.00072; Allocated: 3855872; Reserved: 29360128; time used = 110.28278660774231s
epoch 30: train_loss: 616.03446; Allocated: 3855872; Reserved: 31457280; time used = 109.01449584960938s
epoch 35: train_loss: 858.67824; Allocated: 3855872; Reserved: 29360128; time used = 107.61930108070374s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 807.5785686969757.
Training classifier using 80.00% nodes...
{'micro': 0.6975, 'macro': 0.6956721307352285, 'samples': 0.6975, 'weighted': 0.694964568439188, 'accuracy': 0.6975}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 138.15555; Allocated: 53683712; Reserved: 293601280; time used = 2.210263729095459s
epoch 10: train_loss: 19.48967; Allocated: 53683712; Reserved: 293601280; time used = 2.1324074268341064s
epoch 15: train_loss: 25.91166; Allocated: 53683712; Reserved: 293601280; time used = 2.116994619369507s
epoch 20: train_loss: 6.34732; Allocated: 53683712; Reserved: 293601280; time used = 2.0969932079315186s
epoch 25: train_loss: 8.71434; Allocated: 53683712; Reserved: 293601280; time used = 2.1261065006256104s
epoch 30: train_loss: 3.03705; Allocated: 53683712; Reserved: 293601280; time used = 2.1264102458953857s
epoch 35: train_loss: 4.12499; Allocated: 53683712; Reserved: 293601280; time used = 2.0867326259613037s
epoch 40: train_loss: 3.51680; Allocated: 53683712; Reserved: 293601280; time used = 2.1258203983306885s
epoch 45: train_loss: 2.03380; Allocated: 53683712; Reserved: 293601280; time used = 2.1530730724334717s
epoch 50: train_loss: 1.54079; Allocated: 53683712; Reserved: 293601280; time used = 2.1316771507263184s
epoch 55: train_loss: 1.74387; Allocated: 53683712; Reserved: 293601280; time used = 2.104883909225464s
epoch 60: train_loss: 1.38963; Allocated: 53683712; Reserved: 293601280; time used = 2.146165132522583s
epoch 65: train_loss: 1.46432; Allocated: 53683712; Reserved: 293601280; time used = 2.170729875564575s
epoch 70: train_loss: 1.42444; Allocated: 53683712; Reserved: 293601280; time used = 2.104160785675049s
epoch 75: train_loss: 1.39111; Allocated: 53683712; Reserved: 293601280; time used = 2.1015994548797607s
epoch 80: train_loss: 1.38792; Allocated: 53683712; Reserved: 293601280; time used = 2.132129669189453s
epoch 85: train_loss: 1.38874; Allocated: 53683712; Reserved: 293601280; time used = 2.119147777557373s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 50.3640775680542.
Training classifier using 20.00% nodes...
{'micro': 0.44721189591078064, 'macro': 0.3865600193196015, 'samples': 0.451915852742299, 'weighted': 0.4196980128527458, 'accuracy': 0.451915852742299}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2910.28it/s]100%|██████████| 1000/1000 [00:00<00:00, 4217.04it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 22.74466; Allocated: 929280; Reserved: 6291456; time used = 0.9534852504730225s
epoch 10: train_loss: 4.51572; Allocated: 929280; Reserved: 6291456; time used = 0.9437930583953857s
epoch 15: train_loss: 1.54023; Allocated: 929280; Reserved: 8388608; time used = 0.9469847679138184s
epoch 20: train_loss: 1.37813; Allocated: 929280; Reserved: 6291456; time used = 0.9438374042510986s
epoch 25: train_loss: 1.36149; Allocated: 929280; Reserved: 6291456; time used = 0.9473061561584473s
epoch 30: train_loss: 1.33511; Allocated: 929280; Reserved: 6291456; time used = 0.9536752700805664s
epoch 35: train_loss: 1.23186; Allocated: 929280; Reserved: 6291456; time used = 0.9441108703613281s
epoch 40: train_loss: 1.13003; Allocated: 929280; Reserved: 6291456; time used = 0.9407467842102051s
epoch 45: train_loss: 1.12112; Allocated: 929280; Reserved: 6291456; time used = 1.1059715747833252s
epoch 50: train_loss: 1.02921; Allocated: 929280; Reserved: 6291456; time used = 0.9667685031890869s
epoch 55: train_loss: 1.00050; Allocated: 929280; Reserved: 6291456; time used = 0.9536566734313965s
epoch 60: train_loss: 0.93204; Allocated: 929280; Reserved: 6291456; time used = 0.9628419876098633s
epoch 65: train_loss: 0.93122; Allocated: 929280; Reserved: 6291456; time used = 0.9554953575134277s
epoch 70: train_loss: 0.88417; Allocated: 929280; Reserved: 6291456; time used = 0.9525260925292969s
epoch 75: train_loss: 0.89149; Allocated: 929280; Reserved: 6291456; time used = 0.9418001174926758s
epoch 80: train_loss: 0.84295; Allocated: 929280; Reserved: 6291456; time used = 1.0159294605255127s
epoch 85: train_loss: 0.89713; Allocated: 929280; Reserved: 6291456; time used = 0.9517326354980469s
epoch 90: train_loss: 0.84628; Allocated: 929280; Reserved: 6291456; time used = 1.0833499431610107s
epoch 95: train_loss: 0.94462; Allocated: 929280; Reserved: 6291456; time used = 0.9602556228637695s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 21.91366744041443.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.591894852135816, 'samples': 0.6086956521739131, 'weighted': 0.5978951378637078, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.56882; Allocated: 57347072; Reserved: 113246208; time used = 4.987442493438721s
epoch 10: train_loss: 0.41610; Allocated: 57347072; Reserved: 113246208; time used = 5.0914294719696045s
epoch 15: train_loss: 0.38049; Allocated: 57347072; Reserved: 113246208; time used = 4.930043458938599s
epoch 20: train_loss: 0.37628; Allocated: 57347072; Reserved: 113246208; time used = 4.920185327529907s
epoch 25: train_loss: 0.36807; Allocated: 57347072; Reserved: 113246208; time used = 5.078479051589966s
epoch 30: train_loss: 0.37101; Allocated: 57347072; Reserved: 113246208; time used = 4.908990859985352s
epoch 35: train_loss: 0.36720; Allocated: 57347072; Reserved: 113246208; time used = 5.104516983032227s
epoch 40: train_loss: 0.36157; Allocated: 57347072; Reserved: 113246208; time used = 4.936042070388794s
epoch 45: train_loss: 0.35988; Allocated: 57347072; Reserved: 113246208; time used = 4.91038179397583s
epoch 50: train_loss: 0.35806; Allocated: 57347072; Reserved: 113246208; time used = 4.960962772369385s
epoch 55: train_loss: 0.35220; Allocated: 57347072; Reserved: 113246208; time used = 5.055447101593018s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 61.457738399505615.
Training classifier using 20.00% nodes...
{'micro': 0.6788104089219331, 'macro': 0.5882690491496517, 'samples': 0.6859504132231405, 'weighted': 0.6526654537184423, 'accuracy': 0.6859504132231405}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2878.55it/s] 83%|████████▎ | 1658/2000 [00:00<00:00, 3688.71it/s]100%|██████████| 2000/2000 [00:00<00:00, 5987.27it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.58490; Allocated: 4127232; Reserved: 31457280; time used = 976.5438225269318s
epoch 10: train_loss: 0.21108; Allocated: 4127232; Reserved: 29360128; time used = 979.9727704524994s
epoch 15: train_loss: 0.04948; Allocated: 4127232; Reserved: 29360128; time used = 976.2427384853363s
epoch 20: train_loss: 0.01486; Allocated: 4127232; Reserved: 29360128; time used = 975.3692529201508s
epoch 25: train_loss: 0.01621; Allocated: 4127232; Reserved: 29360128; time used = 979.5211596488953s
epoch 30: train_loss: 0.01439; Allocated: 4127232; Reserved: 29360128; time used = 976.336049079895s
epoch 35: train_loss: 0.00646; Allocated: 4127232; Reserved: 31457280; time used = 976.8783848285675s
epoch 40: train_loss: 0.00599; Allocated: 4127232; Reserved: 29360128; time used = 975.017333984375s
epoch 45: train_loss: 0.00404; Allocated: 4127232; Reserved: 31457280; time used = 975.8687183856964s
epoch 50: train_loss: 0.00337; Allocated: 4127232; Reserved: 29360128; time used = 976.0078637599945s
epoch 55: train_loss: 0.00279; Allocated: 4127232; Reserved: 29360128; time used = 975.4751024246216s
epoch 60: train_loss: 0.00297; Allocated: 4127232; Reserved: 29360128; time used = 972.9739389419556s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11915.012638092041.
Training classifier using 80.00% nodes...
{'micro': 0.645, 'macro': 0.6449911247781195, 'samples': 0.645, 'weighted': 0.6450443761094027, 'accuracy': 0.645}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2829.70it/s]100%|██████████| 1000/1000 [00:00<00:00, 4112.20it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 412.02840; Allocated: 572416; Reserved: 6291456; time used = 35.20481538772583s
epoch 10: train_loss: 100.84733; Allocated: 572416; Reserved: 6291456; time used = 34.62940573692322s
epoch 15: train_loss: 21.13597; Allocated: 572416; Reserved: 6291456; time used = 34.735191345214844s
epoch 20: train_loss: 1.39795; Allocated: 572416; Reserved: 8388608; time used = 34.65419912338257s
epoch 25: train_loss: 1.38950; Allocated: 572416; Reserved: 6291456; time used = 34.835068464279175s
epoch 30: train_loss: 1.39076; Allocated: 572416; Reserved: 6291456; time used = 35.45229744911194s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 220.13482642173767.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.52806; Allocated: 647168; Reserved: 4194304; time used = 3.254633903503418s
epoch 10: train_loss: 0.30091; Allocated: 647168; Reserved: 4194304; time used = 3.130068063735962s
epoch 15: train_loss: 0.12389; Allocated: 647168; Reserved: 4194304; time used = 3.143965482711792s
epoch 20: train_loss: 0.08951; Allocated: 647168; Reserved: 4194304; time used = 2.956449508666992s
epoch 25: train_loss: 0.08354; Allocated: 647168; Reserved: 4194304; time used = 2.9359352588653564s
epoch 30: train_loss: 0.08568; Allocated: 647168; Reserved: 4194304; time used = 3.1060683727264404s
epoch 35: train_loss: 0.09945; Allocated: 647168; Reserved: 4194304; time used = 2.959934949874878s
epoch 40: train_loss: 0.07263; Allocated: 647168; Reserved: 4194304; time used = 2.9610085487365723s
epoch 45: train_loss: 0.06910; Allocated: 647168; Reserved: 4194304; time used = 3.206430196762085s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 33.01716208457947.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8093189964157707, 'samples': 0.8157894736842105, 'weighted': 0.8148651197887191, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2737.75it/s]100%|██████████| 1000/1000 [00:00<00:00, 4007.95it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.57726; Allocated: 632320; Reserved: 8388608; time used = 53.05868053436279s
epoch 10: train_loss: 1.44164; Allocated: 632320; Reserved: 10485760; time used = 53.59404540061951s
epoch 15: train_loss: 1.39616; Allocated: 632320; Reserved: 8388608; time used = 53.28314805030823s
epoch 20: train_loss: 1.38673; Allocated: 632320; Reserved: 8388608; time used = 53.69594764709473s
epoch 25: train_loss: 1.38812; Allocated: 632320; Reserved: 8388608; time used = 53.805628061294556s
epoch 30: train_loss: 1.38749; Allocated: 632320; Reserved: 8388608; time used = 53.62391376495361s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 324.8350179195404.
Training classifier using 80.00% nodes...
{'micro': 0.665, 'macro': 0.6649246080368083, 'samples': 0.665, 'weighted': 0.6650251306543973, 'accuracy': 0.665}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2798.45it/s] 82%|████████▏ | 1639/2000 [00:00<00:00, 3589.86it/s]100%|██████████| 2000/2000 [00:00<00:00, 5836.71it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.61008; Allocated: 4059648; Reserved: 31457280; time used = 1207.1429889202118s
epoch 10: train_loss: 0.58596; Allocated: 4059648; Reserved: 31457280; time used = 1207.4316637516022s
epoch 15: train_loss: 0.57484; Allocated: 4059648; Reserved: 35651584; time used = 1219.2194385528564s
epoch 20: train_loss: 0.56268; Allocated: 4059648; Reserved: 33554432; time used = 1222.3254520893097s
epoch 25: train_loss: 0.54064; Allocated: 4059648; Reserved: 31457280; time used = 1223.5537412166595s
epoch 30: train_loss: 0.52572; Allocated: 4059648; Reserved: 33554432; time used = 1219.2316672801971s
epoch 35: train_loss: 0.51374; Allocated: 4059648; Reserved: 31457280; time used = 1221.3504376411438s
epoch 40: train_loss: 0.51312; Allocated: 4059648; Reserved: 33554432; time used = 1219.979919910431s
epoch 45: train_loss: 0.52283; Allocated: 4059648; Reserved: 31457280; time used = 1211.9438481330872s
epoch 50: train_loss: 0.53654; Allocated: 4059648; Reserved: 31457280; time used = 1211.4765086174011s
epoch 55: train_loss: 0.52155; Allocated: 4059648; Reserved: 33554432; time used = 1212.2999665737152s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 13623.182177066803.
Training classifier using 80.00% nodes...
{'micro': 0.62, 'macro': 0.6161616161616161, 'samples': 0.62, 'weighted': 0.6150101010101011, 'accuracy': 0.62}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.14303; Allocated: 40704512; Reserved: 62914560; time used = 0.4935157299041748s
epoch 10: train_loss: 1.06643; Allocated: 40704512; Reserved: 62914560; time used = 0.48028111457824707s
epoch 15: train_loss: 0.97508; Allocated: 40704512; Reserved: 62914560; time used = 0.48804473876953125s
epoch 20: train_loss: 0.89460; Allocated: 40704512; Reserved: 62914560; time used = 0.7246551513671875s
epoch 25: train_loss: 0.85849; Allocated: 40704512; Reserved: 62914560; time used = 0.48748350143432617s
epoch 30: train_loss: 0.86111; Allocated: 40704512; Reserved: 62914560; time used = 0.48424649238586426s
epoch 35: train_loss: 0.79857; Allocated: 40704512; Reserved: 62914560; time used = 0.46916866302490234s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8.36184310913086.
Training classifier using 20.00% nodes...
{'micro': 0.7511094205654875, 'macro': 0.7469529816608634, 'samples': 0.7511094205654875, 'weighted': 0.7507810156537926, 'accuracy': 0.7511094205654875}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2623.28it/s]100%|██████████| 1000/1000 [00:00<00:00, 3837.25it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 56.42642; Allocated: 493568; Reserved: 8388608; time used = 188.33542895317078s
epoch 10: train_loss: 82.99140; Allocated: 493568; Reserved: 8388608; time used = 191.82778429985046s
epoch 15: train_loss: 36.23814; Allocated: 493568; Reserved: 10485760; time used = 189.2534956932068s
epoch 20: train_loss: 21.63201; Allocated: 493568; Reserved: 8388608; time used = 191.16570711135864s
epoch 25: train_loss: 6.82113; Allocated: 493568; Reserved: 10485760; time used = 189.90973091125488s
epoch 30: train_loss: 7.19202; Allocated: 493568; Reserved: 10485760; time used = 189.4310278892517s
epoch 35: train_loss: 3.98629; Allocated: 493568; Reserved: 8388608; time used = 191.23883652687073s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1372.318118572235.
Training classifier using 80.00% nodes...
{'micro': 0.72, 'macro': 0.7200000000000001, 'samples': 0.72, 'weighted': 0.72, 'accuracy': 0.72}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.52980; Allocated: 731648; Reserved: 2097152; time used = 0.6390202045440674s
epoch 10: train_loss: 0.39863; Allocated: 731648; Reserved: 2097152; time used = 0.6395776271820068s
epoch 15: train_loss: 0.28344; Allocated: 731648; Reserved: 2097152; time used = 0.6317343711853027s
epoch 20: train_loss: 0.25830; Allocated: 731648; Reserved: 2097152; time used = 0.6286027431488037s
epoch 25: train_loss: 0.12273; Allocated: 731648; Reserved: 2097152; time used = 0.6256685256958008s
epoch 30: train_loss: 0.07860; Allocated: 731648; Reserved: 2097152; time used = 0.6177773475646973s
epoch 35: train_loss: 0.07775; Allocated: 731648; Reserved: 2097152; time used = 0.7288682460784912s
epoch 40: train_loss: 0.08037; Allocated: 731648; Reserved: 2097152; time used = 0.8193259239196777s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.029364585876465.
Training classifier using 80.00% nodes...
{'micro': 0.5789473684210527, 'macro': 0.3666666666666667, 'samples': 0.5789473684210527, 'weighted': 0.4245614035087719, 'accuracy': 0.5789473684210527}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.39242; Allocated: 19008000; Reserved: 44040192; time used = 0.9312562942504883s
epoch 10: train_loss: 1.14387; Allocated: 19008000; Reserved: 44040192; time used = 0.9228668212890625s
epoch 15: train_loss: 1.11040; Allocated: 19008000; Reserved: 44040192; time used = 0.9252204895019531s
epoch 20: train_loss: 1.03687; Allocated: 19008000; Reserved: 44040192; time used = 0.927933931350708s
epoch 25: train_loss: 0.88673; Allocated: 19008000; Reserved: 44040192; time used = 0.9247887134552002s
epoch 30: train_loss: 0.80175; Allocated: 19008000; Reserved: 44040192; time used = 0.9220354557037354s
epoch 35: train_loss: 0.83883; Allocated: 19008000; Reserved: 44040192; time used = 0.9345896244049072s
epoch 40: train_loss: 0.74255; Allocated: 19008000; Reserved: 44040192; time used = 0.9229004383087158s
epoch 45: train_loss: 0.63664; Allocated: 19008000; Reserved: 44040192; time used = 0.9147491455078125s
epoch 50: train_loss: 0.52620; Allocated: 19008000; Reserved: 44040192; time used = 0.9130020141601562s
epoch 55: train_loss: 0.67126; Allocated: 19008000; Reserved: 44040192; time used = 1.07796049118042s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 13.794585227966309.
Training classifier using 20.00% nodes...
{'micro': 0.7198892478080295, 'macro': 0.7017226700951401, 'samples': 0.7198892478080295, 'weighted': 0.7146923692698125, 'accuracy': 0.7198892478080295}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 4.69147; Allocated: 647168; Reserved: 4194304; time used = 0.6072971820831299s
epoch 10: train_loss: 1.93004; Allocated: 647168; Reserved: 4194304; time used = 0.6160328388214111s
epoch 15: train_loss: 1.39053; Allocated: 647168; Reserved: 4194304; time used = 0.6045410633087158s
epoch 20: train_loss: 1.37910; Allocated: 647168; Reserved: 4194304; time used = 0.6077747344970703s
epoch 25: train_loss: 1.36771; Allocated: 647168; Reserved: 4194304; time used = 0.6033937931060791s
epoch 30: train_loss: 1.34614; Allocated: 647168; Reserved: 4194304; time used = 0.6035399436950684s
epoch 35: train_loss: 1.31395; Allocated: 647168; Reserved: 4194304; time used = 0.6030905246734619s
epoch 40: train_loss: 1.24850; Allocated: 647168; Reserved: 4194304; time used = 0.8494307994842529s
epoch 45: train_loss: 1.22171; Allocated: 647168; Reserved: 4194304; time used = 0.6044707298278809s
epoch 50: train_loss: 1.21930; Allocated: 647168; Reserved: 4194304; time used = 0.6007311344146729s
epoch 55: train_loss: 1.20254; Allocated: 647168; Reserved: 4194304; time used = 0.6054897308349609s
epoch 60: train_loss: 1.18219; Allocated: 647168; Reserved: 4194304; time used = 0.7559385299682617s
epoch 65: train_loss: 1.16943; Allocated: 647168; Reserved: 4194304; time used = 0.6486778259277344s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.432137489318848.
Training classifier using 80.00% nodes...
{'micro': 0.6052631578947368, 'macro': 0.5818048422597212, 'samples': 0.6052631578947368, 'weighted': 0.5974437193497316, 'accuracy': 0.6052631578947368}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.56721; Allocated: 639488; Reserved: 8388608; time used = 4.250559568405151s
epoch 10: train_loss: 0.46295; Allocated: 639488; Reserved: 8388608; time used = 4.264583349227905s
epoch 15: train_loss: 0.37904; Allocated: 639488; Reserved: 8388608; time used = 4.416009902954102s
epoch 20: train_loss: 0.25178; Allocated: 639488; Reserved: 8388608; time used = 4.273831367492676s
epoch 25: train_loss: 0.35324; Allocated: 639488; Reserved: 8388608; time used = 4.402112245559692s
epoch 30: train_loss: 0.33320; Allocated: 639488; Reserved: 8388608; time used = 4.252848863601685s
epoch 35: train_loss: 0.39564; Allocated: 639488; Reserved: 8388608; time used = 4.246015310287476s
epoch 40: train_loss: 0.32135; Allocated: 639488; Reserved: 8388608; time used = 4.293152332305908s
epoch 45: train_loss: 0.29692; Allocated: 639488; Reserved: 8388608; time used = 4.417697906494141s
epoch 50: train_loss: 0.24074; Allocated: 639488; Reserved: 8388608; time used = 4.245970964431763s
epoch 55: train_loss: 0.25965; Allocated: 639488; Reserved: 8388608; time used = 4.228696346282959s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 53.46822953224182.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Killed
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2977.25it/s]100%|██████████| 1000/1000 [00:00<00:00, 4293.35it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69294; Allocated: 637952; Reserved: 8388608; time used = 34.71439504623413s
epoch 10: train_loss: 0.69315; Allocated: 637952; Reserved: 6291456; time used = 34.44149208068848s
epoch 15: train_loss: 0.69270; Allocated: 637952; Reserved: 8388608; time used = 34.954612493515015s
epoch 20: train_loss: 0.69205; Allocated: 637952; Reserved: 6291456; time used = 34.943756341934204s
epoch 25: train_loss: 0.64019; Allocated: 637952; Reserved: 8388608; time used = 34.31452965736389s
epoch 30: train_loss: 0.67478; Allocated: 637952; Reserved: 6291456; time used = 34.77720260620117s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 218.57948541641235.
Training classifier using 80.00% nodes...
{'micro': 0.675, 'macro': 0.6736210489317366, 'samples': 0.675, 'weighted': 0.6731967562953477, 'accuracy': 0.675}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.83119; Allocated: 17469440; Reserved: 44040192; time used = 4.661770343780518s
epoch 10: train_loss: 2.61249; Allocated: 17469440; Reserved: 44040192; time used = 4.831990003585815s
epoch 15: train_loss: 1.62009; Allocated: 17469440; Reserved: 44040192; time used = 4.643910646438599s
epoch 20: train_loss: 1.35361; Allocated: 17469440; Reserved: 44040192; time used = 4.747106075286865s
epoch 25: train_loss: 1.31905; Allocated: 17469440; Reserved: 44040192; time used = 4.641103267669678s
epoch 30: train_loss: 1.30715; Allocated: 17469440; Reserved: 44040192; time used = 4.782588005065918s
epoch 35: train_loss: 1.28522; Allocated: 17469440; Reserved: 44040192; time used = 4.657559871673584s
epoch 40: train_loss: 1.28422; Allocated: 17469440; Reserved: 44040192; time used = 4.800300121307373s
epoch 45: train_loss: 1.28150; Allocated: 17469440; Reserved: 44040192; time used = 4.627056837081909s
epoch 50: train_loss: 1.26852; Allocated: 17469440; Reserved: 44040192; time used = 4.783197402954102s
epoch 55: train_loss: 1.26928; Allocated: 17469440; Reserved: 44040192; time used = 4.659532070159912s
epoch 60: train_loss: 1.26520; Allocated: 17469440; Reserved: 44040192; time used = 4.653734445571899s
epoch 65: train_loss: 1.26358; Allocated: 17469440; Reserved: 44040192; time used = 4.785803318023682s
epoch 70: train_loss: 1.26898; Allocated: 17469440; Reserved: 44040192; time used = 4.670189380645752s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 69.1245334148407.
Training classifier using 20.00% nodes...
{'micro': 0.4831564374711583, 'macro': 0.35834595580844353, 'samples': 0.4831564374711583, 'weighted': 0.41471936996826025, 'accuracy': 0.4831564374711583}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.46413; Allocated: 17527296; Reserved: 41943040; time used = 4.639463663101196s
epoch 10: train_loss: 0.34402; Allocated: 17527296; Reserved: 41943040; time used = 4.765106916427612s
epoch 15: train_loss: 0.26064; Allocated: 17527296; Reserved: 41943040; time used = 4.642673015594482s
epoch 20: train_loss: 0.21129; Allocated: 17527296; Reserved: 41943040; time used = 4.746295928955078s
epoch 25: train_loss: 0.16751; Allocated: 17527296; Reserved: 41943040; time used = 4.637010097503662s
epoch 30: train_loss: 0.14914; Allocated: 17527296; Reserved: 41943040; time used = 4.799781322479248s
epoch 35: train_loss: 0.11494; Allocated: 17527296; Reserved: 41943040; time used = 4.623045206069946s
epoch 40: train_loss: 0.10863; Allocated: 17527296; Reserved: 41943040; time used = 4.758165597915649s
epoch 45: train_loss: 0.07954; Allocated: 17527296; Reserved: 41943040; time used = 4.647530794143677s
epoch 50: train_loss: 0.06142; Allocated: 17527296; Reserved: 41943040; time used = 4.755868196487427s
epoch 55: train_loss: 0.03959; Allocated: 17527296; Reserved: 41943040; time used = 4.643929719924927s
epoch 60: train_loss: 0.03430; Allocated: 17527296; Reserved: 41943040; time used = 4.645723819732666s
epoch 65: train_loss: 0.03467; Allocated: 17527296; Reserved: 41943040; time used = 4.78101921081543s
epoch 70: train_loss: 0.01576; Allocated: 17527296; Reserved: 41943040; time used = 4.657854318618774s
epoch 75: train_loss: 0.01767; Allocated: 17527296; Reserved: 41943040; time used = 4.8039469718933105s
epoch 80: train_loss: 0.00975; Allocated: 17527296; Reserved: 41943040; time used = 4.6509621143341064s
epoch 85: train_loss: 0.03095; Allocated: 17527296; Reserved: 41943040; time used = 4.797528505325317s
epoch 90: train_loss: 0.00364; Allocated: 17527296; Reserved: 41943040; time used = 4.636069297790527s
epoch 95: train_loss: 0.01130; Allocated: 17527296; Reserved: 41943040; time used = 4.777957201004028s
epoch 100: train_loss: 0.01922; Allocated: 17527296; Reserved: 41943040; time used = 4.637918949127197s
epoch 105: train_loss: 0.00248; Allocated: 17527296; Reserved: 41943040; time used = 4.755901575088501s
epoch 110: train_loss: 0.01074; Allocated: 17527296; Reserved: 41943040; time used = 4.6360931396484375s
epoch 115: train_loss: 0.00199; Allocated: 17527296; Reserved: 41943040; time used = 4.798080682754517s
epoch 120: train_loss: 0.00880; Allocated: 17527296; Reserved: 41943040; time used = 4.6902406215667725s
epoch 125: train_loss: 0.00354; Allocated: 17527296; Reserved: 41943040; time used = 4.835005521774292s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 121.75798654556274.
Training classifier using 20.00% nodes...
{'micro': 0.2962621135209968, 'macro': 0.08032676055595214, 'samples': 0.2962621135209968, 'weighted': 0.15077078163026802, 'accuracy': 0.2962621135209968}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.29075; Allocated: 40761344; Reserved: 62914560; time used = 3.6459319591522217s
epoch 10: train_loss: 1.20248; Allocated: 40761344; Reserved: 62914560; time used = 3.421804428100586s
epoch 15: train_loss: 1.14119; Allocated: 40761344; Reserved: 62914560; time used = 3.617945671081543s
epoch 20: train_loss: 1.10769; Allocated: 40761344; Reserved: 62914560; time used = 3.4133284091949463s
epoch 25: train_loss: 1.17945; Allocated: 40761344; Reserved: 62914560; time used = 3.515500783920288s
epoch 30: train_loss: 1.13831; Allocated: 40761344; Reserved: 62914560; time used = 3.3890769481658936s
epoch 35: train_loss: 1.11628; Allocated: 40761344; Reserved: 62914560; time used = 3.506127119064331s
epoch 40: train_loss: 1.08344; Allocated: 40761344; Reserved: 62914560; time used = 3.3521785736083984s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 33.75646114349365.
Training classifier using 20.00% nodes...
{'micro': 0.7400786103714974, 'macro': 0.748667385047157, 'samples': 0.7400786103714974, 'weighted': 0.7396326225025369, 'accuracy': 0.7400786103714974}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.69417; Allocated: 17475072; Reserved: 44040192; time used = 3.2023766040802s
epoch 10: train_loss: 1.40473; Allocated: 17475072; Reserved: 44040192; time used = 3.2115585803985596s
epoch 15: train_loss: 1.33900; Allocated: 17475072; Reserved: 44040192; time used = 3.330888509750366s
epoch 20: train_loss: 1.32248; Allocated: 17475072; Reserved: 44040192; time used = 3.193340301513672s
epoch 25: train_loss: 1.31847; Allocated: 17475072; Reserved: 44040192; time used = 3.1799912452697754s
epoch 30: train_loss: 1.30177; Allocated: 17475072; Reserved: 44040192; time used = 3.2171003818511963s
epoch 35: train_loss: 1.29860; Allocated: 17475072; Reserved: 44040192; time used = 3.1779215335845947s
epoch 40: train_loss: 1.28547; Allocated: 17475072; Reserved: 44040192; time used = 3.190289258956909s
epoch 45: train_loss: 1.25331; Allocated: 17475072; Reserved: 44040192; time used = 3.312014579772949s
epoch 50: train_loss: 1.24857; Allocated: 17475072; Reserved: 44040192; time used = 3.190150022506714s
epoch 55: train_loss: 1.23318; Allocated: 17475072; Reserved: 44040192; time used = 3.1975862979888916s
epoch 60: train_loss: 1.21625; Allocated: 17475072; Reserved: 44040192; time used = 3.197993755340576s
epoch 65: train_loss: 1.15241; Allocated: 17475072; Reserved: 44040192; time used = 3.3427340984344482s
epoch 70: train_loss: 1.16469; Allocated: 17475072; Reserved: 44040192; time used = 3.216470241546631s
epoch 75: train_loss: 1.12844; Allocated: 17475072; Reserved: 44040192; time used = 3.197695016860962s
epoch 80: train_loss: 1.10032; Allocated: 17475072; Reserved: 44040192; time used = 3.1954708099365234s
epoch 85: train_loss: 1.03299; Allocated: 17475072; Reserved: 44040192; time used = 3.189549684524536s
epoch 90: train_loss: 1.05954; Allocated: 17475072; Reserved: 44040192; time used = 3.1898515224456787s
epoch 95: train_loss: 1.00431; Allocated: 17475072; Reserved: 44040192; time used = 3.3206546306610107s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 66.33407258987427.
Training classifier using 20.00% nodes...
{'micro': 0.3516382095062298, 'macro': 0.15454784445410535, 'samples': 0.3516382095062298, 'weighted': 0.23198712386398643, 'accuracy': 0.3516382095062298}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2617.95it/s]100%|██████████| 1000/1000 [00:00<00:00, 3851.31it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.68229; Allocated: 762880; Reserved: 31457280; time used = 6.13074517250061s
epoch 10: train_loss: 0.69605; Allocated: 762880; Reserved: 31457280; time used = 6.326495885848999s
epoch 15: train_loss: 0.69367; Allocated: 762880; Reserved: 33554432; time used = 6.110950469970703s
epoch 20: train_loss: 0.69841; Allocated: 762880; Reserved: 31457280; time used = 6.129047632217407s
epoch 25: train_loss: 0.69434; Allocated: 762880; Reserved: 31457280; time used = 6.120363712310791s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.798003911972046.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3123.90it/s]100%|██████████| 1500/1500 [00:00<00:00, 5589.55it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.50687; Allocated: 647680; Reserved: 4194304; time used = 2.9936156272888184s
epoch 10: train_loss: 0.49412; Allocated: 647680; Reserved: 4194304; time used = 2.98067307472229s
epoch 15: train_loss: 0.48144; Allocated: 647680; Reserved: 4194304; time used = 3.0993335247039795s
epoch 20: train_loss: 0.46222; Allocated: 647680; Reserved: 4194304; time used = 2.9635722637176514s
epoch 25: train_loss: 0.46707; Allocated: 647680; Reserved: 4194304; time used = 2.960512638092041s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 18.38069772720337.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.6840513983371126, 'samples': 0.7105263157894737, 'weighted': 0.6984922624020369, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.60904; Allocated: 776192; Reserved: 4194304; time used = 4.650560140609741s
epoch 10: train_loss: 0.60135; Allocated: 776192; Reserved: 4194304; time used = 4.517470598220825s
epoch 15: train_loss: 0.61188; Allocated: 776192; Reserved: 4194304; time used = 4.663255929946899s
epoch 20: train_loss: 0.61708; Allocated: 776192; Reserved: 4194304; time used = 4.710481643676758s
epoch 25: train_loss: 0.60280; Allocated: 776192; Reserved: 4194304; time used = 4.535270690917969s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.20665693283081.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.4362745098039216, 'samples': 0.5652173913043478, 'weighted': 0.4558113100312589, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 23.78769; Allocated: 716288; Reserved: 29360128; time used = 1.169172763824463s
epoch 10: train_loss: 6.85961; Allocated: 716288; Reserved: 29360128; time used = 1.1510491371154785s
epoch 15: train_loss: 2.35357; Allocated: 716288; Reserved: 8388608; time used = 1.1531808376312256s
epoch 20: train_loss: 1.91316; Allocated: 716288; Reserved: 8388608; time used = 1.1661489009857178s
epoch 25: train_loss: 1.60900; Allocated: 716288; Reserved: 8388608; time used = 1.1820154190063477s
epoch 30: train_loss: 1.50763; Allocated: 716288; Reserved: 8388608; time used = 1.1499872207641602s
epoch 35: train_loss: 1.59911; Allocated: 716288; Reserved: 8388608; time used = 1.1385388374328613s
epoch 40: train_loss: 1.53260; Allocated: 716288; Reserved: 8388608; time used = 1.1571071147918701s
epoch 45: train_loss: 1.50853; Allocated: 716288; Reserved: 8388608; time used = 1.1695842742919922s
epoch 50: train_loss: 1.42344; Allocated: 716288; Reserved: 29360128; time used = 1.1228055953979492s
epoch 55: train_loss: 1.38292; Allocated: 716288; Reserved: 8388608; time used = 1.109525203704834s
epoch 60: train_loss: 1.38503; Allocated: 716288; Reserved: 8388608; time used = 1.1568639278411865s
epoch 65: train_loss: 1.39133; Allocated: 716288; Reserved: 8388608; time used = 1.115079402923584s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19.41900110244751.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8380681818181819, 'samples': 0.8421052631578947, 'weighted': 0.8421052631578947, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 8.29890; Allocated: 861696; Reserved: 6291456; time used = 0.9020082950592041s
epoch 10: train_loss: 1.31528; Allocated: 861696; Reserved: 8388608; time used = 0.9055545330047607s
epoch 15: train_loss: 1.36709; Allocated: 861696; Reserved: 6291456; time used = 0.8898804187774658s
epoch 20: train_loss: 1.38585; Allocated: 861696; Reserved: 6291456; time used = 0.8874473571777344s
epoch 25: train_loss: 1.38615; Allocated: 861696; Reserved: 6291456; time used = 0.8817441463470459s
epoch 30: train_loss: 1.38194; Allocated: 861696; Reserved: 6291456; time used = 0.8919556140899658s
epoch 35: train_loss: 1.37903; Allocated: 861696; Reserved: 6291456; time used = 0.9181008338928223s
epoch 40: train_loss: 1.36618; Allocated: 861696; Reserved: 6291456; time used = 0.9053480625152588s
epoch 45: train_loss: 1.35474; Allocated: 861696; Reserved: 6291456; time used = 1.036808729171753s
epoch 50: train_loss: 1.34219; Allocated: 861696; Reserved: 6291456; time used = 0.8946640491485596s
epoch 55: train_loss: 1.32586; Allocated: 861696; Reserved: 6291456; time used = 0.9208660125732422s
epoch 60: train_loss: 1.30942; Allocated: 861696; Reserved: 6291456; time used = 0.9060752391815186s
epoch 65: train_loss: 1.30400; Allocated: 861696; Reserved: 6291456; time used = 0.891516923904419s
epoch 70: train_loss: 1.27751; Allocated: 861696; Reserved: 8388608; time used = 0.8805594444274902s
epoch 75: train_loss: 1.22964; Allocated: 861696; Reserved: 6291456; time used = 0.8754112720489502s
epoch 80: train_loss: 1.20833; Allocated: 861696; Reserved: 6291456; time used = 0.8882541656494141s
epoch 85: train_loss: 1.20111; Allocated: 861696; Reserved: 6291456; time used = 0.895432710647583s
epoch 90: train_loss: 1.16023; Allocated: 861696; Reserved: 6291456; time used = 1.037282943725586s
epoch 95: train_loss: 1.16024; Allocated: 861696; Reserved: 6291456; time used = 0.900925874710083s
epoch 100: train_loss: 1.13983; Allocated: 861696; Reserved: 6291456; time used = 0.8804774284362793s
epoch 105: train_loss: 1.15455; Allocated: 861696; Reserved: 6291456; time used = 0.8821520805358887s
epoch 110: train_loss: 1.12647; Allocated: 861696; Reserved: 6291456; time used = 0.8952083587646484s
epoch 115: train_loss: 1.12795; Allocated: 861696; Reserved: 6291456; time used = 0.8884785175323486s
epoch 120: train_loss: 1.11332; Allocated: 861696; Reserved: 6291456; time used = 0.9008064270019531s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.482625484466553.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.560909090909091, 'samples': 0.5942028985507246, 'weighted': 0.5696706192358367, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3150.43it/s]100%|██████████| 1000/1000 [00:00<00:00, 4499.16it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 558080; Reserved: 6291456; time used = 190.71406269073486s
epoch 10: train_loss: 0.69315; Allocated: 558080; Reserved: 8388608; time used = 195.47472596168518s
epoch 15: train_loss: 0.69311; Allocated: 558080; Reserved: 8388608; time used = 192.33925867080688s
epoch 20: train_loss: 0.69287; Allocated: 558080; Reserved: 6291456; time used = 190.50064945220947s
epoch 25: train_loss: 0.65965; Allocated: 558080; Reserved: 8388608; time used = 187.67563819885254s
epoch 30: train_loss: 0.56272; Allocated: 558080; Reserved: 6291456; time used = 194.64105343818665s
epoch 35: train_loss: 0.69315; Allocated: 558080; Reserved: 6291456; time used = 191.60135912895203s
epoch 40: train_loss: 0.69315; Allocated: 558080; Reserved: 6291456; time used = 188.13278245925903s
epoch 45: train_loss: 0.69315; Allocated: 558080; Reserved: 6291456; time used = 190.70315194129944s
epoch 50: train_loss: 0.68542; Allocated: 558080; Reserved: 6291456; time used = 195.43613719940186s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1998.191344499588.
Training classifier using 80.00% nodes...
{'micro': 0.675, 'macro': 0.6743405395926751, 'samples': 0.675, 'weighted': 0.6740474460783085, 'accuracy': 0.675}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38611; Allocated: 1148928; Reserved: 6291456; time used = 5.092060089111328s
epoch 10: train_loss: 1.37463; Allocated: 1148928; Reserved: 6291456; time used = 4.915247917175293s
epoch 15: train_loss: 1.36448; Allocated: 1148928; Reserved: 6291456; time used = 5.091205596923828s
epoch 20: train_loss: 1.37262; Allocated: 1148928; Reserved: 6291456; time used = 5.0502235889434814s
epoch 25: train_loss: 1.36934; Allocated: 1148928; Reserved: 6291456; time used = 4.938215494155884s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 32.31989407539368.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.5108695652173914, 'samples': 0.5652173913043478, 'weighted': 0.5226843100189036, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.56743; Allocated: 506368; Reserved: 6291456; time used = 2.943401575088501s
epoch 10: train_loss: 0.56415; Allocated: 506368; Reserved: 6291456; time used = 2.9399168491363525s
epoch 15: train_loss: 0.56489; Allocated: 506368; Reserved: 6291456; time used = 3.076550006866455s
epoch 20: train_loss: 0.56053; Allocated: 506368; Reserved: 6291456; time used = 2.9310688972473145s
epoch 25: train_loss: 0.56636; Allocated: 506368; Reserved: 6291456; time used = 3.005314826965332s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19.014512062072754.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2988.02it/s]100%|██████████| 1500/1500 [00:00<00:00, 5445.34it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.3285071849823s
epoch 10: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 33.92772674560547s
epoch 15: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.12397861480713s
epoch 20: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.458632469177246s
epoch 25: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.62181520462036s
epoch 30: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.6515634059906s
epoch 35: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.51708793640137s
epoch 40: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.407933712005615s
epoch 45: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 35.363715171813965s
epoch 50: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.417407751083374s
epoch 55: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.154600381851196s
epoch 60: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.312798738479614s
epoch 65: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.01727223396301s
epoch 70: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.654510259628296s
epoch 75: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.07779335975647s
epoch 80: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.020957231521606s
epoch 85: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 33.976635217666626s
epoch 90: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.10053849220276s
epoch 95: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 33.87628531455994s
epoch 100: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 33.88132977485657s
epoch 105: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 33.77689027786255s
epoch 110: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.99003052711487s
epoch 115: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.32939124107361s
epoch 120: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 33.89162540435791s
epoch 125: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.69128394126892s
epoch 130: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 35.20085382461548s
epoch 135: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.66733741760254s
epoch 140: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.47894835472107s
epoch 145: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.65888857841492s
epoch 150: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.61579418182373s
epoch 155: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.48987364768982s
epoch 160: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.394445180892944s
epoch 165: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.40287661552429s
epoch 170: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.49961733818054s
epoch 175: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.55160164833069s
epoch 180: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.41803574562073s
epoch 185: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.63129949569702s
epoch 190: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.00061535835266s
epoch 195: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.26498985290527s
epoch 200: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.455931663513184s
epoch 205: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.43847870826721s
epoch 210: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.318217039108276s
epoch 215: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.79862427711487s
epoch 220: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 35.64281463623047s
epoch 225: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 35.54674482345581s
epoch 230: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.86542820930481s
epoch 235: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 36.21580123901367s
epoch 240: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 36.058501958847046s
epoch 245: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.80509328842163s
epoch 250: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 35.082863092422485s
epoch 255: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 35.82605218887329s
epoch 260: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.94925832748413s
epoch 265: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.331331968307495s
epoch 270: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.99168872833252s
epoch 275: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.171544313430786s
epoch 280: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.41653919219971s
epoch 285: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.18325877189636s
epoch 290: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.448848724365234s
epoch 295: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.0721971988678s
epoch 300: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.319637060165405s
epoch 305: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 35.461140155792236s
epoch 310: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 35.55735230445862s
epoch 315: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.49329495429993s
epoch 320: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.321362257003784s
epoch 325: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.08126091957092s
epoch 330: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 35.17175364494324s
epoch 335: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.10813498497009s
epoch 340: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.14808678627014s
epoch 345: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.99257564544678s
epoch 350: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.08194446563721s
epoch 355: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.26451516151428s
epoch 360: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.10246443748474s
epoch 365: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.25686979293823s
epoch 370: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.217201948165894s
epoch 375: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 33.934003591537476s
epoch 380: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.299906969070435s
epoch 385: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.25237822532654s
epoch 390: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.33163666725159s
epoch 395: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.26750874519348s
epoch 400: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.90532112121582s
epoch 405: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.865151166915894s
epoch 410: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.018824100494385s
epoch 415: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.72645020484924s
epoch 420: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.7234251499176s
epoch 425: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 33.95114612579346s
epoch 430: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.22100853919983s
epoch 435: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.124417304992676s
epoch 440: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.06373953819275s
epoch 445: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 33.98059964179993s
epoch 450: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 34.10241103172302s
epoch 455: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.75832962989807s
epoch 460: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 33.97516489028931s
epoch 465: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.13709902763367s
epoch 470: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.040247678756714s
epoch 475: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.22494626045227s
epoch 480: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.0706844329834s
epoch 485: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.06312012672424s
epoch 490: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.365745544433594s
epoch 495: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 34.36536145210266s
epoch 500: train_loss: 0.69315; Allocated: 616960; Reserved: 8388608; time used = 34.27873086929321s
Finished training. Time used = 3446.4174523353577.
Training classifier using 80.00% nodes...
{'micro': 0.3333333333333333, 'macro': 0.26722014667220145, 'samples': 0.3333333333333333, 'weighted': 0.2592035422720354, 'accuracy': 0.3333333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.71050; Allocated: 1204224; Reserved: 12582912; time used = 2.123844861984253s
epoch 10: train_loss: 0.68299; Allocated: 1204224; Reserved: 12582912; time used = 2.130312442779541s
epoch 15: train_loss: 0.70013; Allocated: 1204224; Reserved: 12582912; time used = 2.167109251022339s
epoch 20: train_loss: 0.49594; Allocated: 1204224; Reserved: 12582912; time used = 2.128324270248413s
epoch 25: train_loss: 0.35543; Allocated: 1204224; Reserved: 12582912; time used = 2.072145462036133s
epoch 30: train_loss: 0.34153; Allocated: 1204224; Reserved: 12582912; time used = 2.110095739364624s
epoch 35: train_loss: 0.33887; Allocated: 1204224; Reserved: 12582912; time used = 2.0994367599487305s
epoch 40: train_loss: 0.33591; Allocated: 1204224; Reserved: 12582912; time used = 2.1401560306549072s
epoch 45: train_loss: 0.34183; Allocated: 1204224; Reserved: 12582912; time used = 2.1043972969055176s
epoch 50: train_loss: 0.33142; Allocated: 1204224; Reserved: 12582912; time used = 2.0912718772888184s
epoch 55: train_loss: 0.33623; Allocated: 1204224; Reserved: 12582912; time used = 2.1766109466552734s
epoch 60: train_loss: 0.32965; Allocated: 1204224; Reserved: 12582912; time used = 2.1575870513916016s
epoch 65: train_loss: 0.35444; Allocated: 1204224; Reserved: 12582912; time used = 2.0542044639587402s
epoch 70: train_loss: 0.35246; Allocated: 1204224; Reserved: 12582912; time used = 2.045278310775757s
epoch 75: train_loss: 0.35900; Allocated: 1204224; Reserved: 12582912; time used = 2.1122822761535645s
epoch 80: train_loss: 0.33387; Allocated: 1204224; Reserved: 12582912; time used = 2.1392173767089844s
epoch 85: train_loss: 0.32485; Allocated: 1204224; Reserved: 12582912; time used = 2.123562812805176s
epoch 90: train_loss: 0.34201; Allocated: 1204224; Reserved: 12582912; time used = 2.1426761150360107s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.99277067184448.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3056.15it/s] 82%|████████▏ | 1648/2000 [00:00<00:00, 3887.62it/s]100%|██████████| 2000/2000 [00:00<00:00, 6186.82it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.63849; Allocated: 3990016; Reserved: 33554432; time used = 860.9453177452087s
epoch 10: train_loss: 0.39692; Allocated: 3990016; Reserved: 31457280; time used = 870.476491689682s
epoch 15: train_loss: 0.20309; Allocated: 3990016; Reserved: 31457280; time used = 865.6207318305969s
epoch 20: train_loss: 0.05494; Allocated: 3990016; Reserved: 33554432; time used = 871.3185019493103s
epoch 25: train_loss: 0.02813; Allocated: 3990016; Reserved: 31457280; time used = 887.2183618545532s
epoch 30: train_loss: 0.02275; Allocated: 3990016; Reserved: 33554432; time used = 871.545795917511s
epoch 35: train_loss: 0.02904; Allocated: 3990016; Reserved: 33554432; time used = 870.6055080890656s
epoch 40: train_loss: 0.01322; Allocated: 3990016; Reserved: 33554432; time used = 873.0997240543365s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7147.518154382706.
Training classifier using 80.00% nodes...
{'micro': 0.58, 'macro': 0.5794848689644814, 'samples': 0.58, 'weighted': 0.5790433280768942, 'accuracy': 0.58}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3098.04it/s]100%|██████████| 1000/1000 [00:00<00:00, 4433.54it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.030941486358643s
epoch 10: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.020062923431396s
epoch 15: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.121375322341919s
epoch 20: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.236662864685059s
epoch 25: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.97583794593811s
epoch 30: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.169044256210327s
epoch 35: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.207962274551392s
epoch 40: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 11.763834238052368s
epoch 45: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.104707479476929s
epoch 50: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.108819961547852s
epoch 55: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.97042727470398s
epoch 60: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.177873611450195s
epoch 65: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.09853720664978s
epoch 70: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.859126806259155s
epoch 75: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.952770471572876s
epoch 80: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.049733400344849s
epoch 85: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.043253898620605s
epoch 90: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.998380422592163s
epoch 95: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.871088981628418s
epoch 100: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.92566442489624s
epoch 105: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.173612833023071s
epoch 110: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.01802921295166s
epoch 115: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.139634132385254s
epoch 120: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.141281366348267s
epoch 125: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.933850288391113s
epoch 130: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.0457763671875s
epoch 135: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.16640305519104s
epoch 140: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.070725679397583s
epoch 145: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.12926721572876s
epoch 150: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.171892166137695s
epoch 155: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.017402648925781s
epoch 160: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.126116275787354s
epoch 165: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.06214427947998s
epoch 170: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.040838479995728s
epoch 175: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.101741075515747s
epoch 180: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.987464189529419s
epoch 185: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.110277652740479s
epoch 190: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.93073582649231s
epoch 195: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.934300422668457s
epoch 200: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.037956476211548s
epoch 205: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.147531986236572s
epoch 210: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.050722122192383s
epoch 215: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.195750713348389s
epoch 220: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.132542610168457s
epoch 225: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.982839822769165s
epoch 230: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.121314287185669s
epoch 235: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.228175163269043s
epoch 240: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.081975936889648s
epoch 245: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.112413883209229s
epoch 250: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.99340295791626s
epoch 255: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.121541261672974s
epoch 260: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.294081211090088s
epoch 265: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.914629697799683s
epoch 270: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.164400815963745s
epoch 275: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.225809097290039s
epoch 280: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.001157999038696s
epoch 285: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.176426410675049s
epoch 290: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.032108783721924s
epoch 295: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.99138593673706s
epoch 300: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.086627960205078s
epoch 305: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.237707376480103s
epoch 310: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.00867247581482s
epoch 315: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.136461973190308s
epoch 320: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.9193274974823s
epoch 325: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.208130598068237s
epoch 330: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.118358373641968s
epoch 335: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.881666421890259s
epoch 340: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.224501609802246s
epoch 345: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.212531805038452s
epoch 350: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.01902174949646s
epoch 355: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.064391136169434s
epoch 360: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.235103368759155s
epoch 365: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.028912544250488s
epoch 370: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.242978572845459s
epoch 375: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.191365718841553s
epoch 380: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.06420612335205s
epoch 385: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.028063297271729s
epoch 390: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.859575986862183s
epoch 395: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.926350831985474s
epoch 400: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 11.914580345153809s
epoch 405: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.898096323013306s
epoch 410: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.202719449996948s
epoch 415: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.218716144561768s
epoch 420: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.023528099060059s
epoch 425: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.250883102416992s
epoch 430: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.178715944290161s
epoch 435: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.925817966461182s
epoch 440: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.10226821899414s
epoch 445: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.96505618095398s
epoch 450: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.201313734054565s
epoch 455: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.043839693069458s
epoch 460: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.004685401916504s
epoch 465: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.178245067596436s
epoch 470: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.087415933609009s
epoch 475: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 11.871457815170288s
epoch 480: train_loss: 0.69315; Allocated: 552448; Reserved: 8388608; time used = 12.115196228027344s
epoch 485: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.124650239944458s
epoch 490: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 11.989539384841919s
epoch 495: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.16913890838623s
epoch 500: train_loss: 0.69315; Allocated: 552448; Reserved: 10485760; time used = 12.085893392562866s
Finished training. Time used = 1210.4975247383118.
Training classifier using 80.00% nodes...
{'micro': 0.47, 'macro': 0.46978791516606644, 'samples': 0.47, 'weighted': 0.46957583033213285, 'accuracy': 0.47}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.37521; Allocated: 841728; Reserved: 4194304; time used = 4.1585047245025635s
epoch 10: train_loss: 1.37025; Allocated: 841728; Reserved: 6291456; time used = 4.319049119949341s
epoch 15: train_loss: 1.37293; Allocated: 841728; Reserved: 4194304; time used = 4.165354013442993s
epoch 20: train_loss: 1.36292; Allocated: 841728; Reserved: 4194304; time used = 4.301367282867432s
epoch 25: train_loss: 1.35981; Allocated: 841728; Reserved: 4194304; time used = 4.182861089706421s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.343109846115112.
Training classifier using 80.00% nodes...
{'micro': 0.6376811594202898, 'macro': 0.6327443048754524, 'samples': 0.6376811594202898, 'weighted': 0.6358298389659759, 'accuracy': 0.6376811594202898}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.74364; Allocated: 40904704; Reserved: 62914560; time used = 3.102526903152466s
epoch 10: train_loss: 2.12209; Allocated: 40904704; Reserved: 62914560; time used = 2.898521900177002s
epoch 15: train_loss: 1.29779; Allocated: 40904704; Reserved: 62914560; time used = 2.9421849250793457s
epoch 20: train_loss: 1.31078; Allocated: 40904704; Reserved: 62914560; time used = 3.107408285140991s
epoch 25: train_loss: 1.28023; Allocated: 40904704; Reserved: 62914560; time used = 2.8740830421447754s
epoch 30: train_loss: 1.29061; Allocated: 40904704; Reserved: 62914560; time used = 3.0193238258361816s
epoch 35: train_loss: 1.23934; Allocated: 40904704; Reserved: 62914560; time used = 2.9143409729003906s
epoch 40: train_loss: 1.23143; Allocated: 40904704; Reserved: 62914560; time used = 3.0099053382873535s
epoch 45: train_loss: 1.25149; Allocated: 40904704; Reserved: 62914560; time used = 2.929490804672241s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 30.945972681045532.
Training classifier using 20.00% nodes...
{'micro': 0.6070115379738811, 'macro': 0.5721279053696106, 'samples': 0.6070115379738811, 'weighted': 0.5963475572740659, 'accuracy': 0.6070115379738811}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3092.64it/s]100%|██████████| 1000/1000 [00:00<00:00, 4434.36it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 7300.01099; Allocated: 557568; Reserved: 8388608; time used = 55.0836865901947s
epoch 10: train_loss: 1772.10457; Allocated: 557568; Reserved: 6291456; time used = 54.94447445869446s
epoch 15: train_loss: 182.60406; Allocated: 557568; Reserved: 6291456; time used = 55.03850054740906s
epoch 20: train_loss: 416.54559; Allocated: 557568; Reserved: 6291456; time used = 54.5078866481781s
epoch 25: train_loss: 546.06676; Allocated: 557568; Reserved: 6291456; time used = 55.8917133808136s
epoch 30: train_loss: 343.53418; Allocated: 557568; Reserved: 6291456; time used = 55.59088921546936s
epoch 35: train_loss: 98.08158; Allocated: 557568; Reserved: 6291456; time used = 55.04278826713562s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 389.4992723464966.
Training classifier using 80.00% nodes...
{'micro': 0.69, 'macro': 0.68996899689969, 'samples': 0.69, 'weighted': 0.6899069906990701, 'accuracy': 0.69}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69312; Allocated: 53820416; Reserved: 159383552; time used = 0.5226757526397705s
epoch 10: train_loss: 0.64246; Allocated: 53820416; Reserved: 159383552; time used = 0.48297810554504395s
epoch 15: train_loss: 0.30208; Allocated: 53820416; Reserved: 159383552; time used = 0.5011520385742188s
epoch 20: train_loss: 0.24969; Allocated: 53820416; Reserved: 159383552; time used = 0.4863910675048828s
epoch 25: train_loss: 0.22881; Allocated: 53820416; Reserved: 159383552; time used = 0.48984694480895996s
epoch 30: train_loss: 0.21546; Allocated: 53820416; Reserved: 159383552; time used = 0.4889509677886963s
epoch 35: train_loss: 0.19895; Allocated: 53820416; Reserved: 159383552; time used = 0.48560070991516113s
epoch 40: train_loss: 0.19852; Allocated: 53820416; Reserved: 159383552; time used = 0.4972996711730957s
epoch 45: train_loss: 0.18879; Allocated: 53820416; Reserved: 159383552; time used = 0.4910132884979248s
epoch 50: train_loss: 0.18581; Allocated: 53820416; Reserved: 159383552; time used = 0.49671459197998047s
epoch 55: train_loss: 0.18413; Allocated: 53820416; Reserved: 159383552; time used = 0.48921728134155273s
epoch 60: train_loss: 0.18273; Allocated: 53820416; Reserved: 159383552; time used = 0.4907417297363281s
epoch 65: train_loss: 0.18214; Allocated: 53820416; Reserved: 159383552; time used = 0.4910702705383301s
epoch 70: train_loss: 0.17920; Allocated: 53820416; Reserved: 159383552; time used = 0.4997129440307617s
epoch 75: train_loss: 0.18004; Allocated: 53820416; Reserved: 159383552; time used = 0.5021078586578369s
epoch 80: train_loss: 0.17766; Allocated: 53820416; Reserved: 159383552; time used = 0.5102837085723877s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11.49779486656189.
Training classifier using 20.00% nodes...
{'micro': 0.5412639405204461, 'macro': 0.48961121431029864, 'samples': 0.5469571750563486, 'weighted': 0.5330477270538684, 'accuracy': 0.5469571750563486}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3092.61it/s]100%|██████████| 1000/1000 [00:00<00:00, 4430.13it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68407; Allocated: 769536; Reserved: 8388608; time used = 36.54988121986389s
epoch 10: train_loss: 0.66035; Allocated: 769536; Reserved: 10485760; time used = 37.1543447971344s
epoch 15: train_loss: 0.59007; Allocated: 769536; Reserved: 10485760; time used = 36.95362615585327s
epoch 20: train_loss: 0.68386; Allocated: 769536; Reserved: 8388608; time used = 36.76088786125183s
epoch 25: train_loss: 0.63600; Allocated: 769536; Reserved: 8388608; time used = 36.79420852661133s
epoch 30: train_loss: 0.64062; Allocated: 769536; Reserved: 10485760; time used = 36.890482902526855s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 232.01341271400452.
Training classifier using 80.00% nodes...
{'micro': 0.6, 'macro': 0.5993589743589743, 'samples': 0.6, 'weighted': 0.5990384615384615, 'accuracy': 0.6}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3082.15it/s] 83%|████████▎ | 1661/2000 [00:00<00:00, 3921.83it/s]100%|██████████| 2000/2000 [00:00<00:00, 6237.71it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.79966068267822s
epoch 10: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.48819446563721s
epoch 15: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.997138023376465s
epoch 20: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.05889630317688s
epoch 25: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.656158447265625s
epoch 30: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.54557514190674s
epoch 35: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.94679021835327s
epoch 40: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.57584261894226s
epoch 45: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.11779737472534s
epoch 50: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.86137509346008s
epoch 55: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.0314998626709s
epoch 60: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 58.74948716163635s
epoch 65: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.66801047325134s
epoch 70: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.58634352684021s
epoch 75: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.56033992767334s
epoch 80: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.314321756362915s
epoch 85: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.90875029563904s
epoch 90: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.32294940948486s
epoch 95: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 62.05322599411011s
epoch 100: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.300049781799316s
epoch 105: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 62.413793325424194s
epoch 110: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.94763541221619s
epoch 115: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.08907604217529s
epoch 120: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.047675132751465s
epoch 125: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.96377468109131s
epoch 130: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.15654683113098s
epoch 135: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.59014320373535s
epoch 140: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.2402126789093s
epoch 145: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.40510296821594s
epoch 150: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.228883028030396s
epoch 155: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.960620403289795s
epoch 160: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.88285517692566s
epoch 165: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.68876385688782s
epoch 170: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.86338210105896s
epoch 175: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 62.11189150810242s
epoch 180: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.647066593170166s
epoch 185: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.05930781364441s
epoch 190: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.716946601867676s
epoch 195: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.194037437438965s
epoch 200: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.88725829124451s
epoch 205: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.30252122879028s
epoch 210: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.12793445587158s
epoch 215: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.93833374977112s
epoch 220: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.3465576171875s
epoch 225: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.171040534973145s
epoch 230: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.60010313987732s
epoch 235: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.93787741661072s
epoch 240: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.41107439994812s
epoch 245: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.94737243652344s
epoch 250: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.74564170837402s
epoch 255: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.72586512565613s
epoch 260: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.7768816947937s
epoch 265: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.55940294265747s
epoch 270: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.85676860809326s
epoch 275: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.10069942474365s
epoch 280: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.10822153091431s
epoch 285: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.07224082946777s
epoch 290: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.60970687866211s
epoch 295: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.08470439910889s
epoch 300: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 62.43190836906433s
epoch 305: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.714669704437256s
epoch 310: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.37339210510254s
epoch 315: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.221083641052246s
epoch 320: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.739102363586426s
epoch 325: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.6716673374176s
epoch 330: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.11635971069336s
epoch 335: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.00700330734253s
epoch 340: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 62.82178711891174s
epoch 345: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.23336625099182s
epoch 350: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.932700395584106s
epoch 355: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.748380184173584s
epoch 360: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.6898250579834s
epoch 365: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.49671292304993s
epoch 370: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.18516230583191s
epoch 375: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.16508436203003s
epoch 380: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.890915870666504s
epoch 385: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.09972143173218s
epoch 390: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.50843930244446s
epoch 395: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.08295392990112s
epoch 400: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.59611439704895s
epoch 405: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.45486068725586s
epoch 410: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.81838774681091s
epoch 415: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.830442667007446s
epoch 420: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.4134840965271s
epoch 425: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.93300652503967s
epoch 430: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 62.87658405303955s
epoch 435: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.78546905517578s
epoch 440: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.84648251533508s
epoch 445: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.42050790786743s
epoch 450: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.116530656814575s
epoch 455: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.311443567276s
epoch 460: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.592806816101074s
epoch 465: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 58.86502647399902s
epoch 470: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.30663061141968s
epoch 475: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 60.31844139099121s
epoch 480: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 59.96333336830139s
epoch 485: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.14661264419556s
epoch 490: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.67853927612305s
epoch 495: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.225486516952515s
epoch 500: train_loss: 0.69315; Allocated: 4054016; Reserved: 31457280; time used = 61.015743017196655s
Finished training. Time used = 6083.30148434639.
Training classifier using 80.00% nodes...
{'micro': 0.555, 'macro': 0.5093580308167259, 'samples': 0.555, 'weighted': 0.504868656798699, 'accuracy': 0.555}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3070.02it/s]100%|██████████| 1000/1000 [00:00<00:00, 4403.53it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.40927; Allocated: 906752; Reserved: 8388608; time used = 205.33918261528015s
epoch 10: train_loss: 1.38565; Allocated: 906752; Reserved: 8388608; time used = 205.79710149765015s
epoch 15: train_loss: 1.38370; Allocated: 906752; Reserved: 8388608; time used = 203.2251422405243s
epoch 20: train_loss: 1.40516; Allocated: 906752; Reserved: 8388608; time used = 204.12915706634521s
epoch 25: train_loss: 1.38582; Allocated: 906752; Reserved: 10485760; time used = 205.01892232894897s
epoch 30: train_loss: 1.38247; Allocated: 906752; Reserved: 8388608; time used = 208.3208029270172s
epoch 35: train_loss: 1.37137; Allocated: 906752; Reserved: 8388608; time used = 208.31242394447327s
epoch 40: train_loss: 1.37619; Allocated: 906752; Reserved: 8388608; time used = 202.92279863357544s
epoch 45: train_loss: 1.35094; Allocated: 906752; Reserved: 8388608; time used = 206.70985579490662s
epoch 50: train_loss: 1.47745; Allocated: 906752; Reserved: 10485760; time used = 203.7016065120697s
epoch 55: train_loss: 1.32467; Allocated: 906752; Reserved: 8388608; time used = 207.84017944335938s
epoch 60: train_loss: 1.29140; Allocated: 906752; Reserved: 8388608; time used = 209.54271912574768s
epoch 65: train_loss: 1.36123; Allocated: 906752; Reserved: 8388608; time used = 207.12390327453613s
epoch 70: train_loss: 1.30944; Allocated: 906752; Reserved: 8388608; time used = 203.55973148345947s
epoch 75: train_loss: 1.24088; Allocated: 906752; Reserved: 8388608; time used = 207.94775009155273s
epoch 80: train_loss: 1.22488; Allocated: 906752; Reserved: 8388608; time used = 207.72287344932556s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 3468.9387867450714.
Training classifier using 80.00% nodes...
{'micro': 0.54, 'macro': 0.5388471177944862, 'samples': 0.54, 'weighted': 0.5383859649122806, 'accuracy': 0.54}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3021.00it/s] 83%|████████▎ | 1652/2000 [00:00<00:00, 3849.34it/s]100%|██████████| 2000/2000 [00:00<00:00, 6151.39it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 88.64987230300903s
epoch 10: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.55561304092407s
epoch 15: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.29302287101746s
epoch 20: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.2289879322052s
epoch 25: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 88.84201192855835s
epoch 30: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.71796894073486s
epoch 35: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.798259973526s
epoch 40: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.62940835952759s
epoch 45: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.63750791549683s
epoch 50: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 88.59334182739258s
epoch 55: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.05480337142944s
epoch 60: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.04889726638794s
epoch 65: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.73364925384521s
epoch 70: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.55367922782898s
epoch 75: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.00970482826233s
epoch 80: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.34518051147461s
epoch 85: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.76458239555359s
epoch 90: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.04518032073975s
epoch 95: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.44092535972595s
epoch 100: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.64298987388611s
epoch 105: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.7264347076416s
epoch 110: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.93682980537415s
epoch 115: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.32869791984558s
epoch 120: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.87485837936401s
epoch 125: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.19121360778809s
epoch 130: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 87.98053359985352s
epoch 135: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.06651186943054s
epoch 140: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.14327120780945s
epoch 145: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.53706932067871s
epoch 150: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.72666811943054s
epoch 155: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.32607913017273s
epoch 160: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.97569394111633s
epoch 165: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.20097303390503s
epoch 170: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.34458518028259s
epoch 175: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.86400127410889s
epoch 180: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.66894316673279s
epoch 185: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.19849467277527s
epoch 190: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.85026621818542s
epoch 195: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.60239291191101s
epoch 200: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.12457752227783s
epoch 205: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.52256417274475s
epoch 210: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 92.04610180854797s
epoch 215: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.09003567695618s
epoch 220: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.28100943565369s
epoch 225: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.57926797866821s
epoch 230: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.30033087730408s
epoch 235: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.83885073661804s
epoch 240: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 92.52812957763672s
epoch 245: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 92.60734033584595s
epoch 250: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.68526029586792s
epoch 255: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.6759991645813s
epoch 260: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.22183775901794s
epoch 265: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.13482093811035s
epoch 270: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.87120318412781s
epoch 275: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.39070463180542s
epoch 280: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.97726154327393s
epoch 285: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.06536483764648s
epoch 290: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 92.3454360961914s
epoch 295: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.53013324737549s
epoch 300: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.49989366531372s
epoch 305: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.89802169799805s
epoch 310: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.21078205108643s
epoch 315: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.78488826751709s
epoch 320: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.92002940177917s
epoch 325: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.72573375701904s
epoch 330: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 90.41712355613708s
epoch 335: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 89.20789885520935s
epoch 340: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 91.88862204551697s
epoch 345: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.09384822845459s
epoch 350: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 92.73651909828186s
epoch 355: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.25836753845215s
epoch 360: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.90827941894531s
epoch 365: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.59130597114563s
epoch 370: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.82781267166138s
epoch 375: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.44553279876709s
epoch 380: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.87571096420288s
epoch 385: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.74911880493164s
epoch 390: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.97042107582092s
epoch 395: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.42033267021179s
epoch 400: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.84025001525879s
epoch 405: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.40769720077515s
epoch 410: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.44721341133118s
epoch 415: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.62059235572815s
epoch 420: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.4667866230011s
epoch 425: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 94.21487879753113s
epoch 430: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.98794531822205s
epoch 435: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.98449373245239s
epoch 440: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.47312521934509s
epoch 445: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.94303631782532s
epoch 450: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.63637971878052s
epoch 455: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 94.00183916091919s
epoch 460: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.49798774719238s
epoch 465: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.66696262359619s
epoch 470: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.40635108947754s
epoch 475: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.98998928070068s
epoch 480: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.25331234931946s
epoch 485: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.74492478370667s
epoch 490: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.87608551979065s
epoch 495: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 93.10992908477783s
epoch 500: train_loss: 0.69315; Allocated: 4198400; Reserved: 31457280; time used = 94.18083930015564s
Finished training. Time used = 9159.29425907135.
Training classifier using 80.00% nodes...
{'micro': 0.6925, 'macro': 0.6836236664930455, 'samples': 0.6925, 'weighted': 0.6820338754171731, 'accuracy': 0.6925}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.53508; Allocated: 735232; Reserved: 6291456; time used = 4.986533880233765s
epoch 10: train_loss: 0.51188; Allocated: 735232; Reserved: 6291456; time used = 4.728732585906982s
epoch 15: train_loss: 0.48064; Allocated: 735232; Reserved: 8388608; time used = 4.952250957489014s
epoch 20: train_loss: 0.48129; Allocated: 735232; Reserved: 6291456; time used = 4.867364406585693s
epoch 25: train_loss: 0.50807; Allocated: 735232; Reserved: 8388608; time used = 4.783280849456787s
epoch 30: train_loss: 0.50456; Allocated: 735232; Reserved: 8388608; time used = 4.904623985290527s
epoch 35: train_loss: 0.49106; Allocated: 735232; Reserved: 6291456; time used = 5.0081868171691895s
epoch 40: train_loss: 0.47381; Allocated: 735232; Reserved: 6291456; time used = 4.743838787078857s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 45.34755492210388.
Training classifier using 80.00% nodes...
{'micro': 0.6231884057971014, 'macro': 0.6192699490662139, 'samples': 0.6231884057971014, 'weighted': 0.6220688467311335, 'accuracy': 0.6231884057971014}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.42322; Allocated: 57484288; Reserved: 115343360; time used = 1.036614179611206s
epoch 10: train_loss: 1.18928; Allocated: 57484288; Reserved: 115343360; time used = 1.0602264404296875s
epoch 15: train_loss: 1.19796; Allocated: 57484288; Reserved: 115343360; time used = 1.083569049835205s
epoch 20: train_loss: 1.14736; Allocated: 57484288; Reserved: 115343360; time used = 1.0652081966400146s
epoch 25: train_loss: 1.13054; Allocated: 57484288; Reserved: 115343360; time used = 1.102811336517334s
epoch 30: train_loss: 1.12393; Allocated: 57484288; Reserved: 115343360; time used = 1.103623867034912s
epoch 35: train_loss: 1.09723; Allocated: 57484288; Reserved: 115343360; time used = 1.0488994121551514s
epoch 40: train_loss: 1.03846; Allocated: 57484288; Reserved: 115343360; time used = 1.068056344985962s
epoch 45: train_loss: 1.04654; Allocated: 57484288; Reserved: 115343360; time used = 1.0563757419586182s
epoch 50: train_loss: 1.03239; Allocated: 57484288; Reserved: 115343360; time used = 1.242995262145996s
epoch 55: train_loss: 0.99550; Allocated: 57484288; Reserved: 115343360; time used = 1.0602803230285645s
epoch 60: train_loss: 0.98541; Allocated: 57484288; Reserved: 115343360; time used = 1.0757572650909424s
epoch 65: train_loss: 0.94911; Allocated: 57484288; Reserved: 115343360; time used = 1.0555076599121094s
epoch 70: train_loss: 0.94146; Allocated: 57484288; Reserved: 115343360; time used = 1.0557422637939453s
epoch 75: train_loss: 0.93593; Allocated: 57484288; Reserved: 115343360; time used = 1.11399245262146s
epoch 80: train_loss: 0.92626; Allocated: 57484288; Reserved: 115343360; time used = 1.084963083267212s
epoch 85: train_loss: 0.91349; Allocated: 57484288; Reserved: 115343360; time used = 1.0860676765441895s
epoch 90: train_loss: 0.89101; Allocated: 57484288; Reserved: 115343360; time used = 1.0680961608886719s
epoch 95: train_loss: 0.90320; Allocated: 57484288; Reserved: 115343360; time used = 1.1051959991455078s
epoch 100: train_loss: 0.88809; Allocated: 57484288; Reserved: 115343360; time used = 1.0740196704864502s
epoch 105: train_loss: 0.86640; Allocated: 57484288; Reserved: 115343360; time used = 1.075444221496582s
epoch 110: train_loss: 0.87018; Allocated: 57484288; Reserved: 115343360; time used = 1.047360897064209s
epoch 115: train_loss: 0.86629; Allocated: 57484288; Reserved: 115343360; time used = 1.0805792808532715s
epoch 120: train_loss: 0.85677; Allocated: 57484288; Reserved: 115343360; time used = 1.0694341659545898s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 29.890576601028442.
Training classifier using 20.00% nodes...
{'micro': 0.48921933085501856, 'macro': 0.4255216517106355, 'samples': 0.49436513899323814, 'weighted': 0.47437982089041714, 'accuracy': 0.49436513899323814}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.55170; Allocated: 868864; Reserved: 2097152; time used = 3.3747966289520264s
epoch 10: train_loss: 0.39413; Allocated: 868864; Reserved: 2097152; time used = 3.397956132888794s
epoch 15: train_loss: 0.25320; Allocated: 868864; Reserved: 2097152; time used = 3.5186331272125244s
epoch 20: train_loss: 0.16463; Allocated: 868864; Reserved: 2097152; time used = 3.33957839012146s
epoch 25: train_loss: 0.12351; Allocated: 868864; Reserved: 2097152; time used = 3.425826072692871s
epoch 30: train_loss: 0.09698; Allocated: 868864; Reserved: 2097152; time used = 3.447035551071167s
epoch 35: train_loss: 0.08632; Allocated: 868864; Reserved: 2097152; time used = 3.371250867843628s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.800200939178467.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7414965986394557, 'samples': 0.7631578947368421, 'weighted': 0.7533118510562119, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.60684; Allocated: 731648; Reserved: 2097152; time used = 0.7800030708312988s
epoch 10: train_loss: 0.51285; Allocated: 731648; Reserved: 2097152; time used = 0.8065807819366455s
epoch 15: train_loss: 0.36046; Allocated: 731648; Reserved: 2097152; time used = 1.0445001125335693s
epoch 20: train_loss: 0.34355; Allocated: 731648; Reserved: 2097152; time used = 1.0272502899169922s
epoch 25: train_loss: 0.28183; Allocated: 731648; Reserved: 2097152; time used = 1.0289607048034668s
epoch 30: train_loss: 0.15623; Allocated: 731648; Reserved: 2097152; time used = 1.0265378952026367s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10.013757944107056.
Training classifier using 80.00% nodes...
{'micro': 0.7368421052631579, 'macro': 0.7076923076923077, 'samples': 0.7368421052631579, 'weighted': 0.7222672064777328, 'accuracy': 0.7368421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 8.73783; Allocated: 519680; Reserved: 2097152; time used = 3.0899710655212402s
epoch 10: train_loss: 2.42274; Allocated: 519680; Reserved: 2097152; time used = 3.062141180038452s
epoch 15: train_loss: 1.85716; Allocated: 519680; Reserved: 2097152; time used = 3.1663572788238525s
epoch 20: train_loss: 1.39986; Allocated: 519680; Reserved: 2097152; time used = 3.018139362335205s
epoch 25: train_loss: 1.29877; Allocated: 519680; Reserved: 2097152; time used = 3.037156343460083s
epoch 30: train_loss: 1.24485; Allocated: 519680; Reserved: 2097152; time used = 3.2014553546905518s
epoch 35: train_loss: 1.21176; Allocated: 519680; Reserved: 2097152; time used = 3.06986927986145s
epoch 40: train_loss: 1.19869; Allocated: 519680; Reserved: 2097152; time used = 3.0267767906188965s
epoch 45: train_loss: 1.16895; Allocated: 519680; Reserved: 2097152; time used = 3.155644416809082s
epoch 50: train_loss: 1.17596; Allocated: 519680; Reserved: 2097152; time used = 3.043008804321289s
epoch 55: train_loss: 1.16877; Allocated: 519680; Reserved: 2097152; time used = 3.32452654838562s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 40.28651475906372.
Training classifier using 80.00% nodes...
{'micro': 0.8947368421052632, 'macro': 0.889855072463768, 'samples': 0.8947368421052632, 'weighted': 0.8935163996948893, 'accuracy': 0.8947368421052632}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3091.77it/s] 83%|████████▎ | 1654/2000 [00:00<00:00, 3930.18it/s]100%|██████████| 2000/2000 [00:00<00:00, 6241.83it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 77, in forward
    pos_score = get_score(hxp, pos)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 73, in get_score
    h = self.embed(sample)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 50, in embed
    return F.normalize(self.encoder(x), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 60, in forward
    hx = layer([hx, adj])
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/layers.py", line 48, in __call__
    outputs = super(Layer, self).__call__(inputs, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/layers/graph_convc.py", line 54, in forward
    support = torch.mm(sup, pre_sup)
RuntimeError: CUDA error: an illegal memory access was encountered
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.50977; Allocated: 4120576; Reserved: 1214251008; time used = 8346.769946575165s
epoch 10: train_loss: 0.54465; Allocated: 4120576; Reserved: 1604321280; time used = 7858.64724946022s
epoch 15: train_loss: 0.50383; Allocated: 4120576; Reserved: 790626304; time used = 8110.168896198273s
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.43983; Allocated: 19077632; Reserved: 46137344; time used = 5.470165252685547s
epoch 10: train_loss: 0.40492; Allocated: 19077632; Reserved: 46137344; time used = 5.569735765457153s
epoch 15: train_loss: 0.39361; Allocated: 19077632; Reserved: 46137344; time used = 5.377363443374634s
epoch 20: train_loss: 0.37978; Allocated: 19077632; Reserved: 46137344; time used = 5.551687479019165s
epoch 25: train_loss: 0.37088; Allocated: 19077632; Reserved: 46137344; time used = 5.523328065872192s
epoch 30: train_loss: 0.36502; Allocated: 19077632; Reserved: 46137344; time used = 5.501692533493042s
epoch 35: train_loss: 0.36383; Allocated: 19077632; Reserved: 46137344; time used = 5.611454725265503s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.48899984359741.
Training classifier using 20.00% nodes...
{'micro': 0.7868020304568529, 'macro': 0.7672066321600163, 'samples': 0.7868020304568528, 'weighted': 0.7848307357917994, 'accuracy': 0.7868020304568528}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.43037; Allocated: 19143168; Reserved: 297795584; time used = 2.8612349033355713s
epoch 10: train_loss: 1.40551; Allocated: 19143168; Reserved: 297795584; time used = 2.7719051837921143s
epoch 15: train_loss: 1.39655; Allocated: 19143168; Reserved: 297795584; time used = 2.7649617195129395s
epoch 20: train_loss: 1.39215; Allocated: 19143168; Reserved: 297795584; time used = 2.7583611011505127s
epoch 25: train_loss: 1.39026; Allocated: 19143168; Reserved: 297795584; time used = 2.756990909576416s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.996264457702637.
Training classifier using 20.00% nodes...
{'micro': 0.2939547761882787, 'macro': 0.06490727532097006, 'samples': 0.2939547761882787, 'weighted': 0.13397796147240382, 'accuracy': 0.2939547761882787}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.57963; Allocated: 587264; Reserved: 4194304; time used = 4.77681040763855s
epoch 10: train_loss: 0.45448; Allocated: 587264; Reserved: 4194304; time used = 4.647406578063965s
epoch 15: train_loss: 0.34009; Allocated: 587264; Reserved: 4194304; time used = 4.89500880241394s
epoch 20: train_loss: 0.27045; Allocated: 587264; Reserved: 4194304; time used = 4.750949859619141s
epoch 25: train_loss: 0.16605; Allocated: 587264; Reserved: 4194304; time used = 4.832018136978149s
epoch 30: train_loss: 0.17593; Allocated: 587264; Reserved: 4194304; time used = 4.680415868759155s
epoch 35: train_loss: 0.18472; Allocated: 587264; Reserved: 4194304; time used = 4.680402517318726s
epoch 40: train_loss: 0.16110; Allocated: 587264; Reserved: 4194304; time used = 4.591471433639526s
epoch 45: train_loss: 0.15251; Allocated: 587264; Reserved: 4194304; time used = 4.76911997795105s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 48.022255659103394.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8606016140865738, 'samples': 0.868421052631579, 'weighted': 0.8658145731165773, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2937.79it/s]100%|██████████| 1500/1500 [00:00<00:00, 5361.22it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68374; Allocated: 766464; Reserved: 16777216; time used = 12.33693790435791s
epoch 10: train_loss: 0.70552; Allocated: 766464; Reserved: 37748736; time used = 12.292211055755615s
epoch 15: train_loss: 0.69806; Allocated: 766464; Reserved: 16777216; time used = 12.134975910186768s
epoch 20: train_loss: 0.68330; Allocated: 766464; Reserved: 16777216; time used = 12.021126747131348s
epoch 25: train_loss: 0.67077; Allocated: 766464; Reserved: 16777216; time used = 12.319836378097534s
epoch 30: train_loss: 0.66306; Allocated: 766464; Reserved: 37748736; time used = 12.096947193145752s
epoch 35: train_loss: 0.64004; Allocated: 766464; Reserved: 16777216; time used = 12.138030767440796s
epoch 40: train_loss: 0.65010; Allocated: 766464; Reserved: 18874368; time used = 12.201237201690674s
epoch 45: train_loss: 0.62386; Allocated: 766464; Reserved: 16777216; time used = 12.154865741729736s
epoch 50: train_loss: 0.60903; Allocated: 766464; Reserved: 16777216; time used = 12.193051815032959s
epoch 55: train_loss: 0.62367; Allocated: 766464; Reserved: 16777216; time used = 12.085570096969604s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 148.71075701713562.
Training classifier using 80.00% nodes...
{'micro': 0.36, 'macro': 0.32747323512388726, 'samples': 0.36, 'weighted': 0.3215906439095867, 'accuracy': 0.36}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.42285; Allocated: 41418752; Reserved: 65011712; time used = 2.8221170902252197s
epoch 10: train_loss: 0.38742; Allocated: 41418752; Reserved: 65011712; time used = 3.069033622741699s
epoch 15: train_loss: 0.36104; Allocated: 41418752; Reserved: 65011712; time used = 2.920379638671875s
epoch 20: train_loss: 0.31427; Allocated: 41418752; Reserved: 65011712; time used = 2.8247039318084717s
epoch 25: train_loss: 0.07345; Allocated: 41418752; Reserved: 65011712; time used = 2.8782055377960205s
epoch 30: train_loss: 0.09656; Allocated: 41418752; Reserved: 65011712; time used = 2.965862989425659s
epoch 35: train_loss: 0.04579; Allocated: 41418752; Reserved: 62914560; time used = 2.865072727203369s
epoch 40: train_loss: 0.01661; Allocated: 41418752; Reserved: 65011712; time used = 2.990837574005127s
epoch 45: train_loss: 0.02195; Allocated: 41418752; Reserved: 62914560; time used = 3.06577730178833s
epoch 50: train_loss: 0.04220; Allocated: 41418752; Reserved: 65011712; time used = 3.0074033737182617s
epoch 55: train_loss: 0.05148; Allocated: 41418752; Reserved: 65011712; time used = 2.859424591064453s
epoch 60: train_loss: 0.05818; Allocated: 41418752; Reserved: 65011712; time used = 2.850740909576416s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.5245578289032.
Training classifier using 20.00% nodes...
{'micro': 0.5863446177253708, 'macro': 0.5473445453627601, 'samples': 0.5863446177253708, 'weighted': 0.5652026171684768, 'accuracy': 0.5863446177253708}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3040.60it/s] 82%|████████▏ | 1648/2000 [00:00<00:00, 3869.57it/s]100%|██████████| 2000/2000 [00:00<00:00, 6159.26it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 3777024; Reserved: 29360128; time used = 1030.2475678920746s
epoch 10: train_loss: 0.69315; Allocated: 3777024; Reserved: 29360128; time used = 1026.0381298065186s
epoch 15: train_loss: 0.69315; Allocated: 3777024; Reserved: 29360128; time used = 1022.1841993331909s
epoch 20: train_loss: 0.69315; Allocated: 3777024; Reserved: 29360128; time used = 1024.405417919159s
epoch 25: train_loss: 0.69315; Allocated: 3777024; Reserved: 29360128; time used = 1031.4159817695618s
epoch 30: train_loss: 0.69315; Allocated: 3777024; Reserved: 31457280; time used = 1026.057841539383s
epoch 35: train_loss: 0.69315; Allocated: 3777024; Reserved: 29360128; time used = 1022.111298084259s
epoch 40: train_loss: 0.69315; Allocated: 3777024; Reserved: 29360128; time used = 1025.7315669059753s
epoch 45: train_loss: 0.69315; Allocated: 3777024; Reserved: 29360128; time used = 1037.0206747055054s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9455.82574415207.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2591.05it/s]100%|██████████| 1500/1500 [00:00<00:00, 4876.19it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 141518175.50000; Allocated: 692736; Reserved: 8388608; time used = 60.54765439033508s
epoch 10: train_loss: 103459856.00000; Allocated: 692736; Reserved: 8388608; time used = 59.61041569709778s
epoch 15: train_loss: 59269519.00000; Allocated: 692736; Reserved: 10485760; time used = 60.920114278793335s
epoch 20: train_loss: 106691663.75000; Allocated: 692736; Reserved: 8388608; time used = 60.31630492210388s
epoch 25: train_loss: 676673704.00000; Allocated: 692736; Reserved: 6291456; time used = 59.8864688873291s
epoch 30: train_loss: 92115436.00000; Allocated: 692736; Reserved: 6291456; time used = 59.7589898109436s
epoch 35: train_loss: 7501158.75000; Allocated: 692736; Reserved: 6291456; time used = 59.06765961647034s
epoch 40: train_loss: 53507216.50000; Allocated: 692736; Reserved: 8388608; time used = 58.9454779624939s
epoch 45: train_loss: 20528780.56250; Allocated: 692736; Reserved: 6291456; time used = 60.051087379455566s
epoch 50: train_loss: 3880571.75000; Allocated: 692736; Reserved: 8388608; time used = 60.336406230926514s
epoch 55: train_loss: 2873962.92188; Allocated: 692736; Reserved: 6291456; time used = 59.90702176094055s
epoch 60: train_loss: 13276628.87500; Allocated: 692736; Reserved: 8388608; time used = 59.6781861782074s
epoch 65: train_loss: 10102995.00000; Allocated: 692736; Reserved: 6291456; time used = 58.82814431190491s
epoch 70: train_loss: 5465984.22656; Allocated: 692736; Reserved: 8388608; time used = 59.50017189979553s
epoch 75: train_loss: 1484523.73438; Allocated: 692736; Reserved: 8388608; time used = 60.63636255264282s
epoch 80: train_loss: 141398.95410; Allocated: 692736; Reserved: 8388608; time used = 59.280110120773315s
epoch 85: train_loss: 553953.08203; Allocated: 692736; Reserved: 6291456; time used = 59.56882166862488s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1032.2755284309387.
Training classifier using 80.00% nodes...
{'micro': 0.39666666666666667, 'macro': 0.32108731916755545, 'samples': 0.39666666666666667, 'weighted': 0.3114546995925288, 'accuracy': 0.39666666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3026.22it/s] 83%|████████▎ | 1651/2000 [00:00<00:00, 3854.90it/s]100%|██████████| 2000/2000 [00:00<00:00, 6150.24it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.48983; Allocated: 1351680; Reserved: 12582912; time used = 3.7486772537231445s
epoch 10: train_loss: 1.38907; Allocated: 1351680; Reserved: 12582912; time used = 3.719526529312134s
epoch 15: train_loss: 1.38695; Allocated: 1351680; Reserved: 12582912; time used = 3.7658307552337646s
epoch 20: train_loss: 1.38879; Allocated: 1351680; Reserved: 12582912; time used = 3.718648672103882s
epoch 25: train_loss: 1.38644; Allocated: 1351680; Reserved: 12582912; time used = 3.6945834159851074s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 23.04206919670105.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.35331; Allocated: 17605632; Reserved: 58720256; time used = 0.2653391361236572s
epoch 10: train_loss: 0.01639; Allocated: 17605632; Reserved: 58720256; time used = 0.2568237781524658s
epoch 15: train_loss: 0.00104; Allocated: 17605632; Reserved: 58720256; time used = 0.249053955078125s
epoch 20: train_loss: 0.00017; Allocated: 17605632; Reserved: 58720256; time used = 0.24588513374328613s
epoch 25: train_loss: 0.00050; Allocated: 17605632; Reserved: 58720256; time used = 0.2455589771270752s
epoch 30: train_loss: 0.00007; Allocated: 17605632; Reserved: 58720256; time used = 0.2450864315032959s
epoch 35: train_loss: 0.00002; Allocated: 17605632; Reserved: 58720256; time used = 0.24791502952575684s
epoch 40: train_loss: 0.00002; Allocated: 17605632; Reserved: 58720256; time used = 0.24234485626220703s
epoch 45: train_loss: 0.00001; Allocated: 17605632; Reserved: 58720256; time used = 0.247267484664917s
epoch 50: train_loss: 0.01010; Allocated: 17605632; Reserved: 58720256; time used = 0.24123907089233398s
epoch 55: train_loss: 0.00001; Allocated: 17605632; Reserved: 58720256; time used = 0.23453330993652344s
epoch 60: train_loss: 0.00001; Allocated: 17605632; Reserved: 58720256; time used = 0.24590158462524414s
epoch 65: train_loss: 0.00280; Allocated: 17605632; Reserved: 58720256; time used = 0.2511289119720459s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6.742342233657837.
Training classifier using 20.00% nodes...
{'micro': 0.7018920166128289, 'macro': 0.6874131027985753, 'samples': 0.7018920166128289, 'weighted': 0.7001861040737677, 'accuracy': 0.7018920166128289}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3062.13it/s]100%|██████████| 1500/1500 [00:00<00:00, 5526.17it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.475235939025879s
epoch 10: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 13.643341064453125s
epoch 15: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.645774841308594s
epoch 20: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 13.440295219421387s
epoch 25: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.297396659851074s
epoch 30: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.644774913787842s
epoch 35: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.434480428695679s
epoch 40: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.304083108901978s
epoch 45: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.960340976715088s
epoch 50: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.641289949417114s
epoch 55: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.440111875534058s
epoch 60: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.683987617492676s
epoch 65: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.632059812545776s
epoch 70: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 13.65001630783081s
epoch 75: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.445166826248169s
epoch 80: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.856497287750244s
epoch 85: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.535019159317017s
epoch 90: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.78600025177002s
epoch 95: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.371274709701538s
epoch 100: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.88230276107788s
epoch 105: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.63132929801941s
epoch 110: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.64467477798462s
epoch 115: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.507123231887817s
epoch 120: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.43332314491272s
epoch 125: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.478355407714844s
epoch 130: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.382410049438477s
epoch 135: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.54466199874878s
epoch 140: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.356467485427856s
epoch 145: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.523608207702637s
epoch 150: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 13.548400640487671s
epoch 155: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.663596391677856s
epoch 160: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.800736427307129s
epoch 165: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.451813459396362s
epoch 170: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.71088457107544s
epoch 175: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 13.843032121658325s
epoch 180: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.66876745223999s
epoch 185: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.615055799484253s
epoch 190: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.13979697227478s
epoch 195: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.500358819961548s
epoch 200: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.610661745071411s
epoch 205: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.451282501220703s
epoch 210: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.588839054107666s
epoch 215: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.561095714569092s
epoch 220: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.716562747955322s
epoch 225: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 13.511906862258911s
epoch 230: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.56755542755127s
epoch 235: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.425808191299438s
epoch 240: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.696139574050903s
epoch 245: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.36025357246399s
epoch 250: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.313994646072388s
epoch 255: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.525582075119019s
epoch 260: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.693456649780273s
epoch 265: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.756439685821533s
epoch 270: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.539009809494019s
epoch 275: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 13.609279870986938s
epoch 280: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 13.56999135017395s
epoch 285: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.561150789260864s
epoch 290: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.531343221664429s
epoch 295: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.552104234695435s
epoch 300: train_loss: 0.69315; Allocated: 616960; Reserved: 12582912; time used = 13.646913051605225s
epoch 305: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.695684909820557s
epoch 310: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.477844476699829s
epoch 315: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.780205965042114s
epoch 320: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.698413848876953s
epoch 325: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.39060354232788s
epoch 330: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.553999662399292s
epoch 335: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.404414415359497s
epoch 340: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.611195802688599s
epoch 345: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.709926843643188s
epoch 350: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.522270917892456s
epoch 355: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.603320121765137s
epoch 360: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.544136762619019s
epoch 365: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.470886468887329s
epoch 370: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.674337148666382s
epoch 375: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.70318865776062s
epoch 380: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.418084621429443s
epoch 385: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.312877178192139s
epoch 390: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.381195545196533s
epoch 395: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.65380072593689s
epoch 400: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.557339668273926s
epoch 405: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.557403326034546s
epoch 410: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.763789892196655s
epoch 415: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.88173532485962s
epoch 420: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.885379552841187s
epoch 425: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.915711402893066s
epoch 430: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.450851202011108s
epoch 435: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.678688049316406s
epoch 440: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.633731842041016s
epoch 445: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.675338745117188s
epoch 450: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.75680422782898s
epoch 455: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.569053888320923s
epoch 460: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.58816647529602s
epoch 465: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.411503553390503s
epoch 470: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.725930213928223s
epoch 475: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.297333002090454s
epoch 480: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.423961162567139s
epoch 485: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.534311532974243s
epoch 490: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.42493462562561s
epoch 495: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.634986400604248s
epoch 500: train_loss: 0.69315; Allocated: 616960; Reserved: 10485760; time used = 13.519375324249268s
Finished training. Time used = 1361.1111710071564.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 44.44321; Allocated: 1204224; Reserved: 8388608; time used = 1.9904825687408447s
epoch 10: train_loss: 2.77235; Allocated: 1204224; Reserved: 8388608; time used = 1.9518303871154785s
epoch 15: train_loss: 2.07145; Allocated: 1204224; Reserved: 8388608; time used = 1.952937126159668s
epoch 20: train_loss: 1.61633; Allocated: 1204224; Reserved: 8388608; time used = 1.951097011566162s
epoch 25: train_loss: 1.46662; Allocated: 1204224; Reserved: 8388608; time used = 1.9117789268493652s
epoch 30: train_loss: 1.40594; Allocated: 1204224; Reserved: 8388608; time used = 1.9803085327148438s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.27713131904602.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.5314348302300109, 'samples': 0.5507246376811594, 'weighted': 0.5383240471768497, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.34898; Allocated: 53551616; Reserved: 109051904; time used = 0.9536013603210449s
epoch 10: train_loss: 0.22622; Allocated: 53551616; Reserved: 109051904; time used = 0.9388101100921631s
epoch 15: train_loss: 0.15549; Allocated: 53551616; Reserved: 109051904; time used = 0.9393885135650635s
epoch 20: train_loss: 0.10852; Allocated: 53551616; Reserved: 109051904; time used = 0.929710865020752s
epoch 25: train_loss: 0.06178; Allocated: 53551616; Reserved: 109051904; time used = 0.9523451328277588s
epoch 30: train_loss: 0.08529; Allocated: 53551616; Reserved: 109051904; time used = 0.9650139808654785s
epoch 35: train_loss: 0.07712; Allocated: 53551616; Reserved: 109051904; time used = 0.9512746334075928s
epoch 40: train_loss: 0.01899; Allocated: 53551616; Reserved: 109051904; time used = 0.9449365139007568s
epoch 45: train_loss: 0.03543; Allocated: 53551616; Reserved: 109051904; time used = 0.947277307510376s
epoch 50: train_loss: 0.01842; Allocated: 53551616; Reserved: 109051904; time used = 1.108532190322876s
epoch 55: train_loss: 0.02406; Allocated: 53551616; Reserved: 109051904; time used = 0.9527072906494141s
epoch 60: train_loss: 0.01457; Allocated: 53551616; Reserved: 109051904; time used = 0.9559357166290283s
epoch 65: train_loss: 0.00873; Allocated: 53551616; Reserved: 109051904; time used = 0.9441969394683838s
epoch 70: train_loss: 0.00817; Allocated: 53551616; Reserved: 109051904; time used = 0.9472758769989014s
epoch 75: train_loss: 0.00782; Allocated: 53551616; Reserved: 109051904; time used = 0.9400312900543213s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 18.631694316864014.
Training classifier using 20.00% nodes...
{'micro': 0.5263940520446097, 'macro': 0.43102187757066046, 'samples': 0.531930879038317, 'weighted': 0.4797196742768024, 'accuracy': 0.531930879038317}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
head 0
total iter: 500
epoch 5: train_loss: 0.62577; Allocated: 57211904; Reserved: 113246208; time used = 3.985302209854126s
epoch 10: train_loss: 0.46215; Allocated: 57211904; Reserved: 113246208; time used = 4.109283447265625s
epoch 15: train_loss: 0.27007; Allocated: 57211904; Reserved: 113246208; time used = 4.025615930557251s
epoch 20: train_loss: 0.19119; Allocated: 57211904; Reserved: 113246208; time used = 4.026458024978638s
epoch 25: train_loss: 0.10270; Allocated: 57211904; Reserved: 113246208; time used = 4.143482685089111s
epoch 30: train_loss: 0.03984; Allocated: 57211904; Reserved: 113246208; time used = 3.972038507461548s
epoch 35: train_loss: 0.15751; Allocated: 57211904; Reserved: 113246208; time used = 3.9576985836029053s
epoch 40: train_loss: 0.00646; Allocated: 57211904; Reserved: 113246208; time used = 4.191403865814209s
epoch 45: train_loss: 0.00723; Allocated: 57211904; Reserved: 113246208; time used = 4.0885419845581055s
epoch 50: train_loss: 0.03457; Allocated: 57211904; Reserved: 113246208; time used = 4.103050708770752s
epoch 55: train_loss: 0.00983; Allocated: 57211904; Reserved: 113246208; time used = 3.986666679382324s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 49.80745005607605.
Training classifier using 20.00% nodes...
{'micro': 0.4806691449814126, 'macro': 0.4090172911379673, 'samples': 0.48572501878287, 'weighted': 0.458574483583152, 'accuracy': 0.48572501878287}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3065.74it/s]100%|██████████| 1000/1000 [00:00<00:00, 4404.56it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 5.80129; Allocated: 40921088; Reserved: 62914560; time used = 2.6443066596984863s
epoch 10: train_loss: 1.32709; Allocated: 40921088; Reserved: 62914560; time used = 3.0565836429595947s
epoch 15: train_loss: 1.27552; Allocated: 40921088; Reserved: 62914560; time used = 2.735774040222168s
epoch 20: train_loss: 1.21498; Allocated: 40921088; Reserved: 62914560; time used = 2.7687060832977295s
epoch 25: train_loss: 1.17664; Allocated: 40921088; Reserved: 62914560; time used = 2.735426902770996s
epoch 30: train_loss: 1.01419; Allocated: 40921088; Reserved: 62914560; time used = 2.8922555446624756s
epoch 35: train_loss: 0.90408; Allocated: 40921088; Reserved: 62914560; time used = 2.6520824432373047s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.167072772979736.
Training classifier using 20.00% nodes...
{'micro': 0.5754405984531508, 'macro': 0.4305105859578707, 'samples': 0.5754405984531508, 'weighted': 0.5085858410568763, 'accuracy': 0.5754405984531508}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.63974; Allocated: 1214464; Reserved: 10485760; time used = 3.323237895965576s
epoch 10: train_loss: 0.60967; Allocated: 1214464; Reserved: 10485760; time used = 3.290684700012207s
epoch 15: train_loss: 0.43724; Allocated: 1214464; Reserved: 10485760; time used = 3.328627109527588s
epoch 20: train_loss: 0.19735; Allocated: 1214464; Reserved: 10485760; time used = 3.25201153755188s
epoch 25: train_loss: 0.14578; Allocated: 1214464; Reserved: 10485760; time used = 3.243823766708374s
epoch 30: train_loss: 0.04263; Allocated: 1214464; Reserved: 12582912; time used = 3.245354175567627s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.420154094696045.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.28602; Allocated: 862720; Reserved: 6291456; time used = 1.547698974609375s
epoch 10: train_loss: 0.03276; Allocated: 862720; Reserved: 6291456; time used = 1.5199477672576904s
epoch 15: train_loss: 0.03694; Allocated: 862720; Reserved: 6291456; time used = 1.5172550678253174s
epoch 20: train_loss: 0.01057; Allocated: 862720; Reserved: 6291456; time used = 1.5264301300048828s
epoch 25: train_loss: 0.03465; Allocated: 862720; Reserved: 6291456; time used = 1.5164613723754883s
epoch 30: train_loss: 0.02423; Allocated: 862720; Reserved: 6291456; time used = 1.5223381519317627s
epoch 35: train_loss: 0.02272; Allocated: 862720; Reserved: 6291456; time used = 1.5490291118621826s
epoch 40: train_loss: 0.01132; Allocated: 862720; Reserved: 6291456; time used = 1.5975708961486816s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 16.501977682113647.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7490829053558328, 'samples': 0.7631578947368421, 'weighted': 0.7584662316098391, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.97148; Allocated: 999936; Reserved: 6291456; time used = 1.8372132778167725s
epoch 10: train_loss: 1.16044; Allocated: 999936; Reserved: 6291456; time used = 1.7744157314300537s
epoch 15: train_loss: 0.93257; Allocated: 999936; Reserved: 6291456; time used = 1.785630702972412s
epoch 20: train_loss: 0.85085; Allocated: 999936; Reserved: 6291456; time used = 1.794703483581543s
epoch 25: train_loss: 0.73723; Allocated: 999936; Reserved: 6291456; time used = 1.7767839431762695s
epoch 30: train_loss: 0.69384; Allocated: 999936; Reserved: 6291456; time used = 1.7992579936981201s
epoch 35: train_loss: 0.63131; Allocated: 999936; Reserved: 6291456; time used = 1.9046082496643066s
epoch 40: train_loss: 0.59883; Allocated: 999936; Reserved: 6291456; time used = 1.8422646522521973s
epoch 45: train_loss: 0.61366; Allocated: 999936; Reserved: 6291456; time used = 1.7958829402923584s
epoch 50: train_loss: 0.53537; Allocated: 999936; Reserved: 6291456; time used = 1.849456548690796s
epoch 55: train_loss: 0.57629; Allocated: 999936; Reserved: 6291456; time used = 1.842947006225586s
epoch 60: train_loss: 0.56754; Allocated: 999936; Reserved: 6291456; time used = 1.832556962966919s
epoch 65: train_loss: 0.50438; Allocated: 999936; Reserved: 6291456; time used = 1.832275152206421s
epoch 70: train_loss: 0.55790; Allocated: 999936; Reserved: 6291456; time used = 1.8891968727111816s
epoch 75: train_loss: 0.51234; Allocated: 999936; Reserved: 6291456; time used = 1.8466498851776123s
epoch 80: train_loss: 0.50146; Allocated: 999936; Reserved: 6291456; time used = 1.8257696628570557s
epoch 85: train_loss: 0.48867; Allocated: 999936; Reserved: 6291456; time used = 1.8655896186828613s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 35.44500923156738.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7490829053558328, 'samples': 0.7631578947368421, 'weighted': 0.7584662316098391, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.42150; Allocated: 712704; Reserved: 4194304; time used = 4.7192063331604s
epoch 10: train_loss: 1.38424; Allocated: 712704; Reserved: 6291456; time used = 4.786911964416504s
epoch 15: train_loss: 1.37193; Allocated: 712704; Reserved: 4194304; time used = 4.60818076133728s
epoch 20: train_loss: 1.37011; Allocated: 712704; Reserved: 4194304; time used = 4.660098075866699s
epoch 25: train_loss: 1.37112; Allocated: 712704; Reserved: 4194304; time used = 4.622587203979492s
epoch 30: train_loss: 1.36833; Allocated: 712704; Reserved: 4194304; time used = 4.7044432163238525s
epoch 35: train_loss: 1.36721; Allocated: 712704; Reserved: 4194304; time used = 4.521415948867798s
epoch 40: train_loss: 1.37125; Allocated: 712704; Reserved: 4194304; time used = 4.768943786621094s
epoch 45: train_loss: 1.37392; Allocated: 712704; Reserved: 4194304; time used = 4.598772764205933s
epoch 50: train_loss: 1.37058; Allocated: 712704; Reserved: 4194304; time used = 4.7351720333099365s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 50.331873178482056.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5679785330948122, 'samples': 0.5942028985507246, 'weighted': 0.5756915817583158, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.58993; Allocated: 848896; Reserved: 4194304; time used = 4.641730546951294s
epoch 10: train_loss: 0.41258; Allocated: 848896; Reserved: 6291456; time used = 4.838741302490234s
epoch 15: train_loss: 0.19646; Allocated: 848896; Reserved: 4194304; time used = 4.585615396499634s
epoch 20: train_loss: 0.06452; Allocated: 848896; Reserved: 4194304; time used = 4.7987213134765625s
epoch 25: train_loss: 0.02465; Allocated: 848896; Reserved: 4194304; time used = 4.603783845901489s
epoch 30: train_loss: 0.01287; Allocated: 848896; Reserved: 4194304; time used = 4.717714071273804s
epoch 35: train_loss: 0.03617; Allocated: 848896; Reserved: 4194304; time used = 4.735774755477905s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 37.50420022010803.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.4362745098039216, 'samples': 0.5652173913043478, 'weighted': 0.4558113100312589, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.35976; Allocated: 40766464; Reserved: 65011712; time used = 4.163318872451782s
epoch 10: train_loss: 0.33774; Allocated: 40766464; Reserved: 65011712; time used = 3.9806554317474365s
epoch 15: train_loss: 0.33495; Allocated: 40766464; Reserved: 65011712; time used = 4.102142572402954s
epoch 20: train_loss: 0.33722; Allocated: 40766464; Reserved: 65011712; time used = 3.834232807159424s
epoch 25: train_loss: 0.35130; Allocated: 40766464; Reserved: 65011712; time used = 3.9985742568969727s
epoch 30: train_loss: 0.32754; Allocated: 40766464; Reserved: 65011712; time used = 3.7837741374969482s
epoch 35: train_loss: 0.33190; Allocated: 40766464; Reserved: 65011712; time used = 3.945629596710205s
epoch 40: train_loss: 0.32454; Allocated: 40766464; Reserved: 65011712; time used = 4.155121326446533s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 37.56757950782776.
Training classifier using 20.00% nodes...
{'micro': 0.8048053759350831, 'macro': 0.7966750214048033, 'samples': 0.8048053759350831, 'weighted': 0.8046765789864749, 'accuracy': 0.8048053759350831}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2907.57it/s] 82%|████████▏ | 1640/2000 [00:00<00:00, 3715.39it/s]100%|██████████| 2000/2000 [00:00<00:00, 5986.68it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3055.31it/s]100%|██████████| 1500/1500 [00:00<00:00, 5520.47it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.29348611831665s
epoch 10: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.020420789718628s
epoch 15: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.942531585693359s
epoch 20: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.834867715835571s
epoch 25: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.134195566177368s
epoch 30: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.9633400440216064s
epoch 35: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.8722944259643555s
epoch 40: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.89241886138916s
epoch 45: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.15277099609375s
epoch 50: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.87819766998291s
epoch 55: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.916496992111206s
epoch 60: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.074883699417114s
epoch 65: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.998765707015991s
epoch 70: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.930322885513306s
epoch 75: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.967748165130615s
epoch 80: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.02419638633728s
epoch 85: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.769141435623169s
epoch 90: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.7245142459869385s
epoch 95: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.9388747215271s
epoch 100: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.768282651901245s
epoch 105: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.844453573226929s
epoch 110: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.9230852127075195s
epoch 115: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.215719223022461s
epoch 120: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.998777151107788s
epoch 125: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.022178649902344s
epoch 130: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.01052474975586s
epoch 135: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.15989065170288s
epoch 140: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.954694986343384s
epoch 145: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.879219055175781s
epoch 150: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.203929424285889s
epoch 155: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.88502836227417s
epoch 160: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.890926837921143s
epoch 165: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.971207141876221s
epoch 170: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.03331208229065s
epoch 175: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.9513208866119385s
epoch 180: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.888195037841797s
epoch 185: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.132328271865845s
epoch 190: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.833384990692139s
epoch 195: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.798633337020874s
epoch 200: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.95492148399353s
epoch 205: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.217462062835693s
epoch 210: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.010402917861938s
epoch 215: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.976274251937866s
epoch 220: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.936989068984985s
epoch 225: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.13073182106018s
epoch 230: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.030227661132812s
epoch 235: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.970699071884155s
epoch 240: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.043209552764893s
epoch 245: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.9768383502960205s
epoch 250: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.977129220962524s
epoch 255: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.879685878753662s
epoch 260: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.09749150276184s
epoch 265: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.833979606628418s
epoch 270: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.791569471359253s
epoch 275: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.214772939682007s
epoch 280: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.045501232147217s
epoch 285: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.934864044189453s
epoch 290: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.020785331726074s
epoch 295: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.00631594657898s
epoch 300: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.834404706954956s
epoch 305: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.005419492721558s
epoch 310: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.127317667007446s
epoch 315: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.926826238632202s
epoch 320: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.924026250839233s
epoch 325: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.934628963470459s
epoch 330: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.991890907287598s
epoch 335: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.772594928741455s
epoch 340: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.909303188323975s
epoch 345: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.023709297180176s
epoch 350: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.162747383117676s
epoch 355: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.870753526687622s
epoch 360: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.009585857391357s
epoch 365: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.191625833511353s
epoch 370: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.891979217529297s
epoch 375: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.866411924362183s
epoch 380: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.944564342498779s
epoch 385: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.9966654777526855s
epoch 390: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.901717901229858s
epoch 395: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.994348764419556s
epoch 400: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.1288902759552s
epoch 405: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.991311550140381s
epoch 410: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.965399503707886s
epoch 415: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.094422340393066s
epoch 420: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.189234733581543s
epoch 425: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.104426145553589s
epoch 430: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.104658842086792s
epoch 435: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.177445411682129s
epoch 440: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.231340885162354s
epoch 445: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.02558708190918s
epoch 450: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.042351961135864s
epoch 455: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.094011068344116s
epoch 460: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.860116481781006s
epoch 465: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.885951995849609s
epoch 470: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.846259832382202s
epoch 475: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.006666421890259s
epoch 480: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.923856735229492s
epoch 485: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 7.912424325942993s
epoch 490: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.127422571182251s
epoch 495: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.011623620986938s
epoch 500: train_loss: 0.69315; Allocated: 693760; Reserved: 14680064; time used = 8.060572147369385s
Finished training. Time used = 802.3104422092438.
Training classifier using 80.00% nodes...
{'micro': 0.4866666666666667, 'macro': 0.3939234972677596, 'samples': 0.4866666666666667, 'weighted': 0.3821057923497268, 'accuracy': 0.4866666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3053.92it/s]100%|██████████| 1500/1500 [00:00<00:00, 5538.99it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.40240; Allocated: 840192; Reserved: 8388608; time used = 59.893476486206055s
epoch 10: train_loss: 1.38962; Allocated: 840192; Reserved: 8388608; time used = 59.483949184417725s
epoch 15: train_loss: 1.38696; Allocated: 840192; Reserved: 8388608; time used = 60.52468538284302s
epoch 20: train_loss: 1.38633; Allocated: 840192; Reserved: 6291456; time used = 60.00164031982422s
epoch 25: train_loss: 1.38598; Allocated: 840192; Reserved: 6291456; time used = 59.632572412490845s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 350.9932053089142.
Training classifier using 80.00% nodes...
{'micro': 0.32666666666666666, 'macro': 0.2541474147414741, 'samples': 0.32666666666666666, 'weighted': 0.2567229922992299, 'accuracy': 0.32666666666666666}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.44613; Allocated: 705024; Reserved: 8388608; time used = 3.516022205352783s
epoch 10: train_loss: 1.34282; Allocated: 705024; Reserved: 8388608; time used = 3.5368332862854004s
epoch 15: train_loss: 1.32518; Allocated: 705024; Reserved: 8388608; time used = 3.660416841506958s
epoch 20: train_loss: 1.28951; Allocated: 705024; Reserved: 8388608; time used = 3.490077495574951s
epoch 25: train_loss: 1.32188; Allocated: 705024; Reserved: 8388608; time used = 3.5099074840545654s
epoch 30: train_loss: 1.31724; Allocated: 705024; Reserved: 8388608; time used = 3.5185163021087646s
epoch 35: train_loss: 1.29840; Allocated: 705024; Reserved: 8388608; time used = 3.661694049835205s
epoch 40: train_loss: 1.29768; Allocated: 705024; Reserved: 8388608; time used = 3.5002942085266113s
epoch 45: train_loss: 1.30417; Allocated: 705024; Reserved: 8388608; time used = 3.524243116378784s
epoch 50: train_loss: 1.31590; Allocated: 705024; Reserved: 8388608; time used = 3.6790688037872314s
epoch 55: train_loss: 1.30246; Allocated: 705024; Reserved: 8388608; time used = 3.579887628555298s
epoch 60: train_loss: 1.30647; Allocated: 705024; Reserved: 8388608; time used = 3.5019569396972656s
epoch 65: train_loss: 1.32556; Allocated: 705024; Reserved: 8388608; time used = 3.5116236209869385s
epoch 70: train_loss: 1.30888; Allocated: 705024; Reserved: 8388608; time used = 3.6487343311309814s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 55.35033202171326.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.638095238095238, 'samples': 0.7105263157894737, 'weighted': 0.6636591478696743, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 1.32478; Allocated: 53483520; Reserved: 109051904; time used = 4.6721086502075195s
epoch 10: train_loss: 1.26501; Allocated: 53483520; Reserved: 109051904; time used = 4.853214502334595s
epoch 15: train_loss: 1.24237; Allocated: 53483520; Reserved: 109051904; time used = 4.666433572769165s
epoch 20: train_loss: 1.22820; Allocated: 53483520; Reserved: 109051904; time used = 4.811903238296509s
epoch 25: train_loss: 1.23634; Allocated: 53483520; Reserved: 109051904; time used = 4.625786781311035s
epoch 30: train_loss: 1.22931; Allocated: 53483520; Reserved: 109051904; time used = 4.592624187469482s
epoch 35: train_loss: 1.21972; Allocated: 53483520; Reserved: 109051904; time used = 4.836760520935059s
epoch 40: train_loss: 1.22097; Allocated: 53483520; Reserved: 109051904; time used = 4.669325828552246s
epoch 45: train_loss: 1.21745; Allocated: 53483520; Reserved: 109051904; time used = 4.707911968231201s
epoch 50: train_loss: 1.20671; Allocated: 53483520; Reserved: 109051904; time used = 4.54117488861084s
epoch 55: train_loss: 1.21616; Allocated: 53483520; Reserved: 109051904; time used = 4.713942050933838s
epoch 60: train_loss: 1.21611; Allocated: 53483520; Reserved: 109051904; time used = 4.585635423660278s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 59.89200305938721.
Training classifier using 20.00% nodes...
{'micro': 0.3516728624535316, 'macro': 0.22827545040533015, 'samples': 0.35537190082644626, 'weighted': 0.2676230073609, 'accuracy': 0.35537190082644626}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2997.96it/s]100%|██████████| 1000/1000 [00:00<00:00, 4311.41it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
total iter: 500
epoch 5: train_loss: 0.69293; Allocated: 498176; Reserved: 8388608; time used = 37.648481130599976s
epoch 10: train_loss: 0.69246; Allocated: 498176; Reserved: 6291456; time used = 37.63112115859985s
epoch 15: train_loss: 0.69309; Allocated: 498176; Reserved: 6291456; time used = 38.41552400588989s
epoch 20: train_loss: 0.69308; Allocated: 498176; Reserved: 8388608; time used = 38.045562505722046s
epoch 25: train_loss: 0.69292; Allocated: 498176; Reserved: 8388608; time used = 36.159358739852905s
epoch 30: train_loss: 0.69187; Allocated: 498176; Reserved: 8388608; time used = 34.470362424850464s
epoch 35: train_loss: 0.68255; Allocated: 498176; Reserved: 8388608; time used = 34.41634702682495s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 287.50572872161865.
Training classifier using 80.00% nodes...
{'micro': 0.615, 'macro': 0.6013564235976289, 'samples': 0.615, 'weighted': 0.5998814423649401, 'accuracy': 0.615}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3055.41it/s]100%|██████████| 1500/1500 [00:00<00:00, 5527.18it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fb83b9aceb0>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68271; Allocated: 768512; Reserved: 8388608; time used = 197.6357991695404s
epoch 10: train_loss: 0.69284; Allocated: 768512; Reserved: 10485760; time used = 196.11429262161255s
epoch 15: train_loss: 0.69263; Allocated: 768512; Reserved: 10485760; time used = 197.16498160362244s
epoch 20: train_loss: 0.69113; Allocated: 768512; Reserved: 10485760; time used = 197.27858757972717s
epoch 25: train_loss: 0.68265; Allocated: 768512; Reserved: 8388608; time used = 195.493647813797s
epoch 30: train_loss: 0.61876; Allocated: 768512; Reserved: 8388608; time used = 195.3608410358429s
epoch 35: train_loss: 0.69305; Allocated: 768512; Reserved: 8388608; time used = 197.18020033836365s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1419.08025765419.
Training classifier using 80.00% nodes...
{'micro': 0.41999999999999993, 'macro': 0.4180270715173995, 'samples': 0.42, 'weighted': 0.4171935764450483, 'accuracy': 0.42}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3084.42it/s]100%|██████████| 1500/1500 [00:00<00:00, 5550.72it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fb92c3ec050>
total iter: 500
epoch 5: train_loss: 67.00394; Allocated: 488448; Reserved: 4194304; time used = 194.55770254135132s
epoch 10: train_loss: 42.55572; Allocated: 488448; Reserved: 6291456; time used = 196.35185623168945s
epoch 15: train_loss: 8.10303; Allocated: 488448; Reserved: 6291456; time used = 197.4213147163391s
epoch 20: train_loss: 2.56710; Allocated: 488448; Reserved: 8388608; time used = 200.20096015930176s
epoch 25: train_loss: 2.63734; Allocated: 488448; Reserved: 4194304; time used = 196.06917715072632s
epoch 30: train_loss: 1.29224; Allocated: 488448; Reserved: 6291456; time used = 195.67428493499756s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1301.8834574222565.
Training classifier using 80.00% nodes...
{'micro': 0.49666666666666665, 'macro': 0.4063624774756027, 'samples': 0.49666666666666665, 'weighted': 0.394732350814886, 'accuracy': 0.49666666666666665}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f124e5251e0>
total iter: 500
epoch 5: train_loss: 0.65712; Allocated: 53541888; Reserved: 109051904; time used = 4.14945650100708s
epoch 10: train_loss: 0.45576; Allocated: 53541888; Reserved: 109051904; time used = 4.263693809509277s
epoch 15: train_loss: 0.42464; Allocated: 53541888; Reserved: 109051904; time used = 4.140504360198975s
epoch 20: train_loss: 0.39626; Allocated: 53541888; Reserved: 109051904; time used = 4.244956731796265s
epoch 25: train_loss: 0.38452; Allocated: 53541888; Reserved: 109051904; time used = 4.117321968078613s
epoch 30: train_loss: 0.37230; Allocated: 53541888; Reserved: 109051904; time used = 4.115344047546387s
epoch 35: train_loss: 0.36567; Allocated: 53541888; Reserved: 109051904; time used = 4.2343645095825195s
epoch 40: train_loss: 0.36652; Allocated: 53541888; Reserved: 109051904; time used = 4.1069560050964355s
epoch 45: train_loss: 0.36165; Allocated: 53541888; Reserved: 109051904; time used = 4.261699438095093s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 42.500014781951904.
Training classifier using 20.00% nodes...
{'micro': 0.6412639405204461, 'macro': 0.570668957751238, 'samples': 0.6480090157776108, 'weighted': 0.6266823046860504, 'accuracy': 0.6480090157776108}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3039.39it/s]100%|██████████| 1500/1500 [00:00<00:00, 5496.88it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fdeca171050>
total iter: 500
epoch 5: train_loss: 34.26190; Allocated: 492544; Reserved: 6291456; time used = 34.262455224990845s
epoch 10: train_loss: 58.23896; Allocated: 492544; Reserved: 6291456; time used = 34.039599895477295s
epoch 15: train_loss: 31.47226; Allocated: 492544; Reserved: 6291456; time used = 34.12768578529358s
epoch 20: train_loss: 9.91539; Allocated: 492544; Reserved: 4194304; time used = 34.0328893661499s
epoch 25: train_loss: 2.51971; Allocated: 492544; Reserved: 8388608; time used = 34.150373220443726s
epoch 30: train_loss: 1.43270; Allocated: 492544; Reserved: 6291456; time used = 34.17306733131409s
epoch 35: train_loss: 1.71702; Allocated: 492544; Reserved: 6291456; time used = 34.409889936447144s
epoch 40: train_loss: 1.45857; Allocated: 492544; Reserved: 6291456; time used = 34.35509467124939s
epoch 45: train_loss: 1.41289; Allocated: 492544; Reserved: 6291456; time used = 34.282700061798096s
epoch 50: train_loss: 1.41236; Allocated: 492544; Reserved: 8388608; time used = 34.4087815284729s
epoch 55: train_loss: 1.34357; Allocated: 492544; Reserved: 6291456; time used = 34.56433367729187s
epoch 60: train_loss: 1.34120; Allocated: 492544; Reserved: 8388608; time used = 34.60801911354065s
epoch 65: train_loss: 1.30984; Allocated: 492544; Reserved: 4194304; time used = 34.10834503173828s
epoch 70: train_loss: 1.33419; Allocated: 492544; Reserved: 6291456; time used = 34.324196338653564s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 490.1462185382843.
Training classifier using 80.00% nodes...
{'micro': 0.5066666666666667, 'macro': 0.42670694668559345, 'samples': 0.5066666666666667, 'weighted': 0.4160875564668438, 'accuracy': 0.5066666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7ff3d78722d0>
total iter: 500
epoch 5: train_loss: 1.31366; Allocated: 53476352; Reserved: 109051904; time used = 4.153660535812378s
epoch 10: train_loss: 1.15920; Allocated: 53476352; Reserved: 109051904; time used = 4.305184602737427s
epoch 15: train_loss: 1.06659; Allocated: 53476352; Reserved: 109051904; time used = 4.134437799453735s
epoch 20: train_loss: 1.01444; Allocated: 53476352; Reserved: 109051904; time used = 4.303853511810303s
epoch 25: train_loss: 0.99124; Allocated: 53476352; Reserved: 109051904; time used = 4.143795013427734s
epoch 30: train_loss: 0.96980; Allocated: 53476352; Reserved: 109051904; time used = 4.133141756057739s
epoch 35: train_loss: 0.95480; Allocated: 53476352; Reserved: 109051904; time used = 4.2556703090667725s
epoch 40: train_loss: 0.96276; Allocated: 53476352; Reserved: 109051904; time used = 4.115894317626953s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 36.78216743469238.
Training classifier using 20.00% nodes...
{'micro': 0.6353159851301114, 'macro': 0.5756019395104024, 'samples': 0.6419984973703982, 'weighted': 0.6203554247360922, 'accuracy': 0.6419984973703982}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7efb7542e640>
total iter: 500
epoch 5: train_loss: 0.64320; Allocated: 712704; Reserved: 4194304; time used = 4.174001693725586s
epoch 10: train_loss: 0.62944; Allocated: 712704; Reserved: 6291456; time used = 4.299144744873047s
epoch 15: train_loss: 0.63285; Allocated: 712704; Reserved: 4194304; time used = 4.175848007202148s
epoch 20: train_loss: 0.61412; Allocated: 712704; Reserved: 4194304; time used = 4.271299839019775s
epoch 25: train_loss: 0.61750; Allocated: 712704; Reserved: 4194304; time used = 4.239388465881348s
epoch 30: train_loss: 0.58369; Allocated: 712704; Reserved: 4194304; time used = 4.2940897941589355s
epoch 35: train_loss: 0.54666; Allocated: 712704; Reserved: 4194304; time used = 4.168853998184204s
epoch 40: train_loss: 0.53412; Allocated: 712704; Reserved: 4194304; time used = 4.308106184005737s
epoch 45: train_loss: 0.53777; Allocated: 712704; Reserved: 4194304; time used = 4.161647081375122s
epoch 50: train_loss: 0.52944; Allocated: 712704; Reserved: 4194304; time used = 4.347618341445923s
epoch 55: train_loss: 0.54142; Allocated: 712704; Reserved: 4194304; time used = 4.236191511154175s
epoch 60: train_loss: 0.54172; Allocated: 712704; Reserved: 4194304; time used = 4.2878453731536865s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 55.11810374259949.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.5616648411829135, 'samples': 0.5797101449275363, 'weighted': 0.5681095925202788, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f804d26d410>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38652; Allocated: 1214464; Reserved: 8388608; time used = 6.843644618988037s
epoch 10: train_loss: 1.38782; Allocated: 1214464; Reserved: 10485760; time used = 6.592275142669678s
epoch 15: train_loss: 1.38549; Allocated: 1214464; Reserved: 10485760; time used = 6.711472511291504s
epoch 20: train_loss: 1.38630; Allocated: 1214464; Reserved: 8388608; time used = 6.7384655475616455s
epoch 25: train_loss: 1.38476; Allocated: 1214464; Reserved: 10485760; time used = 6.710280418395996s
epoch 30: train_loss: 1.37955; Allocated: 1214464; Reserved: 8388608; time used = 6.599915981292725s
epoch 35: train_loss: 1.36201; Allocated: 1214464; Reserved: 8388608; time used = 6.866290092468262s
epoch 40: train_loss: 1.31236; Allocated: 1214464; Reserved: 8388608; time used = 6.727887153625488s
epoch 45: train_loss: 1.35141; Allocated: 1214464; Reserved: 8388608; time used = 6.5900797843933105s
epoch 50: train_loss: 1.34442; Allocated: 1214464; Reserved: 8388608; time used = 6.761230230331421s
epoch 55: train_loss: 1.33700; Allocated: 1214464; Reserved: 8388608; time used = 6.749125957489014s
epoch 60: train_loss: 1.28464; Allocated: 1214464; Reserved: 8388608; time used = 6.749699592590332s
epoch 65: train_loss: 1.24197; Allocated: 1214464; Reserved: 8388608; time used = 6.551637649536133s
epoch 70: train_loss: 1.25760; Allocated: 1214464; Reserved: 10485760; time used = 6.66565465927124s
epoch 75: train_loss: 1.17992; Allocated: 1214464; Reserved: 8388608; time used = 6.707570552825928s
epoch 80: train_loss: 1.15136; Allocated: 1214464; Reserved: 8388608; time used = 6.599641799926758s
epoch 85: train_loss: 1.16616; Allocated: 1214464; Reserved: 10485760; time used = 6.742198944091797s
epoch 90: train_loss: 1.09895; Allocated: 1214464; Reserved: 10485760; time used = 6.735447406768799s
epoch 95: train_loss: 1.14595; Allocated: 1214464; Reserved: 8388608; time used = 6.658232927322388s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 131.80705213546753.
Training classifier using 80.00% nodes...
{'micro': 0.4782608695652174, 'macro': 0.4728353140916808, 'samples': 0.4782608695652174, 'weighted': 0.4767107108584927, 'accuracy': 0.4782608695652174}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3036.68it/s]100%|██████████| 1000/1000 [00:00<00:00, 4357.18it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f06f40548c0>
total iter: 500
epoch 5: train_loss: 3.73356; Allocated: 630784; Reserved: 29360128; time used = 5.793693542480469s
epoch 10: train_loss: 2.85468; Allocated: 630784; Reserved: 29360128; time used = 5.8444318771362305s
epoch 15: train_loss: 2.17745; Allocated: 630784; Reserved: 29360128; time used = 5.875169515609741s
epoch 20: train_loss: 1.80829; Allocated: 630784; Reserved: 29360128; time used = 5.908305883407593s
epoch 25: train_loss: 1.61201; Allocated: 630784; Reserved: 29360128; time used = 5.890638589859009s
epoch 30: train_loss: 1.46901; Allocated: 630784; Reserved: 29360128; time used = 5.913994789123535s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 40.45439529418945.
Training classifier using 80.00% nodes...
{'micro': 0.715, 'macro': 0.7146504467973267, 'samples': 0.715, 'weighted': 0.7144507021100849, 'accuracy': 0.715}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3028.36it/s] 83%|████████▎ | 1656/2000 [00:00<00:00, 3858.78it/s]100%|██████████| 2000/2000 [00:00<00:00, 6162.88it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f3f2fa0b140>
total iter: 500
epoch 5: train_loss: 0.69316; Allocated: 3783680; Reserved: 29360128; time used = 111.78857040405273s
epoch 10: train_loss: 0.69315; Allocated: 3783680; Reserved: 29360128; time used = 110.0537338256836s
epoch 15: train_loss: 0.69315; Allocated: 3783680; Reserved: 31457280; time used = 110.19965839385986s
epoch 20: train_loss: 0.69315; Allocated: 3783680; Reserved: 29360128; time used = 108.79579544067383s
epoch 25: train_loss: 0.69315; Allocated: 3783680; Reserved: 29360128; time used = 110.31819939613342s
epoch 30: train_loss: 0.69315; Allocated: 3783680; Reserved: 31457280; time used = 109.37148404121399s
epoch 35: train_loss: 0.69315; Allocated: 3783680; Reserved: 29360128; time used = 106.93197631835938s
epoch 40: train_loss: 0.69315; Allocated: 3783680; Reserved: 29360128; time used = 109.91770601272583s
epoch 45: train_loss: 0.69315; Allocated: 3783680; Reserved: 29360128; time used = 109.51012873649597s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1013.3383414745331.
Training classifier using 80.00% nodes...
{'micro': 0.665, 'macro': 0.6445246179966043, 'samples': 0.665, 'weighted': 0.6419651952461798, 'accuracy': 0.665}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3085.74it/s] 83%|████████▎ | 1663/2000 [00:00<00:00, 3926.92it/s]100%|██████████| 2000/2000 [00:00<00:00, 6252.11it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7faf7d4480f0>
total iter: 500
epoch 5: train_loss: 247.26686; Allocated: 3857920; Reserved: 31457280; time used = 800.8160622119904s
epoch 10: train_loss: 62.10010; Allocated: 3857920; Reserved: 33554432; time used = 801.1106870174408s
epoch 15: train_loss: 16.38433; Allocated: 3857920; Reserved: 33554432; time used = 811.3235764503479s
epoch 20: train_loss: 9.22060; Allocated: 3857920; Reserved: 29360128; time used = 831.1404876708984s
epoch 25: train_loss: 9.82837; Allocated: 3857920; Reserved: 31457280; time used = 816.8239524364471s
epoch 30: train_loss: 3.41904; Allocated: 3857920; Reserved: 29360128; time used = 816.3257648944855s
epoch 35: train_loss: 3.60087; Allocated: 3857920; Reserved: 31457280; time used = 813.8158576488495s
epoch 40: train_loss: 4.41374; Allocated: 3857920; Reserved: 29360128; time used = 824.4072437286377s
epoch 45: train_loss: 2.07335; Allocated: 3857920; Reserved: 29360128; time used = 847.8978374004364s
epoch 50: train_loss: 1.32433; Allocated: 3857920; Reserved: 31457280; time used = 815.7655358314514s
epoch 55: train_loss: 1.50434; Allocated: 3857920; Reserved: 29360128; time used = 805.9500579833984s
epoch 60: train_loss: 5.08722; Allocated: 3857920; Reserved: 31457280; time used = 808.2443699836731s
epoch 65: train_loss: 2.21625; Allocated: 3857920; Reserved: 29360128; time used = 795.6898708343506s
epoch 70: train_loss: 7.43370; Allocated: 3857920; Reserved: 33554432; time used = 805.3998351097107s
epoch 75: train_loss: 5.08243; Allocated: 3857920; Reserved: 29360128; time used = 822.4356904029846s
epoch 80: train_loss: 4.24775; Allocated: 3857920; Reserved: 29360128; time used = 821.7644250392914s
epoch 85: train_loss: 2.31259; Allocated: 3857920; Reserved: 31457280; time used = 801.2088878154755s
epoch 90: train_loss: 2.56655; Allocated: 3857920; Reserved: 31457280; time used = 797.9451837539673s
epoch 95: train_loss: 1.28205; Allocated: 3857920; Reserved: 29360128; time used = 803.4254972934723s
epoch 100: train_loss: 2.33734; Allocated: 3857920; Reserved: 29360128; time used = 805.6663908958435s
epoch 105: train_loss: 1.55364; Allocated: 3857920; Reserved: 29360128; time used = 818.0830190181732s
epoch 110: train_loss: 1.35381; Allocated: 3857920; Reserved: 29360128; time used = 817.9394159317017s
epoch 115: train_loss: 1.73611; Allocated: 3857920; Reserved: 29360128; time used = 814.7398557662964s
epoch 120: train_loss: 1.48899; Allocated: 3857920; Reserved: 31457280; time used = 810.8778479099274s
epoch 125: train_loss: 1.60853; Allocated: 3857920; Reserved: 29360128; time used = 808.0997638702393s
epoch 130: train_loss: 1.35596; Allocated: 3857920; Reserved: 31457280; time used = 794.205647945404s
epoch 135: train_loss: 1.82522; Allocated: 3857920; Reserved: 29360128; time used = 789.1639702320099s
epoch 140: train_loss: 1.96730; Allocated: 3857920; Reserved: 31457280; time used = 790.5298435688019s
epoch 145: train_loss: 1.75661; Allocated: 3857920; Reserved: 31457280; time used = 791.1934258937836s
epoch 150: train_loss: 1.62369; Allocated: 3857920; Reserved: 31457280; time used = 803.5324928760529s
epoch 155: train_loss: 1.36969; Allocated: 3857920; Reserved: 31457280; time used = 794.4564888477325s
epoch 160: train_loss: 1.34960; Allocated: 3857920; Reserved: 31457280; time used = 797.1961419582367s
epoch 165: train_loss: 1.27364; Allocated: 3857920; Reserved: 29360128; time used = 793.4105274677277s
epoch 170: train_loss: 1.29178; Allocated: 3857920; Reserved: 29360128; time used = 793.5048739910126s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 27785.49393057823.
Training classifier using 80.00% nodes...
{'micro': 0.7475, 'macro': 0.7397561179858154, 'samples': 0.7475, 'weighted': 0.738409355896392, 'accuracy': 0.7475}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2990.02it/s]100%|██████████| 1000/1000 [00:00<00:00, 4309.06it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f90811d3410>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.54953; Allocated: 1043968; Reserved: 29360128; time used = 13.004783153533936s
epoch 10: train_loss: 1.40748; Allocated: 1043968; Reserved: 29360128; time used = 13.177850723266602s
epoch 15: train_loss: 1.38736; Allocated: 1043968; Reserved: 29360128; time used = 13.13069772720337s
epoch 20: train_loss: 1.38741; Allocated: 1043968; Reserved: 31457280; time used = 13.070272207260132s
epoch 25: train_loss: 1.38661; Allocated: 1043968; Reserved: 29360128; time used = 13.164063692092896s
epoch 30: train_loss: 1.38665; Allocated: 1043968; Reserved: 29360128; time used = 13.016991138458252s
epoch 35: train_loss: 1.38670; Allocated: 1043968; Reserved: 29360128; time used = 13.085513591766357s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 106.14390349388123.
Training classifier using 80.00% nodes...
{'micro': 0.515, 'macro': 0.49967762733720184, 'samples': 0.515, 'weighted': 0.497926499032882, 'accuracy': 0.515}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f62a6a516e0>
total iter: 500
epoch 5: train_loss: 12.27021; Allocated: 992256; Reserved: 6291456; time used = 1.6553936004638672s
epoch 10: train_loss: 4.78080; Allocated: 992256; Reserved: 6291456; time used = 1.6335399150848389s
epoch 15: train_loss: 2.04134; Allocated: 992256; Reserved: 6291456; time used = 1.6599640846252441s
epoch 20: train_loss: 1.46912; Allocated: 992256; Reserved: 6291456; time used = 1.632256269454956s
epoch 25: train_loss: 1.43387; Allocated: 992256; Reserved: 6291456; time used = 1.6533851623535156s
epoch 30: train_loss: 1.36591; Allocated: 992256; Reserved: 6291456; time used = 1.6357369422912598s
epoch 35: train_loss: 1.33319; Allocated: 992256; Reserved: 6291456; time used = 1.6188263893127441s
epoch 40: train_loss: 1.31666; Allocated: 992256; Reserved: 6291456; time used = 1.6439557075500488s
epoch 45: train_loss: 1.30333; Allocated: 992256; Reserved: 6291456; time used = 1.563939094543457s
epoch 50: train_loss: 1.29114; Allocated: 992256; Reserved: 6291456; time used = 1.5655205249786377s
epoch 55: train_loss: 1.28679; Allocated: 992256; Reserved: 6291456; time used = 1.563312292098999s
epoch 60: train_loss: 1.25848; Allocated: 992256; Reserved: 6291456; time used = 1.5429863929748535s
epoch 65: train_loss: 1.24853; Allocated: 992256; Reserved: 6291456; time used = 1.5473949909210205s
epoch 70: train_loss: 1.23506; Allocated: 992256; Reserved: 6291456; time used = 1.5452125072479248s
epoch 75: train_loss: 1.23017; Allocated: 992256; Reserved: 6291456; time used = 1.5285699367523193s
epoch 80: train_loss: 1.21896; Allocated: 992256; Reserved: 6291456; time used = 1.5454084873199463s
epoch 85: train_loss: 1.20594; Allocated: 992256; Reserved: 6291456; time used = 1.53452467918396s
epoch 90: train_loss: 1.18916; Allocated: 992256; Reserved: 6291456; time used = 1.5381696224212646s
epoch 95: train_loss: 1.18789; Allocated: 992256; Reserved: 6291456; time used = 1.5322363376617432s
epoch 100: train_loss: 1.15300; Allocated: 992256; Reserved: 6291456; time used = 1.533646821975708s
epoch 105: train_loss: 1.16684; Allocated: 992256; Reserved: 6291456; time used = 1.5417914390563965s
epoch 110: train_loss: 1.13975; Allocated: 992256; Reserved: 6291456; time used = 1.5401992797851562s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.197609663009644.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.4888888888888888, 'samples': 0.5362318840579711, 'weighted': 0.5001610305958131, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fc19e613eb0>
total iter: 500
epoch 5: train_loss: 1.25960; Allocated: 40695808; Reserved: 62914560; time used = 0.46475863456726074s
epoch 10: train_loss: 1.13912; Allocated: 40695808; Reserved: 62914560; time used = 0.46470189094543457s
epoch 15: train_loss: 1.12150; Allocated: 40695808; Reserved: 62914560; time used = 0.45824694633483887s
epoch 20: train_loss: 1.10059; Allocated: 40695808; Reserved: 62914560; time used = 0.6638138294219971s
epoch 25: train_loss: 1.09636; Allocated: 40695808; Reserved: 62914560; time used = 0.459000825881958s
epoch 30: train_loss: 1.06372; Allocated: 40695808; Reserved: 62914560; time used = 0.46383166313171387s
epoch 35: train_loss: 1.05210; Allocated: 40695808; Reserved: 62914560; time used = 0.4593369960784912s
epoch 40: train_loss: 1.03005; Allocated: 40695808; Reserved: 62914560; time used = 0.4764258861541748s
epoch 45: train_loss: 1.02770; Allocated: 40695808; Reserved: 62914560; time used = 0.6915595531463623s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8.590537071228027.
Training classifier using 20.00% nodes...
{'micro': 0.795042474958793, 'macro': 0.7963351166626368, 'samples': 0.795042474958793, 'weighted': 0.7950210482207988, 'accuracy': 0.795042474958793}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3013.42it/s]100%|██████████| 1000/1000 [00:00<00:00, 4319.45it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fdfc7a5eaa0>
total iter: 500
epoch 5: train_loss: 6.29404; Allocated: 624640; Reserved: 27262976; time used = 5.68252968788147s
epoch 10: train_loss: 7.12826; Allocated: 624640; Reserved: 29360128; time used = 5.8650689125061035s
epoch 15: train_loss: 5.77651; Allocated: 624640; Reserved: 29360128; time used = 5.716159820556641s
epoch 20: train_loss: 2.45062; Allocated: 624640; Reserved: 29360128; time used = 5.664102792739868s
epoch 25: train_loss: 1.68549; Allocated: 624640; Reserved: 29360128; time used = 5.692691802978516s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 37.28283643722534.
Training classifier using 80.00% nodes...
{'micro': 0.7250000000000001, 'macro': 0.724938111074992, 'samples': 0.725, 'weighted': 0.7248555925083144, 'accuracy': 0.725}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 2796.89it/s]100%|██████████| 1000/1000 [00:00<00:00, 4062.20it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f526646a050>
head 0
total iter: 500
epoch 5: train_loss: 0.66631; Allocated: 427520; Reserved: 6291456; time used = 52.8967661857605s
epoch 10: train_loss: 0.65064; Allocated: 427520; Reserved: 6291456; time used = 53.043315410614014s
epoch 15: train_loss: 0.64902; Allocated: 427520; Reserved: 6291456; time used = 52.47269558906555s
epoch 20: train_loss: 0.64286; Allocated: 427520; Reserved: 8388608; time used = 52.51331281661987s
epoch 25: train_loss: 0.64231; Allocated: 427520; Reserved: 6291456; time used = 52.5213406085968s
epoch 30: train_loss: 0.63727; Allocated: 427520; Reserved: 8388608; time used = 52.88787794113159s
epoch 35: train_loss: 0.63009; Allocated: 427520; Reserved: 6291456; time used = 52.249075174331665s
epoch 40: train_loss: 0.61992; Allocated: 427520; Reserved: 8388608; time used = 52.12343740463257s
epoch 45: train_loss: 0.61693; Allocated: 427520; Reserved: 8388608; time used = 52.61472010612488s
epoch 50: train_loss: 0.61390; Allocated: 427520; Reserved: 8388608; time used = 52.42317819595337s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 571.4194416999817.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3052.40it/s]100%|██████████| 1500/1500 [00:00<00:00, 5520.74it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fb084fcd280>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.42337; Allocated: 1108480; Reserved: 23068672; time used = 14.445474863052368s
epoch 10: train_loss: 1.34887; Allocated: 1108480; Reserved: 44040192; time used = 14.418316125869751s
epoch 15: train_loss: 1.33092; Allocated: 1108480; Reserved: 23068672; time used = 14.415283679962158s
epoch 20: train_loss: 1.31887; Allocated: 1108480; Reserved: 23068672; time used = 14.360021591186523s
epoch 25: train_loss: 1.32491; Allocated: 1108480; Reserved: 23068672; time used = 14.555188179016113s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 76.5891797542572.
Training classifier using 80.00% nodes...
{'micro': 0.3333333333333333, 'macro': 0.2695476296186671, 'samples': 0.3333333333333333, 'weighted': 0.2614612007301071, 'accuracy': 0.3333333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3033.49it/s] 83%|████████▎ | 1652/2000 [00:00<00:00, 3863.18it/s]100%|██████████| 2000/2000 [00:00<00:00, 6158.59it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f79abe1a140>
head 0
total iter: 500
epoch 5: train_loss: 0.66307; Allocated: 3787264; Reserved: 31457280; time used = 939.9998517036438s
epoch 10: train_loss: 0.62667; Allocated: 3787264; Reserved: 29360128; time used = 938.5790064334869s
epoch 15: train_loss: 0.45543; Allocated: 3787264; Reserved: 29360128; time used = 954.1686866283417s
epoch 20: train_loss: 0.25559; Allocated: 3787264; Reserved: 29360128; time used = 1015.7764031887054s
epoch 25: train_loss: 0.15186; Allocated: 3787264; Reserved: 29360128; time used = 1002.6709246635437s
epoch 30: train_loss: 0.11044; Allocated: 3787264; Reserved: 29360128; time used = 953.3992609977722s
epoch 35: train_loss: 0.08281; Allocated: 3787264; Reserved: 29360128; time used = 963.1093382835388s
epoch 40: train_loss: 0.06720; Allocated: 3787264; Reserved: 29360128; time used = 964.1137080192566s
epoch 45: train_loss: 0.06289; Allocated: 3787264; Reserved: 29360128; time used = 979.8556046485901s
epoch 50: train_loss: 0.08323; Allocated: 3787264; Reserved: 29360128; time used = 977.9382936954498s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10279.751376628876.
Training classifier using 80.00% nodes...
{'micro': 0.5775, 'macro': 0.5333779707463882, 'samples': 0.5775, 'weighted': 0.5290733825265236, 'accuracy': 0.5775}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f0e90e4d410>
total iter: 500
epoch 5: train_loss: 12.82047; Allocated: 591872; Reserved: 6291456; time used = 3.1940057277679443s
epoch 10: train_loss: 2.70645; Allocated: 591872; Reserved: 6291456; time used = 3.188938617706299s
epoch 15: train_loss: 1.64207; Allocated: 591872; Reserved: 6291456; time used = 3.5027503967285156s
epoch 20: train_loss: 1.38099; Allocated: 591872; Reserved: 6291456; time used = 3.1008169651031494s
epoch 25: train_loss: 1.37343; Allocated: 591872; Reserved: 6291456; time used = 3.2476651668548584s
epoch 30: train_loss: 1.38278; Allocated: 591872; Reserved: 6291456; time used = 3.272650957107544s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 24.735043048858643.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.7989417989417988, 'samples': 0.8157894736842105, 'weighted': 0.808131439710387, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f3a12ce09b0>
total iter: 500
epoch 5: train_loss: 8.29890; Allocated: 861696; Reserved: 6291456; time used = 0.9081480503082275s
epoch 10: train_loss: 1.31528; Allocated: 861696; Reserved: 8388608; time used = 0.9257841110229492s
epoch 15: train_loss: 1.36709; Allocated: 861696; Reserved: 6291456; time used = 0.9234557151794434s
epoch 20: train_loss: 1.38585; Allocated: 861696; Reserved: 6291456; time used = 0.9137856960296631s
epoch 25: train_loss: 1.38615; Allocated: 861696; Reserved: 6291456; time used = 0.9264612197875977s
epoch 30: train_loss: 1.38194; Allocated: 861696; Reserved: 6291456; time used = 0.8984062671661377s
epoch 35: train_loss: 1.37903; Allocated: 861696; Reserved: 6291456; time used = 0.8882980346679688s
epoch 40: train_loss: 1.36618; Allocated: 861696; Reserved: 6291456; time used = 0.8968198299407959s
epoch 45: train_loss: 1.35474; Allocated: 861696; Reserved: 6291456; time used = 1.0522048473358154s
epoch 50: train_loss: 1.34219; Allocated: 861696; Reserved: 6291456; time used = 0.9488770961761475s
epoch 55: train_loss: 1.32586; Allocated: 861696; Reserved: 6291456; time used = 0.9884178638458252s
epoch 60: train_loss: 1.30942; Allocated: 861696; Reserved: 6291456; time used = 0.8458223342895508s
epoch 65: train_loss: 1.30400; Allocated: 861696; Reserved: 6291456; time used = 0.8528096675872803s
epoch 70: train_loss: 1.27751; Allocated: 861696; Reserved: 8388608; time used = 0.8734481334686279s
epoch 75: train_loss: 1.22964; Allocated: 861696; Reserved: 6291456; time used = 0.9013051986694336s
epoch 80: train_loss: 1.20833; Allocated: 861696; Reserved: 6291456; time used = 0.8966097831726074s
epoch 85: train_loss: 1.20111; Allocated: 861696; Reserved: 6291456; time used = 0.8455691337585449s
epoch 90: train_loss: 1.16023; Allocated: 861696; Reserved: 6291456; time used = 0.9785926342010498s
epoch 95: train_loss: 1.16024; Allocated: 861696; Reserved: 6291456; time used = 0.8517341613769531s
epoch 100: train_loss: 1.13983; Allocated: 861696; Reserved: 6291456; time used = 0.8726963996887207s
epoch 105: train_loss: 1.15455; Allocated: 861696; Reserved: 6291456; time used = 0.8942625522613525s
epoch 110: train_loss: 1.12647; Allocated: 861696; Reserved: 6291456; time used = 0.886333703994751s
epoch 115: train_loss: 1.12795; Allocated: 861696; Reserved: 6291456; time used = 0.8472495079040527s
epoch 120: train_loss: 1.11332; Allocated: 861696; Reserved: 6291456; time used = 0.8478758335113525s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 25.417497873306274.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5871794871794872, 'samples': 0.5942028985507246, 'weighted': 0.5910813823857303, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f07bd8e2f00>
total iter: 500
epoch 5: train_loss: 0.61902; Allocated: 17396224; Reserved: 41943040; time used = 4.458034038543701s
epoch 10: train_loss: 0.38502; Allocated: 17396224; Reserved: 41943040; time used = 4.312668561935425s
epoch 15: train_loss: 0.26025; Allocated: 17396224; Reserved: 41943040; time used = 4.889211893081665s
epoch 20: train_loss: 0.12786; Allocated: 17396224; Reserved: 41943040; time used = 4.3206565380096436s
epoch 25: train_loss: 0.06782; Allocated: 17396224; Reserved: 41943040; time used = 4.349036693572998s
epoch 30: train_loss: 0.00333; Allocated: 17396224; Reserved: 41943040; time used = 4.369269609451294s
epoch 35: train_loss: 0.00199; Allocated: 17396224; Reserved: 41943040; time used = 4.422502279281616s
epoch 40: train_loss: 0.00693; Allocated: 17396224; Reserved: 41943040; time used = 4.29521369934082s
epoch 45: train_loss: 0.00270; Allocated: 17396224; Reserved: 41943040; time used = 4.336799144744873s
epoch 50: train_loss: 0.00017; Allocated: 17396224; Reserved: 41943040; time used = 4.289028882980347s
epoch 55: train_loss: 0.00032; Allocated: 17396224; Reserved: 41943040; time used = 4.485095739364624s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 54.2721381187439.
Training classifier using 20.00% nodes...
{'micro': 0.6548223350253807, 'macro': 0.6119353405305239, 'samples': 0.6548223350253807, 'weighted': 0.6458443468201497, 'accuracy': 0.6548223350253807}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f36882c6910>
total iter: 500
epoch 5: train_loss: 1.57430; Allocated: 784896; Reserved: 8388608; time used = 6.524756669998169s
epoch 10: train_loss: 1.45433; Allocated: 784896; Reserved: 6291456; time used = 6.339992523193359s
epoch 15: train_loss: 1.30301; Allocated: 784896; Reserved: 6291456; time used = 6.632907867431641s
epoch 20: train_loss: 1.26050; Allocated: 784896; Reserved: 6291456; time used = 6.474184274673462s
epoch 25: train_loss: 1.18964; Allocated: 784896; Reserved: 6291456; time used = 6.496013879776001s
epoch 30: train_loss: 1.17720; Allocated: 784896; Reserved: 6291456; time used = 6.537202835083008s
epoch 35: train_loss: 1.15612; Allocated: 784896; Reserved: 6291456; time used = 6.499061822891235s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 51.57272505760193.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.5314348302300109, 'samples': 0.5507246376811594, 'weighted': 0.5383240471768497, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3104.06it/s]100%|██████████| 1000/1000 [00:00<00:00, 4447.55it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff13a6ec050>
total iter: 500
epoch 5: train_loss: 1729486.10938; Allocated: 637952; Reserved: 6291456; time used = 12.382587671279907s
epoch 10: train_loss: 819824.62500; Allocated: 637952; Reserved: 6291456; time used = 12.234824419021606s
epoch 15: train_loss: 40233.28418; Allocated: 637952; Reserved: 8388608; time used = 12.534862041473389s
epoch 20: train_loss: 104114.44824; Allocated: 637952; Reserved: 6291456; time used = 12.601577281951904s
epoch 25: train_loss: 17201.38818; Allocated: 637952; Reserved: 6291456; time used = 12.107764959335327s
epoch 30: train_loss: 2804.74176; Allocated: 637952; Reserved: 6291456; time used = 12.378478765487671s
epoch 35: train_loss: 888.46571; Allocated: 637952; Reserved: 6291456; time used = 12.444128274917603s
epoch 40: train_loss: 2683.63947; Allocated: 637952; Reserved: 6291456; time used = 12.187531232833862s
epoch 45: train_loss: 1902.09409; Allocated: 637952; Reserved: 6291456; time used = 12.35181188583374s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 119.341383934021.
Training classifier using 80.00% nodes...
{'micro': 0.685, 'macro': 0.6849921248031201, 'samples': 0.685, 'weighted': 0.6849606240156004, 'accuracy': 0.685}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f5325743780>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.38733; Allocated: 1146880; Reserved: 6291456; time used = 1.253624439239502s
epoch 10: train_loss: 1.38080; Allocated: 1146880; Reserved: 8388608; time used = 1.3160815238952637s
epoch 15: train_loss: 1.34060; Allocated: 1146880; Reserved: 6291456; time used = 1.3013670444488525s
epoch 20: train_loss: 1.33787; Allocated: 1146880; Reserved: 6291456; time used = 1.2990713119506836s
epoch 25: train_loss: 1.29100; Allocated: 1146880; Reserved: 6291456; time used = 1.2520840167999268s
epoch 30: train_loss: 1.26339; Allocated: 1146880; Reserved: 6291456; time used = 1.2468335628509521s
epoch 35: train_loss: 1.23606; Allocated: 1146880; Reserved: 6291456; time used = 1.3658201694488525s
epoch 40: train_loss: 1.20785; Allocated: 1146880; Reserved: 6291456; time used = 1.2881014347076416s
epoch 45: train_loss: 1.16857; Allocated: 1146880; Reserved: 6291456; time used = 1.2352023124694824s
epoch 50: train_loss: 1.15065; Allocated: 1146880; Reserved: 6291456; time used = 1.3069393634796143s
epoch 55: train_loss: 1.13632; Allocated: 1146880; Reserved: 6291456; time used = 1.2916712760925293s
epoch 60: train_loss: 1.13564; Allocated: 1146880; Reserved: 6291456; time used = 1.2596209049224854s
epoch 65: train_loss: 1.09680; Allocated: 1146880; Reserved: 6291456; time used = 1.222353458404541s
epoch 70: train_loss: 1.10620; Allocated: 1146880; Reserved: 8388608; time used = 1.2262842655181885s
epoch 75: train_loss: 1.09347; Allocated: 1146880; Reserved: 6291456; time used = 1.396998643875122s
epoch 80: train_loss: 1.06970; Allocated: 1146880; Reserved: 6291456; time used = 1.2746343612670898s
epoch 85: train_loss: 1.09438; Allocated: 1146880; Reserved: 8388608; time used = 1.2271997928619385s
epoch 90: train_loss: 1.06690; Allocated: 1146880; Reserved: 6291456; time used = 1.2724382877349854s
epoch 95: train_loss: 1.05897; Allocated: 1146880; Reserved: 6291456; time used = 1.3114380836486816s
epoch 100: train_loss: 1.05547; Allocated: 1146880; Reserved: 6291456; time used = 1.341177225112915s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.882951021194458.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.5728044026599404, 'samples': 0.6086956521739131, 'weighted': 0.5817772150384336, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3043.69it/s] 82%|████████▏ | 1639/2000 [00:00<00:00, 3869.54it/s]100%|██████████| 2000/2000 [00:00<00:00, 6143.91it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe2deb80140>
head 0
total iter: 500
epoch 5: train_loss: 0.66492; Allocated: 3785216; Reserved: 29360128; time used = 974.3462402820587s
epoch 10: train_loss: 0.66404; Allocated: 3785216; Reserved: 31457280; time used = 976.7862272262573s
epoch 15: train_loss: 0.66434; Allocated: 3785216; Reserved: 29360128; time used = 975.61341547966s
epoch 20: train_loss: 0.66408; Allocated: 3785216; Reserved: 29360128; time used = 993.7376368045807s
epoch 25: train_loss: 0.66402; Allocated: 3785216; Reserved: 29360128; time used = 990.6825571060181s
epoch 30: train_loss: 0.66408; Allocated: 3785216; Reserved: 29360128; time used = 992.5164484977722s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6692.84442281723.
Training classifier using 80.00% nodes...
{'micro': 0.56, 'macro': 0.49857549857549865, 'samples': 0.56, 'weighted': 0.4933105413105413, 'accuracy': 0.56}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fa8b3051dc0>
total iter: 500
epoch 5: train_loss: 0.40630; Allocated: 17337344; Reserved: 39845888; time used = 5.032728910446167s
epoch 10: train_loss: 0.24393; Allocated: 17337344; Reserved: 39845888; time used = 5.148967981338501s
epoch 15: train_loss: 0.14512; Allocated: 17337344; Reserved: 39845888; time used = 4.855595827102661s
epoch 20: train_loss: 0.08187; Allocated: 17337344; Reserved: 39845888; time used = 5.233145713806152s
epoch 25: train_loss: 0.04663; Allocated: 17337344; Reserved: 39845888; time used = 4.844833850860596s
epoch 30: train_loss: 0.03135; Allocated: 17337344; Reserved: 39845888; time used = 5.159481525421143s
epoch 35: train_loss: 0.04124; Allocated: 17337344; Reserved: 39845888; time used = 4.9554266929626465s
epoch 40: train_loss: 0.01567; Allocated: 17337344; Reserved: 39845888; time used = 5.126410484313965s
epoch 45: train_loss: 0.02736; Allocated: 17337344; Reserved: 39845888; time used = 4.906831979751587s
epoch 50: train_loss: 0.02845; Allocated: 17337344; Reserved: 39845888; time used = 5.044508218765259s
epoch 55: train_loss: 0.00833; Allocated: 17337344; Reserved: 39845888; time used = 4.815797328948975s
epoch 60: train_loss: 0.01387; Allocated: 17337344; Reserved: 39845888; time used = 4.945291996002197s
epoch 65: train_loss: 0.01494; Allocated: 17337344; Reserved: 39845888; time used = 4.836642742156982s
epoch 70: train_loss: 0.00498; Allocated: 17337344; Reserved: 39845888; time used = 5.0809385776519775s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 74.21822190284729.
Training classifier using 20.00% nodes...
{'micro': 0.6700507614213198, 'macro': 0.5873900424318046, 'samples': 0.6700507614213198, 'weighted': 0.643593553319829, 'accuracy': 0.6700507614213198}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3111.50it/s]100%|██████████| 1000/1000 [00:00<00:00, 4455.02it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f26c966a050>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.67365; Allocated: 566784; Reserved: 8388608; time used = 12.5872061252594s
epoch 10: train_loss: 0.63543; Allocated: 566784; Reserved: 8388608; time used = 12.694176197052002s
epoch 15: train_loss: 0.67477; Allocated: 566784; Reserved: 8388608; time used = 12.924197912216187s
epoch 20: train_loss: 0.66899; Allocated: 566784; Reserved: 8388608; time used = 12.733633995056152s
epoch 25: train_loss: 0.58915; Allocated: 566784; Reserved: 10485760; time used = 12.517836570739746s
epoch 30: train_loss: 0.37573; Allocated: 566784; Reserved: 8388608; time used = 12.722596168518066s
epoch 35: train_loss: 0.16672; Allocated: 566784; Reserved: 8388608; time used = 12.618590593338013s
epoch 40: train_loss: 0.07800; Allocated: 566784; Reserved: 8388608; time used = 12.493647336959839s
epoch 45: train_loss: 0.05714; Allocated: 566784; Reserved: 8388608; time used = 12.610654354095459s
epoch 50: train_loss: 0.01384; Allocated: 566784; Reserved: 8388608; time used = 12.622140407562256s
epoch 55: train_loss: 0.17173; Allocated: 566784; Reserved: 8388608; time used = 12.54076886177063s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 147.47216606140137.
Training classifier using 80.00% nodes...
{'micro': 0.63, 'macro': 0.6236395076797885, 'samples': 0.63, 'weighted': 0.6226609703997559, 'accuracy': 0.63}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f9169348280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3065.16it/s]100%|██████████| 1000/1000 [00:00<00:00, 4389.44it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe4988e80a0>
head 0
total iter: 500
epoch 5: train_loss: 0.69196; Allocated: 429568; Reserved: 6291456; time used = 36.410730838775635s
epoch 10: train_loss: 0.68763; Allocated: 429568; Reserved: 6291456; time used = 36.793495655059814s
epoch 15: train_loss: 0.68249; Allocated: 429568; Reserved: 6291456; time used = 36.10122895240784s
epoch 20: train_loss: 0.68447; Allocated: 429568; Reserved: 6291456; time used = 36.44374918937683s
epoch 25: train_loss: 0.68235; Allocated: 429568; Reserved: 6291456; time used = 36.45830178260803s
epoch 30: train_loss: 0.67971; Allocated: 429568; Reserved: 8388608; time used = 36.46343398094177s
epoch 35: train_loss: 0.64679; Allocated: 429568; Reserved: 6291456; time used = 36.446051597595215s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 272.87087869644165.
Training classifier using 80.00% nodes...
{'micro': 0.445, 'macro': 0.43881291235875525, 'samples': 0.445, 'weighted': 0.43763441947470866, 'accuracy': 0.445}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3001.68it/s]100%|██████████| 1000/1000 [00:00<00:00, 4326.70it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f6f2566ddc0>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.56089; Allocated: 632320; Reserved: 8388608; time used = 12.831466436386108s
epoch 10: train_loss: 1.45266; Allocated: 632320; Reserved: 6291456; time used = 12.795563697814941s
epoch 15: train_loss: 1.39177; Allocated: 632320; Reserved: 8388608; time used = 12.912821531295776s
epoch 20: train_loss: 1.38620; Allocated: 632320; Reserved: 6291456; time used = 13.10414719581604s
epoch 25: train_loss: 1.38576; Allocated: 632320; Reserved: 6291456; time used = 12.727330923080444s
epoch 30: train_loss: 1.38499; Allocated: 632320; Reserved: 6291456; time used = 12.994267463684082s
epoch 35: train_loss: 1.38421; Allocated: 632320; Reserved: 8388608; time used = 12.867096662521362s
epoch 40: train_loss: 1.38224; Allocated: 632320; Reserved: 8388608; time used = 12.48838758468628s
epoch 45: train_loss: 1.37821; Allocated: 632320; Reserved: 6291456; time used = 12.935667037963867s
epoch 50: train_loss: 1.37367; Allocated: 632320; Reserved: 6291456; time used = 13.055352449417114s
epoch 55: train_loss: 1.36851; Allocated: 632320; Reserved: 6291456; time used = 12.697043895721436s
epoch 60: train_loss: 1.35176; Allocated: 632320; Reserved: 6291456; time used = 13.004968643188477s
epoch 65: train_loss: 1.29859; Allocated: 632320; Reserved: 6291456; time used = 12.96062707901001s
epoch 70: train_loss: 1.27931; Allocated: 632320; Reserved: 6291456; time used = 12.760266304016113s
epoch 75: train_loss: 1.24034; Allocated: 632320; Reserved: 8388608; time used = 13.026129961013794s
epoch 80: train_loss: 1.24533; Allocated: 632320; Reserved: 6291456; time used = 13.202298641204834s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 209.73998856544495.
Training classifier using 80.00% nodes...
{'micro': 0.63, 'macro': 0.6281780725555219, 'samples': 0.63, 'weighted': 0.6276575218570997, 'accuracy': 0.63}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3081.98it/s]100%|██████████| 1500/1500 [00:00<00:00, 5559.60it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fe3e8849a00>
head 0
total iter: 500
epoch 5: train_loss: 2.10007; Allocated: 696832; Reserved: 14680064; time used = 9.618948936462402s
epoch 10: train_loss: 1.51963; Allocated: 696832; Reserved: 35651584; time used = 9.907759189605713s
epoch 15: train_loss: 1.36852; Allocated: 696832; Reserved: 14680064; time used = 9.374450445175171s
epoch 20: train_loss: 1.34255; Allocated: 696832; Reserved: 14680064; time used = 9.469070434570312s
epoch 25: train_loss: 1.33483; Allocated: 696832; Reserved: 14680064; time used = 9.616647005081177s
epoch 30: train_loss: 1.33477; Allocated: 696832; Reserved: 35651584; time used = 9.422688961029053s
epoch 35: train_loss: 1.31950; Allocated: 696832; Reserved: 14680064; time used = 9.384783506393433s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 77.01487708091736.
Training classifier using 80.00% nodes...
{'micro': 0.39666666666666667, 'macro': 0.39417624194851913, 'samples': 0.39666666666666667, 'weighted': 0.39482620221481607, 'accuracy': 0.39666666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 2967.01it/s]100%|██████████| 1500/1500 [00:00<00:00, 5393.38it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f36eee30050>
total iter: 500
epoch 5: train_loss: 1.49053; Allocated: 420352; Reserved: 4194304; time used = 12.381566047668457s
epoch 10: train_loss: 1.41083; Allocated: 420352; Reserved: 6291456; time used = 12.270449161529541s
epoch 15: train_loss: 1.38901; Allocated: 420352; Reserved: 6291456; time used = 12.165127754211426s
epoch 20: train_loss: 1.38694; Allocated: 420352; Reserved: 6291456; time used = 12.235676050186157s
epoch 25: train_loss: 1.38755; Allocated: 420352; Reserved: 6291456; time used = 12.20128870010376s
epoch 30: train_loss: 1.38686; Allocated: 420352; Reserved: 4194304; time used = 12.335640668869019s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 79.7221109867096.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f1e8d36be60>
total iter: 500
epoch 5: train_loss: 1.31782; Allocated: 17399296; Reserved: 44040192; time used = 4.3592376708984375s
epoch 10: train_loss: 1.32585; Allocated: 17399296; Reserved: 44040192; time used = 4.2727789878845215s
epoch 15: train_loss: 1.28073; Allocated: 17399296; Reserved: 44040192; time used = 4.446783781051636s
epoch 20: train_loss: 1.26623; Allocated: 17399296; Reserved: 44040192; time used = 4.406640529632568s
epoch 25: train_loss: 1.23916; Allocated: 17399296; Reserved: 44040192; time used = 4.445392847061157s
epoch 30: train_loss: 1.23087; Allocated: 17399296; Reserved: 44040192; time used = 4.366026878356934s
epoch 35: train_loss: 1.23534; Allocated: 17399296; Reserved: 44040192; time used = 4.442205905914307s
epoch 40: train_loss: 1.15935; Allocated: 17399296; Reserved: 44040192; time used = 4.29106593132019s
epoch 45: train_loss: 1.20976; Allocated: 17399296; Reserved: 44040192; time used = 4.36931300163269s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 42.65017366409302.
Training classifier using 20.00% nodes...
{'micro': 0.4411628980156899, 'macro': 0.27198004465079356, 'samples': 0.4411628980156899, 'weighted': 0.3345168276443842, 'accuracy': 0.4411628980156899}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe50999a3c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3093.15it/s]100%|██████████| 1500/1500 [00:00<00:00, 5579.20it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f6deb8b0050>
total iter: 500
epoch 5: train_loss: 110.06910; Allocated: 699904; Reserved: 12582912; time used = 8.176272869110107s
epoch 10: train_loss: 235.59679; Allocated: 699904; Reserved: 33554432; time used = 8.032277345657349s
epoch 15: train_loss: 145.25475; Allocated: 699904; Reserved: 12582912; time used = 7.9458770751953125s
epoch 20: train_loss: 225.28292; Allocated: 699904; Reserved: 12582912; time used = 8.120617866516113s
epoch 25: train_loss: 131.81804; Allocated: 699904; Reserved: 12582912; time used = 8.188373327255249s
epoch 30: train_loss: 98.82614; Allocated: 699904; Reserved: 33554432; time used = 8.179399251937866s
epoch 35: train_loss: 273.42807; Allocated: 699904; Reserved: 12582912; time used = 8.045741081237793s
epoch 40: train_loss: 341.14281; Allocated: 699904; Reserved: 12582912; time used = 8.257366418838501s
epoch 45: train_loss: 141.51824; Allocated: 699904; Reserved: 12582912; time used = 7.854398727416992s
epoch 50: train_loss: 142.63487; Allocated: 699904; Reserved: 12582912; time used = 7.900136232376099s
epoch 55: train_loss: 34.41221; Allocated: 699904; Reserved: 12582912; time used = 8.026224136352539s
epoch 60: train_loss: 20.50073; Allocated: 699904; Reserved: 35651584; time used = 8.28743839263916s
epoch 65: train_loss: 16.84674; Allocated: 699904; Reserved: 12582912; time used = 8.104012489318848s
epoch 70: train_loss: 8.47419; Allocated: 699904; Reserved: 33554432; time used = 8.17829704284668s
epoch 75: train_loss: 4.60127; Allocated: 699904; Reserved: 12582912; time used = 8.395462036132812s
epoch 80: train_loss: 10.45148; Allocated: 699904; Reserved: 33554432; time used = 8.355354309082031s
epoch 85: train_loss: 27.44749; Allocated: 699904; Reserved: 33554432; time used = 7.999064207077026s
epoch 90: train_loss: 9.48268; Allocated: 699904; Reserved: 12582912; time used = 7.9791271686553955s
epoch 95: train_loss: 19.91373; Allocated: 699904; Reserved: 12582912; time used = 8.222449779510498s
epoch 100: train_loss: 6.75817; Allocated: 699904; Reserved: 33554432; time used = 8.10637092590332s
epoch 105: train_loss: 5.22260; Allocated: 699904; Reserved: 12582912; time used = 8.192131280899048s
epoch 110: train_loss: 2.41805; Allocated: 699904; Reserved: 12582912; time used = 8.190189361572266s
epoch 115: train_loss: 10.20954; Allocated: 699904; Reserved: 12582912; time used = 8.190788269042969s
epoch 120: train_loss: 27.21200; Allocated: 699904; Reserved: 33554432; time used = 7.86912202835083s
epoch 125: train_loss: 6.21188; Allocated: 699904; Reserved: 12582912; time used = 8.04704737663269s
epoch 130: train_loss: 10.06317; Allocated: 699904; Reserved: 12582912; time used = 8.35334587097168s
epoch 135: train_loss: 27.05013; Allocated: 699904; Reserved: 12582912; time used = 8.079962015151978s
epoch 140: train_loss: 17.45539; Allocated: 699904; Reserved: 33554432; time used = 8.086076021194458s
epoch 145: train_loss: 15.20278; Allocated: 699904; Reserved: 12582912; time used = 8.231327056884766s
epoch 150: train_loss: 9.15882; Allocated: 699904; Reserved: 33554432; time used = 8.258250713348389s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 248.45811343193054.
Training classifier using 80.00% nodes...
{'micro': 0.5066666666666667, 'macro': 0.4952412436016577, 'samples': 0.5066666666666667, 'weighted': 0.4912273797875839, 'accuracy': 0.5066666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fc00ce42320>
total iter: 500
epoch 5: train_loss: 1.35516; Allocated: 53481472; Reserved: 109051904; time used = 3.7326793670654297s
epoch 10: train_loss: 1.28183; Allocated: 53481472; Reserved: 109051904; time used = 3.821786642074585s
epoch 15: train_loss: 1.24637; Allocated: 53481472; Reserved: 109051904; time used = 3.5773355960845947s
epoch 20: train_loss: 1.18358; Allocated: 53481472; Reserved: 109051904; time used = 3.8025524616241455s
epoch 25: train_loss: 1.14460; Allocated: 53481472; Reserved: 109051904; time used = 3.7540011405944824s
epoch 30: train_loss: 1.13601; Allocated: 53481472; Reserved: 109051904; time used = 3.765723943710327s
epoch 35: train_loss: 1.10932; Allocated: 53481472; Reserved: 109051904; time used = 3.752305507659912s
epoch 40: train_loss: 1.08091; Allocated: 53481472; Reserved: 109051904; time used = 3.819887638092041s
epoch 45: train_loss: 1.07466; Allocated: 53481472; Reserved: 109051904; time used = 3.6995787620544434s
epoch 50: train_loss: 1.06360; Allocated: 53481472; Reserved: 109051904; time used = 3.705336093902588s
epoch 55: train_loss: 0.99458; Allocated: 53481472; Reserved: 109051904; time used = 3.7331600189208984s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.681413888931274.
Training classifier using 20.00% nodes...
{'micro': 0.5323420074349442, 'macro': 0.47638927924404717, 'samples': 0.5379413974455297, 'weighted': 0.5257206540616, 'accuracy': 0.5379413974455297}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3106.26it/s]100%|██████████| 1000/1000 [00:00<00:00, 4450.06it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f3af6b570f0>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.886489391326904s
epoch 10: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 35.70314431190491s
epoch 15: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 35.05324339866638s
epoch 20: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 35.579540491104126s
epoch 25: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 35.53366947174072s
epoch 30: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 35.760881423950195s
epoch 35: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 35.53604173660278s
epoch 40: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 35.48387789726257s
epoch 45: train_loss: 0.69315; Allocated: 683520; Reserved: 10485760; time used = 35.502389907836914s
epoch 50: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 35.50021934509277s
epoch 55: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 35.7157084941864s
epoch 60: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.882164001464844s
epoch 65: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 35.22225308418274s
epoch 70: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 35.07315635681152s
epoch 75: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.75197100639343s
epoch 80: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.60970377922058s
epoch 85: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.31149482727051s
epoch 90: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.30896067619324s
epoch 95: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.09484362602234s
epoch 100: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 33.932533502578735s
epoch 105: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 33.80180907249451s
epoch 110: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 33.867475748062134s
epoch 115: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 33.57583999633789s
epoch 120: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.11673021316528s
epoch 125: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 33.81318426132202s
epoch 130: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 33.914440393447876s
epoch 135: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 33.8721981048584s
epoch 140: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.10609984397888s
epoch 145: train_loss: 0.69315; Allocated: 683520; Reserved: 10485760; time used = 33.921974420547485s
epoch 150: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.034276485443115s
epoch 155: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 33.8163959980011s
epoch 160: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.01920437812805s
epoch 165: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 33.95647954940796s
epoch 170: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.01598238945007s
epoch 175: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.07810974121094s
epoch 180: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 33.78048086166382s
epoch 185: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.14988684654236s
epoch 190: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.59108376502991s
epoch 195: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 33.739380836486816s
epoch 200: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.16014075279236s
epoch 205: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.18595051765442s
epoch 210: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.29931020736694s
epoch 215: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.16964888572693s
epoch 220: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.284000396728516s
epoch 225: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.26710557937622s
epoch 230: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.11010956764221s
epoch 235: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.025535583496094s
epoch 240: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.110599994659424s
epoch 245: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.17086458206177s
epoch 250: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.154847860336304s
epoch 255: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.16889834403992s
epoch 260: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.52349281311035s
epoch 265: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.11022090911865s
epoch 270: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 33.73140358924866s
epoch 275: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 33.94648051261902s
epoch 280: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.75101161003113s
epoch 285: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.73071599006653s
epoch 290: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.73127198219299s
epoch 295: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.06479620933533s
epoch 300: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.475229263305664s
epoch 305: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.213793992996216s
epoch 310: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.475019454956055s
epoch 315: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.33861517906189s
epoch 320: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.33678340911865s
epoch 325: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.26269578933716s
epoch 330: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.45722675323486s
epoch 335: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.10360383987427s
epoch 340: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.09930443763733s
epoch 345: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.34220814704895s
epoch 350: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.07234215736389s
epoch 355: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.036953926086426s
epoch 360: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 33.91512751579285s
epoch 365: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.15380573272705s
epoch 370: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.17143726348877s
epoch 375: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.302889823913574s
epoch 380: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.12683963775635s
epoch 385: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.306941747665405s
epoch 390: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 33.93988633155823s
epoch 395: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.575035095214844s
epoch 400: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.09846043586731s
epoch 405: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.1785409450531s
epoch 410: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.33414840698242s
epoch 415: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.65751671791077s
epoch 420: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.3946259021759s
epoch 425: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.69363451004028s
epoch 430: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.58873462677002s
epoch 435: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.58360171318054s
epoch 440: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.197453022003174s
epoch 445: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.3018012046814s
epoch 450: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 33.981812953948975s
epoch 455: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.55371356010437s
epoch 460: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.380173683166504s
epoch 465: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.03017473220825s
epoch 470: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 34.01278471946716s
epoch 475: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.88165736198425s
epoch 480: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 35.20280385017395s
epoch 485: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.23688817024231s
epoch 490: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 34.55421590805054s
epoch 495: train_loss: 0.69315; Allocated: 683520; Reserved: 6291456; time used = 35.2612988948822s
epoch 500: train_loss: 0.69315; Allocated: 683520; Reserved: 8388608; time used = 35.09479594230652s
Finished training. Time used = 3443.6749787330627.
Training classifier using 80.00% nodes...
{'micro': 0.47500000000000003, 'macro': 0.4743560862056018, 'samples': 0.475, 'weighted': 0.47398813546594576, 'accuracy': 0.475}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f32dd0ac280>
total iter: 500
epoch 5: train_loss: 1.50147; Allocated: 510976; Reserved: 6291456; time used = 3.199315309524536s
epoch 10: train_loss: 1.35499; Allocated: 510976; Reserved: 6291456; time used = 3.2240490913391113s
epoch 15: train_loss: 1.28837; Allocated: 510976; Reserved: 6291456; time used = 3.3963847160339355s
epoch 20: train_loss: 1.27164; Allocated: 510976; Reserved: 6291456; time used = 3.1414904594421387s
epoch 25: train_loss: 1.27314; Allocated: 510976; Reserved: 6291456; time used = 3.1604666709899902s
epoch 30: train_loss: 1.24302; Allocated: 510976; Reserved: 6291456; time used = 3.231942892074585s
epoch 35: train_loss: 1.22949; Allocated: 510976; Reserved: 6291456; time used = 3.3241844177246094s
epoch 40: train_loss: 1.24523; Allocated: 510976; Reserved: 6291456; time used = 3.1624066829681396s
epoch 45: train_loss: 1.24273; Allocated: 510976; Reserved: 6291456; time used = 3.3242685794830322s
epoch 50: train_loss: 1.25419; Allocated: 510976; Reserved: 6291456; time used = 3.371216058731079s
epoch 55: train_loss: 1.25314; Allocated: 510976; Reserved: 6291456; time used = 3.254072427749634s
epoch 60: train_loss: 1.25220; Allocated: 510976; Reserved: 6291456; time used = 3.253598213195801s
epoch 65: train_loss: 1.24524; Allocated: 510976; Reserved: 6291456; time used = 3.2199957370758057s
epoch 70: train_loss: 1.26452; Allocated: 510976; Reserved: 6291456; time used = 3.36509108543396s
epoch 75: train_loss: 1.23774; Allocated: 510976; Reserved: 6291456; time used = 3.209482192993164s
epoch 80: train_loss: 1.25369; Allocated: 510976; Reserved: 6291456; time used = 3.1522481441497803s
epoch 85: train_loss: 1.24219; Allocated: 510976; Reserved: 6291456; time used = 3.1887285709381104s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 59.25562024116516.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8637992831541219, 'samples': 0.868421052631579, 'weighted': 0.8677607998490852, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3076.74it/s]100%|██████████| 1000/1000 [00:00<00:00, 4413.23it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f15022ab050>
total iter: 500
epoch 5: train_loss: 1729486.10938; Allocated: 637952; Reserved: 6291456; time used = 11.85066270828247s
epoch 10: train_loss: 819824.62500; Allocated: 637952; Reserved: 6291456; time used = 11.860851526260376s
epoch 15: train_loss: 40233.28418; Allocated: 637952; Reserved: 8388608; time used = 12.008738994598389s
epoch 20: train_loss: 104114.44824; Allocated: 637952; Reserved: 6291456; time used = 12.049108505249023s
epoch 25: train_loss: 17201.38818; Allocated: 637952; Reserved: 6291456; time used = 11.632310152053833s
epoch 30: train_loss: 2804.74176; Allocated: 637952; Reserved: 6291456; time used = 11.744884967803955s
epoch 35: train_loss: 888.46571; Allocated: 637952; Reserved: 6291456; time used = 11.75235629081726s
epoch 40: train_loss: 2683.63947; Allocated: 637952; Reserved: 6291456; time used = 11.479511737823486s
epoch 45: train_loss: 1902.09409; Allocated: 637952; Reserved: 6291456; time used = 12.015014410018921s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 114.50092005729675.
Training classifier using 80.00% nodes...
{'micro': 0.675, 'macro': 0.6743405395926751, 'samples': 0.675, 'weighted': 0.6740474460783085, 'accuracy': 0.675}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f4821c1d910>
total iter: 500
epoch 5: train_loss: 0.52060; Allocated: 511488; Reserved: 8388608; time used = 3.3057963848114014s
epoch 10: train_loss: 0.50900; Allocated: 511488; Reserved: 8388608; time used = 3.28665828704834s
epoch 15: train_loss: 0.52116; Allocated: 511488; Reserved: 8388608; time used = 3.372986316680908s
epoch 20: train_loss: 0.49024; Allocated: 511488; Reserved: 8388608; time used = 3.1995832920074463s
epoch 25: train_loss: 0.50481; Allocated: 511488; Reserved: 8388608; time used = 3.373419761657715s
epoch 30: train_loss: 0.50422; Allocated: 511488; Reserved: 8388608; time used = 3.2005088329315186s
epoch 35: train_loss: 0.49419; Allocated: 511488; Reserved: 8388608; time used = 3.4411611557006836s
epoch 40: train_loss: 0.49601; Allocated: 511488; Reserved: 8388608; time used = 3.2650129795074463s
epoch 45: train_loss: 0.50615; Allocated: 511488; Reserved: 8388608; time used = 3.193016529083252s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 32.996519327163696.
Training classifier using 80.00% nodes...
{'micro': 0.8947368421052632, 'macro': 0.8869047619047619, 'samples': 0.8947368421052632, 'weighted': 0.8916040100250626, 'accuracy': 0.8947368421052632}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3087.98it/s]100%|██████████| 1000/1000 [00:00<00:00, 4424.76it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f27521ac050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8e89647820>
total iter: 500
epoch 5: train_loss: 0.64165; Allocated: 783360; Reserved: 4194304; time used = 4.224695920944214s
epoch 10: train_loss: 0.59011; Allocated: 783360; Reserved: 4194304; time used = 4.279693126678467s
epoch 15: train_loss: 0.54731; Allocated: 783360; Reserved: 4194304; time used = 4.201735973358154s
epoch 20: train_loss: 0.46917; Allocated: 783360; Reserved: 4194304; time used = 4.330109596252441s
epoch 25: train_loss: 0.31357; Allocated: 783360; Reserved: 4194304; time used = 4.255423307418823s
epoch 30: train_loss: 0.09507; Allocated: 783360; Reserved: 4194304; time used = 4.282504081726074s
epoch 35: train_loss: 0.04828; Allocated: 783360; Reserved: 4194304; time used = 4.201420783996582s
epoch 40: train_loss: 0.13225; Allocated: 783360; Reserved: 4194304; time used = 4.290678262710571s
epoch 45: train_loss: 0.02425; Allocated: 783360; Reserved: 4194304; time used = 4.154658317565918s
epoch 50: train_loss: 0.07703; Allocated: 783360; Reserved: 4194304; time used = 4.403428316116333s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.20281195640564.
Training classifier using 80.00% nodes...
{'micro': 0.6231884057971014, 'macro': 0.6166666666666667, 'samples': 0.6231884057971014, 'weighted': 0.6202898550724637, 'accuracy': 0.6231884057971014}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3004.25it/s]100%|██████████| 1000/1000 [00:00<00:00, 4325.53it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fa48f8ea050>
total iter: 500
epoch 5: train_loss: 0.67383; Allocated: 624640; Reserved: 29360128; time used = 5.991876602172852s
epoch 10: train_loss: 0.68520; Allocated: 624640; Reserved: 29360128; time used = 6.172402858734131s
epoch 15: train_loss: 0.67982; Allocated: 624640; Reserved: 31457280; time used = 6.059338331222534s
epoch 20: train_loss: 0.68265; Allocated: 624640; Reserved: 29360128; time used = 5.829348087310791s
epoch 25: train_loss: 0.67620; Allocated: 624640; Reserved: 29360128; time used = 5.821126222610474s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 38.75613451004028.
Training classifier using 80.00% nodes...
{'micro': 0.7299999999999999, 'macro': 0.72997299729973, 'samples': 0.73, 'weighted': 0.72991899189919, 'accuracy': 0.73}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f457ea428c0>
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.40717; Allocated: 594432; Reserved: 2097152; time used = 0.7951202392578125s
epoch 10: train_loss: 1.36707; Allocated: 594432; Reserved: 2097152; time used = 0.7013123035430908s
epoch 15: train_loss: 1.36531; Allocated: 594432; Reserved: 2097152; time used = 0.7181122303009033s
epoch 20: train_loss: 1.36093; Allocated: 594432; Reserved: 2097152; time used = 0.6982712745666504s
epoch 25: train_loss: 1.36108; Allocated: 594432; Reserved: 2097152; time used = 0.6879734992980957s
epoch 30: train_loss: 1.36026; Allocated: 594432; Reserved: 2097152; time used = 0.7088515758514404s
epoch 35: train_loss: 1.36283; Allocated: 594432; Reserved: 2097152; time used = 0.7430164813995361s
epoch 40: train_loss: 1.36192; Allocated: 594432; Reserved: 2097152; time used = 0.8388683795928955s
epoch 45: train_loss: 1.35998; Allocated: 594432; Reserved: 2097152; time used = 0.7141296863555908s
epoch 50: train_loss: 1.35878; Allocated: 594432; Reserved: 2097152; time used = 0.7178366184234619s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10.992565631866455.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3113.54it/s]100%|██████████| 1500/1500 [00:00<00:00, 5588.55it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f6768a58370>
total iter: 500
epoch 5: train_loss: 0.69289; Allocated: 627200; Reserved: 6291456; time used = 12.342657089233398s
epoch 10: train_loss: 0.69102; Allocated: 627200; Reserved: 8388608; time used = 12.550072431564331s
epoch 15: train_loss: 0.68768; Allocated: 627200; Reserved: 8388608; time used = 12.342973709106445s
epoch 20: train_loss: 0.67703; Allocated: 627200; Reserved: 6291456; time used = 12.803923845291138s
epoch 25: train_loss: 0.60657; Allocated: 627200; Reserved: 10485760; time used = 12.965741872787476s
epoch 30: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.73260235786438s
epoch 35: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.314411401748657s
epoch 40: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 13.107605218887329s
epoch 45: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 13.021167993545532s
epoch 50: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.474639892578125s
epoch 55: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.479012966156006s
epoch 60: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.579761266708374s
epoch 65: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 13.069071292877197s
epoch 70: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.597781419754028s
epoch 75: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.39513897895813s
epoch 80: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.605633020401001s
epoch 85: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.440171003341675s
epoch 90: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.45380187034607s
epoch 95: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.324740409851074s
epoch 100: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.667943477630615s
epoch 105: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.37657380104065s
epoch 110: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.431992292404175s
epoch 115: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.250089883804321s
epoch 120: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.302686929702759s
epoch 125: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.738226890563965s
epoch 130: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.84447169303894s
epoch 135: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.8171226978302s
epoch 140: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.45806336402893s
epoch 145: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 13.03082275390625s
epoch 150: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.706555843353271s
epoch 155: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.329941511154175s
epoch 160: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.563687086105347s
epoch 165: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.546016454696655s
epoch 170: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.244389772415161s
epoch 175: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.437744379043579s
epoch 180: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.4628164768219s
epoch 185: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.48843002319336s
epoch 190: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.944778203964233s
epoch 195: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.78003716468811s
epoch 200: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.886957168579102s
epoch 205: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.607288360595703s
epoch 210: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.408569812774658s
epoch 215: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.504083395004272s
epoch 220: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.411513090133667s
epoch 225: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.721383094787598s
epoch 230: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.493979454040527s
epoch 235: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.599043607711792s
epoch 240: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.839674472808838s
epoch 245: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.573162317276001s
epoch 250: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.685624837875366s
epoch 255: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.578643798828125s
epoch 260: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 13.027350902557373s
epoch 265: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.470518589019775s
epoch 270: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.59337329864502s
epoch 275: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.938366651535034s
epoch 280: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.445621013641357s
epoch 285: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.336813926696777s
epoch 290: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.370333194732666s
epoch 295: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.373369216918945s
epoch 300: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.301185607910156s
epoch 305: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.400309324264526s
epoch 310: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.180964231491089s
epoch 315: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.55223274230957s
epoch 320: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.996236562728882s
epoch 325: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.370666265487671s
epoch 330: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.323916673660278s
epoch 335: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.381196022033691s
epoch 340: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.392518997192383s
epoch 345: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.33251166343689s
epoch 350: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.134986639022827s
epoch 355: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.34299111366272s
epoch 360: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.271851062774658s
epoch 365: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.099353790283203s
epoch 370: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.179092645645142s
epoch 375: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.259413003921509s
epoch 380: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.34439992904663s
epoch 385: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.154297828674316s
epoch 390: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.176143169403076s
epoch 395: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.2981858253479s
epoch 400: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.251910924911499s
epoch 405: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.404643058776855s
epoch 410: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.768686294555664s
epoch 415: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.324127197265625s
epoch 420: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.370142698287964s
epoch 425: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.567208051681519s
epoch 430: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.128840446472168s
epoch 435: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.589302778244019s
epoch 440: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.4350745677948s
epoch 445: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.27277135848999s
epoch 450: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.372627019882202s
epoch 455: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.457611560821533s
epoch 460: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.410391092300415s
epoch 465: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.289296627044678s
epoch 470: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.333837270736694s
epoch 475: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.448949575424194s
epoch 480: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.303907871246338s
epoch 485: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.231747388839722s
epoch 490: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.222954034805298s
epoch 495: train_loss: 0.69315; Allocated: 627200; Reserved: 8388608; time used = 12.451914548873901s
epoch 500: train_loss: 0.69315; Allocated: 627200; Reserved: 6291456; time used = 12.3710355758667s
Finished training. Time used = 1252.924882888794.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fca0d0d4320>
total iter: 500
epoch 5: train_loss: 0.39328; Allocated: 53686272; Reserved: 159383552; time used = 0.4630136489868164s
epoch 10: train_loss: 0.19356; Allocated: 53686272; Reserved: 159383552; time used = 0.4204275608062744s
epoch 15: train_loss: 0.10652; Allocated: 53686272; Reserved: 159383552; time used = 0.42511439323425293s
epoch 20: train_loss: 0.06119; Allocated: 53686272; Reserved: 159383552; time used = 0.4222884178161621s
epoch 25: train_loss: 0.03755; Allocated: 53686272; Reserved: 159383552; time used = 0.4125864505767822s
epoch 30: train_loss: 0.02520; Allocated: 53686272; Reserved: 159383552; time used = 0.4001028537750244s
epoch 35: train_loss: 0.01515; Allocated: 53686272; Reserved: 159383552; time used = 0.41538381576538086s
epoch 40: train_loss: 0.01026; Allocated: 53686272; Reserved: 159383552; time used = 0.40032339096069336s
epoch 45: train_loss: 0.00881; Allocated: 53686272; Reserved: 159383552; time used = 0.40581345558166504s
epoch 50: train_loss: 0.00786; Allocated: 53686272; Reserved: 159383552; time used = 0.39380717277526855s
epoch 55: train_loss: 0.00588; Allocated: 53686272; Reserved: 159383552; time used = 0.39693260192871094s
epoch 60: train_loss: 0.00573; Allocated: 53686272; Reserved: 159383552; time used = 0.39751458168029785s
epoch 65: train_loss: 0.00535; Allocated: 53686272; Reserved: 159383552; time used = 0.40519022941589355s
epoch 70: train_loss: 0.00489; Allocated: 53686272; Reserved: 159383552; time used = 0.4002399444580078s
epoch 75: train_loss: 0.00387; Allocated: 53686272; Reserved: 159383552; time used = 0.4046640396118164s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 10.084905862808228.
Training classifier using 20.00% nodes...
{'micro': 0.529739776951673, 'macro': 0.4670658228469371, 'samples': 0.5353117956423742, 'weighted': 0.5164718437950608, 'accuracy': 0.5353117956423742}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fec0146fdc0>
total iter: 500
epoch 5: train_loss: 0.59335; Allocated: 17527296; Reserved: 41943040; time used = 3.312969207763672s
epoch 10: train_loss: 0.28860; Allocated: 17527296; Reserved: 41943040; time used = 3.2994961738586426s
epoch 15: train_loss: 0.04078; Allocated: 17527296; Reserved: 41943040; time used = 3.4427881240844727s
epoch 20: train_loss: 0.00281; Allocated: 17527296; Reserved: 41943040; time used = 3.3537819385528564s
epoch 25: train_loss: 0.00072; Allocated: 17527296; Reserved: 41943040; time used = 3.5430965423583984s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 22.402676343917847.
Training classifier using 20.00% nodes...
{'micro': 0.4157821873557914, 'macro': 0.26217331644805275, 'samples': 0.4157821873557914, 'weighted': 0.3434823654733044, 'accuracy': 0.4157821873557914}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f1ace3b6d20>
total iter: 500
epoch 5: train_loss: 0.49804; Allocated: 647168; Reserved: 4194304; time used = 0.6092236042022705s
epoch 10: train_loss: 0.29780; Allocated: 647168; Reserved: 4194304; time used = 0.612046480178833s
epoch 15: train_loss: 0.13498; Allocated: 647168; Reserved: 4194304; time used = 0.6229102611541748s
epoch 20: train_loss: 0.08738; Allocated: 647168; Reserved: 4194304; time used = 0.6252801418304443s
epoch 25: train_loss: 0.07695; Allocated: 647168; Reserved: 4194304; time used = 0.6091418266296387s
epoch 30: train_loss: 0.08674; Allocated: 647168; Reserved: 4194304; time used = 0.6869368553161621s
epoch 35: train_loss: 0.08057; Allocated: 647168; Reserved: 4194304; time used = 0.5803976058959961s
epoch 40: train_loss: 0.06277; Allocated: 647168; Reserved: 4194304; time used = 0.7328803539276123s
epoch 45: train_loss: 0.08597; Allocated: 647168; Reserved: 4194304; time used = 0.6185109615325928s
epoch 50: train_loss: 0.07454; Allocated: 647168; Reserved: 4194304; time used = 0.5845584869384766s
epoch 55: train_loss: 0.07729; Allocated: 647168; Reserved: 4194304; time used = 0.6336219310760498s
epoch 60: train_loss: 0.10005; Allocated: 647168; Reserved: 4194304; time used = 0.5768101215362549s
epoch 65: train_loss: 0.05047; Allocated: 647168; Reserved: 4194304; time used = 0.5754892826080322s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.115642547607422.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8606016140865738, 'samples': 0.868421052631579, 'weighted': 0.8658145731165773, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f1263ac6140>
total iter: 500
epoch 5: train_loss: 358.13834; Allocated: 731648; Reserved: 6291456; time used = 4.335047721862793s
epoch 10: train_loss: 32.60481; Allocated: 731648; Reserved: 6291456; time used = 4.215614080429077s
epoch 15: train_loss: 19.83186; Allocated: 731648; Reserved: 6291456; time used = 4.441911220550537s
epoch 20: train_loss: 8.83230; Allocated: 731648; Reserved: 6291456; time used = 4.247982740402222s
epoch 25: train_loss: 9.97403; Allocated: 731648; Reserved: 6291456; time used = 4.391818284988403s
epoch 30: train_loss: 5.46284; Allocated: 731648; Reserved: 6291456; time used = 4.671494722366333s
epoch 35: train_loss: 1.66346; Allocated: 731648; Reserved: 6291456; time used = 4.319762706756592s
epoch 40: train_loss: 1.42109; Allocated: 731648; Reserved: 6291456; time used = 4.271325588226318s
epoch 45: train_loss: 1.38551; Allocated: 731648; Reserved: 6291456; time used = 4.291831970214844s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 42.710647106170654.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8093189964157707, 'samples': 0.8157894736842105, 'weighted': 0.8148651197887191, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3049.97it/s]100%|██████████| 1000/1000 [00:00<00:00, 4377.90it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f02729d2af0>
total iter: 500
epoch 5: train_loss: 1.47271; Allocated: 486912; Reserved: 6291456; time used = 54.00572466850281s
epoch 10: train_loss: 1.39124; Allocated: 486912; Reserved: 8388608; time used = 54.01261329650879s
epoch 15: train_loss: 1.38727; Allocated: 486912; Reserved: 6291456; time used = 54.199687004089355s
epoch 20: train_loss: 1.38635; Allocated: 486912; Reserved: 6291456; time used = 54.28108739852905s
epoch 25: train_loss: 1.38654; Allocated: 486912; Reserved: 6291456; time used = 52.87278604507446s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 315.666298866272.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff7ffee7500>
total iter: 500
epoch 5: train_loss: 0.48001; Allocated: 510976; Reserved: 4194304; time used = 0.6153671741485596s
epoch 10: train_loss: 0.26337; Allocated: 510976; Reserved: 4194304; time used = 0.6312274932861328s
epoch 15: train_loss: 0.16444; Allocated: 510976; Reserved: 4194304; time used = 0.627701997756958s
epoch 20: train_loss: 0.08616; Allocated: 510976; Reserved: 4194304; time used = 0.6657285690307617s
epoch 25: train_loss: 0.09195; Allocated: 510976; Reserved: 4194304; time used = 0.6390230655670166s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6.8385374546051025.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.731764705882353, 'samples': 0.7631578947368421, 'weighted': 0.7462538699690403, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3069.12it/s] 82%|████████▏ | 1633/2000 [00:00<00:00, 3895.60it/s]100%|██████████| 2000/2000 [00:00<00:00, 6158.25it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe474983140>
total iter: 500
epoch 5: train_loss: 0.48939; Allocated: 3851264; Reserved: 31457280; time used = 803.9529132843018s
epoch 10: train_loss: 0.15739; Allocated: 3851264; Reserved: 33554432; time used = 799.1332161426544s
epoch 15: train_loss: 0.04367; Allocated: 3851264; Reserved: 31457280; time used = 798.0124487876892s
epoch 20: train_loss: 0.01809; Allocated: 3851264; Reserved: 33554432; time used = 794.2944889068604s
epoch 25: train_loss: 0.01081; Allocated: 3851264; Reserved: 31457280; time used = 796.4086372852325s
epoch 30: train_loss: 0.00723; Allocated: 3851264; Reserved: 35651584; time used = 791.6026749610901s
epoch 35: train_loss: 0.00644; Allocated: 3851264; Reserved: 33554432; time used = 794.2073464393616s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 5740.809844970703.
Training classifier using 80.00% nodes...
{'micro': 0.55, 'macro': 0.47405329593267886, 'samples': 0.55, 'weighted': 0.46805750350631137, 'accuracy': 0.55}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3096.34it/s]100%|██████████| 1000/1000 [00:00<00:00, 4428.19it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f6df473c050>
total iter: 500
epoch 5: train_loss: 1.38711; Allocated: 617984; Reserved: 6291456; time used = 33.28603959083557s
epoch 10: train_loss: 1.38632; Allocated: 617984; Reserved: 8388608; time used = 33.589680671691895s
epoch 15: train_loss: 1.38639; Allocated: 617984; Reserved: 6291456; time used = 33.406909704208374s
epoch 20: train_loss: 1.38632; Allocated: 617984; Reserved: 6291456; time used = 33.48913598060608s
epoch 25: train_loss: 1.38631; Allocated: 617984; Reserved: 8388608; time used = 33.42906212806702s
epoch 30: train_loss: 1.38630; Allocated: 617984; Reserved: 8388608; time used = 33.442143201828s
epoch 35: train_loss: 1.38630; Allocated: 617984; Reserved: 6291456; time used = 33.2530038356781s
epoch 40: train_loss: 1.38629; Allocated: 617984; Reserved: 8388608; time used = 33.54444718360901s
epoch 45: train_loss: 1.38630; Allocated: 617984; Reserved: 10485760; time used = 33.466315031051636s
epoch 50: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 33.617838859558105s
epoch 55: train_loss: 1.38630; Allocated: 617984; Reserved: 6291456; time used = 33.706183433532715s
epoch 60: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 33.26351857185364s
epoch 65: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 33.62139534950256s
epoch 70: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 33.30477166175842s
epoch 75: train_loss: 1.38629; Allocated: 617984; Reserved: 10485760; time used = 33.500627756118774s
epoch 80: train_loss: 1.38629; Allocated: 617984; Reserved: 6291456; time used = 33.716222047805786s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 545.566296339035.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.45599999999999996, 'samples': 0.49, 'weighted': 0.45327999999999996, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3096.56it/s] 82%|████████▎ | 1650/2000 [00:00<00:00, 3934.30it/s]100%|██████████| 2000/2000 [00:00<00:00, 6241.53it/s]Killed
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f25aa3bfe60>
total iter: 500
epoch 5: train_loss: 0.35428; Allocated: 40846848; Reserved: 65011712; time used = 2.8986124992370605s
epoch 10: train_loss: 0.33008; Allocated: 40846848; Reserved: 65011712; time used = 3.0271852016448975s
epoch 15: train_loss: 0.32836; Allocated: 40846848; Reserved: 65011712; time used = 2.828949451446533s
epoch 20: train_loss: 0.32577; Allocated: 40846848; Reserved: 65011712; time used = 3.0561933517456055s
epoch 25: train_loss: 0.32822; Allocated: 40846848; Reserved: 65011712; time used = 2.8362085819244385s
epoch 30: train_loss: 0.31655; Allocated: 40846848; Reserved: 65011712; time used = 3.048388957977295s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 23.66878914833069.
Training classifier using 20.00% nodes...
{'micro': 0.7932674020540128, 'macro': 0.7849171773995621, 'samples': 0.7932674020540129, 'weighted': 0.7928533910739508, 'accuracy': 0.7932674020540129}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3095.37it/s]100%|██████████| 1000/1000 [00:00<00:00, 4436.64it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fa3da703b90>
head 0
total iter: 500
epoch 5: train_loss: 0.66968; Allocated: 427520; Reserved: 6291456; time used = 34.91491198539734s
epoch 10: train_loss: 0.65737; Allocated: 427520; Reserved: 6291456; time used = 34.84233522415161s
epoch 15: train_loss: 0.66071; Allocated: 427520; Reserved: 8388608; time used = 34.70507335662842s
epoch 20: train_loss: 0.64553; Allocated: 427520; Reserved: 8388608; time used = 34.959550857543945s
epoch 25: train_loss: 0.64458; Allocated: 427520; Reserved: 6291456; time used = 34.80164456367493s
epoch 30: train_loss: 0.63281; Allocated: 427520; Reserved: 8388608; time used = 34.834829807281494s
epoch 35: train_loss: 0.62881; Allocated: 427520; Reserved: 6291456; time used = 34.63629508018494s
epoch 40: train_loss: 0.62639; Allocated: 427520; Reserved: 6291456; time used = 34.7869873046875s
epoch 45: train_loss: 0.61804; Allocated: 427520; Reserved: 6291456; time used = 34.99573540687561s
epoch 50: train_loss: 0.61981; Allocated: 427520; Reserved: 8388608; time used = 34.79020833969116s
epoch 55: train_loss: 0.61205; Allocated: 427520; Reserved: 6291456; time used = 35.07103776931763s
epoch 60: train_loss: 0.62870; Allocated: 427520; Reserved: 6291456; time used = 34.940340518951416s
epoch 65: train_loss: 0.62209; Allocated: 427520; Reserved: 6291456; time used = 34.91032385826111s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 463.61555194854736.
Training classifier using 80.00% nodes...
{'micro': 0.545, 'macro': 0.5436194488327191, 'samples': 0.545, 'weighted': 0.5441214674390031, 'accuracy': 0.545}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3046.17it/s]100%|██████████| 1000/1000 [00:00<00:00, 4371.78it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f2dfedaa050>
total iter: 500
epoch 5: train_loss: 1.41221; Allocated: 486912; Reserved: 6291456; time used = 34.73086643218994s
epoch 10: train_loss: 1.38766; Allocated: 486912; Reserved: 8388608; time used = 34.523215532302856s
epoch 15: train_loss: 1.38630; Allocated: 486912; Reserved: 8388608; time used = 34.763057470321655s
epoch 20: train_loss: 1.38661; Allocated: 486912; Reserved: 8388608; time used = 34.673925161361694s
epoch 25: train_loss: 1.38658; Allocated: 486912; Reserved: 6291456; time used = 34.80899214744568s
epoch 30: train_loss: 1.38652; Allocated: 486912; Reserved: 6291456; time used = 34.15251326560974s
epoch 35: train_loss: 1.38634; Allocated: 486912; Reserved: 8388608; time used = 34.72929000854492s
epoch 40: train_loss: 1.38630; Allocated: 486912; Reserved: 6291456; time used = 34.83232665061951s
epoch 45: train_loss: 1.38632; Allocated: 486912; Reserved: 8388608; time used = 34.736268043518066s
epoch 50: train_loss: 1.38632; Allocated: 486912; Reserved: 8388608; time used = 34.67737126350403s
epoch 55: train_loss: 1.38630; Allocated: 486912; Reserved: 6291456; time used = 34.62996768951416s
epoch 60: train_loss: 1.38630; Allocated: 486912; Reserved: 6291456; time used = 34.520756006240845s
epoch 65: train_loss: 1.38630; Allocated: 486912; Reserved: 8388608; time used = 34.69965195655823s
epoch 70: train_loss: 1.38630; Allocated: 486912; Reserved: 6291456; time used = 34.56467318534851s
epoch 75: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.79592847824097s
epoch 80: train_loss: 1.38630; Allocated: 486912; Reserved: 6291456; time used = 34.45206046104431s
epoch 85: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.65814709663391s
epoch 90: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.69988441467285s
epoch 95: train_loss: 1.38629; Allocated: 486912; Reserved: 8388608; time used = 34.62149429321289s
epoch 100: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.45432949066162s
epoch 105: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.58349871635437s
epoch 110: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.549455404281616s
epoch 115: train_loss: 1.38629; Allocated: 486912; Reserved: 10485760; time used = 34.37518787384033s
epoch 120: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.084078788757324s
epoch 125: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.39216876029968s
epoch 130: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.62330222129822s
epoch 135: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.262792348861694s
epoch 140: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.0805389881134s
epoch 145: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.28056621551514s
epoch 150: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.11013102531433s
epoch 155: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.25128388404846s
epoch 160: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 35.28142166137695s
epoch 165: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.19782209396362s
epoch 170: train_loss: 1.38629; Allocated: 486912; Reserved: 8388608; time used = 34.20271873474121s
epoch 175: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.30710959434509s
epoch 180: train_loss: 1.38629; Allocated: 486912; Reserved: 8388608; time used = 34.24633073806763s
epoch 185: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.233948707580566s
epoch 190: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 33.995954751968384s
epoch 195: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.38836598396301s
epoch 200: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.15426254272461s
epoch 205: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.29185104370117s
epoch 210: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.27652430534363s
epoch 215: train_loss: 1.38629; Allocated: 486912; Reserved: 8388608; time used = 34.36061906814575s
epoch 220: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.211262226104736s
epoch 225: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.503987550735474s
epoch 230: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.13629388809204s
epoch 235: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.47391653060913s
epoch 240: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.18758010864258s
epoch 245: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.41826105117798s
epoch 250: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.2384147644043s
epoch 255: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.24473977088928s
epoch 260: train_loss: 1.38629; Allocated: 486912; Reserved: 8388608; time used = 34.143147468566895s
epoch 265: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.61615610122681s
epoch 270: train_loss: 1.38629; Allocated: 486912; Reserved: 8388608; time used = 34.56257486343384s
epoch 275: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.381152391433716s
epoch 280: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.185452461242676s
epoch 285: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.249069929122925s
epoch 290: train_loss: 1.38629; Allocated: 486912; Reserved: 10485760; time used = 34.19353151321411s
epoch 295: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.41145467758179s
epoch 300: train_loss: 1.38629; Allocated: 486912; Reserved: 8388608; time used = 34.47837018966675s
epoch 305: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.28386306762695s
epoch 310: train_loss: 1.38629; Allocated: 486912; Reserved: 8388608; time used = 34.28240919113159s
epoch 315: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.27655386924744s
epoch 320: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.47083234786987s
epoch 325: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.09645915031433s
epoch 330: train_loss: 1.38629; Allocated: 486912; Reserved: 8388608; time used = 34.224435329437256s
epoch 335: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.04655075073242s
epoch 340: train_loss: 1.38629; Allocated: 486912; Reserved: 6291456; time used = 34.232237815856934s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2343.0291509628296.
Training classifier using 80.00% nodes...
{'micro': 0.47, 'macro': 0.468671679197995, 'samples': 0.47, 'weighted': 0.468140350877193, 'accuracy': 0.47}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f7110047d70>
head 0
total iter: 500
epoch 5: train_loss: 0.46819; Allocated: 41281536; Reserved: 65011712; time used = 3.618326425552368s
epoch 10: train_loss: 0.28679; Allocated: 41281536; Reserved: 62914560; time used = 3.805507183074951s
epoch 15: train_loss: 0.13889; Allocated: 41281536; Reserved: 62914560; time used = 3.5845775604248047s
epoch 20: train_loss: 0.08644; Allocated: 41281536; Reserved: 62914560; time used = 3.822202205657959s
epoch 25: train_loss: 0.03309; Allocated: 41281536; Reserved: 62914560; time used = 3.683380126953125s
epoch 30: train_loss: 0.00937; Allocated: 41281536; Reserved: 62914560; time used = 3.8152387142181396s
epoch 35: train_loss: 0.04503; Allocated: 41281536; Reserved: 62914560; time used = 3.6315252780914307s
epoch 40: train_loss: 0.06102; Allocated: 41281536; Reserved: 62914560; time used = 3.5731682777404785s
epoch 45: train_loss: 0.05999; Allocated: 41281536; Reserved: 62914560; time used = 3.7822213172912598s
epoch 50: train_loss: 0.05439; Allocated: 41281536; Reserved: 62914560; time used = 3.6185641288757324s
epoch 55: train_loss: 0.05169; Allocated: 41281536; Reserved: 62914560; time used = 3.853633165359497s
epoch 60: train_loss: 0.01627; Allocated: 41281536; Reserved: 62914560; time used = 3.6964690685272217s
epoch 65: train_loss: 0.02129; Allocated: 41281536; Reserved: 62914560; time used = 3.79862904548645s
epoch 70: train_loss: 0.02731; Allocated: 41281536; Reserved: 62914560; time used = 3.779595375061035s
epoch 75: train_loss: 0.00103; Allocated: 41281536; Reserved: 62914560; time used = 3.627854347229004s
epoch 80: train_loss: 0.06269; Allocated: 41281536; Reserved: 62914560; time used = 3.779764175415039s
epoch 85: train_loss: 0.01370; Allocated: 41281536; Reserved: 62914560; time used = 3.7895190715789795s
epoch 90: train_loss: 0.07840; Allocated: 41281536; Reserved: 62914560; time used = 3.732666254043579s
epoch 95: train_loss: 0.00487; Allocated: 41281536; Reserved: 62914560; time used = 3.649815797805786s
epoch 100: train_loss: 0.00332; Allocated: 41281536; Reserved: 62914560; time used = 3.8490545749664307s
epoch 105: train_loss: 0.01832; Allocated: 41281536; Reserved: 62914560; time used = 3.627897024154663s
epoch 110: train_loss: 0.05413; Allocated: 41281536; Reserved: 65011712; time used = 3.8735008239746094s
epoch 115: train_loss: 0.01994; Allocated: 41281536; Reserved: 62914560; time used = 3.63163423538208s
epoch 120: train_loss: 0.00370; Allocated: 41281536; Reserved: 62914560; time used = 3.841792106628418s
epoch 125: train_loss: 0.00192; Allocated: 41281536; Reserved: 62914560; time used = 3.6121907234191895s
epoch 130: train_loss: 0.00960; Allocated: 41281536; Reserved: 62914560; time used = 3.780928373336792s
epoch 135: train_loss: 0.05923; Allocated: 41281536; Reserved: 62914560; time used = 3.596315622329712s
epoch 140: train_loss: 0.02430; Allocated: 41281536; Reserved: 62914560; time used = 3.8046560287475586s
epoch 145: train_loss: 0.00040; Allocated: 41281536; Reserved: 62914560; time used = 3.597416877746582s
epoch 150: train_loss: 0.00026; Allocated: 41281536; Reserved: 62914560; time used = 3.6137282848358154s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 118.4737753868103.
Training classifier using 20.00% nodes...
{'micro': 0.7246101179155573, 'macro': 0.7201313813059754, 'samples': 0.7246101179155573, 'weighted': 0.7236820558949405, 'accuracy': 0.7246101179155573}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fe0685db2d0>
total iter: 500
epoch 5: train_loss: 0.38159; Allocated: 53752320; Reserved: 159383552; time used = 0.4536259174346924s
epoch 10: train_loss: 0.26117; Allocated: 53752320; Reserved: 159383552; time used = 0.4290771484375s
epoch 15: train_loss: 0.23613; Allocated: 53752320; Reserved: 159383552; time used = 0.43417906761169434s
epoch 20: train_loss: 0.21798; Allocated: 53752320; Reserved: 159383552; time used = 0.4300696849822998s
epoch 25: train_loss: 0.20629; Allocated: 53752320; Reserved: 159383552; time used = 0.4384036064147949s
epoch 30: train_loss: 0.20035; Allocated: 53752320; Reserved: 159383552; time used = 0.43442249298095703s
epoch 35: train_loss: 0.19686; Allocated: 53752320; Reserved: 159383552; time used = 0.45078015327453613s
epoch 40: train_loss: 0.19484; Allocated: 53752320; Reserved: 159383552; time used = 0.43937039375305176s
epoch 45: train_loss: 0.19075; Allocated: 53752320; Reserved: 159383552; time used = 0.4301333427429199s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.514862060546875.
Training classifier using 20.00% nodes...
{'micro': 0.5602230483271375, 'macro': 0.48973869345545173, 'samples': 0.5661157024793388, 'weighted': 0.541625010924465, 'accuracy': 0.5661157024793388}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3104.74it/s]100%|██████████| 1500/1500 [00:00<00:00, 5596.11it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fbcfa269500>
total iter: 500
epoch 5: train_loss: 5267.20111; Allocated: 497152; Reserved: 4194304; time used = 11.93007755279541s
epoch 10: train_loss: 1823.71318; Allocated: 497152; Reserved: 6291456; time used = 11.984790086746216s
epoch 15: train_loss: 734.15430; Allocated: 497152; Reserved: 6291456; time used = 11.900460481643677s
epoch 20: train_loss: 313.19442; Allocated: 497152; Reserved: 4194304; time used = 12.056431531906128s
epoch 25: train_loss: 258.81716; Allocated: 497152; Reserved: 4194304; time used = 11.908490419387817s
epoch 30: train_loss: 98.10373; Allocated: 497152; Reserved: 6291456; time used = 12.024197578430176s
epoch 35: train_loss: 56.54532; Allocated: 497152; Reserved: 4194304; time used = 11.790743827819824s
epoch 40: train_loss: 43.18389; Allocated: 497152; Reserved: 6291456; time used = 11.956999063491821s
epoch 45: train_loss: 24.51905; Allocated: 497152; Reserved: 4194304; time used = 12.057450771331787s
epoch 50: train_loss: 11.16304; Allocated: 497152; Reserved: 4194304; time used = 11.944437980651855s
epoch 55: train_loss: 8.16290; Allocated: 497152; Reserved: 6291456; time used = 11.856517791748047s
epoch 60: train_loss: 6.62326; Allocated: 497152; Reserved: 6291456; time used = 11.980459213256836s
epoch 65: train_loss: 4.29882; Allocated: 497152; Reserved: 6291456; time used = 11.995668411254883s
epoch 70: train_loss: 3.05141; Allocated: 497152; Reserved: 6291456; time used = 12.022970199584961s
epoch 75: train_loss: 2.47169; Allocated: 497152; Reserved: 6291456; time used = 11.922129154205322s
epoch 80: train_loss: 2.20636; Allocated: 497152; Reserved: 4194304; time used = 12.010706663131714s
epoch 85: train_loss: 1.99220; Allocated: 497152; Reserved: 6291456; time used = 11.918880224227905s
epoch 90: train_loss: 1.70837; Allocated: 497152; Reserved: 4194304; time used = 12.054518461227417s
epoch 95: train_loss: 1.59752; Allocated: 497152; Reserved: 6291456; time used = 11.896966457366943s
epoch 100: train_loss: 1.54397; Allocated: 497152; Reserved: 4194304; time used = 11.99786114692688s
epoch 105: train_loss: 1.45035; Allocated: 497152; Reserved: 4194304; time used = 12.010103464126587s
epoch 110: train_loss: 1.44076; Allocated: 497152; Reserved: 6291456; time used = 12.081552743911743s
epoch 115: train_loss: 1.40034; Allocated: 497152; Reserved: 6291456; time used = 11.817170143127441s
epoch 120: train_loss: 1.36189; Allocated: 497152; Reserved: 6291456; time used = 11.931182384490967s
epoch 125: train_loss: 1.35436; Allocated: 497152; Reserved: 4194304; time used = 12.069626808166504s
epoch 130: train_loss: 1.33155; Allocated: 497152; Reserved: 6291456; time used = 12.02612018585205s
epoch 135: train_loss: 1.33189; Allocated: 497152; Reserved: 8388608; time used = 11.935306787490845s
epoch 140: train_loss: 1.29848; Allocated: 497152; Reserved: 8388608; time used = 12.022913932800293s
epoch 145: train_loss: 1.28430; Allocated: 497152; Reserved: 4194304; time used = 11.985454559326172s
epoch 150: train_loss: 1.27069; Allocated: 497152; Reserved: 6291456; time used = 12.185478687286377s
epoch 155: train_loss: 1.27007; Allocated: 497152; Reserved: 6291456; time used = 11.981122732162476s
epoch 160: train_loss: 1.28399; Allocated: 497152; Reserved: 4194304; time used = 11.988484859466553s
epoch 165: train_loss: 1.27046; Allocated: 497152; Reserved: 6291456; time used = 11.902815341949463s
epoch 170: train_loss: 1.25792; Allocated: 497152; Reserved: 6291456; time used = 11.896739721298218s
epoch 175: train_loss: 1.25350; Allocated: 497152; Reserved: 6291456; time used = 11.904054403305054s
epoch 180: train_loss: 1.25407; Allocated: 497152; Reserved: 6291456; time used = 11.954644918441772s
epoch 185: train_loss: 1.23984; Allocated: 497152; Reserved: 4194304; time used = 12.07466721534729s
epoch 190: train_loss: 1.23978; Allocated: 497152; Reserved: 4194304; time used = 11.903757572174072s
epoch 195: train_loss: 1.23306; Allocated: 497152; Reserved: 6291456; time used = 12.003050327301025s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 477.4138855934143.
Training classifier using 80.00% nodes...
{'micro': 0.5366666666666666, 'macro': 0.5276394077763941, 'samples': 0.5366666666666666, 'weighted': 0.5245374982703749, 'accuracy': 0.5366666666666666}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f8bb3af1140>
head 0
total iter: 500
epoch 5: train_loss: 0.57663; Allocated: 57414656; Reserved: 165675008; time used = 0.6998720169067383s
epoch 10: train_loss: 0.41067; Allocated: 57414656; Reserved: 165675008; time used = 0.6637778282165527s
epoch 15: train_loss: 0.27515; Allocated: 57414656; Reserved: 165675008; time used = 0.6650242805480957s
epoch 20: train_loss: 0.17124; Allocated: 57414656; Reserved: 165675008; time used = 0.6917262077331543s
epoch 25: train_loss: 0.11586; Allocated: 57414656; Reserved: 165675008; time used = 0.6786799430847168s
epoch 30: train_loss: 0.09191; Allocated: 57414656; Reserved: 165675008; time used = 0.675276517868042s
epoch 35: train_loss: 0.07164; Allocated: 57414656; Reserved: 165675008; time used = 0.6608827114105225s
epoch 40: train_loss: 0.05108; Allocated: 57414656; Reserved: 165675008; time used = 0.6633191108703613s
epoch 45: train_loss: 0.02547; Allocated: 57414656; Reserved: 165675008; time used = 0.6613812446594238s
epoch 50: train_loss: 0.01732; Allocated: 57414656; Reserved: 165675008; time used = 0.6673176288604736s
epoch 55: train_loss: 0.01425; Allocated: 57414656; Reserved: 165675008; time used = 0.6614670753479004s
epoch 60: train_loss: 0.01703; Allocated: 57414656; Reserved: 165675008; time used = 0.6596837043762207s
epoch 65: train_loss: 0.00839; Allocated: 57414656; Reserved: 165675008; time used = 0.6572763919830322s
epoch 70: train_loss: 0.00601; Allocated: 57414656; Reserved: 165675008; time used = 0.6563284397125244s
epoch 75: train_loss: 0.00871; Allocated: 57414656; Reserved: 165675008; time used = 0.6660981178283691s
epoch 80: train_loss: 0.00798; Allocated: 57414656; Reserved: 165675008; time used = 0.6688969135284424s
epoch 85: train_loss: 0.00758; Allocated: 57414656; Reserved: 165675008; time used = 0.6642005443572998s
epoch 90: train_loss: 0.00426; Allocated: 57414656; Reserved: 165675008; time used = 0.6602368354797363s
epoch 95: train_loss: 0.00708; Allocated: 57414656; Reserved: 165675008; time used = 0.6591770648956299s
epoch 100: train_loss: 0.00472; Allocated: 57414656; Reserved: 165675008; time used = 0.659475564956665s
epoch 105: train_loss: 0.00353; Allocated: 57414656; Reserved: 165675008; time used = 0.6708269119262695s
epoch 110: train_loss: 0.00427; Allocated: 57414656; Reserved: 165675008; time used = 0.6560113430023193s
epoch 115: train_loss: 0.00355; Allocated: 57414656; Reserved: 165675008; time used = 0.657336950302124s
epoch 120: train_loss: 0.00347; Allocated: 57414656; Reserved: 165675008; time used = 0.6606204509735107s
epoch 125: train_loss: 0.00467; Allocated: 57414656; Reserved: 165675008; time used = 0.6605899333953857s
epoch 130: train_loss: 0.00305; Allocated: 57414656; Reserved: 165675008; time used = 0.6645092964172363s
epoch 135: train_loss: 0.00382; Allocated: 57414656; Reserved: 165675008; time used = 0.6535866260528564s
epoch 140: train_loss: 0.00316; Allocated: 57414656; Reserved: 165675008; time used = 0.6538166999816895s
epoch 145: train_loss: 0.00293; Allocated: 57414656; Reserved: 165675008; time used = 0.660473108291626s
epoch 150: train_loss: 0.00216; Allocated: 57414656; Reserved: 165675008; time used = 0.6584348678588867s
epoch 155: train_loss: 0.00391; Allocated: 57414656; Reserved: 165675008; time used = 0.6586909294128418s
epoch 160: train_loss: 0.00283; Allocated: 57414656; Reserved: 165675008; time used = 0.6591172218322754s
epoch 165: train_loss: 0.00307; Allocated: 57414656; Reserved: 165675008; time used = 0.6574628353118896s
epoch 170: train_loss: 0.00205; Allocated: 57414656; Reserved: 165675008; time used = 0.660930871963501s
epoch 175: train_loss: 0.00208; Allocated: 57414656; Reserved: 165675008; time used = 0.6582553386688232s
epoch 180: train_loss: 0.00342; Allocated: 57414656; Reserved: 165675008; time used = 0.6680908203125s
epoch 185: train_loss: 0.00191; Allocated: 57414656; Reserved: 165675008; time used = 0.6751449108123779s
epoch 190: train_loss: 0.00178; Allocated: 57414656; Reserved: 165675008; time used = 0.6589877605438232s
epoch 195: train_loss: 0.00153; Allocated: 57414656; Reserved: 165675008; time used = 0.6567144393920898s
epoch 200: train_loss: 0.00091; Allocated: 57414656; Reserved: 165675008; time used = 0.6570820808410645s
epoch 205: train_loss: 0.00163; Allocated: 57414656; Reserved: 165675008; time used = 0.6507680416107178s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 30.979872941970825.
Training classifier using 20.00% nodes...
{'micro': 0.3973977695167286, 'macro': 0.29235167898203324, 'samples': 0.4015777610818933, 'weighted': 0.3378987245219763, 'accuracy': 0.4015777610818933}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3104.55it/s]100%|██████████| 1500/1500 [00:00<00:00, 5595.84it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fba1bd30050>
total iter: 500
epoch 5: train_loss: 10208.34192; Allocated: 556544; Reserved: 8388608; time used = 34.2219340801239s
epoch 10: train_loss: 1888.13721; Allocated: 556544; Reserved: 6291456; time used = 34.033366203308105s
epoch 15: train_loss: 2831.87708; Allocated: 556544; Reserved: 8388608; time used = 35.06518602371216s
epoch 20: train_loss: 986.40552; Allocated: 556544; Reserved: 6291456; time used = 34.06519627571106s
epoch 25: train_loss: 16.99194; Allocated: 556544; Reserved: 8388608; time used = 34.24347376823425s
epoch 30: train_loss: 1030.50806; Allocated: 556544; Reserved: 6291456; time used = 34.147685050964355s
epoch 35: train_loss: 114.50510; Allocated: 556544; Reserved: 6291456; time used = 34.69148325920105s
epoch 40: train_loss: 67.69442; Allocated: 556544; Reserved: 6291456; time used = 34.600379943847656s
epoch 45: train_loss: 13.69222; Allocated: 556544; Reserved: 6291456; time used = 34.365633726119995s
epoch 50: train_loss: 17.85703; Allocated: 556544; Reserved: 6291456; time used = 34.251739740371704s
epoch 55: train_loss: 22.06724; Allocated: 556544; Reserved: 6291456; time used = 34.57167673110962s
epoch 60: train_loss: 22.57127; Allocated: 556544; Reserved: 4194304; time used = 34.529435873031616s
epoch 65: train_loss: 4.16110; Allocated: 556544; Reserved: 10485760; time used = 34.41673803329468s
epoch 70: train_loss: 2.36163; Allocated: 556544; Reserved: 6291456; time used = 34.57066774368286s
epoch 75: train_loss: 13.57381; Allocated: 556544; Reserved: 8388608; time used = 34.47295022010803s
epoch 80: train_loss: 3.83996; Allocated: 556544; Reserved: 6291456; time used = 34.54224896430969s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 574.6515336036682.
Training classifier using 80.00% nodes...
{'micro': 0.4066666666666667, 'macro': 0.3292847503373819, 'samples': 0.4066666666666667, 'weighted': 0.3194062078272605, 'accuracy': 0.4066666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3070.92it/s]100%|██████████| 1000/1000 [00:00<00:00, 4401.72it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f8948fb2280>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.68275; Allocated: 906752; Reserved: 10485760; time used = 35.983694076538086s
epoch 10: train_loss: 0.66773; Allocated: 906752; Reserved: 10485760; time used = 35.817299604415894s
epoch 15: train_loss: 0.63217; Allocated: 906752; Reserved: 12582912; time used = 35.45945858955383s
epoch 20: train_loss: 0.62411; Allocated: 906752; Reserved: 12582912; time used = 35.66291952133179s
epoch 25: train_loss: 0.54465; Allocated: 906752; Reserved: 12582912; time used = 35.449554681777954s
epoch 30: train_loss: 0.23710; Allocated: 906752; Reserved: 12582912; time used = 35.497838258743286s
epoch 35: train_loss: 0.17955; Allocated: 906752; Reserved: 10485760; time used = 35.30870270729065s
epoch 40: train_loss: 0.14409; Allocated: 906752; Reserved: 10485760; time used = 35.42830467224121s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 316.4572970867157.
Training classifier using 80.00% nodes...
{'micro': 0.52, 'macro': 0.5198079231692677, 'samples': 0.52, 'weighted': 0.52, 'accuracy': 0.52}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f4dcd9bed70>
total iter: 500
epoch 5: train_loss: 0.68529; Allocated: 17525248; Reserved: 44040192; time used = 3.1379973888397217s
epoch 10: train_loss: 0.50441; Allocated: 17525248; Reserved: 44040192; time used = 3.1509509086608887s
epoch 15: train_loss: 0.47073; Allocated: 17525248; Reserved: 44040192; time used = 3.271434783935547s
epoch 20: train_loss: 0.45571; Allocated: 17525248; Reserved: 44040192; time used = 3.1440138816833496s
epoch 25: train_loss: 0.45097; Allocated: 17525248; Reserved: 44040192; time used = 3.130660057067871s
epoch 30: train_loss: 0.44393; Allocated: 17525248; Reserved: 44040192; time used = 3.1447484493255615s
epoch 35: train_loss: 0.44250; Allocated: 17525248; Reserved: 44040192; time used = 3.2134897708892822s
epoch 40: train_loss: 0.44209; Allocated: 17525248; Reserved: 44040192; time used = 3.1598238945007324s
epoch 45: train_loss: 0.42835; Allocated: 17525248; Reserved: 44040192; time used = 3.2897181510925293s
epoch 50: train_loss: 0.42928; Allocated: 17525248; Reserved: 44040192; time used = 3.1412081718444824s
epoch 55: train_loss: 0.41321; Allocated: 17525248; Reserved: 44040192; time used = 3.1256251335144043s
epoch 60: train_loss: 0.40457; Allocated: 17525248; Reserved: 44040192; time used = 3.161153554916382s
epoch 65: train_loss: 0.40797; Allocated: 17525248; Reserved: 44040192; time used = 3.2822999954223633s
epoch 70: train_loss: 0.41763; Allocated: 17525248; Reserved: 44040192; time used = 3.156604766845703s
epoch 75: train_loss: 0.40076; Allocated: 17525248; Reserved: 44040192; time used = 3.1452202796936035s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 52.02821397781372.
Training classifier using 20.00% nodes...
{'micro': 0.6511305952930319, 'macro': 0.5666139152826587, 'samples': 0.6511305952930319, 'weighted': 0.6283751986916281, 'accuracy': 0.6511305952930319}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f4300b09410>
head 0
total iter: 500
epoch 5: train_loss: 1.41981; Allocated: 725504; Reserved: 29360128; time used = 1.3909718990325928s
epoch 10: train_loss: 1.47074; Allocated: 725504; Reserved: 29360128; time used = 1.3825721740722656s
epoch 15: train_loss: 1.40878; Allocated: 725504; Reserved: 8388608; time used = 1.3686165809631348s
epoch 20: train_loss: 1.39553; Allocated: 725504; Reserved: 8388608; time used = 1.3509268760681152s
epoch 25: train_loss: 1.39354; Allocated: 725504; Reserved: 8388608; time used = 1.3688716888427734s
epoch 30: train_loss: 1.38354; Allocated: 725504; Reserved: 8388608; time used = 1.3739783763885498s
epoch 35: train_loss: 1.37427; Allocated: 725504; Reserved: 8388608; time used = 1.3534903526306152s
epoch 40: train_loss: 1.36882; Allocated: 725504; Reserved: 8388608; time used = 1.366459608078003s
epoch 45: train_loss: 1.35760; Allocated: 725504; Reserved: 10485760; time used = 1.378981351852417s
epoch 50: train_loss: 1.35500; Allocated: 725504; Reserved: 29360128; time used = 1.3696134090423584s
epoch 55: train_loss: 1.35415; Allocated: 725504; Reserved: 8388608; time used = 1.3717756271362305s
epoch 60: train_loss: 1.35649; Allocated: 725504; Reserved: 8388608; time used = 1.383011817932129s
epoch 65: train_loss: 1.34558; Allocated: 725504; Reserved: 8388608; time used = 1.3971786499023438s
epoch 70: train_loss: 1.32961; Allocated: 725504; Reserved: 8388608; time used = 1.385585069656372s
epoch 75: train_loss: 1.31729; Allocated: 725504; Reserved: 29360128; time used = 1.3700644969940186s
epoch 80: train_loss: 1.27898; Allocated: 725504; Reserved: 8388608; time used = 1.3777735233306885s
epoch 85: train_loss: 1.33653; Allocated: 725504; Reserved: 8388608; time used = 1.369715690612793s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 26.76769495010376.
Training classifier using 80.00% nodes...
{'micro': 0.631578947368421, 'macro': 0.5737179487179487, 'samples': 0.631578947368421, 'weighted': 0.5985155195681512, 'accuracy': 0.631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3142.13it/s]100%|██████████| 1000/1000 [00:00<00:00, 4485.56it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f30483e6050>
head 0
total iter: 500
epoch 5: train_loss: 0.68290; Allocated: 495104; Reserved: 10485760; time used = 11.656023979187012s
epoch 10: train_loss: 0.66827; Allocated: 495104; Reserved: 8388608; time used = 11.498077392578125s
epoch 15: train_loss: 0.64279; Allocated: 495104; Reserved: 8388608; time used = 11.75627088546753s
epoch 20: train_loss: 0.61390; Allocated: 495104; Reserved: 8388608; time used = 11.775280475616455s
epoch 25: train_loss: 0.54067; Allocated: 495104; Reserved: 10485760; time used = 11.539193391799927s
epoch 30: train_loss: 0.55982; Allocated: 495104; Reserved: 8388608; time used = 11.736151456832886s
epoch 35: train_loss: 0.48157; Allocated: 495104; Reserved: 8388608; time used = 11.770546197891235s
epoch 40: train_loss: 0.41211; Allocated: 495104; Reserved: 8388608; time used = 11.413259267807007s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 101.21201586723328.
Training classifier using 80.00% nodes...
{'micro': 0.47500000000000003, 'macro': 0.4711792702273929, 'samples': 0.475, 'weighted': 0.4702802749867796, 'accuracy': 0.475}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f7b579cb4b0>
head 0
total iter: 500
epoch 5: train_loss: 1.51364; Allocated: 940032; Reserved: 8388608; time used = 2.020925521850586s
epoch 10: train_loss: 1.40610; Allocated: 940032; Reserved: 8388608; time used = 1.8955583572387695s
epoch 15: train_loss: 1.36738; Allocated: 940032; Reserved: 8388608; time used = 1.8387913703918457s
epoch 20: train_loss: 1.34049; Allocated: 940032; Reserved: 8388608; time used = 1.8480195999145508s
epoch 25: train_loss: 1.33484; Allocated: 940032; Reserved: 8388608; time used = 1.9653775691986084s
epoch 30: train_loss: 1.31223; Allocated: 940032; Reserved: 8388608; time used = 1.9140629768371582s
epoch 35: train_loss: 1.29726; Allocated: 940032; Reserved: 8388608; time used = 1.9168214797973633s
epoch 40: train_loss: 1.29150; Allocated: 940032; Reserved: 8388608; time used = 1.940234661102295s
epoch 45: train_loss: 1.27525; Allocated: 940032; Reserved: 8388608; time used = 1.9346868991851807s
epoch 50: train_loss: 1.27072; Allocated: 940032; Reserved: 8388608; time used = 1.85477614402771s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 23.7467041015625.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.5538793103448276, 'samples': 0.5652173913043478, 'weighted': 0.5590329835082459, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f181f079460>
total iter: 500
epoch 5: train_loss: 1.34534; Allocated: 508416; Reserved: 8388608; time used = 3.1128907203674316s
epoch 10: train_loss: 1.32213; Allocated: 508416; Reserved: 8388608; time used = 3.0802245140075684s
epoch 15: train_loss: 1.30070; Allocated: 508416; Reserved: 8388608; time used = 3.205815076828003s
epoch 20: train_loss: 1.30867; Allocated: 508416; Reserved: 8388608; time used = 3.083178758621216s
epoch 25: train_loss: 1.32299; Allocated: 508416; Reserved: 8388608; time used = 3.0827438831329346s
epoch 30: train_loss: 1.30789; Allocated: 508416; Reserved: 8388608; time used = 3.0802700519561768s
epoch 35: train_loss: 1.28791; Allocated: 508416; Reserved: 8388608; time used = 3.2108922004699707s
epoch 40: train_loss: 1.30319; Allocated: 508416; Reserved: 8388608; time used = 3.073911428451538s
epoch 45: train_loss: 1.31913; Allocated: 508416; Reserved: 8388608; time used = 3.087960958480835s
epoch 50: train_loss: 1.31822; Allocated: 508416; Reserved: 8388608; time used = 3.220100164413452s
epoch 55: train_loss: 1.30162; Allocated: 508416; Reserved: 8388608; time used = 3.143256664276123s
epoch 60: train_loss: 1.30688; Allocated: 508416; Reserved: 8388608; time used = 3.0920603275299072s
epoch 65: train_loss: 1.29601; Allocated: 508416; Reserved: 8388608; time used = 3.1004974842071533s
epoch 70: train_loss: 1.32029; Allocated: 508416; Reserved: 8388608; time used = 3.236830711364746s
epoch 75: train_loss: 1.31839; Allocated: 508416; Reserved: 8388608; time used = 3.0869665145874023s
epoch 80: train_loss: 1.32408; Allocated: 508416; Reserved: 8388608; time used = 3.0876777172088623s
epoch 85: train_loss: 1.31629; Allocated: 508416; Reserved: 8388608; time used = 3.088127374649048s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 56.677051305770874.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3112.55it/s]100%|██████████| 1500/1500 [00:00<00:00, 5575.59it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f56a5e8f050>
total iter: 500
epoch 5: train_loss: 0.67116; Allocated: 627712; Reserved: 14680064; time used = 7.5409836769104s
epoch 10: train_loss: 0.68689; Allocated: 627712; Reserved: 35651584; time used = 7.335184335708618s
epoch 15: train_loss: 0.67537; Allocated: 627712; Reserved: 14680064; time used = 7.356490850448608s
epoch 20: train_loss: 0.66021; Allocated: 627712; Reserved: 14680064; time used = 7.3754823207855225s
epoch 25: train_loss: 0.64574; Allocated: 627712; Reserved: 14680064; time used = 7.54119086265564s
epoch 30: train_loss: 0.63488; Allocated: 627712; Reserved: 35651584; time used = 7.394273519515991s
epoch 35: train_loss: 0.59358; Allocated: 627712; Reserved: 14680064; time used = 7.303909063339233s
epoch 40: train_loss: 0.58518; Allocated: 627712; Reserved: 14680064; time used = 7.545339107513428s
epoch 45: train_loss: 0.56433; Allocated: 627712; Reserved: 14680064; time used = 7.345251560211182s
epoch 50: train_loss: 0.54707; Allocated: 627712; Reserved: 14680064; time used = 7.313575029373169s
epoch 55: train_loss: 0.55107; Allocated: 627712; Reserved: 14680064; time used = 7.244793891906738s
epoch 60: train_loss: 0.55549; Allocated: 627712; Reserved: 35651584; time used = 7.450930833816528s
epoch 65: train_loss: 0.54974; Allocated: 627712; Reserved: 14680064; time used = 7.251744508743286s
epoch 70: train_loss: 0.54616; Allocated: 627712; Reserved: 35651584; time used = 7.328679800033569s
epoch 75: train_loss: 0.53433; Allocated: 627712; Reserved: 14680064; time used = 7.513927221298218s
epoch 80: train_loss: 0.54701; Allocated: 627712; Reserved: 35651584; time used = 7.252101182937622s
epoch 85: train_loss: 0.54219; Allocated: 627712; Reserved: 35651584; time used = 7.3485541343688965s
epoch 90: train_loss: 0.55468; Allocated: 627712; Reserved: 14680064; time used = 7.281232118606567s
epoch 95: train_loss: 0.52082; Allocated: 627712; Reserved: 14680064; time used = 7.499413967132568s
epoch 100: train_loss: 0.55700; Allocated: 627712; Reserved: 35651584; time used = 7.341118574142456s
epoch 105: train_loss: 0.52990; Allocated: 627712; Reserved: 14680064; time used = 7.314918279647827s
epoch 110: train_loss: 0.52618; Allocated: 627712; Reserved: 14680064; time used = 7.558086395263672s
epoch 115: train_loss: 0.53873; Allocated: 627712; Reserved: 14680064; time used = 7.308753252029419s
epoch 120: train_loss: 0.53495; Allocated: 627712; Reserved: 35651584; time used = 7.414415121078491s
epoch 125: train_loss: 0.54203; Allocated: 627712; Reserved: 14680064; time used = 7.326073169708252s
epoch 130: train_loss: 0.52760; Allocated: 627712; Reserved: 14680064; time used = 7.541815519332886s
epoch 135: train_loss: 0.54799; Allocated: 627712; Reserved: 14680064; time used = 7.270977020263672s
epoch 140: train_loss: 0.53356; Allocated: 627712; Reserved: 35651584; time used = 7.359114646911621s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 213.9324812889099.
Training classifier using 80.00% nodes...
{'micro': 0.5, 'macro': 0.41874214396661175, 'samples': 0.5, 'weighted': 0.40780150126923503, 'accuracy': 0.5}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7efe3b027410>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.39184; Allocated: 797184; Reserved: 6291456; time used = 3.337524890899658s
epoch 10: train_loss: 1.32509; Allocated: 797184; Reserved: 6291456; time used = 3.3203771114349365s
epoch 15: train_loss: 1.31319; Allocated: 797184; Reserved: 6291456; time used = 3.444099187850952s
epoch 20: train_loss: 1.24791; Allocated: 797184; Reserved: 6291456; time used = 3.2872326374053955s
epoch 25: train_loss: 1.23639; Allocated: 797184; Reserved: 6291456; time used = 3.292048692703247s
epoch 30: train_loss: 1.19583; Allocated: 797184; Reserved: 6291456; time used = 3.2976813316345215s
epoch 35: train_loss: 1.19017; Allocated: 797184; Reserved: 6291456; time used = 3.506985664367676s
epoch 40: train_loss: 1.19387; Allocated: 797184; Reserved: 6291456; time used = 3.323164463043213s
epoch 45: train_loss: 1.15656; Allocated: 797184; Reserved: 6291456; time used = 3.2774221897125244s
epoch 50: train_loss: 1.18416; Allocated: 797184; Reserved: 6291456; time used = 3.27774977684021s
epoch 55: train_loss: 1.18412; Allocated: 797184; Reserved: 6291456; time used = 3.4121971130371094s
epoch 60: train_loss: 1.12174; Allocated: 797184; Reserved: 6291456; time used = 3.287222385406494s
epoch 65: train_loss: 1.15236; Allocated: 797184; Reserved: 6291456; time used = 3.3937976360321045s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 49.361706018447876.
Training classifier using 80.00% nodes...
{'micro': 0.6842105263157895, 'macro': 0.6161616161616161, 'samples': 0.6842105263157895, 'weighted': 0.6416799574694312, 'accuracy': 0.6842105263157895}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3087.07it/s] 83%|████████▎ | 1657/2000 [00:00<00:00, 3926.10it/s]100%|██████████| 2000/2000 [00:00<00:00, 6242.75it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7faf0ffc1140>
total iter: 500
epoch 5: train_loss: 316332.81412; Allocated: 4254208; Reserved: 31457280; time used = 95.45793890953064s
epoch 10: train_loss: 24372.14917; Allocated: 4254208; Reserved: 31457280; time used = 97.31391167640686s
epoch 15: train_loss: 26826.44009; Allocated: 4254208; Reserved: 31457280; time used = 100.514089345932s
epoch 20: train_loss: 9140.20285; Allocated: 4254208; Reserved: 31457280; time used = 101.57191371917725s
epoch 25: train_loss: 520.51368; Allocated: 4254208; Reserved: 31457280; time used = 100.38148856163025s
epoch 30: train_loss: 11244.34696; Allocated: 4254208; Reserved: 31457280; time used = 100.59632706642151s
epoch 35: train_loss: 2141.15384; Allocated: 4254208; Reserved: 31457280; time used = 100.17991185188293s
epoch 40: train_loss: 213.04704; Allocated: 4254208; Reserved: 31457280; time used = 99.2947187423706s
epoch 45: train_loss: 11729.88360; Allocated: 4254208; Reserved: 31457280; time used = 97.08419394493103s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 974.5348536968231.
Training classifier using 80.00% nodes...
{'micro': 0.7, 'macro': 0.6935570366965449, 'samples': 0.7, 'weighted': 0.6922240098061748, 'accuracy': 0.7}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2cd44f36e0>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.52063; Allocated: 592384; Reserved: 6291456; time used = 3.2462124824523926s
epoch 10: train_loss: 0.50750; Allocated: 592384; Reserved: 6291456; time used = 3.231361150741577s
epoch 15: train_loss: 0.50029; Allocated: 592384; Reserved: 6291456; time used = 3.360138416290283s
epoch 20: train_loss: 0.49017; Allocated: 592384; Reserved: 6291456; time used = 3.222583770751953s
epoch 25: train_loss: 0.48835; Allocated: 592384; Reserved: 6291456; time used = 3.22110652923584s
epoch 30: train_loss: 0.47717; Allocated: 592384; Reserved: 6291456; time used = 3.2240898609161377s
epoch 35: train_loss: 0.48380; Allocated: 592384; Reserved: 6291456; time used = 3.3509762287139893s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 26.743780612945557.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.672156862745098, 'samples': 0.7105263157894737, 'weighted': 0.6898658410732714, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f46843b58c0>
total iter: 500
epoch 5: train_loss: 1.37825; Allocated: 843776; Reserved: 6291456; time used = 4.506258964538574s
epoch 10: train_loss: 1.37537; Allocated: 843776; Reserved: 6291456; time used = 4.604791879653931s
epoch 15: train_loss: 1.37927; Allocated: 843776; Reserved: 6291456; time used = 4.604965925216675s
epoch 20: train_loss: 1.38573; Allocated: 843776; Reserved: 6291456; time used = 4.60926079750061s
epoch 25: train_loss: 1.37197; Allocated: 843776; Reserved: 4194304; time used = 4.482623815536499s
epoch 30: train_loss: 1.38423; Allocated: 843776; Reserved: 6291456; time used = 4.585004091262817s
epoch 35: train_loss: 1.37041; Allocated: 843776; Reserved: 6291456; time used = 4.584903955459595s
epoch 40: train_loss: 1.37410; Allocated: 843776; Reserved: 6291456; time used = 4.464602708816528s
epoch 45: train_loss: 1.37697; Allocated: 843776; Reserved: 4194304; time used = 4.601560592651367s
epoch 50: train_loss: 1.37149; Allocated: 843776; Reserved: 6291456; time used = 4.595627307891846s
epoch 55: train_loss: 1.36958; Allocated: 843776; Reserved: 4194304; time used = 4.501886367797852s
epoch 60: train_loss: 1.37679; Allocated: 843776; Reserved: 6291456; time used = 4.7388222217559814s
epoch 65: train_loss: 1.38499; Allocated: 843776; Reserved: 6291456; time used = 4.6171910762786865s
epoch 70: train_loss: 1.37711; Allocated: 843776; Reserved: 6291456; time used = 4.482874155044556s
epoch 75: train_loss: 1.36270; Allocated: 843776; Reserved: 6291456; time used = 4.593721389770508s
epoch 80: train_loss: 1.37017; Allocated: 843776; Reserved: 6291456; time used = 4.6064653396606445s
epoch 85: train_loss: 1.37394; Allocated: 843776; Reserved: 6291456; time used = 4.471500396728516s
epoch 90: train_loss: 1.37407; Allocated: 843776; Reserved: 6291456; time used = 4.638019800186157s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 86.467529296875.
Training classifier using 80.00% nodes...
{'micro': 0.5942028985507246, 'macro': 0.5208333333333333, 'samples': 0.5942028985507246, 'weighted': 0.5344202898550725, 'accuracy': 0.5942028985507246}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fcd33c0b370>
total iter: 500
epoch 5: train_loss: 1.34534; Allocated: 508416; Reserved: 8388608; time used = 3.1154534816741943s
epoch 10: train_loss: 1.32213; Allocated: 508416; Reserved: 8388608; time used = 3.101688861846924s
epoch 15: train_loss: 1.30070; Allocated: 508416; Reserved: 8388608; time used = 3.220317840576172s
epoch 20: train_loss: 1.30867; Allocated: 508416; Reserved: 8388608; time used = 3.1333649158477783s
epoch 25: train_loss: 1.32299; Allocated: 508416; Reserved: 8388608; time used = 3.109001636505127s
epoch 30: train_loss: 1.30789; Allocated: 508416; Reserved: 8388608; time used = 3.15415096282959s
epoch 35: train_loss: 1.28791; Allocated: 508416; Reserved: 8388608; time used = 3.2766125202178955s
epoch 40: train_loss: 1.30319; Allocated: 508416; Reserved: 8388608; time used = 3.1184232234954834s
epoch 45: train_loss: 1.31913; Allocated: 508416; Reserved: 8388608; time used = 3.093273639678955s
epoch 50: train_loss: 1.31822; Allocated: 508416; Reserved: 8388608; time used = 3.2432029247283936s
epoch 55: train_loss: 1.30162; Allocated: 508416; Reserved: 8388608; time used = 3.1162807941436768s
epoch 60: train_loss: 1.30688; Allocated: 508416; Reserved: 8388608; time used = 3.096299648284912s
epoch 65: train_loss: 1.29601; Allocated: 508416; Reserved: 8388608; time used = 3.1098527908325195s
epoch 70: train_loss: 1.32029; Allocated: 508416; Reserved: 8388608; time used = 3.2419519424438477s
epoch 75: train_loss: 1.31839; Allocated: 508416; Reserved: 8388608; time used = 3.095931053161621s
epoch 80: train_loss: 1.32408; Allocated: 508416; Reserved: 8388608; time used = 3.089986801147461s
epoch 85: train_loss: 1.31629; Allocated: 508416; Reserved: 8388608; time used = 3.0901834964752197s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 56.83798885345459.
Training classifier using 80.00% nodes...
{'micro': 0.7368421052631579, 'macro': 0.6801346801346801, 'samples': 0.7368421052631579, 'weighted': 0.7013999645578592, 'accuracy': 0.7368421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f54fb587cd0>
total iter: 500
epoch 5: train_loss: 1.44197; Allocated: 848896; Reserved: 4194304; time used = 0.9139080047607422s
epoch 10: train_loss: 1.33851; Allocated: 848896; Reserved: 6291456; time used = 0.911266565322876s
epoch 15: train_loss: 1.32797; Allocated: 848896; Reserved: 4194304; time used = 0.9134705066680908s
epoch 20: train_loss: 1.27957; Allocated: 848896; Reserved: 4194304; time used = 0.9149634838104248s
epoch 25: train_loss: 1.24153; Allocated: 848896; Reserved: 4194304; time used = 0.9155817031860352s
epoch 30: train_loss: 1.21223; Allocated: 848896; Reserved: 4194304; time used = 0.9117908477783203s
epoch 35: train_loss: 1.22271; Allocated: 848896; Reserved: 4194304; time used = 1.0614287853240967s
epoch 40: train_loss: 1.19059; Allocated: 848896; Reserved: 4194304; time used = 0.910771369934082s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 11.104628562927246.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.4661508704061895, 'samples': 0.5362318840579711, 'weighted': 0.48016707313654583, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3023.23it/s]100%|██████████| 1500/1500 [00:00<00:00, 5473.98it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f3f0c5ec050>
total iter: 500
epoch 5: train_loss: 330806052.00000; Allocated: 625152; Reserved: 6291456; time used = 11.851203203201294s
epoch 10: train_loss: 30804898.50000; Allocated: 625152; Reserved: 8388608; time used = 11.936461687088013s
epoch 15: train_loss: 8338005.68750; Allocated: 625152; Reserved: 8388608; time used = 11.923901319503784s
epoch 20: train_loss: 1085680.57422; Allocated: 625152; Reserved: 8388608; time used = 12.042621850967407s
epoch 25: train_loss: 244464.35938; Allocated: 625152; Reserved: 6291456; time used = 11.865952968597412s
epoch 30: train_loss: 1.40980; Allocated: 625152; Reserved: 6291456; time used = 11.934670686721802s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 77.22269940376282.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3116.59it/s]100%|██████████| 1000/1000 [00:00<00:00, 4457.47it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f979f5ab050>
total iter: 500
epoch 5: train_loss: 0.69188; Allocated: 425984; Reserved: 8388608; time used = 11.525057554244995s
epoch 10: train_loss: 0.67119; Allocated: 425984; Reserved: 6291456; time used = 11.411473989486694s
epoch 15: train_loss: 0.52760; Allocated: 425984; Reserved: 6291456; time used = 11.583988904953003s
epoch 20: train_loss: 0.48995; Allocated: 425984; Reserved: 6291456; time used = 11.600962400436401s
epoch 25: train_loss: 0.46860; Allocated: 425984; Reserved: 6291456; time used = 11.3970308303833s
epoch 30: train_loss: 0.45611; Allocated: 425984; Reserved: 6291456; time used = 11.543909549713135s
epoch 35: train_loss: 0.44517; Allocated: 425984; Reserved: 6291456; time used = 11.583762645721436s
epoch 40: train_loss: 0.43603; Allocated: 425984; Reserved: 8388608; time used = 11.267502069473267s
epoch 45: train_loss: 0.43216; Allocated: 425984; Reserved: 6291456; time used = 11.520698547363281s
epoch 50: train_loss: 0.42725; Allocated: 425984; Reserved: 8388608; time used = 11.522156715393066s
epoch 55: train_loss: 0.42490; Allocated: 425984; Reserved: 6291456; time used = 11.388383388519287s
epoch 60: train_loss: 0.42300; Allocated: 425984; Reserved: 6291456; time used = 11.58745002746582s
epoch 65: train_loss: 0.42128; Allocated: 425984; Reserved: 6291456; time used = 11.54817819595337s
epoch 70: train_loss: 0.41992; Allocated: 425984; Reserved: 6291456; time used = 11.40212893486023s
epoch 75: train_loss: 0.41839; Allocated: 425984; Reserved: 8388608; time used = 11.589788913726807s
epoch 80: train_loss: 0.41336; Allocated: 425984; Reserved: 6291456; time used = 11.56232738494873s
epoch 85: train_loss: 0.41133; Allocated: 425984; Reserved: 6291456; time used = 11.459243774414062s
epoch 90: train_loss: 0.40899; Allocated: 425984; Reserved: 6291456; time used = 11.455648183822632s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 214.82129573822021.
Training classifier using 80.00% nodes...
{'micro': 0.7299999999999999, 'macro': 0.7298919567827131, 'samples': 0.73, 'weighted': 0.7297839135654262, 'accuracy': 0.73}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f1fb5c631e0>
total iter: 500
epoch 5: train_loss: 1.33084; Allocated: 53541888; Reserved: 109051904; time used = 4.600926160812378s
epoch 10: train_loss: 1.26858; Allocated: 53541888; Reserved: 109051904; time used = 4.710172414779663s
epoch 15: train_loss: 1.24610; Allocated: 53541888; Reserved: 109051904; time used = 4.619637727737427s
epoch 20: train_loss: 1.17048; Allocated: 53541888; Reserved: 109051904; time used = 4.577442169189453s
epoch 25: train_loss: 1.16247; Allocated: 53541888; Reserved: 109051904; time used = 4.705255746841431s
epoch 30: train_loss: 1.12068; Allocated: 53541888; Reserved: 109051904; time used = 4.584674119949341s
epoch 35: train_loss: 1.09576; Allocated: 53541888; Reserved: 109051904; time used = 4.701883792877197s
epoch 40: train_loss: 1.07649; Allocated: 53541888; Reserved: 109051904; time used = 4.600861072540283s
epoch 45: train_loss: 1.05763; Allocated: 53541888; Reserved: 109051904; time used = 4.6125853061676025s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 46.77801322937012.
Training classifier using 20.00% nodes...
{'micro': 0.5141263940520446, 'macro': 0.4155308197596525, 'samples': 0.519534184823441, 'weighted': 0.4608580167026852, 'accuracy': 0.519534184823441}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 2957.94it/s]100%|██████████| 1000/1000 [00:00<00:00, 4278.02it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc173c44370>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.69242; Allocated: 841216; Reserved: 12582912; time used = 53.40530276298523s
epoch 10: train_loss: 0.68409; Allocated: 841216; Reserved: 12582912; time used = 53.95556879043579s
epoch 15: train_loss: 0.68341; Allocated: 841216; Reserved: 12582912; time used = 53.488986015319824s
epoch 20: train_loss: 0.60778; Allocated: 841216; Reserved: 12582912; time used = 53.35952854156494s
epoch 25: train_loss: 0.46096; Allocated: 841216; Reserved: 10485760; time used = 53.67525053024292s
epoch 30: train_loss: 0.39552; Allocated: 841216; Reserved: 14680064; time used = 53.33298182487488s
epoch 35: train_loss: 0.41291; Allocated: 841216; Reserved: 12582912; time used = 53.51518726348877s
epoch 40: train_loss: 0.38159; Allocated: 841216; Reserved: 12582912; time used = 53.20334482192993s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 474.0667221546173.
Training classifier using 80.00% nodes...
{'micro': 0.55, 'macro': 0.5498199279711884, 'samples': 0.55, 'weighted': 0.549639855942377, 'accuracy': 0.55}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f733fb71690>
total iter: 500
epoch 5: train_loss: 20.02986; Allocated: 713728; Reserved: 29360128; time used = 1.0901668071746826s
epoch 10: train_loss: 2.80538; Allocated: 713728; Reserved: 29360128; time used = 1.0977702140808105s
epoch 15: train_loss: 1.46403; Allocated: 713728; Reserved: 8388608; time used = 1.108978271484375s
epoch 20: train_loss: 1.40505; Allocated: 713728; Reserved: 8388608; time used = 1.0959718227386475s
epoch 25: train_loss: 1.41616; Allocated: 713728; Reserved: 8388608; time used = 1.0998947620391846s
epoch 30: train_loss: 1.44270; Allocated: 713728; Reserved: 8388608; time used = 1.09969162940979s
epoch 35: train_loss: 1.41937; Allocated: 713728; Reserved: 8388608; time used = 1.1018528938293457s
epoch 40: train_loss: 1.37972; Allocated: 713728; Reserved: 8388608; time used = 1.1005849838256836s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.149489879608154.
Training classifier using 80.00% nodes...
{'micro': 0.7368421052631579, 'macro': 0.7076923076923077, 'samples': 0.7368421052631579, 'weighted': 0.7222672064777328, 'accuracy': 0.7368421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3142.94it/s]100%|██████████| 1500/1500 [00:00<00:00, 5631.07it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7feeda7f7280>
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 768512; Reserved: 12582912; time used = 10.369231939315796s
epoch 10: train_loss: 0.69312; Allocated: 768512; Reserved: 12582912; time used = 10.045341730117798s
epoch 15: train_loss: 0.69312; Allocated: 768512; Reserved: 12582912; time used = 9.985200881958008s
epoch 20: train_loss: 0.69318; Allocated: 768512; Reserved: 12582912; time used = 10.009520053863525s
epoch 25: train_loss: 0.69316; Allocated: 768512; Reserved: 12582912; time used = 10.194567203521729s
epoch 30: train_loss: 0.69311; Allocated: 768512; Reserved: 12582912; time used = 9.966715335845947s
epoch 35: train_loss: 0.69314; Allocated: 768512; Reserved: 12582912; time used = 10.006376504898071s
epoch 40: train_loss: 0.69315; Allocated: 768512; Reserved: 12582912; time used = 9.97421383857727s
epoch 45: train_loss: 0.69314; Allocated: 768512; Reserved: 12582912; time used = 10.122981309890747s
epoch 50: train_loss: 0.69315; Allocated: 768512; Reserved: 12582912; time used = 9.965135097503662s
epoch 55: train_loss: 0.69315; Allocated: 768512; Reserved: 12582912; time used = 9.976640224456787s
epoch 60: train_loss: 0.69315; Allocated: 768512; Reserved: 12582912; time used = 10.17015027999878s
epoch 65: train_loss: 0.69315; Allocated: 768512; Reserved: 12582912; time used = 10.03511667251587s
epoch 70: train_loss: 0.69315; Allocated: 768512; Reserved: 12582912; time used = 9.986182689666748s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 152.1887984275818.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3083.78it/s]100%|██████████| 1000/1000 [00:00<00:00, 4420.45it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f9a3c41f280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2990.34it/s] 83%|████████▎ | 1668/2000 [00:00<00:00, 3820.46it/s]100%|██████████| 2000/2000 [00:00<00:00, 6146.62it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f0493fc1190>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3096.52it/s]100%|██████████| 1500/1500 [00:00<00:00, 5556.37it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f6c0092e050>
head 0
total iter: 500
epoch 5: train_loss: 2.25740; Allocated: 696832; Reserved: 14680064; time used = 9.17430567741394s
epoch 10: train_loss: 1.41838; Allocated: 696832; Reserved: 35651584; time used = 8.9544997215271s
epoch 15: train_loss: 1.43654; Allocated: 696832; Reserved: 14680064; time used = 8.960208177566528s
epoch 20: train_loss: 1.38854; Allocated: 696832; Reserved: 14680064; time used = 9.025572538375854s
epoch 25: train_loss: 1.39098; Allocated: 696832; Reserved: 14680064; time used = 9.196635246276855s
epoch 30: train_loss: 1.39221; Allocated: 696832; Reserved: 35651584; time used = 9.008467197418213s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 65.7647135257721.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3123.21it/s]100%|██████████| 1000/1000 [00:00<00:00, 4463.67it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f52a57aa050>
total iter: 500
epoch 5: train_loss: 27.82257; Allocated: 493568; Reserved: 6291456; time used = 52.21852922439575s
epoch 10: train_loss: 65.37362; Allocated: 493568; Reserved: 6291456; time used = 52.18862509727478s
epoch 15: train_loss: 24.69805; Allocated: 493568; Reserved: 4194304; time used = 52.13210868835449s
epoch 20: train_loss: 7.09700; Allocated: 493568; Reserved: 4194304; time used = 52.007949352264404s
epoch 25: train_loss: 3.34281; Allocated: 493568; Reserved: 6291456; time used = 53.11949157714844s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 264.8168797492981.
Training classifier using 80.00% nodes...
{'micro': 0.715, 'macro': 0.714935860568628, 'samples': 0.715, 'weighted': 0.7150213798104573, 'accuracy': 0.715}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f33dc26e5a0>
total iter: 500
epoch 5: train_loss: 1.37298; Allocated: 841728; Reserved: 4194304; time used = 0.8078427314758301s
epoch 10: train_loss: 1.36840; Allocated: 841728; Reserved: 6291456; time used = 0.8329524993896484s
epoch 15: train_loss: 1.37428; Allocated: 841728; Reserved: 4194304; time used = 0.8335180282592773s
epoch 20: train_loss: 1.36043; Allocated: 841728; Reserved: 4194304; time used = 1.0361273288726807s
epoch 25: train_loss: 1.36299; Allocated: 841728; Reserved: 4194304; time used = 0.8055019378662109s
epoch 30: train_loss: 1.35349; Allocated: 841728; Reserved: 4194304; time used = 0.8051633834838867s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8.74215292930603.
Training classifier using 80.00% nodes...
{'micro': 0.6521739130434783, 'macro': 0.6503378378378378, 'samples': 0.6521739130434783, 'weighted': 0.6521739130434783, 'accuracy': 0.6521739130434783}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe23c53b4b0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f7df5308460>
total iter: 500
epoch 5: train_loss: 1.43375; Allocated: 510976; Reserved: 4194304; time used = 2.9770240783691406s
epoch 10: train_loss: 1.32615; Allocated: 510976; Reserved: 4194304; time used = 2.9870548248291016s
epoch 15: train_loss: 1.16772; Allocated: 510976; Reserved: 4194304; time used = 3.1029393672943115s
epoch 20: train_loss: 1.12691; Allocated: 510976; Reserved: 4194304; time used = 2.9737274646759033s
epoch 25: train_loss: 1.14185; Allocated: 510976; Reserved: 4194304; time used = 2.9489269256591797s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 20.879675149917603.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7efc45457d20>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3091.22it/s]100%|██████████| 1000/1000 [00:00<00:00, 4433.06it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f2e8236a050>
total iter: 500
epoch 5: train_loss: 0.69299; Allocated: 628224; Reserved: 6291456; time used = 189.4155945777893s
epoch 10: train_loss: 0.69032; Allocated: 628224; Reserved: 6291456; time used = 190.728089094162s
epoch 15: train_loss: 0.68923; Allocated: 628224; Reserved: 8388608; time used = 192.5506091117859s
epoch 20: train_loss: 0.67519; Allocated: 628224; Reserved: 6291456; time used = 190.5903160572052s
epoch 25: train_loss: 0.67324; Allocated: 628224; Reserved: 6291456; time used = 188.92619514465332s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 955.6208498477936.
Training classifier using 80.00% nodes...
{'micro': 0.67, 'macro': 0.6688077077478924, 'samples': 0.67, 'weighted': 0.6684102769971899, 'accuracy': 0.67}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fda51e475f0>
total iter: 500
epoch 5: train_loss: 0.63663; Allocated: 909312; Reserved: 6291456; time used = 4.585238456726074s
epoch 10: train_loss: 0.63218; Allocated: 909312; Reserved: 6291456; time used = 4.7149269580841064s
epoch 15: train_loss: 0.62480; Allocated: 909312; Reserved: 6291456; time used = 4.712565898895264s
epoch 20: train_loss: 0.60565; Allocated: 909312; Reserved: 4194304; time used = 4.698728561401367s
epoch 25: train_loss: 0.62321; Allocated: 909312; Reserved: 4194304; time used = 4.5768866539001465s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 26.54447865486145.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f7cf7684050>
head 0
total iter: 500
epoch 5: train_loss: 1.33545; Allocated: 522752; Reserved: 6291456; time used = 3.317152500152588s
epoch 10: train_loss: 1.29208; Allocated: 522752; Reserved: 6291456; time used = 3.2987759113311768s
epoch 15: train_loss: 1.27873; Allocated: 522752; Reserved: 6291456; time used = 3.2834527492523193s
epoch 20: train_loss: 1.24763; Allocated: 522752; Reserved: 6291456; time used = 3.171847105026245s
epoch 25: train_loss: 1.24263; Allocated: 522752; Reserved: 6291456; time used = 3.1692564487457275s
epoch 30: train_loss: 1.25541; Allocated: 522752; Reserved: 6291456; time used = 3.153076648712158s
epoch 35: train_loss: 1.24058; Allocated: 522752; Reserved: 6291456; time used = 3.2797863483428955s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 27.419013738632202.
Training classifier using 80.00% nodes...
{'micro': 0.868421052631579, 'macro': 0.8606016140865738, 'samples': 0.868421052631579, 'weighted': 0.8658145731165773, 'accuracy': 0.868421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler dgi --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f36de323eb0>
total iter: 500
epoch 5: train_loss: 1.37983; Allocated: 41039360; Reserved: 62914560; time used = 0.24552512168884277s
epoch 10: train_loss: 1.29571; Allocated: 41039360; Reserved: 62914560; time used = 0.2425837516784668s
epoch 15: train_loss: 1.21622; Allocated: 41039360; Reserved: 62914560; time used = 0.230879545211792s
epoch 20: train_loss: 1.07878; Allocated: 41039360; Reserved: 62914560; time used = 0.22796916961669922s
epoch 25: train_loss: 1.15356; Allocated: 41039360; Reserved: 62914560; time used = 0.22544145584106445s
epoch 30: train_loss: 1.03915; Allocated: 41039360; Reserved: 62914560; time used = 0.23499417304992676s
epoch 35: train_loss: 1.10034; Allocated: 41039360; Reserved: 62914560; time used = 0.22987079620361328s
epoch 40: train_loss: 1.02428; Allocated: 41039360; Reserved: 62914560; time used = 0.22986412048339844s
epoch 45: train_loss: 0.98087; Allocated: 41039360; Reserved: 62914560; time used = 0.23746204376220703s
epoch 50: train_loss: 1.05082; Allocated: 41039360; Reserved: 62914560; time used = 0.23594903945922852s
epoch 55: train_loss: 1.03250; Allocated: 41039360; Reserved: 62914560; time used = 0.24446868896484375s
epoch 60: train_loss: 1.00378; Allocated: 41039360; Reserved: 62914560; time used = 0.23949933052062988s
epoch 65: train_loss: 0.97294; Allocated: 41039360; Reserved: 62914560; time used = 0.2406930923461914s
epoch 70: train_loss: 0.97952; Allocated: 41039360; Reserved: 62914560; time used = 0.23503327369689941s
epoch 75: train_loss: 0.96593; Allocated: 41039360; Reserved: 62914560; time used = 0.23594355583190918s
epoch 80: train_loss: 0.95106; Allocated: 41039360; Reserved: 62914560; time used = 0.23698806762695312s
epoch 85: train_loss: 0.95623; Allocated: 41039360; Reserved: 62914560; time used = 0.23220610618591309s
epoch 90: train_loss: 1.01130; Allocated: 41039360; Reserved: 62914560; time used = 0.23089814186096191s
epoch 95: train_loss: 0.92146; Allocated: 41039360; Reserved: 62914560; time used = 0.23424553871154785s
epoch 100: train_loss: 0.99220; Allocated: 41039360; Reserved: 62914560; time used = 0.23017621040344238s
epoch 105: train_loss: 1.06584; Allocated: 41039360; Reserved: 62914560; time used = 0.22988438606262207s
epoch 110: train_loss: 0.98745; Allocated: 41039360; Reserved: 62914560; time used = 0.2312614917755127s
epoch 115: train_loss: 0.97700; Allocated: 41039360; Reserved: 62914560; time used = 0.2336266040802002s
epoch 120: train_loss: 0.91485; Allocated: 41039360; Reserved: 62914560; time used = 0.2333369255065918s
epoch 125: train_loss: 0.94887; Allocated: 41039360; Reserved: 62914560; time used = 0.23233675956726074s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 9.845241069793701.
Training classifier using 20.00% nodes...
{'micro': 0.7367820464054774, 'macro': 0.7211089012735018, 'samples': 0.7367820464054774, 'weighted': 0.7337874736550791, 'accuracy': 0.7367820464054774}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7efbe555daa0>
total iter: 500
epoch 5: train_loss: 2.64826; Allocated: 918016; Reserved: 8388608; time used = 1.8506550788879395s
epoch 10: train_loss: 1.69487; Allocated: 918016; Reserved: 6291456; time used = 1.864844560623169s
epoch 15: train_loss: 1.39757; Allocated: 918016; Reserved: 8388608; time used = 1.849897861480713s
epoch 20: train_loss: 1.41477; Allocated: 918016; Reserved: 6291456; time used = 1.8161804676055908s
epoch 25: train_loss: 1.40405; Allocated: 918016; Reserved: 6291456; time used = 1.9181101322174072s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 12.855772018432617.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.5314348302300109, 'samples': 0.5507246376811594, 'weighted': 0.5383240471768497, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fdd959da410>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.95446; Allocated: 1137152; Reserved: 29360128; time used = 2.3377320766448975s
epoch 10: train_loss: 1.39687; Allocated: 1137152; Reserved: 31457280; time used = 2.3114583492279053s
epoch 15: train_loss: 1.38348; Allocated: 1137152; Reserved: 10485760; time used = 2.295957088470459s
epoch 20: train_loss: 1.38236; Allocated: 1137152; Reserved: 8388608; time used = 2.3437106609344482s
epoch 25: train_loss: 1.38077; Allocated: 1137152; Reserved: 8388608; time used = 2.2719836235046387s
epoch 30: train_loss: 1.37221; Allocated: 1137152; Reserved: 8388608; time used = 2.2520911693573s
epoch 35: train_loss: 1.35319; Allocated: 1137152; Reserved: 10485760; time used = 2.3013715744018555s
epoch 40: train_loss: 1.35108; Allocated: 1137152; Reserved: 8388608; time used = 2.300450563430786s
epoch 45: train_loss: 1.32892; Allocated: 1137152; Reserved: 10485760; time used = 2.329676389694214s
epoch 50: train_loss: 1.28128; Allocated: 1137152; Reserved: 31457280; time used = 2.3092174530029297s
epoch 55: train_loss: 1.26336; Allocated: 1137152; Reserved: 8388608; time used = 2.275881290435791s
epoch 60: train_loss: 1.25871; Allocated: 1137152; Reserved: 10485760; time used = 2.2743680477142334s
epoch 65: train_loss: 1.21919; Allocated: 1137152; Reserved: 8388608; time used = 2.3136022090911865s
epoch 70: train_loss: 1.14199; Allocated: 1137152; Reserved: 8388608; time used = 2.2842767238616943s
epoch 75: train_loss: 1.18935; Allocated: 1137152; Reserved: 31457280; time used = 2.2821319103240967s
epoch 80: train_loss: 1.11770; Allocated: 1137152; Reserved: 10485760; time used = 2.2999038696289062s
epoch 85: train_loss: 1.15852; Allocated: 1137152; Reserved: 10485760; time used = 2.248077869415283s
epoch 90: train_loss: 1.13138; Allocated: 1137152; Reserved: 10485760; time used = 2.300546646118164s
epoch 95: train_loss: 1.07126; Allocated: 1137152; Reserved: 8388608; time used = 2.315861940383911s
epoch 100: train_loss: 1.05296; Allocated: 1137152; Reserved: 10485760; time used = 2.2737133502960205s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 50.301109075546265.
Training classifier using 80.00% nodes...
{'micro': 0.7368421052631579, 'macro': 0.7172619047619048, 'samples': 0.7368421052631579, 'weighted': 0.7290100250626566, 'accuracy': 0.7368421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f02d56b39b0>
total iter: 500
epoch 5: train_loss: 0.68863; Allocated: 863744; Reserved: 6291456; time used = 6.311213493347168s
epoch 10: train_loss: 0.48595; Allocated: 863744; Reserved: 8388608; time used = 6.144365549087524s
epoch 15: train_loss: 0.38468; Allocated: 863744; Reserved: 8388608; time used = 6.299931526184082s
epoch 20: train_loss: 0.29021; Allocated: 863744; Reserved: 6291456; time used = 6.290482044219971s
epoch 25: train_loss: 0.30664; Allocated: 863744; Reserved: 6291456; time used = 6.149616718292236s
epoch 30: train_loss: 0.16072; Allocated: 863744; Reserved: 6291456; time used = 6.280240297317505s
epoch 35: train_loss: 0.20669; Allocated: 863744; Reserved: 6291456; time used = 6.954400300979614s
epoch 40: train_loss: 0.13551; Allocated: 863744; Reserved: 6291456; time used = 6.292935848236084s
epoch 45: train_loss: 0.26490; Allocated: 863744; Reserved: 6291456; time used = 6.152987241744995s
epoch 50: train_loss: 0.22738; Allocated: 863744; Reserved: 6291456; time used = 6.279458045959473s
epoch 55: train_loss: 0.30594; Allocated: 863744; Reserved: 6291456; time used = 6.271968603134155s
epoch 60: train_loss: 0.21043; Allocated: 863744; Reserved: 6291456; time used = 6.151830673217773s
epoch 65: train_loss: 0.13429; Allocated: 863744; Reserved: 6291456; time used = 6.276472806930542s
epoch 70: train_loss: 0.12972; Allocated: 863744; Reserved: 6291456; time used = 6.311223745346069s
epoch 75: train_loss: 0.27599; Allocated: 863744; Reserved: 6291456; time used = 6.305292367935181s
epoch 80: train_loss: 0.10700; Allocated: 863744; Reserved: 6291456; time used = 6.1452202796936035s
epoch 85: train_loss: 0.08338; Allocated: 863744; Reserved: 6291456; time used = 6.905552387237549s
epoch 90: train_loss: 0.14435; Allocated: 863744; Reserved: 6291456; time used = 6.282238483428955s
epoch 95: train_loss: 0.19014; Allocated: 863744; Reserved: 6291456; time used = 6.291499376296997s
epoch 100: train_loss: 0.11437; Allocated: 863744; Reserved: 6291456; time used = 6.150485038757324s
epoch 105: train_loss: 0.13897; Allocated: 863744; Reserved: 8388608; time used = 6.288151979446411s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 138.6313669681549.
Training classifier using 80.00% nodes...
{'micro': 0.5362318840579711, 'macro': 0.3490566037735849, 'samples': 0.5362318840579711, 'weighted': 0.3743505605687722, 'accuracy': 0.5362318840579711}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f69d9547cd0>
total iter: 500
epoch 5: train_loss: 0.23469; Allocated: 17601536; Reserved: 62914560; time used = 0.2163536548614502s
epoch 10: train_loss: 0.02181; Allocated: 17601536; Reserved: 62914560; time used = 0.20145249366760254s
epoch 15: train_loss: 0.00213; Allocated: 17601536; Reserved: 62914560; time used = 0.20280098915100098s
epoch 20: train_loss: 0.00475; Allocated: 17601536; Reserved: 62914560; time used = 0.20380640029907227s
epoch 25: train_loss: 0.00013; Allocated: 17601536; Reserved: 62914560; time used = 0.2132561206817627s
epoch 30: train_loss: 0.00022; Allocated: 17601536; Reserved: 62914560; time used = 0.20911407470703125s
epoch 35: train_loss: 0.00005; Allocated: 17601536; Reserved: 62914560; time used = 0.20378518104553223s
epoch 40: train_loss: 0.00005; Allocated: 17601536; Reserved: 62914560; time used = 0.20325803756713867s
epoch 45: train_loss: 0.00006; Allocated: 17601536; Reserved: 62914560; time used = 0.20735836029052734s
epoch 50: train_loss: 0.00003; Allocated: 17601536; Reserved: 62914560; time used = 0.21809124946594238s
epoch 55: train_loss: 0.00002; Allocated: 17601536; Reserved: 62914560; time used = 0.21085619926452637s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 5.6209306716918945.
Training classifier using 20.00% nodes...
{'micro': 0.6091370558375635, 'macro': 0.5924024301028693, 'samples': 0.6091370558375635, 'weighted': 0.6043065258805888, 'accuracy': 0.6091370558375635}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3099.74it/s]100%|██████████| 1500/1500 [00:00<00:00, 5589.39it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f3faa782190>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.26991438865662s
epoch 10: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.00300693511963s
epoch 15: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.7261347770691s
epoch 20: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.18152856826782s
epoch 25: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 193.746346950531s
epoch 30: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.1373872756958s
epoch 35: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 198.20940828323364s
epoch 40: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 193.4161946773529s
epoch 45: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 197.3580286502838s
epoch 50: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 194.50568222999573s
epoch 55: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 197.41546869277954s
epoch 60: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 197.36004281044006s
epoch 65: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.02993178367615s
epoch 70: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.89840126037598s
epoch 75: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 199.65097641944885s
epoch 80: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.9563798904419s
epoch 85: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.70549249649048s
epoch 90: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 199.87814664840698s
epoch 95: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 199.4811885356903s
epoch 100: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.7538366317749s
epoch 105: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 199.01110577583313s
epoch 110: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 207.80655813217163s
epoch 115: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 212.15863823890686s
epoch 120: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 213.2105450630188s
epoch 125: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 208.23183870315552s
epoch 130: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 197.14845871925354s
epoch 135: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 198.1936867237091s
epoch 140: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.56381845474243s
epoch 145: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 198.64816999435425s
epoch 150: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 200.82563495635986s
epoch 155: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 199.51058793067932s
epoch 160: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.02797627449036s
epoch 165: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 197.573992729187s
epoch 170: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 202.02706956863403s
epoch 175: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.80169367790222s
epoch 180: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.1613974571228s
epoch 185: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 198.0377016067505s
epoch 190: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 198.86226511001587s
epoch 195: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 201.3285174369812s
epoch 200: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 196.87304210662842s
epoch 205: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 197.51954007148743s
epoch 210: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 203.54998111724854s
epoch 215: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 201.98842358589172s
epoch 220: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 200.2723159790039s
epoch 225: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 196.8434500694275s
epoch 230: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.2591850757599s
epoch 235: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.26962757110596s
epoch 240: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 197.73785758018494s
epoch 245: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.0134220123291s
epoch 250: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.42576336860657s
epoch 255: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.64367818832397s
epoch 260: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 194.44417452812195s
epoch 265: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 194.14310836791992s
epoch 270: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 196.3728575706482s
epoch 275: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.6335678100586s
epoch 280: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 194.61209678649902s
epoch 285: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 192.9012999534607s
epoch 290: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 197.26465725898743s
epoch 295: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 194.28265476226807s
epoch 300: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 192.52267026901245s
epoch 305: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.5412118434906s
epoch 310: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.99741506576538s
epoch 315: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.38552355766296s
epoch 320: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 197.32841110229492s
epoch 325: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 192.8043191432953s
epoch 330: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 194.85785102844238s
epoch 335: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 196.3546907901764s
epoch 340: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.11739540100098s
epoch 345: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 194.57780814170837s
epoch 350: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.92850399017334s
epoch 355: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 196.21543192863464s
epoch 360: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.15028023719788s
epoch 365: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.22221422195435s
epoch 370: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.0850110054016s
epoch 375: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 194.66178464889526s
epoch 380: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 195.47930097579956s
epoch 385: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 194.4610514640808s
epoch 390: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.1185085773468s
epoch 395: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.9645974636078s
epoch 400: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 194.15000343322754s
epoch 405: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 197.71066975593567s
epoch 410: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 202.11406445503235s
epoch 415: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 199.22538661956787s
epoch 420: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 198.1253445148468s
epoch 425: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 201.59573698043823s
epoch 430: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 197.31594157218933s
epoch 435: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 196.49615597724915s
epoch 440: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.07106709480286s
epoch 445: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 204.08786964416504s
epoch 450: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 204.85180068016052s
epoch 455: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 200.9021291732788s
epoch 460: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 201.2033839225769s
epoch 465: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 202.31537342071533s
epoch 470: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 204.97342824935913s
epoch 475: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 202.4925127029419s
epoch 480: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 197.09384894371033s
epoch 485: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 200.21547889709473s
epoch 490: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 195.05057907104492s
epoch 495: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 198.37006855010986s
epoch 500: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 198.15614461898804s
Finished training. Time used = 19800.57912516594.
Training classifier using 80.00% nodes...
{'micro': 0.33666666666666667, 'macro': 0.2696989358221453, 'samples': 0.33666666666666667, 'weighted': 0.2616079677474809, 'accuracy': 0.33666666666666667}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3147.97it/s]100%|██████████| 1000/1000 [00:00<00:00, 4503.94it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f4098826050>
total iter: 500
epoch 5: train_loss: 757.34022; Allocated: 692736; Reserved: 27262976; time used = 5.793625354766846s
epoch 10: train_loss: 165.97817; Allocated: 692736; Reserved: 29360128; time used = 5.995727300643921s
epoch 15: train_loss: 10.48910; Allocated: 692736; Reserved: 29360128; time used = 5.807938814163208s
epoch 20: train_loss: 62.29068; Allocated: 692736; Reserved: 29360128; time used = 5.767762660980225s
epoch 25: train_loss: 65.87732; Allocated: 692736; Reserved: 29360128; time used = 5.755351781845093s
epoch 30: train_loss: 120.37855; Allocated: 692736; Reserved: 29360128; time used = 5.766675710678101s
epoch 35: train_loss: 105.91568; Allocated: 692736; Reserved: 27262976; time used = 5.760384559631348s
epoch 40: train_loss: 22.12783; Allocated: 692736; Reserved: 27262976; time used = 5.799964666366577s
epoch 45: train_loss: 18.46119; Allocated: 692736; Reserved: 29360128; time used = 5.964932918548584s
epoch 50: train_loss: 56.80588; Allocated: 692736; Reserved: 29360128; time used = 5.785277366638184s
epoch 55: train_loss: 60.82359; Allocated: 692736; Reserved: 29360128; time used = 5.788417339324951s
epoch 60: train_loss: 50.99972; Allocated: 692736; Reserved: 29360128; time used = 5.991949558258057s
epoch 65: train_loss: 37.08163; Allocated: 692736; Reserved: 29360128; time used = 5.855539321899414s
epoch 70: train_loss: 17.17556; Allocated: 692736; Reserved: 29360128; time used = 5.806169033050537s
epoch 75: train_loss: 5.75269; Allocated: 692736; Reserved: 27262976; time used = 6.035405158996582s
epoch 80: train_loss: 22.84986; Allocated: 692736; Reserved: 27262976; time used = 5.776398658752441s
epoch 85: train_loss: 4.39686; Allocated: 692736; Reserved: 27262976; time used = 5.776758193969727s
epoch 90: train_loss: 26.75829; Allocated: 692736; Reserved: 29360128; time used = 5.777736186981201s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 115.56901407241821.
Training classifier using 80.00% nodes...
{'micro': 0.7, 'macro': 0.7000000000000001, 'samples': 0.7, 'weighted': 0.7, 'accuracy': 0.7}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f07f6a9b4b0>
total iter: 500
epoch 5: train_loss: 2.35098; Allocated: 994304; Reserved: 6291456; time used = 1.8042163848876953s
epoch 10: train_loss: 1.43362; Allocated: 994304; Reserved: 6291456; time used = 1.5980536937713623s
epoch 15: train_loss: 1.36737; Allocated: 994304; Reserved: 6291456; time used = 1.6168224811553955s
epoch 20: train_loss: 1.33009; Allocated: 994304; Reserved: 6291456; time used = 1.5800197124481201s
epoch 25: train_loss: 1.30909; Allocated: 994304; Reserved: 6291456; time used = 1.5871636867523193s
epoch 30: train_loss: 1.29890; Allocated: 994304; Reserved: 6291456; time used = 1.596754550933838s
epoch 35: train_loss: 1.28795; Allocated: 994304; Reserved: 6291456; time used = 1.6126418113708496s
epoch 40: train_loss: 1.25027; Allocated: 994304; Reserved: 6291456; time used = 1.595435619354248s
epoch 45: train_loss: 1.23196; Allocated: 994304; Reserved: 6291456; time used = 1.5941848754882812s
epoch 50: train_loss: 1.20351; Allocated: 994304; Reserved: 6291456; time used = 1.6120331287384033s
epoch 55: train_loss: 1.19454; Allocated: 994304; Reserved: 6291456; time used = 1.62357497215271s
epoch 60: train_loss: 1.15899; Allocated: 994304; Reserved: 6291456; time used = 1.6077394485473633s
epoch 65: train_loss: 1.17502; Allocated: 994304; Reserved: 6291456; time used = 1.6143314838409424s
epoch 70: train_loss: 1.11520; Allocated: 994304; Reserved: 6291456; time used = 1.591860294342041s
epoch 75: train_loss: 1.12805; Allocated: 994304; Reserved: 6291456; time used = 1.613875389099121s
epoch 80: train_loss: 1.06664; Allocated: 994304; Reserved: 6291456; time used = 1.606480598449707s
epoch 85: train_loss: 1.09266; Allocated: 994304; Reserved: 6291456; time used = 1.6116175651550293s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 31.27198314666748.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.5367121507472385, 'samples': 0.5507246376811594, 'weighted': 0.5425506869697055, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f242655e820>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.53388; Allocated: 866816; Reserved: 2097152; time used = 3.2035117149353027s
epoch 10: train_loss: 0.50658; Allocated: 866816; Reserved: 2097152; time used = 3.1991994380950928s
epoch 15: train_loss: 0.49225; Allocated: 866816; Reserved: 2097152; time used = 3.351395606994629s
epoch 20: train_loss: 0.49437; Allocated: 866816; Reserved: 2097152; time used = 3.1742005348205566s
epoch 25: train_loss: 0.47388; Allocated: 866816; Reserved: 2097152; time used = 3.2388367652893066s
epoch 30: train_loss: 0.47051; Allocated: 866816; Reserved: 2097152; time used = 3.349619150161743s
epoch 35: train_loss: 0.45012; Allocated: 866816; Reserved: 2097152; time used = 3.2451353073120117s
epoch 40: train_loss: 0.45375; Allocated: 866816; Reserved: 2097152; time used = 3.18843412399292s
epoch 45: train_loss: 0.44421; Allocated: 866816; Reserved: 2097152; time used = 3.3054630756378174s
epoch 50: train_loss: 0.44055; Allocated: 866816; Reserved: 2097152; time used = 3.191538095474243s
epoch 55: train_loss: 0.44349; Allocated: 866816; Reserved: 2097152; time used = 3.3381640911102295s
epoch 60: train_loss: 0.43860; Allocated: 866816; Reserved: 2097152; time used = 3.1783361434936523s
epoch 65: train_loss: 0.43883; Allocated: 866816; Reserved: 2097152; time used = 3.188969612121582s
epoch 70: train_loss: 0.43603; Allocated: 866816; Reserved: 2097152; time used = 3.330193042755127s
epoch 75: train_loss: 0.43982; Allocated: 866816; Reserved: 2097152; time used = 3.258110761642456s
epoch 80: train_loss: 0.43467; Allocated: 866816; Reserved: 2097152; time used = 3.156661033630371s
epoch 85: train_loss: 0.43322; Allocated: 866816; Reserved: 2097152; time used = 3.282771110534668s
epoch 90: train_loss: 0.43034; Allocated: 866816; Reserved: 2097152; time used = 3.700401544570923s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 62.93998622894287.
Training classifier using 80.00% nodes...
{'micro': 0.6052631578947368, 'macro': 0.47368421052631576, 'samples': 0.6052631578947368, 'weighted': 0.5152354570637119, 'accuracy': 0.6052631578947368}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fdb3097e0f0>
total iter: 500
epoch 5: train_loss: 0.62695; Allocated: 40826880; Reserved: 65011712; time used = 2.997411012649536s
epoch 10: train_loss: 0.44123; Allocated: 40826880; Reserved: 65011712; time used = 2.812929391860962s
epoch 15: train_loss: 0.41284; Allocated: 40826880; Reserved: 65011712; time used = 2.7672390937805176s
epoch 20: train_loss: 0.42445; Allocated: 40826880; Reserved: 65011712; time used = 2.9466583728790283s
epoch 25: train_loss: 0.41760; Allocated: 40826880; Reserved: 65011712; time used = 2.7627086639404297s
epoch 30: train_loss: 0.42108; Allocated: 40826880; Reserved: 65011712; time used = 2.9190316200256348s
epoch 35: train_loss: 0.40113; Allocated: 40826880; Reserved: 65011712; time used = 2.7723922729492188s
epoch 40: train_loss: 0.40771; Allocated: 40826880; Reserved: 65011712; time used = 2.9638965129852295s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 28.51590609550476.
Training classifier using 20.00% nodes...
{'micro': 0.7532014707746926, 'macro': 0.7566889733052501, 'samples': 0.7532014707746926, 'weighted': 0.7527265762009613, 'accuracy': 0.7532014707746926}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3107.63it/s]100%|██████████| 1000/1000 [00:00<00:00, 4434.27it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f58114ab050>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.42074; Allocated: 839168; Reserved: 8388608; time used = 193.45305180549622s
epoch 10: train_loss: 1.38871; Allocated: 839168; Reserved: 8388608; time used = 194.37121653556824s
epoch 15: train_loss: 1.38780; Allocated: 839168; Reserved: 8388608; time used = 191.8887221813202s
epoch 20: train_loss: 1.38621; Allocated: 839168; Reserved: 8388608; time used = 193.5862843990326s
epoch 25: train_loss: 1.38522; Allocated: 839168; Reserved: 8388608; time used = 191.33963227272034s
epoch 30: train_loss: 1.38221; Allocated: 839168; Reserved: 8388608; time used = 191.2993094921112s
epoch 35: train_loss: 1.36747; Allocated: 839168; Reserved: 8388608; time used = 191.64961528778076s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 1462.3965156078339.
Training classifier using 80.00% nodes...
{'micro': 0.605, 'macro': 0.6038014995360967, 'samples': 0.605, 'weighted': 0.6033656811855864, 'accuracy': 0.605}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f28ecb9b0a0>
total iter: 500
epoch 5: train_loss: 0.70036; Allocated: 724480; Reserved: 29360128; time used = 1.0792551040649414s
epoch 10: train_loss: 0.69808; Allocated: 724480; Reserved: 29360128; time used = 1.0770142078399658s
epoch 15: train_loss: 0.69345; Allocated: 724480; Reserved: 8388608; time used = 1.0838267803192139s
epoch 20: train_loss: 0.69477; Allocated: 724480; Reserved: 8388608; time used = 1.081489086151123s
epoch 25: train_loss: 0.69453; Allocated: 724480; Reserved: 8388608; time used = 1.0816833972930908s
epoch 30: train_loss: 0.69247; Allocated: 724480; Reserved: 8388608; time used = 1.0878610610961914s
epoch 35: train_loss: 0.69657; Allocated: 724480; Reserved: 8388608; time used = 1.0848870277404785s
epoch 40: train_loss: 0.68715; Allocated: 724480; Reserved: 8388608; time used = 1.0812153816223145s
epoch 45: train_loss: 0.67295; Allocated: 724480; Reserved: 8388608; time used = 1.0950379371643066s
epoch 50: train_loss: 0.70496; Allocated: 724480; Reserved: 29360128; time used = 1.0787184238433838s
epoch 55: train_loss: 0.69011; Allocated: 724480; Reserved: 8388608; time used = 1.0875537395477295s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15.442121267318726.
Training classifier using 80.00% nodes...
{'micro': 0.5789473684210527, 'macro': 0.3666666666666667, 'samples': 0.5789473684210527, 'weighted': 0.4245614035087719, 'accuracy': 0.5789473684210527}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f97f07cd3c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 253, in main
    res = task.evaluate(model, res, graph)  # evaluate
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/unsupervised_node_classification.py", line 39, in evaluate
    return self._classify(graph, res, 0)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/unsupervised_node_classification.py", line 46, in _classify
    return clf.train_and_evaluate(graph, self.train_kwargs()['clf_ratio'], seed=seed)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/classify.py", line 80, in train_and_evaluate
    self.train(X_train, Y_train, graph.labels()[1])
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/classify.py", line 50, in train
    self.clf.fit(X_train, Y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/multiclass.py", line 239, in fit
    for i, column in enumerate(columns))
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 1004, in __call__
    if self.dispatch_one_batch(iterator):
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 835, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 754, in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py", line 209, in apply_async
    result = ImmediateResult(func)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/_parallel_backends.py", line 590, in __init__
    self.results = batch()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 256, in __call__
    for func, args, kwargs in self.items]
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/joblib/parallel.py", line 256, in <listcomp>
    for func, args, kwargs in self.items]
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/multiclass.py", line 79, in _fit_binary
    estimator.fit(X, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/linear_model/_logistic.py", line 2004, in fit
    accept_large_sparse=solver != 'liblinear')
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 755, in check_X_y
    estimator=estimator)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 578, in check_array
    allow_nan=force_all_finite == 'allow-nan')
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/sklearn/utils/validation.py", line 60, in _assert_all_finite
    msg_dtype if msg_dtype is not None else X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f9ec7bfaf00>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.43654; Allocated: 41627648; Reserved: 65011712; time used = 4.144286155700684s
epoch 10: train_loss: 0.40641; Allocated: 41627648; Reserved: 65011712; time used = 3.826000690460205s
epoch 15: train_loss: 0.38155; Allocated: 41627648; Reserved: 65011712; time used = 4.02397346496582s
epoch 20: train_loss: 0.39526; Allocated: 41627648; Reserved: 65011712; time used = 3.939279317855835s
epoch 25: train_loss: 0.35675; Allocated: 41627648; Reserved: 65011712; time used = 3.868697166442871s
epoch 30: train_loss: 0.26083; Allocated: 41627648; Reserved: 65011712; time used = 4.103399753570557s
epoch 35: train_loss: 0.23809; Allocated: 41627648; Reserved: 65011712; time used = 4.075831890106201s
epoch 40: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9537553787231445s
epoch 45: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.976930856704712s
epoch 50: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9173827171325684s
epoch 55: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.139222860336304s
epoch 60: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.804600477218628s
epoch 65: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.04498028755188s
epoch 70: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.947301149368286s
epoch 75: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.145640850067139s
epoch 80: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.888592481613159s
epoch 85: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.085512161254883s
epoch 90: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.825331449508667s
epoch 95: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.066223382949829s
epoch 100: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.0491108894348145s
epoch 105: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9266819953918457s
epoch 110: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.0739452838897705s
epoch 115: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9188005924224854s
epoch 120: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.980316400527954s
epoch 125: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.000823020935059s
epoch 130: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.878596544265747s
epoch 135: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.965547561645508s
epoch 140: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.109024286270142s
epoch 145: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.019965648651123s
epoch 150: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.973027229309082s
epoch 155: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.8898584842681885s
epoch 160: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.126690626144409s
epoch 165: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.8863444328308105s
epoch 170: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.1765055656433105s
epoch 175: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.970874309539795s
epoch 180: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.0130908489227295s
epoch 185: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.829392671585083s
epoch 190: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.064164638519287s
epoch 195: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.059967756271362s
epoch 200: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9098801612854004s
epoch 205: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.858574151992798s
epoch 210: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.977752208709717s
epoch 215: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.121911287307739s
epoch 220: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.880814790725708s
epoch 225: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9338724613189697s
epoch 230: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.103506803512573s
epoch 235: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9361977577209473s
epoch 240: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.064273834228516s
epoch 245: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.899343252182007s
epoch 250: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9069361686706543s
epoch 255: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.966709613800049s
epoch 260: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.911745548248291s
epoch 265: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.002471208572388s
epoch 270: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9576470851898193s
epoch 275: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.114948272705078s
epoch 280: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9323184490203857s
epoch 285: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9601540565490723s
epoch 290: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.067012786865234s
epoch 295: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.099788188934326s
epoch 300: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.040367603302002s
epoch 305: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.100878715515137s
epoch 310: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9732465744018555s
epoch 315: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.193685531616211s
epoch 320: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9593117237091064s
epoch 325: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.935861587524414s
epoch 330: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.02237343788147s
epoch 335: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.890089988708496s
epoch 340: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9987165927886963s
epoch 345: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.039288282394409s
epoch 350: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.066785097122192s
epoch 355: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.073199510574341s
epoch 360: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.8973388671875s
epoch 365: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.127126693725586s
epoch 370: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.91644287109375s
epoch 375: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.094637155532837s
epoch 380: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.890669584274292s
epoch 385: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.031022787094116s
epoch 390: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.810704469680786s
epoch 395: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.8644094467163086s
epoch 400: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.071976900100708s
epoch 405: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.8899319171905518s
epoch 410: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.070645093917847s
epoch 415: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.8817384243011475s
epoch 420: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.005671501159668s
epoch 425: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9361684322357178s
epoch 430: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.077280759811401s
epoch 435: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.8990156650543213s
epoch 440: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.982666254043579s
epoch 445: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.101224422454834s
epoch 450: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9386184215545654s
epoch 455: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.05823016166687s
epoch 460: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9429163932800293s
epoch 465: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.088302850723267s
epoch 470: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.866795539855957s
epoch 475: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.9561917781829834s
epoch 480: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.042527675628662s
epoch 485: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.892892837524414s
epoch 490: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.045240879058838s
epoch 495: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 3.972257137298584s
epoch 500: train_loss: nan; Allocated: 41627648; Reserved: 65011712; time used = 4.08406662940979s
Finished training. Time used = 403.0584876537323.
Training classifier using 20.00% nodes...
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fdc4409e640>
total iter: 500
epoch 5: train_loss: 0.63891; Allocated: 920064; Reserved: 10485760; time used = 1.5347073078155518s
epoch 10: train_loss: 0.61803; Allocated: 920064; Reserved: 10485760; time used = 1.4849739074707031s
epoch 15: train_loss: 0.57247; Allocated: 920064; Reserved: 10485760; time used = 1.5035650730133057s
epoch 20: train_loss: 0.56615; Allocated: 920064; Reserved: 10485760; time used = 1.4873323440551758s
epoch 25: train_loss: 0.54854; Allocated: 920064; Reserved: 10485760; time used = 1.493654489517212s
epoch 30: train_loss: 0.54865; Allocated: 920064; Reserved: 10485760; time used = 1.5100760459899902s
epoch 35: train_loss: 0.53834; Allocated: 920064; Reserved: 10485760; time used = 1.4942491054534912s
epoch 40: train_loss: 0.54357; Allocated: 920064; Reserved: 10485760; time used = 1.4930815696716309s
epoch 45: train_loss: 0.54491; Allocated: 920064; Reserved: 10485760; time used = 1.494189977645874s
epoch 50: train_loss: 0.54959; Allocated: 920064; Reserved: 10485760; time used = 1.4981019496917725s
epoch 55: train_loss: 0.55037; Allocated: 920064; Reserved: 10485760; time used = 1.4953887462615967s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19.62535333633423.
Training classifier using 80.00% nodes...
{'micro': 0.5797101449275363, 'macro': 0.5490196078431372, 'samples': 0.5797101449275363, 'weighted': 0.557544757033248, 'accuracy': 0.5797101449275363}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3146.91it/s]100%|██████████| 1500/1500 [00:00<00:00, 5632.67it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fbebc7ee050>
head 0
total iter: 500
epoch 5: train_loss: 1.58810; Allocated: 428544; Reserved: 4194304; time used = 195.7581171989441s
epoch 10: train_loss: 1.42020; Allocated: 428544; Reserved: 6291456; time used = 194.85892820358276s
epoch 15: train_loss: 1.38506; Allocated: 428544; Reserved: 6291456; time used = 196.01948428153992s
epoch 20: train_loss: 1.39241; Allocated: 428544; Reserved: 8388608; time used = 197.9646439552307s
epoch 25: train_loss: 1.38208; Allocated: 428544; Reserved: 6291456; time used = 194.09028387069702s
epoch 30: train_loss: 1.37941; Allocated: 428544; Reserved: 6291456; time used = 194.14357900619507s
epoch 35: train_loss: 1.37698; Allocated: 428544; Reserved: 4194304; time used = 193.78947496414185s
epoch 40: train_loss: 1.37390; Allocated: 428544; Reserved: 4194304; time used = 191.49998259544373s
epoch 45: train_loss: 1.37247; Allocated: 428544; Reserved: 6291456; time used = 196.41903567314148s
epoch 50: train_loss: 1.36986; Allocated: 428544; Reserved: 4194304; time used = 195.45446968078613s
epoch 55: train_loss: 1.36836; Allocated: 428544; Reserved: 6291456; time used = 198.36625337600708s
epoch 60: train_loss: 1.36769; Allocated: 428544; Reserved: 6291456; time used = 197.43135333061218s
epoch 65: train_loss: 1.36644; Allocated: 428544; Reserved: 4194304; time used = 198.20526838302612s
epoch 70: train_loss: 1.36602; Allocated: 428544; Reserved: 6291456; time used = 195.18227195739746s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2900.3777599334717.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1632996632996633, 'samples': 0.3233333333333333, 'weighted': 0.1584006734006734, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2847.66it/s] 83%|████████▎ | 1651/2000 [00:00<00:00, 3650.78it/s]100%|██████████| 2000/2000 [00:00<00:00, 5930.84it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4d8ffc20f0>
total iter: 500
epoch 5: train_loss: 1.39298; Allocated: 3842560; Reserved: 31457280; time used = 1149.0952475070953s
epoch 10: train_loss: 1.38893; Allocated: 3842560; Reserved: 31457280; time used = 1128.5443704128265s
epoch 15: train_loss: 1.38709; Allocated: 3842560; Reserved: 33554432; time used = 1122.4346628189087s
epoch 20: train_loss: 1.38663; Allocated: 3842560; Reserved: 33554432; time used = 1126.497190952301s
epoch 25: train_loss: 1.38648; Allocated: 3842560; Reserved: 33554432; time used = 1129.1031777858734s
epoch 30: train_loss: 1.38639; Allocated: 3842560; Reserved: 31457280; time used = 1127.9325799942017s
epoch 35: train_loss: 1.38634; Allocated: 3842560; Reserved: 31457280; time used = 1122.1766929626465s
epoch 40: train_loss: 1.38632; Allocated: 3842560; Reserved: 31457280; time used = 1123.2008650302887s
epoch 45: train_loss: 1.38631; Allocated: 3842560; Reserved: 31457280; time used = 1131.0133562088013s
epoch 50: train_loss: 1.38630; Allocated: 3842560; Reserved: 33554432; time used = 1129.8885233402252s
epoch 55: train_loss: 1.38630; Allocated: 3842560; Reserved: 31457280; time used = 1132.745252609253s
epoch 60: train_loss: 1.38630; Allocated: 3842560; Reserved: 31457280; time used = 1129.6441593170166s
epoch 65: train_loss: 1.38630; Allocated: 3842560; Reserved: 33554432; time used = 1129.8469910621643s
epoch 70: train_loss: 1.38630; Allocated: 3842560; Reserved: 31457280; time used = 1126.7251648902893s
epoch 75: train_loss: 1.38630; Allocated: 3842560; Reserved: 33554432; time used = 1121.8183052539825s
epoch 80: train_loss: 1.38629; Allocated: 3842560; Reserved: 31457280; time used = 1132.2303674221039s
epoch 85: train_loss: 1.38629; Allocated: 3842560; Reserved: 33554432; time used = 1134.5071227550507s
epoch 90: train_loss: 1.38629; Allocated: 3842560; Reserved: 31457280; time used = 1132.4904837608337s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 20787.999826431274.
Training classifier using 80.00% nodes...
{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3087.15it/s]100%|██████████| 1000/1000 [00:00<00:00, 4421.67it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f9f990300f0>
total iter: 500
epoch 5: train_loss: 0.69306; Allocated: 642560; Reserved: 10485760; time used = 52.31153964996338s
epoch 10: train_loss: 0.68871; Allocated: 642560; Reserved: 8388608; time used = 52.443788290023804s
epoch 15: train_loss: 0.69312; Allocated: 642560; Reserved: 10485760; time used = 52.13086414337158s
epoch 20: train_loss: 0.69313; Allocated: 642560; Reserved: 10485760; time used = 52.280813455581665s
epoch 25: train_loss: 0.69311; Allocated: 642560; Reserved: 8388608; time used = 52.292052268981934s
epoch 30: train_loss: 0.69282; Allocated: 642560; Reserved: 10485760; time used = 52.50800395011902s
epoch 35: train_loss: 0.68892; Allocated: 642560; Reserved: 8388608; time used = 52.21912169456482s
epoch 40: train_loss: 0.67649; Allocated: 642560; Reserved: 8388608; time used = 52.033935546875s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 442.0051107406616.
Training classifier using 80.00% nodes...
{'micro': 0.685, 'macro': 0.6849921248031201, 'samples': 0.685, 'weighted': 0.6850236255906398, 'accuracy': 0.685}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fcdbe6da370>
head 0
total iter: 500
epoch 5: train_loss: 0.67708; Allocated: 57211904; Reserved: 113246208; time used = 4.80719256401062s
epoch 10: train_loss: 0.54362; Allocated: 57211904; Reserved: 113246208; time used = 4.956317663192749s
epoch 15: train_loss: 0.30112; Allocated: 57211904; Reserved: 113246208; time used = 4.828590631484985s
epoch 20: train_loss: 0.20291; Allocated: 57211904; Reserved: 113246208; time used = 4.812953233718872s
epoch 25: train_loss: 0.13387; Allocated: 57211904; Reserved: 113246208; time used = 4.92387056350708s
epoch 30: train_loss: 0.19105; Allocated: 57211904; Reserved: 113246208; time used = 4.805524826049805s
epoch 35: train_loss: 0.06978; Allocated: 57211904; Reserved: 113246208; time used = 4.967399835586548s
epoch 40: train_loss: 0.02201; Allocated: 57211904; Reserved: 113246208; time used = 4.79110860824585s
epoch 45: train_loss: 0.03817; Allocated: 57211904; Reserved: 113246208; time used = 4.797813415527344s
epoch 50: train_loss: 0.00345; Allocated: 57211904; Reserved: 113246208; time used = 4.793298959732056s
epoch 55: train_loss: 0.02513; Allocated: 57211904; Reserved: 113246208; time used = 4.928167819976807s
epoch 60: train_loss: 0.02431; Allocated: 57211904; Reserved: 113246208; time used = 4.802314281463623s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 62.492469787597656.
Training classifier using 20.00% nodes...
{'micro': 0.48884758364312264, 'macro': 0.4074369482303594, 'samples': 0.4939894815927874, 'weighted': 0.46100663588682994, 'accuracy': 0.4939894815927874}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3032.93it/s] 82%|████████▏ | 1648/2000 [00:00<00:00, 3861.11it/s]100%|██████████| 2000/2000 [00:00<00:00, 6156.96it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f8534764140>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.63663; Allocated: 4196864; Reserved: 33554432; time used = 863.8614230155945s
epoch 10: train_loss: 0.61898; Allocated: 4196864; Reserved: 31457280; time used = 867.1455435752869s
epoch 15: train_loss: 0.57552; Allocated: 4196864; Reserved: 33554432; time used = 875.4611976146698s
epoch 20: train_loss: 0.56029; Allocated: 4196864; Reserved: 31457280; time used = 881.5390191078186s
epoch 25: train_loss: 0.53508; Allocated: 4196864; Reserved: 35651584; time used = 870.4385614395142s
epoch 30: train_loss: 0.55704; Allocated: 4196864; Reserved: 33554432; time used = 860.269439458847s
epoch 35: train_loss: 0.52504; Allocated: 4196864; Reserved: 33554432; time used = 848.7707014083862s
epoch 40: train_loss: 0.51584; Allocated: 4196864; Reserved: 33554432; time used = 842.7072017192841s
epoch 45: train_loss: 0.50255; Allocated: 4196864; Reserved: 31457280; time used = 857.6639785766602s
epoch 50: train_loss: 0.49493; Allocated: 4196864; Reserved: 31457280; time used = 867.7934591770172s
epoch 55: train_loss: 0.49799; Allocated: 4196864; Reserved: 31457280; time used = 855.6342277526855s
epoch 60: train_loss: 0.48933; Allocated: 4196864; Reserved: 31457280; time used = 856.4888505935669s
epoch 65: train_loss: 0.49234; Allocated: 4196864; Reserved: 31457280; time used = 843.2491309642792s
epoch 70: train_loss: 0.48663; Allocated: 4196864; Reserved: 33554432; time used = 854.5588536262512s
epoch 75: train_loss: 0.48380; Allocated: 4196864; Reserved: 33554432; time used = 848.8465073108673s
epoch 80: train_loss: 0.47999; Allocated: 4196864; Reserved: 33554432; time used = 847.7423117160797s
epoch 85: train_loss: 0.47821; Allocated: 4196864; Reserved: 33554432; time used = 846.9429039955139s
epoch 90: train_loss: 0.47531; Allocated: 4196864; Reserved: 31457280; time used = 846.6611270904541s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 15954.294166326523.
Training classifier using 80.00% nodes...
{'micro': 0.7475, 'macro': 0.7474605407094859, 'samples': 0.7475, 'weighted': 0.7473658384122518, 'accuracy': 0.7475}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7ff71c8acd70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fa60b98b410>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fbaa6880fa0>
total iter: 500
epoch 5: train_loss: 1.34276; Allocated: 40894464; Reserved: 62914560; time used = 2.2851202487945557s
epoch 10: train_loss: 1.20205; Allocated: 40894464; Reserved: 62914560; time used = 2.483064651489258s
epoch 15: train_loss: 1.11245; Allocated: 40894464; Reserved: 62914560; time used = 2.3869528770446777s
epoch 20: train_loss: 1.05882; Allocated: 40894464; Reserved: 62914560; time used = 2.3004720211029053s
epoch 25: train_loss: 1.09605; Allocated: 40894464; Reserved: 62914560; time used = 2.3072738647460938s
epoch 30: train_loss: 1.05280; Allocated: 40894464; Reserved: 62914560; time used = 2.3310508728027344s
epoch 35: train_loss: 1.05166; Allocated: 40894464; Reserved: 62914560; time used = 2.3602538108825684s
epoch 40: train_loss: 1.05329; Allocated: 40894464; Reserved: 62914560; time used = 2.325881004333496s
epoch 45: train_loss: 1.05234; Allocated: 40894464; Reserved: 62914560; time used = 2.4836511611938477s
epoch 50: train_loss: 1.00895; Allocated: 40894464; Reserved: 62914560; time used = 2.265068531036377s
epoch 55: train_loss: 0.98465; Allocated: 40894464; Reserved: 62914560; time used = 2.2773897647857666s
epoch 60: train_loss: 0.99769; Allocated: 40894464; Reserved: 62914560; time used = 2.3512649536132812s
epoch 65: train_loss: 0.99944; Allocated: 40894464; Reserved: 62914560; time used = 2.4073588848114014s
epoch 70: train_loss: 0.92818; Allocated: 40894464; Reserved: 62914560; time used = 2.3077409267425537s
epoch 75: train_loss: 0.85953; Allocated: 40894464; Reserved: 62914560; time used = 2.3154478073120117s
epoch 80: train_loss: 0.82632; Allocated: 40894464; Reserved: 62914560; time used = 2.5531442165374756s
epoch 85: train_loss: 0.79628; Allocated: 40894464; Reserved: 62914560; time used = 2.356161594390869s
epoch 90: train_loss: 0.77136; Allocated: 40894464; Reserved: 62914560; time used = 2.4014804363250732s
epoch 95: train_loss: 0.78688; Allocated: 40894464; Reserved: 62914560; time used = 2.4639132022857666s
epoch 100: train_loss: 0.75716; Allocated: 40894464; Reserved: 62914560; time used = 2.331299066543579s
epoch 105: train_loss: 0.74400; Allocated: 40894464; Reserved: 62914560; time used = 2.3435261249542236s
epoch 110: train_loss: 0.70157; Allocated: 40894464; Reserved: 62914560; time used = 2.5307257175445557s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 57.21474289894104.
Training classifier using 20.00% nodes...
{'micro': 0.7698110815265627, 'macro': 0.7745219478707935, 'samples': 0.7698110815265627, 'weighted': 0.7693993691549601, 'accuracy': 0.7698110815265627}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3129.72it/s] 82%|████████▏ | 1642/2000 [00:00<00:00, 3968.08it/s]100%|██████████| 2000/2000 [00:00<00:00, 6259.61it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa1c4dfd140>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.71681594848633s
epoch 10: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.54404735565186s
epoch 15: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 79.55492949485779s
epoch 20: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.18757486343384s
epoch 25: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 77.39558243751526s
epoch 30: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.49070334434509s
epoch 35: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.50058460235596s
epoch 40: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.41045832633972s
epoch 45: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 82.75263524055481s
epoch 50: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 82.68332767486572s
epoch 55: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 86.02805733680725s
epoch 60: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.07575750350952s
epoch 65: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.26657295227051s
epoch 70: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.99930095672607s
epoch 75: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.22883462905884s
epoch 80: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.43376016616821s
epoch 85: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.06614208221436s
epoch 90: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.25108194351196s
epoch 95: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.08124780654907s
epoch 100: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.31640911102295s
epoch 105: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.12363123893738s
epoch 110: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.41852116584778s
epoch 115: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 82.34295082092285s
epoch 120: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.47468495368958s
epoch 125: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.91799664497375s
epoch 130: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 77.92381954193115s
epoch 135: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.32935070991516s
epoch 140: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.89559650421143s
epoch 145: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.77359342575073s
epoch 150: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.4153516292572s
epoch 155: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 80.8075122833252s
epoch 160: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.5109133720398s
epoch 165: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.64134287834167s
epoch 170: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 80.81560683250427s
epoch 175: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 82.7261552810669s
epoch 180: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.82953405380249s
epoch 185: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.38913750648499s
epoch 190: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.39315056800842s
epoch 195: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 86.07733225822449s
epoch 200: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.44869756698608s
epoch 205: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 86.2361068725586s
epoch 210: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 77.4071524143219s
epoch 215: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 82.13307023048401s
epoch 220: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.90941333770752s
epoch 225: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 86.2600200176239s
epoch 230: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.98425650596619s
epoch 235: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 82.26817965507507s
epoch 240: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.64457130432129s
epoch 245: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.4327781200409s
epoch 250: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 77.48569321632385s
epoch 255: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 82.52616500854492s
epoch 260: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.88110303878784s
epoch 265: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.987459897995s
epoch 270: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.70077133178711s
epoch 275: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.61658835411072s
epoch 280: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.42947793006897s
epoch 285: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.1497642993927s
epoch 290: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 86.04157948493958s
epoch 295: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.96490740776062s
epoch 300: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.85053753852844s
epoch 305: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 78.20128345489502s
epoch 310: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 76.63594317436218s
epoch 315: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 80.00927591323853s
epoch 320: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 79.83612537384033s
epoch 325: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 80.01690602302551s
epoch 330: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 82.90461206436157s
epoch 335: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 78.3109724521637s
epoch 340: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 80.39464068412781s
epoch 345: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 80.32483911514282s
epoch 350: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.39023947715759s
epoch 355: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.46753859519958s
epoch 360: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 79.71607065200806s
epoch 365: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 86.08746480941772s
epoch 370: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.7312650680542s
epoch 375: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.6448962688446s
epoch 380: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 86.04066753387451s
epoch 385: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 80.37565660476685s
epoch 390: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.17985248565674s
epoch 395: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.12330365180969s
epoch 400: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.02361106872559s
epoch 405: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.8362672328949s
epoch 410: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.77638459205627s
epoch 415: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.0836591720581s
epoch 420: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.756432056427s
epoch 425: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.23589777946472s
epoch 430: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.7587661743164s
epoch 435: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.43196868896484s
epoch 440: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.86391711235046s
epoch 445: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.50939345359802s
epoch 450: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.09161591529846s
epoch 455: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.94316458702087s
epoch 460: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.52961707115173s
epoch 465: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.91824340820312s
epoch 470: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 85.04638814926147s
epoch 475: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 81.80689787864685s
epoch 480: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 82.03652811050415s
epoch 485: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 84.02130007743835s
epoch 490: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.39599013328552s
epoch 495: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 83.93064832687378s
epoch 500: train_loss: 0.69315; Allocated: 4130816; Reserved: 31457280; time used = 82.43937110900879s
Finished training. Time used = 8314.961302757263.
Training classifier using 80.00% nodes...
{'micro': 0.5025, 'macro': 0.36335788724396345, 'samples': 0.5025, 'weighted': 0.3544289816125601, 'accuracy': 0.5025}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f62af43be60>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2937.89it/s] 82%|████████▏ | 1641/2000 [00:00<00:00, 3750.58it/s]100%|██████████| 2000/2000 [00:00<00:00, 6024.34it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fc79a888140>
total iter: 500
epoch 5: train_loss: 0.68847; Allocated: 3983360; Reserved: 29360128; time used = 810.5098116397858s
epoch 10: train_loss: 0.64605; Allocated: 3983360; Reserved: 29360128; time used = 805.5007286071777s
epoch 15: train_loss: 0.58562; Allocated: 3983360; Reserved: 29360128; time used = 810.9336094856262s
epoch 20: train_loss: 0.43382; Allocated: 3983360; Reserved: 29360128; time used = 827.8688781261444s
epoch 25: train_loss: 0.42239; Allocated: 3983360; Reserved: 29360128; time used = 816.9074165821075s
epoch 30: train_loss: 0.20820; Allocated: 3983360; Reserved: 31457280; time used = 819.3424179553986s
epoch 35: train_loss: 0.14069; Allocated: 3983360; Reserved: 31457280; time used = 815.7153189182281s
epoch 40: train_loss: 0.13303; Allocated: 3983360; Reserved: 33554432; time used = 815.5238480567932s
epoch 45: train_loss: 0.10987; Allocated: 3983360; Reserved: 31457280; time used = 815.282509803772s
epoch 50: train_loss: 0.13176; Allocated: 3983360; Reserved: 31457280; time used = 816.6187219619751s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8321.405150175095.
Training classifier using 80.00% nodes...
{'micro': 0.7, 'macro': 0.6935570366965449, 'samples': 0.7, 'weighted': 0.6922240098061748, 'accuracy': 0.7}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb9acf98140>
total iter: 500
epoch 5: train_loss: 1.38354; Allocated: 909312; Reserved: 4194304; time used = 0.8322281837463379s
epoch 10: train_loss: 1.37543; Allocated: 909312; Reserved: 6291456; time used = 0.8375368118286133s
epoch 15: train_loss: 1.36737; Allocated: 909312; Reserved: 4194304; time used = 0.8400061130523682s
epoch 20: train_loss: 1.37007; Allocated: 909312; Reserved: 4194304; time used = 0.8333439826965332s
epoch 25: train_loss: 1.37150; Allocated: 909312; Reserved: 4194304; time used = 0.8447287082672119s
epoch 30: train_loss: 1.36856; Allocated: 909312; Reserved: 4194304; time used = 0.8312046527862549s
epoch 35: train_loss: 1.37085; Allocated: 909312; Reserved: 4194304; time used = 0.9787273406982422s
epoch 40: train_loss: 1.37097; Allocated: 909312; Reserved: 4194304; time used = 0.8385989665985107s
epoch 45: train_loss: 1.37278; Allocated: 909312; Reserved: 4194304; time used = 0.8468656539916992s
epoch 50: train_loss: 1.36983; Allocated: 909312; Reserved: 4194304; time used = 0.8350887298583984s
epoch 55: train_loss: 1.37152; Allocated: 909312; Reserved: 4194304; time used = 0.8390333652496338s
epoch 60: train_loss: 1.37168; Allocated: 909312; Reserved: 4194304; time used = 0.842980146408081s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 14.043267250061035.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.45526315789473687, 'samples': 0.5652173913043478, 'weighted': 0.47299771167048055, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 584/1000 [00:00<00:00, 3130.97it/s]100%|██████████| 1000/1000 [00:00<00:00, 4480.90it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f3e43a2b050>
head 0
total iter: 500
epoch 5: train_loss: 1.58740; Allocated: 429568; Reserved: 10485760; time used = 11.378414154052734s
epoch 10: train_loss: 1.41793; Allocated: 429568; Reserved: 8388608; time used = 11.310014963150024s
epoch 15: train_loss: 1.38452; Allocated: 429568; Reserved: 8388608; time used = 11.441709756851196s
epoch 20: train_loss: 1.38991; Allocated: 429568; Reserved: 8388608; time used = 11.451786518096924s
epoch 25: train_loss: 1.38159; Allocated: 429568; Reserved: 8388608; time used = 11.194926738739014s
epoch 30: train_loss: 1.37796; Allocated: 429568; Reserved: 10485760; time used = 11.434596061706543s
epoch 35: train_loss: 1.37614; Allocated: 429568; Reserved: 8388608; time used = 11.49432635307312s
epoch 40: train_loss: 1.37356; Allocated: 429568; Reserved: 8388608; time used = 11.167446851730347s
epoch 45: train_loss: 1.37211; Allocated: 429568; Reserved: 8388608; time used = 11.420843362808228s
epoch 50: train_loss: 1.36874; Allocated: 429568; Reserved: 8388608; time used = 11.477994203567505s
epoch 55: train_loss: 1.36697; Allocated: 429568; Reserved: 8388608; time used = 11.35578441619873s
epoch 60: train_loss: 1.36494; Allocated: 429568; Reserved: 8388608; time used = 11.549723386764526s
epoch 65: train_loss: 1.36348; Allocated: 429568; Reserved: 8388608; time used = 11.511088132858276s
epoch 70: train_loss: 1.36470; Allocated: 429568; Reserved: 8388608; time used = 11.419727087020874s
epoch 75: train_loss: 1.36580; Allocated: 429568; Reserved: 8388608; time used = 11.571924209594727s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 176.84005761146545.
Training classifier using 80.00% nodes...
{'micro': 0.52, 'macro': 0.5151515151515151, 'samples': 0.52, 'weighted': 0.5141818181818182, 'accuracy': 0.52}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 2961.12it/s]100%|██████████| 1500/1500 [00:00<00:00, 5369.38it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f3511fbf320>
total iter: 500
epoch 5: train_loss: 57199.89526; Allocated: 895488; Reserved: 14680064; time used = 8.116214990615845s
epoch 10: train_loss: 4035.52731; Allocated: 895488; Reserved: 14680064; time used = 7.904006481170654s
epoch 15: train_loss: 4665.24692; Allocated: 895488; Reserved: 14680064; time used = 7.762562036514282s
epoch 20: train_loss: 2131.59612; Allocated: 895488; Reserved: 14680064; time used = 7.919995307922363s
epoch 25: train_loss: 2833.91454; Allocated: 895488; Reserved: 14680064; time used = 8.105615854263306s
epoch 30: train_loss: 701.88178; Allocated: 895488; Reserved: 14680064; time used = 7.884730339050293s
epoch 35: train_loss: 337.54839; Allocated: 895488; Reserved: 14680064; time used = 7.904792547225952s
epoch 40: train_loss: 1639.24494; Allocated: 895488; Reserved: 14680064; time used = 7.893672943115234s
epoch 45: train_loss: 927.34644; Allocated: 895488; Reserved: 14680064; time used = 8.025965690612793s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 78.18490695953369.
Training classifier using 80.00% nodes...
{'micro': 0.4633333333333333, 'macro': 0.45572905589034624, 'samples': 0.4633333333333333, 'weighted': 0.45200004135649297, 'accuracy': 0.4633333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f01e4322eb0>
total iter: 500
epoch 5: train_loss: 0.63311; Allocated: 17527296; Reserved: 46137344; time used = 3.3003458976745605s
epoch 10: train_loss: 0.48037; Allocated: 17527296; Reserved: 46137344; time used = 3.2760725021362305s
epoch 15: train_loss: 0.26251; Allocated: 17527296; Reserved: 46137344; time used = 3.4646623134613037s
epoch 20: train_loss: 0.22486; Allocated: 17527296; Reserved: 46137344; time used = 3.238649845123291s
epoch 25: train_loss: 0.14045; Allocated: 17527296; Reserved: 46137344; time used = 3.2876768112182617s
epoch 30: train_loss: 0.11092; Allocated: 17527296; Reserved: 46137344; time used = 3.260183095932007s
epoch 35: train_loss: 0.07711; Allocated: 17527296; Reserved: 46137344; time used = 3.2368834018707275s
epoch 40: train_loss: 0.15360; Allocated: 17527296; Reserved: 46137344; time used = 3.2694475650787354s
epoch 45: train_loss: 0.10532; Allocated: 17527296; Reserved: 46137344; time used = 3.3449718952178955s
epoch 50: train_loss: 0.06133; Allocated: 17527296; Reserved: 46137344; time used = 3.242652416229248s
epoch 55: train_loss: 0.11031; Allocated: 17527296; Reserved: 46137344; time used = 3.304577350616455s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 42.089274168014526.
Training classifier using 20.00% nodes...
{'micro': 0.29487771112136596, 'macro': 0.06506465736686692, 'samples': 0.29487771112136596, 'weighted': 0.13430282067466348, 'accuracy': 0.29487771112136596}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fe78ea9d370>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.41595; Allocated: 57689088; Reserved: 297795584; time used = 2.7708656787872314s
epoch 10: train_loss: 1.39410; Allocated: 57689088; Reserved: 297795584; time used = 2.7730822563171387s
epoch 15: train_loss: 1.38943; Allocated: 57689088; Reserved: 297795584; time used = 2.7066988945007324s
epoch 20: train_loss: 1.38851; Allocated: 57689088; Reserved: 297795584; time used = 2.7194905281066895s
epoch 25: train_loss: 1.38766; Allocated: 57689088; Reserved: 297795584; time used = 2.731210947036743s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 26.043657302856445.
Training classifier using 20.00% nodes...
{'micro': 0.19442379182156136, 'macro': 0.05473574045002617, 'samples': 0.19646882043576258, 'weighted': 0.06486433290490261, 'accuracy': 0.19646882043576258}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 2914.60it/s] 82%|████████▎ | 1650/2000 [00:00<00:00, 3727.20it/s]100%|██████████| 2000/2000 [00:00<00:00, 6011.04it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7feab927e140>
total iter: 500
epoch 5: train_loss: 419.08283; Allocated: 4058624; Reserved: 31457280; time used = 68.45032286643982s
epoch 10: train_loss: 230.75745; Allocated: 4058624; Reserved: 31457280; time used = 68.82550072669983s
epoch 15: train_loss: 142.43648; Allocated: 4058624; Reserved: 31457280; time used = 67.60148692131042s
epoch 20: train_loss: 48.55051; Allocated: 4058624; Reserved: 31457280; time used = 64.68117237091064s
epoch 25: train_loss: 28.94412; Allocated: 4058624; Reserved: 31457280; time used = 63.703012466430664s
epoch 30: train_loss: 22.78717; Allocated: 4058624; Reserved: 31457280; time used = 64.98980355262756s
epoch 35: train_loss: 32.41226; Allocated: 4058624; Reserved: 31457280; time used = 64.38411235809326s
epoch 40: train_loss: 28.49559; Allocated: 4058624; Reserved: 31457280; time used = 65.12391209602356s
epoch 45: train_loss: 29.70664; Allocated: 4058624; Reserved: 31457280; time used = 63.52181792259216s
epoch 50: train_loss: 13.86156; Allocated: 4058624; Reserved: 31457280; time used = 63.78658103942871s
epoch 55: train_loss: 1.47093; Allocated: 4058624; Reserved: 31457280; time used = 63.211037397384644s
epoch 60: train_loss: 7.01987; Allocated: 4058624; Reserved: 31457280; time used = 65.0321683883667s
epoch 65: train_loss: 29.99980; Allocated: 4058624; Reserved: 31457280; time used = 62.935739517211914s
epoch 70: train_loss: 18.84896; Allocated: 4058624; Reserved: 31457280; time used = 63.15879440307617s
epoch 75: train_loss: 17.27154; Allocated: 4058624; Reserved: 31457280; time used = 61.60667705535889s
epoch 80: train_loss: 22.48836; Allocated: 4058624; Reserved: 31457280; time used = 62.685858488082886s
epoch 85: train_loss: 19.50157; Allocated: 4058624; Reserved: 31457280; time used = 63.527034521102905s
epoch 90: train_loss: 19.86234; Allocated: 4058624; Reserved: 31457280; time used = 64.85469841957092s
epoch 95: train_loss: 17.96185; Allocated: 4058624; Reserved: 31457280; time used = 64.06352210044861s
epoch 100: train_loss: 2.68487; Allocated: 4058624; Reserved: 31457280; time used = 65.43850016593933s
epoch 105: train_loss: 38.55938; Allocated: 4058624; Reserved: 31457280; time used = 62.02799201011658s
epoch 110: train_loss: 39.55519; Allocated: 4058624; Reserved: 31457280; time used = 63.96191048622131s
epoch 115: train_loss: 21.04975; Allocated: 4058624; Reserved: 31457280; time used = 65.47896409034729s
epoch 120: train_loss: 79.24064; Allocated: 4058624; Reserved: 31457280; time used = 63.70761442184448s
epoch 125: train_loss: 22.91760; Allocated: 4058624; Reserved: 31457280; time used = 62.8582239151001s
epoch 130: train_loss: 38.66252; Allocated: 4058624; Reserved: 31457280; time used = 62.796610832214355s
epoch 135: train_loss: 55.92846; Allocated: 4058624; Reserved: 31457280; time used = 63.907620668411255s
epoch 140: train_loss: 24.30996; Allocated: 4058624; Reserved: 31457280; time used = 64.3179018497467s
epoch 145: train_loss: 28.19433; Allocated: 4058624; Reserved: 31457280; time used = 63.619852781295776s
epoch 150: train_loss: 1.94737; Allocated: 4058624; Reserved: 31457280; time used = 62.2430260181427s
epoch 155: train_loss: 5.82351; Allocated: 4058624; Reserved: 31457280; time used = 61.96661448478699s
epoch 160: train_loss: 5.23616; Allocated: 4058624; Reserved: 31457280; time used = 65.57176780700684s
epoch 165: train_loss: 37.15620; Allocated: 4058624; Reserved: 31457280; time used = 64.60566806793213s
epoch 170: train_loss: 10.10666; Allocated: 4058624; Reserved: 31457280; time used = 64.68048477172852s
epoch 175: train_loss: 9.19915; Allocated: 4058624; Reserved: 31457280; time used = 62.32886505126953s
epoch 180: train_loss: 115.54742; Allocated: 4058624; Reserved: 31457280; time used = 61.992860317230225s
epoch 185: train_loss: 128.86212; Allocated: 4058624; Reserved: 31457280; time used = 64.6831328868866s
epoch 190: train_loss: 95.18477; Allocated: 4058624; Reserved: 31457280; time used = 65.72357559204102s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 2441.937110900879.
Training classifier using 80.00% nodes...
{'micro': 0.6725, 'macro': 0.657764628276218, 'samples': 0.6725, 'weighted': 0.6556342130872375, 'accuracy': 0.6725}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f797c736e60>
total iter: 500
epoch 5: train_loss: 0.53314; Allocated: 40761344; Reserved: 65011712; time used = 3.7001571655273438s
epoch 10: train_loss: 0.45344; Allocated: 40761344; Reserved: 65011712; time used = 3.5532517433166504s
epoch 15: train_loss: 0.44085; Allocated: 40761344; Reserved: 65011712; time used = 3.765718698501587s
epoch 20: train_loss: 0.41866; Allocated: 40761344; Reserved: 65011712; time used = 3.5816097259521484s
epoch 25: train_loss: 0.44751; Allocated: 40761344; Reserved: 65011712; time used = 3.6792588233947754s
epoch 30: train_loss: 0.42907; Allocated: 40761344; Reserved: 65011712; time used = 3.493673801422119s
epoch 35: train_loss: 0.42445; Allocated: 40761344; Reserved: 65011712; time used = 3.6188888549804688s
epoch 40: train_loss: 0.39794; Allocated: 40761344; Reserved: 65011712; time used = 3.5271987915039062s
epoch 45: train_loss: 0.41894; Allocated: 40761344; Reserved: 65011712; time used = 3.699960708618164s
epoch 50: train_loss: 0.41698; Allocated: 40761344; Reserved: 65011712; time used = 3.5568432807922363s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 42.88086915016174.
Training classifier using 20.00% nodes...
{'micro': 0.7892734880182579, 'macro': 0.7914813364666783, 'samples': 0.7892734880182579, 'weighted': 0.7889372312505675, 'accuracy': 0.7892734880182579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f4b5600e500>
total iter: 500
epoch 5: train_loss: 1.32448; Allocated: 508416; Reserved: 8388608; time used = 4.233006238937378s
epoch 10: train_loss: 1.31276; Allocated: 508416; Reserved: 8388608; time used = 4.155189752578735s
epoch 15: train_loss: 1.32601; Allocated: 508416; Reserved: 8388608; time used = 4.280605316162109s
epoch 20: train_loss: 1.30421; Allocated: 508416; Reserved: 8388608; time used = 4.155740976333618s
epoch 25: train_loss: 1.29783; Allocated: 508416; Reserved: 8388608; time used = 4.288424968719482s
epoch 30: train_loss: 1.30127; Allocated: 508416; Reserved: 8388608; time used = 4.168889760971069s
epoch 35: train_loss: 1.30527; Allocated: 508416; Reserved: 8388608; time used = 4.15355372428894s
epoch 40: train_loss: 1.31486; Allocated: 508416; Reserved: 8388608; time used = 4.150106430053711s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 40.27331328392029.
Training classifier using 80.00% nodes...
{'micro': 0.7105263157894737, 'macro': 0.638095238095238, 'samples': 0.7105263157894737, 'weighted': 0.6636591478696743, 'accuracy': 0.7105263157894737}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fd983d79f00>
head 0
total iter: 500
epoch 5: train_loss: 1.28780; Allocated: 41281536; Reserved: 62914560; time used = 2.8971009254455566s
epoch 10: train_loss: 1.17240; Allocated: 41281536; Reserved: 62914560; time used = 3.035362958908081s
epoch 15: train_loss: 1.03793; Allocated: 41281536; Reserved: 62914560; time used = 2.8825278282165527s
epoch 20: train_loss: 0.97998; Allocated: 41281536; Reserved: 62914560; time used = 3.0483787059783936s
epoch 25: train_loss: 0.90871; Allocated: 41281536; Reserved: 62914560; time used = 2.8978850841522217s
epoch 30: train_loss: 0.79649; Allocated: 41281536; Reserved: 62914560; time used = 3.1062564849853516s
epoch 35: train_loss: 0.85255; Allocated: 41281536; Reserved: 62914560; time used = 2.920994520187378s
epoch 40: train_loss: 0.79477; Allocated: 41281536; Reserved: 62914560; time used = 3.1018097400665283s
epoch 45: train_loss: 0.79319; Allocated: 41281536; Reserved: 62914560; time used = 2.8857855796813965s
epoch 50: train_loss: 0.82145; Allocated: 41281536; Reserved: 62914560; time used = 2.891005039215088s
epoch 55: train_loss: 0.72076; Allocated: 41281536; Reserved: 62914560; time used = 3.1006813049316406s
epoch 60: train_loss: 0.69769; Allocated: 41281536; Reserved: 62914560; time used = 2.8488070964813232s
epoch 65: train_loss: 0.74754; Allocated: 41281536; Reserved: 62914560; time used = 3.0905795097351074s
epoch 70: train_loss: 0.70705; Allocated: 41281536; Reserved: 62914560; time used = 2.913054943084717s
epoch 75: train_loss: 0.62032; Allocated: 41281536; Reserved: 62914560; time used = 3.083197593688965s
epoch 80: train_loss: 0.63822; Allocated: 41281536; Reserved: 62914560; time used = 2.935960531234741s
epoch 85: train_loss: 0.66066; Allocated: 41281536; Reserved: 62914560; time used = 3.0419139862060547s
epoch 90: train_loss: 0.61905; Allocated: 41281536; Reserved: 62914560; time used = 2.881105422973633s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 59.74198126792908.
Training classifier using 20.00% nodes...
{'micro': 0.797895270698618, 'macro': 0.7967376699471042, 'samples': 0.797895270698618, 'weighted': 0.7976634684526767, 'accuracy': 0.797895270698618}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 584/1500 [00:00<00:00, 3154.11it/s]100%|██████████| 1500/1500 [00:00<00:00, 5655.97it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff2640f4cd0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f49e124a3c0>
total iter: 500
epoch 5: train_loss: 0.50628; Allocated: 659456; Reserved: 4194304; time used = 3.1866164207458496s
epoch 10: train_loss: 0.41863; Allocated: 659456; Reserved: 4194304; time used = 3.167867422103882s
epoch 15: train_loss: 0.30621; Allocated: 659456; Reserved: 4194304; time used = 3.2898848056793213s
epoch 20: train_loss: 0.28069; Allocated: 659456; Reserved: 4194304; time used = 3.1523566246032715s
epoch 25: train_loss: 0.24334; Allocated: 659456; Reserved: 4194304; time used = 3.238959312438965s
epoch 30: train_loss: 0.17301; Allocated: 659456; Reserved: 4194304; time used = 3.1640634536743164s
epoch 35: train_loss: 0.19264; Allocated: 659456; Reserved: 4194304; time used = 3.315385103225708s
epoch 40: train_loss: 0.17640; Allocated: 659456; Reserved: 4194304; time used = 3.2019741535186768s
epoch 45: train_loss: 0.18576; Allocated: 659456; Reserved: 4194304; time used = 3.157041072845459s
epoch 50: train_loss: 0.17282; Allocated: 659456; Reserved: 4194304; time used = 3.164128065109253s
epoch 55: train_loss: 0.15168; Allocated: 659456; Reserved: 4194304; time used = 3.304879903793335s
epoch 60: train_loss: 0.07224; Allocated: 659456; Reserved: 4194304; time used = 3.153372287750244s
epoch 65: train_loss: 0.22060; Allocated: 659456; Reserved: 4194304; time used = 3.2654683589935303s
epoch 70: train_loss: 0.19196; Allocated: 659456; Reserved: 4194304; time used = 3.2592036724090576s
epoch 75: train_loss: 0.18678; Allocated: 659456; Reserved: 4194304; time used = 3.34700608253479s
epoch 80: train_loss: 0.18374; Allocated: 659456; Reserved: 4194304; time used = 3.143292188644409s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 55.3464241027832.
Training classifier using 80.00% nodes...
{'micro': 0.8157894736842104, 'macro': 0.8048422597212033, 'samples': 0.8157894736842105, 'weighted': 0.8121404023632082, 'accuracy': 0.8157894736842105}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3153.09it/s]100%|██████████| 1000/1000 [00:00<00:00, 4500.99it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc7cf4aa050>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.640869140625s
epoch 10: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.43410038948059s
epoch 15: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.48445248603821s
epoch 20: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.36051964759827s
epoch 25: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.516274213790894s
epoch 30: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.42894792556763s
epoch 35: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.23849868774414s
epoch 40: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 34.622206926345825s
epoch 45: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.5364294052124s
epoch 50: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.54922032356262s
epoch 55: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.28709650039673s
epoch 60: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.5321090221405s
epoch 65: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.25888919830322s
epoch 70: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.55331230163574s
epoch 75: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.14161705970764s
epoch 80: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.428945779800415s
epoch 85: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.389960527420044s
epoch 90: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.301189661026s
epoch 95: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.11604046821594s
epoch 100: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.40712118148804s
epoch 105: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.36163377761841s
epoch 110: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.45719313621521s
epoch 115: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.49579954147339s
epoch 120: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.289318323135376s
epoch 125: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.31535792350769s
epoch 130: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.58517909049988s
epoch 135: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.538453817367554s
epoch 140: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.396899938583374s
epoch 145: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.485233783721924s
epoch 150: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.364121198654175s
epoch 155: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.3300518989563s
epoch 160: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.51994013786316s
epoch 165: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.21189332008362s
epoch 170: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.5460844039917s
epoch 175: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.48172116279602s
epoch 180: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.565728187561035s
epoch 185: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.40559911727905s
epoch 190: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.468231439590454s
epoch 195: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.50713562965393s
epoch 200: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.62163043022156s
epoch 205: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.48132872581482s
epoch 210: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.36264729499817s
epoch 215: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.373183488845825s
epoch 220: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.600544929504395s
epoch 225: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.35912799835205s
epoch 230: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.30245876312256s
epoch 235: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.44176769256592s
epoch 240: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.53069519996643s
epoch 245: train_loss: 0.69315; Allocated: 617984; Reserved: 10485760; time used = 33.25097966194153s
epoch 250: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.34946656227112s
epoch 255: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.21495604515076s
epoch 260: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.52291131019592s
epoch 265: train_loss: 0.69315; Allocated: 617984; Reserved: 10485760; time used = 33.611164808273315s
epoch 270: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.29238247871399s
epoch 275: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.48022389411926s
epoch 280: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.389081954956055s
epoch 285: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.63125157356262s
epoch 290: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.44866442680359s
epoch 295: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.286919593811035s
epoch 300: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.33630704879761s
epoch 305: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.35989499092102s
epoch 310: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.404053688049316s
epoch 315: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.34992265701294s
epoch 320: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.2120099067688s
epoch 325: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.574533462524414s
epoch 330: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.40756273269653s
epoch 335: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.400707721710205s
epoch 340: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.53543186187744s
epoch 345: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.52152442932129s
epoch 350: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 34.334099769592285s
epoch 355: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.755964279174805s
epoch 360: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.526796102523804s
epoch 365: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.40365409851074s
epoch 370: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.56299352645874s
epoch 375: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.58424639701843s
epoch 380: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.52853059768677s
epoch 385: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.727800607681274s
epoch 390: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.27197766304016s
epoch 395: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.6085262298584s
epoch 400: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.4028639793396s
epoch 405: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.46031093597412s
epoch 410: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.28560400009155s
epoch 415: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.35776734352112s
epoch 420: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.34840130805969s
epoch 425: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.42804670333862s
epoch 430: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.530349254608154s
epoch 435: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.29902529716492s
epoch 440: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.55570888519287s
epoch 445: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.33212733268738s
epoch 450: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.334415435791016s
epoch 455: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.53368282318115s
epoch 460: train_loss: 0.69315; Allocated: 617984; Reserved: 8388608; time used = 33.15575075149536s
epoch 465: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.56625509262085s
epoch 470: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.75963616371155s
epoch 475: train_loss: 0.69315; Allocated: 617984; Reserved: 10485760; time used = 33.45063066482544s
epoch 480: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.37546372413635s
epoch 485: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.60422921180725s
epoch 490: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.35393142700195s
epoch 495: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.41695046424866s
epoch 500: train_loss: 0.69315; Allocated: 617984; Reserved: 6291456; time used = 33.49934005737305s
Finished training. Time used = 3348.8263082504272.
Training classifier using 80.00% nodes...
{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f6c80505fa0>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.17141; Allocated: 41627648; Reserved: 65011712; time used = 3.1146240234375s
epoch 10: train_loss: 1.00195; Allocated: 41627648; Reserved: 65011712; time used = 3.284916877746582s
epoch 15: train_loss: 0.93835; Allocated: 41627648; Reserved: 65011712; time used = 3.089128255844116s
epoch 20: train_loss: 0.95583; Allocated: 41627648; Reserved: 65011712; time used = 3.2719366550445557s
epoch 25: train_loss: 0.93967; Allocated: 41627648; Reserved: 65011712; time used = 3.1148595809936523s
epoch 30: train_loss: 0.95065; Allocated: 41627648; Reserved: 65011712; time used = 3.267317533493042s
epoch 35: train_loss: 0.97692; Allocated: 41627648; Reserved: 65011712; time used = 3.1022982597351074s
epoch 40: train_loss: 0.91388; Allocated: 41627648; Reserved: 65011712; time used = 3.237321615219116s
epoch 45: train_loss: 0.90088; Allocated: 41627648; Reserved: 65011712; time used = 3.094003915786743s
epoch 50: train_loss: 0.88500; Allocated: 41627648; Reserved: 65011712; time used = 3.3039979934692383s
epoch 55: train_loss: 0.91631; Allocated: 41627648; Reserved: 65011712; time used = 3.148136615753174s
epoch 60: train_loss: 0.92215; Allocated: 41627648; Reserved: 65011712; time used = 3.272629976272583s
epoch 65: train_loss: 0.92637; Allocated: 41627648; Reserved: 65011712; time used = 3.126056432723999s
epoch 70: train_loss: 0.91143; Allocated: 41627648; Reserved: 65011712; time used = 3.0332694053649902s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 48.38410019874573.
Training classifier using 20.00% nodes...
{'micro': 0.5777862305058957, 'macro': 0.538709590182603, 'samples': 0.5777862305058957, 'weighted': 0.5663978158207672, 'accuracy': 0.5777862305058957}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f24671e81e0>
head 0
total iter: 500
epoch 5: train_loss: 0.54148; Allocated: 57277440; Reserved: 113246208; time used = 3.6385178565979004s
epoch 10: train_loss: 0.32876; Allocated: 57277440; Reserved: 113246208; time used = 3.7693819999694824s
epoch 15: train_loss: 0.18245; Allocated: 57277440; Reserved: 113246208; time used = 3.6674342155456543s
epoch 20: train_loss: 0.05604; Allocated: 57277440; Reserved: 113246208; time used = 3.6491506099700928s
epoch 25: train_loss: 0.03154; Allocated: 57277440; Reserved: 113246208; time used = 3.7673163414001465s
epoch 30: train_loss: 0.00621; Allocated: 57277440; Reserved: 113246208; time used = 3.6358609199523926s
epoch 35: train_loss: 0.03135; Allocated: 57277440; Reserved: 113246208; time used = 3.6279733180999756s
epoch 40: train_loss: 0.02804; Allocated: 57277440; Reserved: 113246208; time used = 3.7795777320861816s
epoch 45: train_loss: 0.00201; Allocated: 57277440; Reserved: 113246208; time used = 3.6327013969421387s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 39.35621428489685.
Training classifier using 20.00% nodes...
{'micro': 0.6438661710037176, 'macro': 0.580180142567797, 'samples': 0.6506386175807664, 'weighted': 0.6284918261070089, 'accuracy': 0.6506386175807664}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb9416d2730>
total iter: 500
epoch 5: train_loss: 0.66498; Allocated: 915968; Reserved: 8388608; time used = 1.74672532081604s
epoch 10: train_loss: 0.59880; Allocated: 915968; Reserved: 8388608; time used = 1.8243601322174072s
epoch 15: train_loss: 0.59521; Allocated: 915968; Reserved: 8388608; time used = 1.8337411880493164s
epoch 20: train_loss: 0.56834; Allocated: 915968; Reserved: 8388608; time used = 1.837435007095337s
epoch 25: train_loss: 0.53155; Allocated: 915968; Reserved: 8388608; time used = 1.7772390842437744s
epoch 30: train_loss: 0.55192; Allocated: 915968; Reserved: 8388608; time used = 1.7299480438232422s
epoch 35: train_loss: 0.52177; Allocated: 915968; Reserved: 8388608; time used = 1.7409510612487793s
epoch 40: train_loss: 0.50923; Allocated: 915968; Reserved: 8388608; time used = 1.790529489517212s
epoch 45: train_loss: 0.54251; Allocated: 915968; Reserved: 8388608; time used = 1.7574834823608398s
epoch 50: train_loss: 0.53922; Allocated: 915968; Reserved: 8388608; time used = 1.7360315322875977s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 21.27310061454773.
Training classifier using 80.00% nodes...
{'micro': 0.5507246376811594, 'macro': 0.5507246376811593, 'samples': 0.5507246376811594, 'weighted': 0.5507246376811593, 'accuracy': 0.5507246376811594}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fbe6d599e10>
head 0
total iter: 500
epoch 5: train_loss: 1.37549; Allocated: 737280; Reserved: 6291456; time used = 4.666018724441528s
epoch 10: train_loss: 1.37638; Allocated: 737280; Reserved: 6291456; time used = 4.7686614990234375s
epoch 15: train_loss: 1.37681; Allocated: 737280; Reserved: 8388608; time used = 4.7666003704071045s
epoch 20: train_loss: 1.38587; Allocated: 737280; Reserved: 8388608; time used = 4.769120454788208s
epoch 25: train_loss: 1.38155; Allocated: 737280; Reserved: 8388608; time used = 4.64402437210083s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 30.732730865478516.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.600300364728599, 'samples': 0.6086956521739131, 'weighted': 0.6044980084512561, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f4372fa3410>
total iter: 500
epoch 5: train_loss: 49.68897; Allocated: 986112; Reserved: 8388608; time used = 1.7947142124176025s
epoch 10: train_loss: 9.24276; Allocated: 986112; Reserved: 8388608; time used = 1.8600027561187744s
epoch 15: train_loss: 3.61139; Allocated: 986112; Reserved: 8388608; time used = 1.857154369354248s
epoch 20: train_loss: 2.41534; Allocated: 986112; Reserved: 8388608; time used = 1.8619368076324463s
epoch 25: train_loss: 1.53880; Allocated: 986112; Reserved: 8388608; time used = 1.8699500560760498s
epoch 30: train_loss: 1.39333; Allocated: 986112; Reserved: 8388608; time used = 1.8365626335144043s
epoch 35: train_loss: 1.36423; Allocated: 986112; Reserved: 8388608; time used = 1.8016107082366943s
epoch 40: train_loss: 1.44426; Allocated: 986112; Reserved: 8388608; time used = 1.8763575553894043s
epoch 45: train_loss: 1.44846; Allocated: 986112; Reserved: 8388608; time used = 1.8589694499969482s
epoch 50: train_loss: 1.36773; Allocated: 986112; Reserved: 8388608; time used = 1.8654990196228027s
epoch 55: train_loss: 1.34552; Allocated: 986112; Reserved: 8388608; time used = 1.823622465133667s
epoch 60: train_loss: 1.34533; Allocated: 986112; Reserved: 8388608; time used = 1.848161220550537s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 27.13135004043579.
Training classifier using 80.00% nodes...
{'micro': 0.6086956521739131, 'macro': 0.6057142857142858, 'samples': 0.6086956521739131, 'weighted': 0.6081987577639751, 'accuracy': 0.6086956521739131}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 58%|█████▊    | 583/1000 [00:00<00:00, 3135.83it/s]100%|██████████| 1000/1000 [00:00<00:00, 4476.95it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe1fce68050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3188.66it/s]100%|██████████| 1500/1500 [00:00<00:00, 5699.56it/s]
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9aa7970050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f7ba5bfd780>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f88b1217370>
total iter: 500
epoch 5: train_loss: 0.52645; Allocated: 579584; Reserved: 4194304; time used = 2.9793717861175537s
epoch 10: train_loss: 0.51318; Allocated: 579584; Reserved: 4194304; time used = 2.9805874824523926s
epoch 15: train_loss: 0.49848; Allocated: 579584; Reserved: 4194304; time used = 3.158669948577881s
epoch 20: train_loss: 0.48152; Allocated: 579584; Reserved: 4194304; time used = 2.964938163757324s
epoch 25: train_loss: 0.46868; Allocated: 579584; Reserved: 4194304; time used = 2.9968106746673584s
epoch 30: train_loss: 0.47448; Allocated: 579584; Reserved: 4194304; time used = 3.1116907596588135s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 21.517902612686157.
Training classifier using 80.00% nodes...
{'micro': 0.7631578947368421, 'macro': 0.7490829053558328, 'samples': 0.7631578947368421, 'weighted': 0.7584662316098391, 'accuracy': 0.7631578947368421}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2896b8c4b0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3094.61it/s]100%|██████████| 1500/1500 [00:00<00:00, 5575.39it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f75b00a12d0>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.41751; Allocated: 838144; Reserved: 8388608; time used = 53.400641202926636s
epoch 10: train_loss: 1.38841; Allocated: 838144; Reserved: 10485760; time used = 53.35861539840698s
epoch 15: train_loss: 1.38813; Allocated: 838144; Reserved: 6291456; time used = 53.39922022819519s
epoch 20: train_loss: 1.38755; Allocated: 838144; Reserved: 6291456; time used = 53.28890824317932s
epoch 25: train_loss: 1.38654; Allocated: 838144; Reserved: 10485760; time used = 53.19574236869812s
epoch 30: train_loss: 1.38537; Allocated: 838144; Reserved: 8388608; time used = 53.51130270957947s
epoch 35: train_loss: 1.38162; Allocated: 838144; Reserved: 6291456; time used = 53.21674847602844s
epoch 40: train_loss: 1.36656; Allocated: 838144; Reserved: 8388608; time used = 53.30659317970276s
epoch 45: train_loss: 1.44033; Allocated: 838144; Reserved: 8388608; time used = 53.099246978759766s
epoch 50: train_loss: 1.38817; Allocated: 838144; Reserved: 10485760; time used = 53.46378016471863s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 579.4172034263611.
Training classifier using 80.00% nodes...
{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 584/2000 [00:00<00:00, 3097.71it/s] 82%|████████▏ | 1644/2000 [00:00<00:00, 3932.51it/s]100%|██████████| 2000/2000 [00:00<00:00, 6223.40it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd1fe845140>
head 0
total iter: 500
epoch 5: train_loss: 1.45978; Allocated: 3990016; Reserved: 31457280; time used = 126.5453085899353s
epoch 10: train_loss: 1.39950; Allocated: 3990016; Reserved: 31457280; time used = 123.05069255828857s
epoch 15: train_loss: 1.38637; Allocated: 3990016; Reserved: 31457280; time used = 125.68012619018555s
epoch 20: train_loss: 1.39039; Allocated: 3990016; Reserved: 31457280; time used = 128.44540452957153s
epoch 25: train_loss: 1.39258; Allocated: 3990016; Reserved: 31457280; time used = 119.12946462631226s
epoch 30: train_loss: 1.39014; Allocated: 3990016; Reserved: 31457280; time used = 125.04214644432068s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 751.6262016296387.
Training classifier using 80.00% nodes...
{'micro': 0.5375, 'macro': 0.44808657582470035, 'samples': 0.5375, 'weighted': 0.4414222212277836, 'accuracy': 0.5375}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f124e9fef00>
total iter: 500
epoch 5: train_loss: 1.33014; Allocated: 17328640; Reserved: 41943040; time used = 4.70685076713562s
epoch 10: train_loss: 1.16020; Allocated: 17328640; Reserved: 41943040; time used = 4.828041076660156s
epoch 15: train_loss: 1.11503; Allocated: 17328640; Reserved: 41943040; time used = 4.697625398635864s
epoch 20: train_loss: 1.06875; Allocated: 17328640; Reserved: 41943040; time used = 4.81893253326416s
epoch 25: train_loss: 1.02708; Allocated: 17328640; Reserved: 41943040; time used = 4.698640584945679s
epoch 30: train_loss: 1.00289; Allocated: 17328640; Reserved: 41943040; time used = 4.850136756896973s
epoch 35: train_loss: 0.96854; Allocated: 17328640; Reserved: 41943040; time used = 4.6950600147247314s
epoch 40: train_loss: 0.95434; Allocated: 17328640; Reserved: 41943040; time used = 4.831239461898804s
epoch 45: train_loss: 0.92768; Allocated: 17328640; Reserved: 41943040; time used = 4.6967644691467285s
epoch 50: train_loss: 0.93253; Allocated: 17328640; Reserved: 41943040; time used = 4.823549032211304s
epoch 55: train_loss: 0.91064; Allocated: 17328640; Reserved: 41943040; time used = 4.691811800003052s
epoch 60: train_loss: 0.90861; Allocated: 17328640; Reserved: 41943040; time used = 4.8298258781433105s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 64.12259340286255.
Training classifier using 20.00% nodes...
{'micro': 0.7812644208583294, 'macro': 0.7591599093529517, 'samples': 0.7812644208583295, 'weighted': 0.7801444705722033, 'accuracy': 0.7812644208583295}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 39%|███▉      | 583/1500 [00:00<00:00, 3114.92it/s]100%|██████████| 1500/1500 [00:00<00:00, 5610.81it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f7a8ec31050>
total iter: 500
epoch 5: train_loss: 1.39298; Allocated: 483840; Reserved: 4194304; time used = 11.904347658157349s
epoch 10: train_loss: 1.38893; Allocated: 483840; Reserved: 6291456; time used = 12.000662565231323s
epoch 15: train_loss: 1.38709; Allocated: 483840; Reserved: 6291456; time used = 11.852045774459839s
epoch 20: train_loss: 1.38663; Allocated: 483840; Reserved: 6291456; time used = 11.987696647644043s
epoch 25: train_loss: 1.38648; Allocated: 483840; Reserved: 6291456; time used = 11.887633323669434s
epoch 30: train_loss: 1.38639; Allocated: 483840; Reserved: 6291456; time used = 12.008711099624634s
epoch 35: train_loss: 1.38634; Allocated: 483840; Reserved: 4194304; time used = 11.81360387802124s
epoch 40: train_loss: 1.38632; Allocated: 483840; Reserved: 4194304; time used = 11.903734922409058s
epoch 45: train_loss: 1.38631; Allocated: 483840; Reserved: 8388608; time used = 12.004373550415039s
epoch 50: train_loss: 1.38630; Allocated: 483840; Reserved: 6291456; time used = 11.888235569000244s
epoch 55: train_loss: 1.38630; Allocated: 483840; Reserved: 6291456; time used = 11.85358738899231s
epoch 60: train_loss: 1.38630; Allocated: 483840; Reserved: 6291456; time used = 11.961091041564941s
epoch 65: train_loss: 1.38630; Allocated: 483840; Reserved: 4194304; time used = 11.919016361236572s
epoch 70: train_loss: 1.38630; Allocated: 483840; Reserved: 4194304; time used = 12.006981372833252s
epoch 75: train_loss: 1.38629; Allocated: 483840; Reserved: 6291456; time used = 11.917516469955444s
epoch 80: train_loss: 1.38630; Allocated: 483840; Reserved: 4194304; time used = 11.977414846420288s
epoch 85: train_loss: 1.38629; Allocated: 483840; Reserved: 6291456; time used = 11.891661405563354s
epoch 90: train_loss: 1.38629; Allocated: 483840; Reserved: 6291456; time used = 12.02219533920288s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 227.4723024368286.
Training classifier using 80.00% nodes...
{'micro': 0.33, 'macro': 0.2658320084790673, 'samples': 0.33, 'weighted': 0.2578570482246953, 'accuracy': 0.33}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 29%|██▉       | 583/2000 [00:00<00:00, 3108.45it/s] 82%|████████▏ | 1648/2000 [00:00<00:00, 3946.87it/s]100%|██████████| 2000/2000 [00:00<00:00, 6251.24it/s]
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fb062809140>
total iter: 500
epoch 5: train_loss: 0.67704; Allocated: 3995648; Reserved: 35651584; time used = 1149.450824022293s
epoch 10: train_loss: 0.46336; Allocated: 3995648; Reserved: 31457280; time used = 1149.9368908405304s
epoch 15: train_loss: 0.38223; Allocated: 3995648; Reserved: 31457280; time used = 1150.3084814548492s
epoch 20: train_loss: 0.26759; Allocated: 3995648; Reserved: 33554432; time used = 1147.249523639679s
epoch 25: train_loss: 0.15755; Allocated: 3995648; Reserved: 33554432; time used = 1151.3890912532806s
epoch 30: train_loss: 0.19826; Allocated: 3995648; Reserved: 33554432; time used = 1150.0865578651428s
epoch 35: train_loss: 0.11035; Allocated: 3995648; Reserved: 31457280; time used = 1153.3485534191132s
epoch 40: train_loss: 0.03416; Allocated: 3995648; Reserved: 33554432; time used = 1150.8672811985016s
epoch 45: train_loss: 0.01852; Allocated: 3995648; Reserved: 31457280; time used = 1152.7587890625s
epoch 50: train_loss: 0.02527; Allocated: 3995648; Reserved: 33554432; time used = 1156.1561720371246s
epoch 55: train_loss: 0.01520; Allocated: 3995648; Reserved: 33554432; time used = 1152.1057789325714s
epoch 60: train_loss: 0.01079; Allocated: 3995648; Reserved: 31457280; time used = 1154.9365780353546s
epoch 65: train_loss: 0.00846; Allocated: 3995648; Reserved: 33554432; time used = 1167.1997611522675s
epoch 70: train_loss: 0.00768; Allocated: 3995648; Reserved: 33554432; time used = 1159.740713596344s
epoch 75: train_loss: 0.00605; Allocated: 3995648; Reserved: 33554432; time used = 1160.4473986625671s
epoch 80: train_loss: 0.00754; Allocated: 3995648; Reserved: 33554432; time used = 1170.786921262741s
epoch 85: train_loss: 0.00600; Allocated: 3995648; Reserved: 33554432; time used = 1176.4213516712189s
epoch 90: train_loss: 0.00578; Allocated: 3995648; Reserved: 33554432; time used = 1162.8399512767792s
epoch 95: train_loss: 0.00530; Allocated: 3995648; Reserved: 33554432; time used = 1161.7267837524414s
epoch 100: train_loss: 0.00488; Allocated: 3995648; Reserved: 31457280; time used = 1163.0598647594452s
epoch 105: train_loss: 0.00558; Allocated: 3995648; Reserved: 33554432; time used = 1157.3644456863403s
epoch 110: train_loss: 0.00543; Allocated: 3995648; Reserved: 31457280; time used = 1157.3699164390564s
epoch 115: train_loss: 0.00481; Allocated: 3995648; Reserved: 31457280; time used = 1155.7046654224396s
epoch 120: train_loss: 0.00432; Allocated: 3995648; Reserved: 33554432; time used = 1156.0643050670624s
epoch 125: train_loss: 0.00491; Allocated: 3995648; Reserved: 33554432; time used = 1151.15935587883s
epoch 130: train_loss: 0.00436; Allocated: 3995648; Reserved: 31457280; time used = 1156.0343751907349s
epoch 135: train_loss: 0.00476; Allocated: 3995648; Reserved: 31457280; time used = 1154.447639465332s
epoch 140: train_loss: 0.00458; Allocated: 3995648; Reserved: 33554432; time used = 1156.7501447200775s
epoch 145: train_loss: 0.00410; Allocated: 3995648; Reserved: 33554432; time used = 1158.443368434906s
epoch 150: train_loss: 0.00407; Allocated: 3995648; Reserved: 33554432; time used = 1175.2524857521057s
epoch 155: train_loss: 0.00402; Allocated: 3995648; Reserved: 31457280; time used = 1159.1144151687622s
epoch 160: train_loss: 0.00352; Allocated: 3995648; Reserved: 31457280; time used = 1159.62042593956s
epoch 165: train_loss: 0.00405; Allocated: 3995648; Reserved: 33554432; time used = 1162.66019821167s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 38668.15334415436.
Training classifier using 80.00% nodes...
{'micro': 0.7475, 'macro': 0.7414879798309433, 'samples': 0.7475, 'weighted': 0.7403052873386698, 'accuracy': 0.7475}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f291ac216e0>
total iter: 500
epoch 5: train_loss: 16.23360; Allocated: 53764608; Reserved: 159383552; time used = 0.5362114906311035s
epoch 10: train_loss: 1.29434; Allocated: 53764608; Reserved: 159383552; time used = 0.5072038173675537s
epoch 15: train_loss: 1.37003; Allocated: 53764608; Reserved: 159383552; time used = 0.5072832107543945s
epoch 20: train_loss: 1.18725; Allocated: 53764608; Reserved: 159383552; time used = 0.5061008930206299s
epoch 25: train_loss: 1.09769; Allocated: 53764608; Reserved: 159383552; time used = 0.5087347030639648s
epoch 30: train_loss: 1.02850; Allocated: 53764608; Reserved: 159383552; time used = 0.5136733055114746s
epoch 35: train_loss: 0.96947; Allocated: 53764608; Reserved: 159383552; time used = 0.5233826637268066s
epoch 40: train_loss: 0.90694; Allocated: 53764608; Reserved: 159383552; time used = 0.5142045021057129s
epoch 45: train_loss: 0.83419; Allocated: 53764608; Reserved: 159383552; time used = 0.5114123821258545s
epoch 50: train_loss: 0.73504; Allocated: 53764608; Reserved: 159383552; time used = 0.5095267295837402s
epoch 55: train_loss: 0.63500; Allocated: 53764608; Reserved: 159383552; time used = 0.5165352821350098s
epoch 60: train_loss: 0.56147; Allocated: 53764608; Reserved: 159383552; time used = 0.5142645835876465s
epoch 65: train_loss: 0.50077; Allocated: 53764608; Reserved: 159383552; time used = 0.5121901035308838s
epoch 70: train_loss: 0.43281; Allocated: 53764608; Reserved: 159383552; time used = 0.5137014389038086s
epoch 75: train_loss: 0.40423; Allocated: 53764608; Reserved: 159383552; time used = 0.5111212730407715s
epoch 80: train_loss: 0.33275; Allocated: 53764608; Reserved: 159383552; time used = 0.5171208381652832s
epoch 85: train_loss: 0.29109; Allocated: 53764608; Reserved: 159383552; time used = 0.5210821628570557s
epoch 90: train_loss: 0.27747; Allocated: 53764608; Reserved: 159383552; time used = 0.5106756687164307s
epoch 95: train_loss: 0.24467; Allocated: 53764608; Reserved: 159383552; time used = 0.5153656005859375s
epoch 100: train_loss: 0.21497; Allocated: 53764608; Reserved: 159383552; time used = 0.5101456642150879s
epoch 105: train_loss: 0.23968; Allocated: 53764608; Reserved: 159383552; time used = 0.5091292858123779s
epoch 110: train_loss: 0.18433; Allocated: 53764608; Reserved: 159383552; time used = 0.5089201927185059s
epoch 115: train_loss: 0.13758; Allocated: 53764608; Reserved: 159383552; time used = 0.5078229904174805s
epoch 120: train_loss: 0.18509; Allocated: 53764608; Reserved: 159383552; time used = 0.5083520412445068s
epoch 125: train_loss: 0.14777; Allocated: 53764608; Reserved: 159383552; time used = 0.5079033374786377s
epoch 130: train_loss: 0.11534; Allocated: 53764608; Reserved: 159383552; time used = 0.5068657398223877s
epoch 135: train_loss: 0.14067; Allocated: 53764608; Reserved: 159383552; time used = 0.5065350532531738s
epoch 140: train_loss: 0.15059; Allocated: 53764608; Reserved: 159383552; time used = 0.507697582244873s
epoch 145: train_loss: 0.10381; Allocated: 53764608; Reserved: 159383552; time used = 0.5080738067626953s
epoch 150: train_loss: 0.09873; Allocated: 53764608; Reserved: 159383552; time used = 0.5127658843994141s
epoch 155: train_loss: 0.08820; Allocated: 53764608; Reserved: 159383552; time used = 0.5209660530090332s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 19.155637979507446.
Training classifier using 20.00% nodes...
{'micro': 0.4197026022304833, 'macro': 0.33460933904759244, 'samples': 0.42411720510894063, 'weighted': 0.382477083228061, 'accuracy': 0.42411720510894063}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2920.18it/s] 80%|████████  | 1606/2000 [00:00<00:00, 3731.75it/s]100%|██████████| 2000/2000 [00:00<00:00, 6202.57it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fc7adcc1280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2920.43it/s] 81%|████████  | 1615/2000 [00:00<00:00, 3735.63it/s]100%|██████████| 2000/2000 [00:00<00:00, 6229.21it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f0823829460>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 0.69331; Allocated: 4262400; Reserved: 31457280; time used = 295.13133573532104s
epoch 10: train_loss: 0.69315; Allocated: 4262400; Reserved: 31457280; time used = 295.08083271980286s
epoch 15: train_loss: 0.69315; Allocated: 4262400; Reserved: 31457280; time used = 307.7061698436737s
epoch 20: train_loss: 0.69314; Allocated: 4262400; Reserved: 31457280; time used = 309.60381531715393s
epoch 25: train_loss: 0.69314; Allocated: 4262400; Reserved: 31457280; time used = 303.90092873573303s
epoch 30: train_loss: 0.69314; Allocated: 4262400; Reserved: 31457280; time used = 296.8295111656189s
epoch 35: train_loss: 0.69314; Allocated: 4262400; Reserved: 31457280; time used = 296.91386246681213s
epoch 40: train_loss: 0.69316; Allocated: 4262400; Reserved: 31457280; time used = 296.1013693809509s
epoch 45: train_loss: 0.69315; Allocated: 4262400; Reserved: 31457280; time used = 295.9394578933716s
epoch 50: train_loss: 0.69315; Allocated: 4262400; Reserved: 31457280; time used = 298.4465992450714s
epoch 55: train_loss: 0.69314; Allocated: 4262400; Reserved: 31457280; time used = 295.1557922363281s
epoch 60: train_loss: 0.69315; Allocated: 4262400; Reserved: 31457280; time used = 296.85815834999084s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 3833.236242055893.
Training classifier using 80.00% nodes...

{'micro': 0.485, 'macro': 0.3265993265993266, 'samples': 0.485, 'weighted': 0.3168013468013468, 'accuracy': 0.485}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7efbc668f460>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fd60ebfdd70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fde385632d0>
head 0
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.08776; Allocated: 41627648; Reserved: 65011712; time used = 2.819286584854126s
epoch 10: train_loss: 0.95893; Allocated: 41627648; Reserved: 65011712; time used = 2.827880382537842s
epoch 15: train_loss: 0.95632; Allocated: 41627648; Reserved: 65011712; time used = 2.8043739795684814s
epoch 20: train_loss: 0.92778; Allocated: 41627648; Reserved: 65011712; time used = 2.753740072250366s
epoch 25: train_loss: 0.92500; Allocated: 41627648; Reserved: 65011712; time used = 2.843479633331299s
epoch 30: train_loss: 0.90864; Allocated: 41627648; Reserved: 65011712; time used = 3.0037200450897217s
epoch 35: train_loss: 0.86352; Allocated: 41627648; Reserved: 65011712; time used = 2.7498795986175537s
epoch 40: train_loss: 0.86256; Allocated: 41627648; Reserved: 65011712; time used = 2.7913079261779785s
epoch 45: train_loss: 0.85792; Allocated: 41627648; Reserved: 65011712; time used = 2.951338529586792s
epoch 50: train_loss: 0.84115; Allocated: 41627648; Reserved: 65011712; time used = 2.7329862117767334s
epoch 55: train_loss: 0.85896; Allocated: 41627648; Reserved: 65011712; time used = 2.707094430923462s
epoch 60: train_loss: 0.84763; Allocated: 41627648; Reserved: 65011712; time used = 2.954317092895508s
epoch 65: train_loss: 0.84138; Allocated: 41627648; Reserved: 65011712; time used = 2.770672082901001s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 41.433592557907104.
Training classifier using 20.00% nodes...
{'micro': 0.4810447571953848, 'macro': 0.35888276190174895, 'samples': 0.4810447571953848, 'weighted': 0.42449672747196954, 'accuracy': 0.4810447571953848}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2931.29it/s]100%|██████████| 1500/1500 [00:00<00:00, 5553.59it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f61fe4f7050>
total iter: 500
epoch 5: train_loss: 1659.78525; Allocated: 571392; Reserved: 4194304; time used = 12.128707885742188s
epoch 10: train_loss: 180.62480; Allocated: 571392; Reserved: 4194304; time used = 12.203742742538452s
epoch 15: train_loss: 304.99977; Allocated: 571392; Reserved: 8388608; time used = 12.058170080184937s
epoch 20: train_loss: 42.28240; Allocated: 571392; Reserved: 6291456; time used = 12.180742979049683s
epoch 25: train_loss: 1.51303; Allocated: 571392; Reserved: 6291456; time used = 12.210960388183594s
epoch 30: train_loss: 1.40196; Allocated: 571392; Reserved: 4194304; time used = 12.312945365905762s
epoch 35: train_loss: 1.41033; Allocated: 571392; Reserved: 4194304; time used = 12.09102749824524s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 88.59437036514282.
Training classifier using 80.00% nodes...

{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f35a670d4b0>
head 0
head 0
head 0
total iter: 500
epoch 5: train_loss: 1.37617; Allocated: 729600; Reserved: 6291456; time used = 4.376115322113037s
epoch 10: train_loss: 1.34025; Allocated: 729600; Reserved: 6291456; time used = 4.382010221481323s
epoch 15: train_loss: 1.32992; Allocated: 729600; Reserved: 6291456; time used = 4.523576259613037s
epoch 20: train_loss: 1.31718; Allocated: 729600; Reserved: 6291456; time used = 4.375272512435913s
epoch 25: train_loss: 1.26970; Allocated: 729600; Reserved: 6291456; time used = 4.3735034465789795s
epoch 30: train_loss: 1.26496; Allocated: 729600; Reserved: 6291456; time used = 4.560507535934448s
epoch 35: train_loss: 1.24715; Allocated: 729600; Reserved: 6291456; time used = 4.357662200927734s
epoch 40: train_loss: 1.22794; Allocated: 729600; Reserved: 6291456; time used = 4.3692991733551025s
epoch 45: train_loss: 1.21688; Allocated: 729600; Reserved: 6291456; time used = 4.370239496231079s
epoch 50: train_loss: 1.22151; Allocated: 729600; Reserved: 6291456; time used = 4.497905492782593s
epoch 55: train_loss: 1.18331; Allocated: 729600; Reserved: 6291456; time used = 4.357590675354004s
epoch 60: train_loss: 1.18883; Allocated: 729600; Reserved: 6291456; time used = 4.366396427154541s
epoch 65: train_loss: 1.16524; Allocated: 729600; Reserved: 6291456; time used = 4.523119926452637s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 60.75952768325806.
Training classifier using 80.00% nodes...
{'micro': 0.7368421052631579, 'macro': 0.7172619047619048, 'samples': 0.7368421052631579, 'weighted': 0.7290100250626566, 'accuracy': 0.7368421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2910.25it/s]100%|██████████| 1500/1500 [00:00<00:00, 5538.01it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f4404a7e050>
total iter: 500
epoch 5: train_loss: 121212967.00000; Allocated: 692736; Reserved: 8388608; time used = 35.07904243469238s
epoch 10: train_loss: 101631627.00000; Allocated: 692736; Reserved: 6291456; time used = 34.87942433357239s
epoch 15: train_loss: 99689112.00000; Allocated: 692736; Reserved: 8388608; time used = 35.12833070755005s
epoch 20: train_loss: 738168792.00000; Allocated: 692736; Reserved: 6291456; time used = 34.814329862594604s
epoch 25: train_loss: 66183734.25000; Allocated: 692736; Reserved: 8388608; time used = 35.086215019226074s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 199.1318428516388.
Training classifier using 80.00% nodes...

{'micro': 0.44, 'macro': 0.3559644565055516, 'samples': 0.44, 'weighted': 0.34528552281038505, 'accuracy': 0.44}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f02f2786780>
total iter: 500
epoch 5: train_loss: 0.37373; Allocated: 53483520; Reserved: 109051904; time used = 0.8621680736541748s
epoch 10: train_loss: 0.23573; Allocated: 53483520; Reserved: 109051904; time used = 0.8540282249450684s
epoch 15: train_loss: 0.13877; Allocated: 53483520; Reserved: 109051904; time used = 0.8594179153442383s
epoch 20: train_loss: 0.09091; Allocated: 53483520; Reserved: 109051904; time used = 0.854079008102417s
epoch 25: train_loss: 0.05313; Allocated: 53483520; Reserved: 109051904; time used = 0.8591887950897217s
epoch 30: train_loss: 0.02972; Allocated: 53483520; Reserved: 109051904; time used = 0.8529360294342041s
epoch 35: train_loss: 0.03598; Allocated: 53483520; Reserved: 109051904; time used = 0.8535757064819336s
epoch 40: train_loss: 0.03240; Allocated: 53483520; Reserved: 109051904; time used = 0.8564422130584717s
epoch 45: train_loss: 0.01282; Allocated: 53483520; Reserved: 109051904; time used = 0.85406494140625s
epoch 50: train_loss: 0.02859; Allocated: 53483520; Reserved: 109051904; time used = 1.0114996433258057s
epoch 55: train_loss: 0.02182; Allocated: 53483520; Reserved: 109051904; time used = 0.85467529296875s
epoch 60: train_loss: 0.01570; Allocated: 53483520; Reserved: 109051904; time used = 0.855144739151001s
epoch 65: train_loss: 0.03283; Allocated: 53483520; Reserved: 109051904; time used = 0.8599109649658203s
epoch 70: train_loss: 0.00346; Allocated: 53483520; Reserved: 109051904; time used = 0.8650162220001221s
epoch 75: train_loss: 0.01128; Allocated: 53483520; Reserved: 109051904; time used = 0.8560295104980469s
epoch 80: train_loss: 0.01109; Allocated: 53483520; Reserved: 109051904; time used = 0.8597111701965332s
epoch 85: train_loss: 0.01210; Allocated: 53483520; Reserved: 109051904; time used = 0.8592848777770996s
epoch 90: train_loss: 0.00674; Allocated: 53483520; Reserved: 109051904; time used = 0.8606281280517578s
epoch 95: train_loss: 0.00844; Allocated: 53483520; Reserved: 109051904; time used = 0.8576464653015137s
epoch 100: train_loss: 0.01307; Allocated: 53483520; Reserved: 109051904; time used = 0.8551249504089355s
epoch 105: train_loss: 0.01694; Allocated: 53483520; Reserved: 109051904; time used = 0.8547544479370117s
epoch 110: train_loss: 0.04528; Allocated: 53483520; Reserved: 109051904; time used = 0.8570280075073242s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 22.304481983184814.
Training classifier using 20.00% nodes...
{'micro': 0.49814126394052044, 'macro': 0.3890463540129956, 'samples': 0.5033809166040571, 'weighted': 0.4482092325487969, 'accuracy': 0.5033809166040571}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2890.23it/s]100%|██████████| 1500/1500 [00:00<00:00, 5499.48it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f901a6cd4b0>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.713956117630005s
epoch 10: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.71662259101868s
epoch 15: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.82356119155884s
epoch 20: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.37306046485901s
epoch 25: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.52511262893677s
epoch 30: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 34.316816329956055s
epoch 35: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 34.53219556808472s
epoch 40: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.545135736465454s
epoch 45: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.658042669296265s
epoch 50: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.56618857383728s
epoch 55: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.71643900871277s
epoch 60: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 34.44138050079346s
epoch 65: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.593125343322754s
epoch 70: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.41411900520325s
epoch 75: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.5353627204895s
epoch 80: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.33450269699097s
epoch 85: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.56861186027527s
epoch 90: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.432337045669556s
epoch 95: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.40820074081421s
epoch 100: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.35471963882446s
epoch 105: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.48342514038086s
epoch 110: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.45337176322937s
epoch 115: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.33971357345581s
epoch 120: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.368263721466064s
epoch 125: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.54972505569458s
epoch 130: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.3433313369751s
epoch 135: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.66946768760681s
epoch 140: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.42799711227417s
epoch 145: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.707234621047974s
epoch 150: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 35.629982709884644s
epoch 155: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.40795946121216s
epoch 160: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.49754023551941s
epoch 165: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.71743822097778s
epoch 170: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 34.41049671173096s
epoch 175: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 34.620413303375244s
epoch 180: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.52523326873779s
epoch 185: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.57034492492676s
epoch 190: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.3334801197052s
epoch 195: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.664945125579834s
epoch 200: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.710551500320435s
epoch 205: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.515037298202515s
epoch 210: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.49577617645264s
epoch 215: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.555318117141724s
epoch 220: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.397456645965576s
epoch 225: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.511088609695435s
epoch 230: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.39001512527466s
epoch 235: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.54321026802063s
epoch 240: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 34.43535399436951s
epoch 245: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.558977127075195s
epoch 250: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.33349275588989s
epoch 255: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.623679876327515s
epoch 260: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.46907591819763s
epoch 265: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.38546442985535s
epoch 270: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.215538024902344s
epoch 275: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.7345769405365s
epoch 280: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.31183052062988s
epoch 285: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.3930721282959s
epoch 290: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.45217227935791s
epoch 295: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.46906542778015s
epoch 300: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.51690173149109s
epoch 305: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.76367783546448s
epoch 310: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.863394260406494s
epoch 315: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.64477181434631s
epoch 320: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.50086259841919s
epoch 325: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.541603088378906s
epoch 330: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.234742641448975s
epoch 335: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 34.72601270675659s
epoch 340: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.70188641548157s
epoch 345: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 34.757328271865845s
epoch 350: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.511685371398926s
epoch 355: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 34.59499216079712s
epoch 360: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.578341484069824s
epoch 365: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.50385808944702s
epoch 370: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.535587787628174s
epoch 375: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.847100496292114s
epoch 380: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.675140619277954s
epoch 385: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.67397403717041s
epoch 390: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.30540418624878s
epoch 395: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.48633289337158s
epoch 400: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.61452531814575s
epoch 405: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 34.7411208152771s
epoch 410: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.26388621330261s
epoch 415: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.39114332199097s
epoch 420: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.274502992630005s
epoch 425: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.597771406173706s
epoch 430: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.34812569618225s
epoch 435: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.63415026664734s
epoch 440: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.33096671104431s
epoch 445: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 35.456350326538086s
epoch 450: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.51555919647217s
epoch 455: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.672670125961304s
epoch 460: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.245790004730225s
epoch 465: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.403850078582764s
epoch 470: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.66762566566467s
epoch 475: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.606712341308594s
epoch 480: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.567368268966675s
epoch 485: train_loss: 0.69315; Allocated: 485888; Reserved: 4194304; time used = 34.76905274391174s
epoch 490: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.531954526901245s
epoch 495: train_loss: 0.69315; Allocated: 485888; Reserved: 6291456; time used = 34.57331991195679s
epoch 500: train_loss: 0.69315; Allocated: 485888; Reserved: 8388608; time used = 34.524471044540405s
Finished training. Time used = 3457.9911403656006.
Training classifier using 80.00% nodes...

{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f285b95cd70>
head 0
total iter: 500
epoch 5: train_loss: 1.35164; Allocated: 802816; Reserved: 8388608; time used = 6.4973838329315186s
epoch 10: train_loss: 1.27623; Allocated: 802816; Reserved: 8388608; time used = 6.402761459350586s
epoch 15: train_loss: 1.24982; Allocated: 802816; Reserved: 6291456; time used = 6.408172369003296s
epoch 20: train_loss: 1.17674; Allocated: 802816; Reserved: 6291456; time used = 6.396036386489868s
epoch 25: train_loss: 1.17727; Allocated: 802816; Reserved: 8388608; time used = 6.292139053344727s
epoch 30: train_loss: 1.20219; Allocated: 802816; Reserved: 6291456; time used = 6.544795989990234s
epoch 35: train_loss: 1.18746; Allocated: 802816; Reserved: 6291456; time used = 6.455357551574707s
epoch 40: train_loss: 1.17404; Allocated: 802816; Reserved: 8388608; time used = 6.438868761062622s
epoch 45: train_loss: 1.18018; Allocated: 802816; Reserved: 6291456; time used = 6.321237087249756s
epoch 50: train_loss: 1.17780; Allocated: 802816; Reserved: 6291456; time used = 6.497403621673584s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 67.647958278656.
Training classifier using 80.00% nodes...
{'micro': 0.5652173913043478, 'macro': 0.5643939393939394, 'samples': 0.5652173913043478, 'weighted': 0.5657663592446202, 'accuracy': 0.5652173913043478}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2898.17it/s] 81%|████████  | 1621/2000 [00:00<00:00, 3712.46it/s]100%|██████████| 2000/2000 [00:00<00:00, 6214.87it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fcefa27d460>
total iter: 500
epoch 5: train_loss: 105448664580.35498; Allocated: 4067840; Reserved: 37748736; time used = 1156.1496229171753s
epoch 10: train_loss: 41196243697.82617; Allocated: 4067840; Reserved: 35651584; time used = 1166.5395357608795s
epoch 15: train_loss: 17084832450.76465; Allocated: 4067840; Reserved: 37748736; time used = 1159.3455703258514s
epoch 20: train_loss: 12913970794.62488; Allocated: 4067840; Reserved: 35651584; time used = 1163.0971500873566s
epoch 25: train_loss: 1727314247.42719; Allocated: 4067840; Reserved: 35651584; time used = 1160.3105356693268s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6273.722607135773.
Training classifier using 80.00% nodes...

{'micro': 0.7375, 'macro': 0.733162218311425, 'samples': 0.7375, 'weighted': 0.7321415637964662, 'accuracy': 0.7375}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2877.71it/s]100%|██████████| 1000/1000 [00:00<00:00, 4362.20it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f71581f8050>
total iter: 500
epoch 5: train_loss: 0.69298; Allocated: 693760; Reserved: 6291456; time used = 11.932615041732788s
epoch 10: train_loss: 0.69206; Allocated: 693760; Reserved: 6291456; time used = 11.875288724899292s
epoch 15: train_loss: 0.68826; Allocated: 693760; Reserved: 6291456; time used = 12.04799771308899s
epoch 20: train_loss: 0.66053; Allocated: 693760; Reserved: 4194304; time used = 12.067734003067017s
epoch 25: train_loss: 0.62244; Allocated: 693760; Reserved: 4194304; time used = 11.872591972351074s
epoch 30: train_loss: 0.69315; Allocated: 693760; Reserved: 4194304; time used = 11.991588592529297s
epoch 35: train_loss: 0.69315; Allocated: 693760; Reserved: 6291456; time used = 11.897311925888062s
epoch 40: train_loss: 0.69315; Allocated: 693760; Reserved: 4194304; time used = 11.645277261734009s
epoch 45: train_loss: 0.39044; Allocated: 693760; Reserved: 6291456; time used = 11.95919394493103s
epoch 50: train_loss: 0.69315; Allocated: 693760; Reserved: 8388608; time used = 11.897456407546997s
epoch 55: train_loss: 0.64636; Allocated: 693760; Reserved: 8388608; time used = 11.854766607284546s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 139.21484231948853.
Training classifier using 80.00% nodes...

{'micro': 0.625, 'macro': 0.6068255091609657, 'samples': 0.625, 'weighted': 0.6051348588503578, 'accuracy': 0.625}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa4915e4280>
total iter: 500
epoch 5: train_loss: 2.04061; Allocated: 513536; Reserved: 4194304; time used = 0.5586071014404297s
epoch 10: train_loss: 1.54057; Allocated: 513536; Reserved: 4194304; time used = 0.5577049255371094s
epoch 15: train_loss: 1.42457; Allocated: 513536; Reserved: 4194304; time used = 0.5585198402404785s
epoch 20: train_loss: 1.39558; Allocated: 513536; Reserved: 4194304; time used = 0.5567541122436523s
epoch 25: train_loss: 1.37175; Allocated: 513536; Reserved: 4194304; time used = 0.5518918037414551s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 6.316434621810913.
Training classifier using 80.00% nodes...
{'micro': 0.8421052631578947, 'macro': 0.8303571428571428, 'samples': 0.8421052631578947, 'weighted': 0.8374060150375939, 'accuracy': 0.8421052631578947}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2910.96it/s]100%|██████████| 1000/1000 [00:00<00:00, 4403.02it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7efdd9dbd050>
total iter: 500
epoch 5: train_loss: 377.27029; Allocated: 762880; Reserved: 10485760; time used = 5.827624320983887s
epoch 10: train_loss: 88.55994; Allocated: 762880; Reserved: 10485760; time used = 5.896146297454834s
epoch 15: train_loss: 5.40099; Allocated: 762880; Reserved: 10485760; time used = 6.102415084838867s
epoch 20: train_loss: 1.86034; Allocated: 762880; Reserved: 10485760; time used = 5.879244565963745s
epoch 25: train_loss: 1.45286; Allocated: 762880; Reserved: 10485760; time used = 5.894883394241333s
epoch 30: train_loss: 1.39060; Allocated: 762880; Reserved: 10485760; time used = 5.859680652618408s
epoch 35: train_loss: 1.39554; Allocated: 762880; Reserved: 10485760; time used = 5.872209072113037s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 44.72311520576477.
Training classifier using 80.00% nodes...

{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f8313d2d1e0>
head 0
total iter: 500
epoch 5: train_loss: 0.69370; Allocated: 725504; Reserved: 29360128; time used = 1.4080066680908203s
epoch 10: train_loss: 0.63656; Allocated: 725504; Reserved: 29360128; time used = 1.3931078910827637s
epoch 15: train_loss: 0.46998; Allocated: 725504; Reserved: 8388608; time used = 1.3938026428222656s
epoch 20: train_loss: 0.30974; Allocated: 725504; Reserved: 8388608; time used = 1.396301031112671s
epoch 25: train_loss: 0.29501; Allocated: 725504; Reserved: 8388608; time used = 1.3768329620361328s
epoch 30: train_loss: 0.28187; Allocated: 725504; Reserved: 8388608; time used = 1.383073329925537s
epoch 35: train_loss: 0.24526; Allocated: 725504; Reserved: 8388608; time used = 1.3813681602478027s
epoch 40: train_loss: 0.33200; Allocated: 725504; Reserved: 8388608; time used = 1.4115784168243408s
epoch 45: train_loss: 0.27820; Allocated: 725504; Reserved: 8388608; time used = 1.3904204368591309s
epoch 50: train_loss: 0.25259; Allocated: 725504; Reserved: 29360128; time used = 1.3741872310638428s
epoch 55: train_loss: 0.28340; Allocated: 725504; Reserved: 8388608; time used = 1.3965604305267334s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 20.028322458267212.
Training classifier using 80.00% nodes...
{'micro': 0.6842105263157895, 'macro': 0.6161616161616161, 'samples': 0.6842105263157895, 'weighted': 0.6416799574694312, 'accuracy': 0.6842105263157895}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2843.83it/s]100%|██████████| 1000/1000 [00:00<00:00, 4302.59it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f3c73f7d050>
total iter: 500
epoch 5: train_loss: 1.39298; Allocated: 484864; Reserved: 8388608; time used = 11.427403688430786s
epoch 10: train_loss: 1.38893; Allocated: 484864; Reserved: 8388608; time used = 11.378029108047485s
epoch 15: train_loss: 1.38709; Allocated: 484864; Reserved: 8388608; time used = 11.595231771469116s
epoch 20: train_loss: 1.38663; Allocated: 484864; Reserved: 8388608; time used = 11.586757898330688s
epoch 25: train_loss: 1.38648; Allocated: 484864; Reserved: 8388608; time used = 11.374509811401367s
epoch 30: train_loss: 1.38639; Allocated: 484864; Reserved: 8388608; time used = 11.414687871932983s
epoch 35: train_loss: 1.38634; Allocated: 484864; Reserved: 8388608; time used = 11.55140209197998s
epoch 40: train_loss: 1.38632; Allocated: 484864; Reserved: 8388608; time used = 11.268444538116455s
epoch 45: train_loss: 1.38631; Allocated: 484864; Reserved: 8388608; time used = 11.465490579605103s
epoch 50: train_loss: 1.38630; Allocated: 484864; Reserved: 8388608; time used = 11.428662776947021s
epoch 55: train_loss: 1.38630; Allocated: 484864; Reserved: 8388608; time used = 11.467730045318604s
epoch 60: train_loss: 1.38630; Allocated: 484864; Reserved: 8388608; time used = 11.538840770721436s
epoch 65: train_loss: 1.38630; Allocated: 484864; Reserved: 8388608; time used = 11.401141166687012s
epoch 70: train_loss: 1.38630; Allocated: 484864; Reserved: 8388608; time used = 11.193929433822632s
epoch 75: train_loss: 1.38629; Allocated: 484864; Reserved: 8388608; time used = 11.652690649032593s
epoch 80: train_loss: 1.38630; Allocated: 484864; Reserved: 8388608; time used = 11.574830055236816s
epoch 85: train_loss: 1.38629; Allocated: 484864; Reserved: 8388608; time used = 11.49310302734375s
epoch 90: train_loss: 1.38629; Allocated: 484864; Reserved: 8388608; time used = 11.462566614151001s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 218.59093570709229.
Training classifier using 80.00% nodes...

{'micro': 0.49, 'macro': 0.32885906040268453, 'samples': 0.49, 'weighted': 0.3222818791946308, 'accuracy': 0.49}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2904.49it/s]100%|██████████| 1500/1500 [00:00<00:00, 5521.51it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f91802faeb0>
total iter: 500
epoch 5: train_loss: 40786.01996; Allocated: 829952; Reserved: 18874368; time used = 8.052792072296143s
epoch 10: train_loss: 36702.80066; Allocated: 829952; Reserved: 41943040; time used = 8.009926080703735s
epoch 15: train_loss: 8408.51318; Allocated: 829952; Reserved: 18874368; time used = 8.13928508758545s
epoch 20: train_loss: 475.98672; Allocated: 829952; Reserved: 20971520; time used = 7.984698057174683s
epoch 25: train_loss: 93.98515; Allocated: 829952; Reserved: 18874368; time used = 8.346855640411377s
epoch 30: train_loss: 535.63298; Allocated: 829952; Reserved: 39845888; time used = 8.02834415435791s
epoch 35: train_loss: 78.81578; Allocated: 829952; Reserved: 18874368; time used = 8.076749563217163s
epoch 40: train_loss: 1.43786; Allocated: 829952; Reserved: 18874368; time used = 8.356596946716309s
epoch 45: train_loss: 1.40832; Allocated: 829952; Reserved: 18874368; time used = 8.164661645889282s
epoch 50: train_loss: 1.38642; Allocated: 829952; Reserved: 18874368; time used = 8.164644241333008s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 90.46102619171143.
Training classifier using 80.00% nodes...

{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fba9a8473c0>
total iter: 500
epoch 5: train_loss: 1.36076; Allocated: 440832; Reserved: 4194304; time used = 0.5600066184997559s
epoch 10: train_loss: 1.32258; Allocated: 440832; Reserved: 4194304; time used = 0.5455231666564941s
epoch 15: train_loss: 1.30606; Allocated: 440832; Reserved: 4194304; time used = 0.5426979064941406s
epoch 20: train_loss: 1.30316; Allocated: 440832; Reserved: 4194304; time used = 0.5444552898406982s
epoch 25: train_loss: 1.30840; Allocated: 440832; Reserved: 4194304; time used = 0.5440304279327393s
epoch 30: train_loss: 1.29905; Allocated: 440832; Reserved: 4194304; time used = 0.5504069328308105s
epoch 35: train_loss: 1.30324; Allocated: 440832; Reserved: 4194304; time used = 0.5427529811859131s
epoch 40: train_loss: 1.29281; Allocated: 440832; Reserved: 4194304; time used = 0.6982216835021973s
epoch 45: train_loss: 1.30032; Allocated: 440832; Reserved: 4194304; time used = 0.5423898696899414s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 8.715053796768188.
Training classifier using 80.00% nodes...
{'micro': 0.7368421052631579, 'macro': 0.6801346801346801, 'samples': 0.7368421052631579, 'weighted': 0.7013999645578592, 'accuracy': 0.7368421052631579}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f03d150b4b0>
total iter: 500
epoch 5: train_loss: 3.35334; Allocated: 17669632; Reserved: 65011712; time used = 0.2543647289276123s
epoch 10: train_loss: 1.39927; Allocated: 17669632; Reserved: 65011712; time used = 0.24235010147094727s
epoch 15: train_loss: 1.30047; Allocated: 17669632; Reserved: 65011712; time used = 0.2500488758087158s
epoch 20: train_loss: 1.25140; Allocated: 17669632; Reserved: 65011712; time used = 0.24065780639648438s
epoch 25: train_loss: 1.13331; Allocated: 17669632; Reserved: 65011712; time used = 0.2510495185852051s
epoch 30: train_loss: 0.94576; Allocated: 17669632; Reserved: 65011712; time used = 0.2423107624053955s
epoch 35: train_loss: 0.78939; Allocated: 17669632; Reserved: 65011712; time used = 0.2593555450439453s
epoch 40: train_loss: 0.62503; Allocated: 17669632; Reserved: 65011712; time used = 0.25026607513427734s
epoch 45: train_loss: 0.53148; Allocated: 17669632; Reserved: 65011712; time used = 0.25206565856933594s
epoch 50: train_loss: 0.48980; Allocated: 17669632; Reserved: 65011712; time used = 0.24535107612609863s
epoch 55: train_loss: 0.41266; Allocated: 17669632; Reserved: 65011712; time used = 0.24858808517456055s
epoch 60: train_loss: 0.38185; Allocated: 17669632; Reserved: 65011712; time used = 0.2487499713897705s
epoch 65: train_loss: 0.31244; Allocated: 17669632; Reserved: 65011712; time used = 0.2486886978149414s
epoch 70: train_loss: 0.32180; Allocated: 17669632; Reserved: 65011712; time used = 0.23787403106689453s
epoch 75: train_loss: 0.40863; Allocated: 17669632; Reserved: 65011712; time used = 0.24563217163085938s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7.201685905456543.
Training classifier using 20.00% nodes...
{'micro': 0.4748500230733733, 'macro': 0.3476599275962219, 'samples': 0.4748500230733733, 'weighted': 0.4096953656200138, 'accuracy': 0.4748500230733733}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2890.22it/s] 81%|████████  | 1615/2000 [00:00<00:00, 3700.64it/s]100%|██████████| 2000/2000 [00:00<00:00, 6183.47it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa97a96fe10>
total iter: 500
epoch 5: train_loss: 49.86355; Allocated: 3785728; Reserved: 29360128; time used = 788.1781568527222s
epoch 10: train_loss: 22.84426; Allocated: 3785728; Reserved: 31457280; time used = 795.4107708930969s
epoch 15: train_loss: 7.11070; Allocated: 3785728; Reserved: 35651584; time used = 811.4355750083923s
epoch 20: train_loss: 3.77033; Allocated: 3785728; Reserved: 31457280; time used = 818.3819704055786s
epoch 25: train_loss: 4.67572; Allocated: 3785728; Reserved: 31457280; time used = 814.6546900272369s
epoch 30: train_loss: 4.30557; Allocated: 3785728; Reserved: 31457280; time used = 818.0670917034149s
epoch 35: train_loss: 1.60028; Allocated: 3785728; Reserved: 31457280; time used = 813.4417653083801s
epoch 40: train_loss: 1.48823; Allocated: 3785728; Reserved: 31457280; time used = 829.0634438991547s
epoch 45: train_loss: 3.83822; Allocated: 3785728; Reserved: 31457280; time used = 837.6999204158783s
Early stopping condition satisfied. Abort training.
Finished training. Time used = 7660.54044342041.
Training classifier using 80.00% nodes...

{'micro': 0.51, 'macro': 0.4954175677067243, 'samples': 0.51, 'weighted': 0.49284419730202855, 'accuracy': 0.51}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2853.67it/s]100%|██████████| 1500/1500 [00:00<00:00, 5454.60it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fabcd8c6050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2510.91it/s]100%|██████████| 1500/1500 [00:00<00:00, 4975.64it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fd2003d7050>
total iter: 500
epoch 5: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.008583068847656s
epoch 10: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.4898636341095s
epoch 15: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.63432836532593s
epoch 20: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.811635971069336s
epoch 25: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.11309766769409s
epoch 30: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.862436294555664s
epoch 35: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.62460017204285s
epoch 40: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.96361804008484s
epoch 45: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.675944328308105s
epoch 50: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.2599139213562s
epoch 55: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.609811305999756s
epoch 60: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.74065017700195s
epoch 65: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.178975105285645s
epoch 70: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.65374708175659s
epoch 75: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.65713596343994s
epoch 80: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.59214901924133s
epoch 85: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.77681827545166s
epoch 90: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.603660583496094s
epoch 95: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.795600175857544s
epoch 100: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.77726769447327s
epoch 105: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.82005047798157s
epoch 110: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.80259585380554s
epoch 115: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.95633101463318s
epoch 120: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.98780846595764s
epoch 125: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.63140058517456s
epoch 130: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.63819861412048s
epoch 135: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.77022957801819s
epoch 140: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.09024262428284s
epoch 145: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.0119903087616s
epoch 150: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.23749303817749s
epoch 155: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.63220715522766s
epoch 160: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.56977653503418s
epoch 165: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.83027935028076s
epoch 170: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.76044535636902s
epoch 175: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.453205823898315s
epoch 180: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.975239276885986s
epoch 185: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.9184205532074s
epoch 190: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.51734519004822s
epoch 195: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.534672498703s
epoch 200: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.62584328651428s
epoch 205: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.94743728637695s
epoch 210: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.99954438209534s
epoch 215: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.78576421737671s
epoch 220: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.79578518867493s
epoch 225: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.03873634338379s
epoch 230: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.04906868934631s
epoch 235: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.8480019569397s
epoch 240: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.947736740112305s
epoch 245: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.73634743690491s
epoch 250: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.60382151603699s
epoch 255: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.062604665756226s
epoch 260: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.979451417922974s
epoch 265: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.017738342285156s
epoch 270: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.894386768341064s
epoch 275: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.221341609954834s
epoch 280: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 37.147477865219116s
epoch 285: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 37.078014612197876s
epoch 290: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.63026523590088s
epoch 295: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.801817893981934s
epoch 300: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.92202925682068s
epoch 305: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.712390661239624s
epoch 310: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.79473662376404s
epoch 315: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.344829082489014s
epoch 320: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.759777307510376s
epoch 325: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.352375507354736s
epoch 330: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.83835291862488s
epoch 335: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.05337858200073s
epoch 340: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.7907235622406s
epoch 345: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.86705732345581s
epoch 350: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.880656480789185s
epoch 355: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.0026798248291s
epoch 360: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.083699226379395s
epoch 365: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.22689962387085s
epoch 370: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.009403705596924s
epoch 375: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.840625524520874s
epoch 380: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.913702726364136s
epoch 385: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.26522874832153s
epoch 390: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.96469283103943s
epoch 395: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.965465784072876s
epoch 400: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.10887336730957s
epoch 405: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.01432752609253s
epoch 410: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.98586988449097s
epoch 415: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.134058237075806s
epoch 420: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.362895011901855s
epoch 425: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.89219427108765s
epoch 430: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.643547773361206s
epoch 435: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.32205295562744s
epoch 440: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 35.48983860015869s
epoch 445: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 34.34745407104492s
epoch 450: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 34.80637049674988s
epoch 455: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.057708501815796s
epoch 460: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 34.94964957237244s
epoch 465: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.06411337852478s
epoch 470: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 36.056368589401245s
epoch 475: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 37.159334897994995s
epoch 480: train_loss: 0.69315; Allocated: 682496; Reserved: 10485760; time used = 36.573890924453735s
epoch 485: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 37.10695743560791s
epoch 490: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 37.18570590019226s
epoch 495: train_loss: 0.69315; Allocated: 682496; Reserved: 6291456; time used = 36.9643030166626s
epoch 500: train_loss: 0.69315; Allocated: 682496; Reserved: 8388608; time used = 35.69223999977112s
Finished training. Time used = 3604.0911803245544.
Training classifier using 80.00% nodes...

{'micro': 0.3233333333333333, 'macro': 0.1628883291351805, 'samples': 0.3233333333333333, 'weighted': 0.1580016792611251, 'accuracy': 0.3233333333333333}
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f64a86a1370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2878.47it/s]100%|██████████| 1000/1000 [00:00<00:00, 4349.88it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f4d97ae34b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2813.12it/s] 81%|████████  | 1617/2000 [00:00<00:00, 3613.01it/s]100%|██████████| 2000/2000 [00:00<00:00, 6098.05it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd8b0b61230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fd9be67d500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f3605ea0050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f72bd693e60>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2914.22it/s]100%|██████████| 1500/1500 [00:00<00:00, 5534.65it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fe0565b3050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fcc57f250f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f9841e9a780>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f13aac440f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f00bcc83cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2901.12it/s]100%|██████████| 1000/1000 [00:00<00:00, 4378.94it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f18648e83c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f53fe134370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2879.27it/s]100%|██████████| 1000/1000 [00:00<00:00, 4358.53it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f0ae6e3d050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f0f66d6ee60>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f70abd28be0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fde7fefd140>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fc1f9765140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fcfef42ccd0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f3ad3be9d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fe75ae07370>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2916.51it/s] 80%|████████  | 1609/2000 [00:00<00:00, 3728.93it/s]100%|██████████| 2000/2000 [00:00<00:00, 6207.38it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f6996f6dd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f8a1671c3c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2915.97it/s] 80%|███████▉  | 1595/2000 [00:00<00:00, 3723.05it/s]100%|██████████| 2000/2000 [00:00<00:00, 6173.71it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f87f0c35140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2798.36it/s]100%|██████████| 1500/1500 [00:00<00:00, 5388.18it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fbb986fb050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f2b4712b690>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5d8beafcd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f6f2471e2d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f37cbdcbcd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2883.03it/s]100%|██████████| 1500/1500 [00:00<00:00, 5501.59it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f237af3b050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f4cb911e6e0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fdccc1c2d20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2893.02it/s]100%|██████████| 1500/1500 [00:00<00:00, 5519.51it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fa2b3732050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7facbefb2230>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f0c3bd4a5f0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb5aa65acd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2871.89it/s] 81%|████████  | 1613/2000 [00:00<00:00, 3679.15it/s]100%|██████████| 2000/2000 [00:00<00:00, 6161.28it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fd5d2e1e280>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1beac33dc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f35a65d3730>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f0b0a4aecd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2914.65it/s] 80%|████████  | 1601/2000 [00:00<00:00, 3724.00it/s]100%|██████████| 2000/2000 [00:00<00:00, 6192.37it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fcddcd8e280>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f650ddb97d0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f2f4673c320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fa2eca85d20>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2895.63it/s]100%|██████████| 1000/1000 [00:00<00:00, 4378.90it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fbe1dcbc050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2878.62it/s]100%|██████████| 1000/1000 [00:00<00:00, 4357.67it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f83f428e4b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout mean --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fb690ac71e0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2917.89it/s] 81%|████████  | 1611/2000 [00:00<00:00, 3731.43it/s]100%|██████████| 2000/2000 [00:00<00:00, 6217.22it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() takes 3 positional arguments but 6 were given
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f2ca99ede10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f887f87fd70>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1c242ead20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2929.27it/s]100%|██████████| 1500/1500 [00:00<00:00, 5565.04it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 38, in forward
    score = torch.squeeze(self.bil(x, y), dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/linear.py", line 174, in forward
    return F.bilinear(input1, input2, self.weight, self.bias)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 1717, in bilinear
    return torch.bilinear(input1, input2, weight, bias)
TypeError: bilinear(): argument 'input2' (position 2) must be Tensor, not model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f798c875050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f4e34aeec80>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2922.71it/s] 80%|████████  | 1602/2000 [00:00<00:00, 3733.30it/s]100%|██████████| 2000/2000 [00:00<00:00, 6195.29it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 26, in forward
    y = F.normalize(y, dim=-1)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/functional.py", line 3788, in normalize
    denom = input.norm(p, dim, keepdim=True).clamp_min(eps).expand_as(input)
AttributeError: 'model_input' object has no attribute 'norm'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f633b202280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2880.71it/s]100%|██████████| 1000/1000 [00:00<00:00, 4358.70it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(hxp, hxn, pos, neg, self.decoder)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 23, in forward
    ep = m(decoder(hxp, pos)).mean()
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 15, in forward
    score = self.layer(x, y)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_decoder.py", line 53, in forward
    h = torch.cat([x, y], dim=1)
TypeError: expected Tensor as element 1 in argument 0, but got model_input
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f7f4da0e320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fb915c2b230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2925.45it/s] 80%|████████  | 1609/2000 [00:00<00:00, 3738.71it/s]100%|██████████| 2000/2000 [00:00<00:00, 6215.60it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f0effa21230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2922.52it/s]100%|██████████| 1000/1000 [00:00<00:00, 4405.26it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff9dc389d20>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f6b1b419460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2921.51it/s]100%|██████████| 1000/1000 [00:00<00:00, 4419.61it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f891d17c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2946.28it/s]100%|██████████| 1500/1500 [00:00<00:00, 5595.45it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f8571573500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2902.67it/s]100%|██████████| 1500/1500 [00:00<00:00, 5518.12it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fe92703c050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2907.88it/s] 80%|███████▉  | 1594/2000 [00:00<00:00, 3713.51it/s]100%|██████████| 2000/2000 [00:00<00:00, 6166.72it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f58f5962280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2917.34it/s] 76%|███████▋  | 1525/2000 [00:00<00:00, 3696.48it/s]100%|██████████| 2000/2000 [00:00<00:00, 6045.05it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f77ef8eed70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2905.02it/s]100%|██████████| 1500/1500 [00:00<00:00, 5535.61it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fc047547050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2954.21it/s]100%|██████████| 1000/1000 [00:00<00:00, 4464.62it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f2f9357d050>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2900.65it/s]100%|██████████| 1000/1000 [00:00<00:00, 4382.48it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fed176d44b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f548a47ae10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2912.60it/s]100%|██████████| 1000/1000 [00:00<00:00, 4406.08it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f44678b3500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2944.36it/s]100%|██████████| 1500/1500 [00:00<00:00, 5590.56it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fec67bbd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7feb8c15bd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2929.17it/s]100%|██████████| 1000/1000 [00:00<00:00, 4428.52it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1a42abc050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2870.99it/s]100%|██████████| 1000/1000 [00:00<00:00, 4354.06it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7faa0f086190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2915.15it/s]100%|██████████| 1500/1500 [00:00<00:00, 5542.92it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f071ddb9050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2761.87it/s]100%|██████████| 1500/1500 [00:00<00:00, 5313.15it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fcd4098e050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f98f697bdc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2922.90it/s]100%|██████████| 1000/1000 [00:00<00:00, 4417.54it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f7be24fd050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2862.49it/s]100%|██████████| 1500/1500 [00:00<00:00, 5464.84it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f51dda934b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2914.97it/s] 80%|███████▉  | 1598/2000 [00:00<00:00, 3723.03it/s]100%|██████████| 2000/2000 [00:00<00:00, 6183.30it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f2a42734280>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fed00623550>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fa42aa117d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2909.68it/s] 80%|███████▉  | 1598/2000 [00:00<00:00, 3716.74it/s]100%|██████████| 2000/2000 [00:00<00:00, 6171.82it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7efb08d2ee10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f5838d76320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2940.47it/s] 81%|████████  | 1613/2000 [00:00<00:00, 3757.96it/s]100%|██████████| 2000/2000 [00:00<00:00, 6254.07it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f8a9aeedd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2935.72it/s]100%|██████████| 1500/1500 [00:00<00:00, 5570.31it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fe143054e10>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fb74fb7b690>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2901.32it/s]100%|██████████| 1000/1000 [00:00<00:00, 4379.31it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fed2ff24370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7ffa6dd1d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1ea820cdc0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2939.72it/s]100%|██████████| 1500/1500 [00:00<00:00, 5576.39it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f8dfef9b050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1cdc337cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2786.86it/s]100%|██████████| 1500/1500 [00:00<00:00, 5391.78it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f3ce5a20050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2932.24it/s]100%|██████████| 1000/1000 [00:00<00:00, 4420.73it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f920db17320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2926.86it/s] 81%|████████  | 1617/2000 [00:00<00:00, 3743.83it/s]100%|██████████| 2000/2000 [00:00<00:00, 6246.60it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4fdf1a7140>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2946.40it/s]100%|██████████| 1500/1500 [00:00<00:00, 5581.59it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f4a620bd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2927.08it/s]100%|██████████| 1500/1500 [00:00<00:00, 5560.68it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f65a81323c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7efe9d2da230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f8e23639dc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2943.61it/s]100%|██████████| 1000/1000 [00:00<00:00, 4446.78it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f600ec3d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fcd7da8d550>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est nce --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f748804c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f0e5f5bc500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2948.51it/s] 80%|████████  | 1606/2000 [00:00<00:00, 3764.33it/s]100%|██████████| 2000/2000 [00:00<00:00, 6243.05it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f6ad2636280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2923.61it/s] 81%|████████  | 1615/2000 [00:00<00:00, 3739.40it/s]100%|██████████| 2000/2000 [00:00<00:00, 6225.11it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f4aef2ec280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7ff99e5450f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fafe4940230>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2947.90it/s]100%|██████████| 1000/1000 [00:00<00:00, 4448.89it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f19722bc050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f2736d6c3c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2936.20it/s] 80%|████████  | 1601/2000 [00:00<00:00, 3748.25it/s]100%|██████████| 2000/2000 [00:00<00:00, 6211.81it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fea07fd3280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2926.78it/s]100%|██████████| 1500/1500 [00:00<00:00, 5556.21it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7efccf1044b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fd1208d4d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f66e729b280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f52e1636320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2899.29it/s] 80%|███████▉  | 1595/2000 [00:00<00:00, 3703.78it/s]100%|██████████| 2000/2000 [00:00<00:00, 6151.35it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f2baca48140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f5201645d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f3f10c55140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2935.15it/s]100%|██████████| 1500/1500 [00:00<00:00, 5582.38it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fba009ce500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7faa95dfee10>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f57dacfd1e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2890.40it/s]100%|██████████| 1500/1500 [00:00<00:00, 5510.16it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f7611560050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2933.18it/s] 81%|████████  | 1611/2000 [00:00<00:00, 3748.58it/s]100%|██████████| 2000/2000 [00:00<00:00, 6226.45it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f49baf8b280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fcfc41bf820>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f943e7c9320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f6d244cc050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2919.35it/s] 80%|████████  | 1608/2000 [00:00<00:00, 3731.84it/s]100%|██████████| 2000/2000 [00:00<00:00, 6213.18it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f737b2b2280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2911.01it/s]100%|██████████| 1500/1500 [00:00<00:00, 5520.39it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff92a747050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2948.67it/s]100%|██████████| 1000/1000 [00:00<00:00, 4455.95it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f436653d050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2909.13it/s] 80%|████████  | 1600/2000 [00:00<00:00, 3717.20it/s]100%|██████████| 2000/2000 [00:00<00:00, 6178.14it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f9711018190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2932.93it/s]100%|██████████| 1000/1000 [00:00<00:00, 4437.77it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f614fe3d050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2874.57it/s]100%|██████████| 1000/1000 [00:00<00:00, 4363.76it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f0ca8c7a050>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f763f9301e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2952.20it/s]100%|██████████| 1500/1500 [00:00<00:00, 5590.62it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f4cb9c61050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f63e7ddc3c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2912.35it/s]100%|██████████| 1500/1500 [00:00<00:00, 5539.66it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f416d1fd050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2935.48it/s]100%|██████████| 1000/1000 [00:00<00:00, 4429.74it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe37649e550>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2870.69it/s]100%|██████████| 1000/1000 [00:00<00:00, 4355.08it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff4607b8050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2875.20it/s]100%|██████████| 1000/1000 [00:00<00:00, 4355.71it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc41dec34b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f246c3c7dc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2911.79it/s] 79%|███████▉  | 1576/2000 [00:00<00:00, 3711.10it/s]100%|██████████| 2000/2000 [00:00<00:00, 6127.84it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f652dfe0280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb005520c80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7efe60458d70>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2944.42it/s] 80%|████████  | 1605/2000 [00:00<00:00, 3759.46it/s]100%|██████████| 2000/2000 [00:00<00:00, 6238.86it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f2d7c931280>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2934.43it/s]100%|██████████| 1500/1500 [00:00<00:00, 5544.64it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9fad9ca050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f02a0f68820>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f2c504ba050>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fbb0ee21dc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2925.49it/s]100%|██████████| 1500/1500 [00:00<00:00, 5550.49it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f795187e050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f8eaf3fa780>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2891.64it/s]100%|██████████| 1500/1500 [00:00<00:00, 5525.68it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fd81467e050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa91b0eed70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2944.05it/s] 81%|████████  | 1620/2000 [00:00<00:00, 3764.37it/s]100%|██████████| 2000/2000 [00:00<00:00, 6262.00it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fde3ff93280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f04d9f7b410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f9bb2f08dc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2904.81it/s]100%|██████████| 1500/1500 [00:00<00:00, 5522.45it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fd909fdec80>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc linear --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f19944a32d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f91c4059e10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f1432b0de10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7ff5d6b91dc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f6bc93f3e10>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2908.43it/s] 80%|████████  | 1604/2000 [00:00<00:00, 3717.98it/s]100%|██████████| 2000/2000 [00:00<00:00, 6191.28it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f038b8dd190>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2902.85it/s]100%|██████████| 1500/1500 [00:00<00:00, 5531.06it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f295ea14050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fd13c4a9730>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fca3a177c80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fa0a6792410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2898.25it/s]100%|██████████| 1000/1000 [00:00<00:00, 4380.04it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f8f50923370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2962.43it/s] 81%|████████  | 1616/2000 [00:00<00:00, 3783.95it/s]100%|██████████| 2000/2000 [00:00<00:00, 6274.16it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7ffa7e257460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f8e020a3c30>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2940.33it/s]100%|██████████| 1500/1500 [00:00<00:00, 5577.31it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f0f018ed2d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f8a37595050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2907.82it/s] 81%|████████  | 1614/2000 [00:00<00:00, 3721.00it/s]100%|██████████| 2000/2000 [00:00<00:00, 6214.73it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f8855d21140>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8c7412bdc0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2917.37it/s] 79%|███████▉  | 1587/2000 [00:00<00:00, 3721.85it/s]100%|██████████| 2000/2000 [00:00<00:00, 6161.27it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f66aeb8b0f0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2913.51it/s] 79%|███████▉  | 1588/2000 [00:00<00:00, 3717.68it/s]100%|██████████| 2000/2000 [00:00<00:00, 6160.06it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe047c32280>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f0d4e10b730>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2931.92it/s]100%|██████████| 1000/1000 [00:00<00:00, 4432.86it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fdaeec3d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f91b355b870>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fcf98034280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2948.26it/s] 81%|████████  | 1612/2000 [00:00<00:00, 3765.99it/s]100%|██████████| 2000/2000 [00:00<00:00, 6249.44it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f28acde0280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f29a0518c30>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7ff7d383b410>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fd5f03621e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f2b05c6fd20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fbf37c76e60>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est jsd --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fc0db3d2d70>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2925.13it/s]100%|██████████| 1500/1500 [00:00<00:00, 5565.60it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f2e344e9050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2906.18it/s]100%|██████████| 1500/1500 [00:00<00:00, 5520.92it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f94c3b32050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2907.75it/s]100%|██████████| 1500/1500 [00:00<00:00, 5516.34it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f1d570dc2d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2846.16it/s] 80%|████████  | 1608/2000 [00:00<00:00, 3647.93it/s]100%|██████████| 2000/2000 [00:00<00:00, 6123.60it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fcfeb05e140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f9116c732d0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f660f0dd370>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2743.19it/s]100%|██████████| 1500/1500 [00:00<00:00, 5320.39it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fc10b143050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2900.16it/s]100%|██████████| 1500/1500 [00:00<00:00, 5508.53it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fb452da7050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2872.35it/s] 80%|████████  | 1602/2000 [00:00<00:00, 3675.77it/s]100%|██████████| 2000/2000 [00:00<00:00, 6142.75it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f50abab1280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2883.80it/s] 80%|███████▉  | 1599/2000 [00:00<00:00, 3688.03it/s]100%|██████████| 2000/2000 [00:00<00:00, 6136.66it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f5b4d7eddc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2928.70it/s]100%|██████████| 1000/1000 [00:00<00:00, 4415.49it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f13c5bf55a0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fb66cd16320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2892.66it/s]100%|██████████| 1000/1000 [00:00<00:00, 4378.95it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1322887320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2945.93it/s] 81%|████████  | 1616/2000 [00:00<00:00, 3764.87it/s]100%|██████████| 2000/2000 [00:00<00:00, 6260.51it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f7b7f72ee10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2966.88it/s]100%|██████████| 1500/1500 [00:00<00:00, 5628.84it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f1f2957d050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2806.35it/s] 81%|████████  | 1612/2000 [00:00<00:00, 3603.56it/s]100%|██████████| 2000/2000 [00:00<00:00, 6080.32it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f997d66edc0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f2126576050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est jsd --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2608af0d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f809eb0f280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fb26b904280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2881.44it/s]100%|██████████| 1500/1500 [00:00<00:00, 5516.21it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fefdbcd2050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2919.32it/s]100%|██████████| 1000/1000 [00:00<00:00, 4408.68it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fdafac3e3c0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2809.58it/s]100%|██████████| 1500/1500 [00:00<00:00, 5412.35it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f2448629050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout mean --sampler mvgrl --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fb3c8cd0730>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2878.90it/s]100%|██████████| 1000/1000 [00:00<00:00, 4366.46it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f2fb133c050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f4584440c80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2938.42it/s] 80%|████████  | 1609/2000 [00:00<00:00, 3754.06it/s]100%|██████████| 2000/2000 [00:00<00:00, 6236.95it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f6a47fd3280>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2895.96it/s]100%|██████████| 1000/1000 [00:00<00:00, 4377.46it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1a6ebfc550>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2900.89it/s]100%|██████████| 1500/1500 [00:00<00:00, 5506.04it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f8c22f1f4b0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2920.88it/s]100%|██████████| 1000/1000 [00:00<00:00, 4406.04it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f347f486410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f9b1289a730>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2839.52it/s] 80%|████████  | 1608/2000 [00:00<00:00, 3640.40it/s]100%|██████████| 2000/2000 [00:00<00:00, 6113.34it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f67652ade10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2919.86it/s] 81%|████████  | 1617/2000 [00:00<00:00, 3735.24it/s]100%|██████████| 2000/2000 [00:00<00:00, 6227.54it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fec57d3d280>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2908.95it/s]100%|██████████| 1000/1000 [00:00<00:00, 4399.04it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fb438d91d20>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7eff1717bdc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est nce --readout sum --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f4793d2b230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f62aa320230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2935.45it/s]100%|██████████| 1500/1500 [00:00<00:00, 5548.81it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f17f5b8e050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1b242fee10>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2902.25it/s]100%|██████████| 1000/1000 [00:00<00:00, 4388.95it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f0640a74500>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fd1588e9e10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f19434ded20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2922.29it/s] 80%|████████  | 1605/2000 [00:00<00:00, 3733.99it/s]100%|██████████| 2000/2000 [00:00<00:00, 6211.63it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f9deaaea280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f0dbed72780>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2951.37it/s]100%|██████████| 1500/1500 [00:00<00:00, 5615.30it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f3dc0eb0050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout sum --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2895.17it/s]100%|██████████| 1000/1000 [00:00<00:00, 4381.86it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f61054d9190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2352.95it/s] 76%|███████▋  | 1526/2000 [00:00<00:00, 3048.41it/s]100%|██████████| 2000/2000 [00:00<00:00, 5333.08it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f49594eed70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fc54b2e45f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2907.56it/s] 80%|███████▉  | 1598/2000 [00:00<00:00, 3714.82it/s]100%|██████████| 2000/2000 [00:00<00:00, 6178.06it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f30034fc280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gat --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7faebdb09780>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2866.89it/s]100%|██████████| 1000/1000 [00:00<00:00, 4346.80it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f21cf3fc050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fbdbec992d0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2903.38it/s] 80%|████████  | 1608/2000 [00:00<00:00, 3713.37it/s]100%|██████████| 2000/2000 [00:00<00:00, 6184.71it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f605ca032d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f43c8042e60>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2906.21it/s] 80%|███████▉  | 1591/2000 [00:00<00:00, 3710.21it/s]100%|██████████| 2000/2000 [00:00<00:00, 6152.43it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fc833b43280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fc5b8b71d20>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2951.23it/s]100%|██████████| 1000/1000 [00:00<00:00, 4435.06it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f3b67aec3c0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2884.49it/s]100%|██████████| 1000/1000 [00:00<00:00, 4372.73it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f7572e7d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f8415561410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7efd7ec59730>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc linear --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2922.82it/s] 81%|████████  | 1623/2000 [00:00<00:00, 3740.92it/s]100%|██████████| 2000/2000 [00:00<00:00, 6245.38it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa1d5eaddc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f158c5197d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fddffecdc80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2277327f00>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f8c255afe60>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7efbf25ab140>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout mean --sampler dgi --dataset citeseer --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f74c9494550>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa64e358320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2933.64it/s] 81%|████████  | 1613/2000 [00:00<00:00, 3749.93it/s]100%|██████████| 2000/2000 [00:00<00:00, 6240.49it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe10be93280>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fed165b3820>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2945.94it/s] 81%|████████  | 1621/2000 [00:00<00:00, 3767.22it/s]100%|██████████| 2000/2000 [00:00<00:00, 6276.98it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f6b9afade10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2921.31it/s]100%|██████████| 1000/1000 [00:00<00:00, 4417.85it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fdc18dbb050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f1159308190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f1a20570410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est jsd --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f46c6b28d20>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2c0555a320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f3ef20c7460>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fc12d75cd20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f886e43de10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout sum --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2917.11it/s]100%|██████████| 1000/1000 [00:00<00:00, 4400.79it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1e10b7d550>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f68abe73d70>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8605535dc0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2397.05it/s] 81%|████████  | 1615/2000 [00:00<00:00, 3124.59it/s]100%|██████████| 2000/2000 [00:00<00:00, 5524.44it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f5eb93f1280>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f9bab05b550>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2924.60it/s]100%|██████████| 1000/1000 [00:00<00:00, 4408.12it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fd4b18f0460>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f4a3cdf1780>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2929.63it/s]100%|██████████| 1500/1500 [00:00<00:00, 5540.76it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7ff9c381ad70>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2912.89it/s]100%|██████████| 1000/1000 [00:00<00:00, 4394.96it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f1a27b93370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f9ab0663230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc linear --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2914.92it/s]100%|██████████| 1000/1000 [00:00<00:00, 4405.89it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fa731d03370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2884.86it/s]100%|██████████| 1000/1000 [00:00<00:00, 4366.85it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff4cbcbc320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2870.05it/s]100%|██████████| 1500/1500 [00:00<00:00, 5461.67it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fe66d01e370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f23217d8c30>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f279a54cd70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f262c5531e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2855.20it/s]100%|██████████| 1500/1500 [00:00<00:00, 5480.55it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f9c16167050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fc1ddf5b050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gat --est jsd --readout sum --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2899.07it/s]100%|██████████| 1500/1500 [00:00<00:00, 5526.29it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f4fc19cc370>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2890.43it/s]100%|██████████| 1500/1500 [00:00<00:00, 5504.20it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f66d46c2050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f6037f04690>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fda03742230>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fd8701cddc0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fef9d67a5f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2900.53it/s] 80%|████████  | 1605/2000 [00:00<00:00, 3709.41it/s]100%|██████████| 2000/2000 [00:00<00:00, 6184.86it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f647adeee10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2975.56it/s]100%|██████████| 1500/1500 [00:00<00:00, 5609.75it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fdc7b9cecd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f6cb8c4bc30>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc none --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2946.79it/s]100%|██████████| 1500/1500 [00:00<00:00, 5613.98it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f0f95d32050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2967.45it/s] 81%|████████  | 1620/2000 [00:00<00:00, 3790.94it/s]100%|██████████| 2000/2000 [00:00<00:00, 6292.00it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f31d5b4f280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout mean --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1f2a3cae10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2953.25it/s]100%|██████████| 1000/1000 [00:00<00:00, 4457.74it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f491283d050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est nce --readout sum --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2933.42it/s]100%|██████████| 1500/1500 [00:00<00:00, 5570.83it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fac70991050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7ff5c82e7d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7ff9d4cb4780>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est nce --readout mean --sampler dgi --dataset cora --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f8ab55820f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2921.47it/s]100%|██████████| 1000/1000 [00:00<00:00, 4419.85it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f182c9d9d20>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2789.51it/s]100%|██████████| 1000/1000 [00:00<00:00, 4247.11it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f7d2cf3b050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fca476e1e10>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f82671502d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fc46074f230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gat --est nce --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb752baccd0>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fb393ba1dc0>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f747c5151e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2906.42it/s] 80%|████████  | 1602/2000 [00:00<00:00, 3714.73it/s]100%|██████████| 2000/2000 [00:00<00:00, 6180.25it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f9a8eb12280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est nce --readout sum --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2846.98it/s] 81%|████████  | 1612/2000 [00:00<00:00, 3649.95it/s]100%|██████████| 2000/2000 [00:00<00:00, 6109.59it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe9eeaefe10>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2865.42it/s]100%|██████████| 1500/1500 [00:00<00:00, 5485.27it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fed9e249550>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2376.89it/s] 77%|███████▋  | 1533/2000 [00:00<00:00, 3078.42it/s]100%|██████████| 2000/2000 [00:00<00:00, 5376.31it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa564867280>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2359.43it/s] 77%|███████▋  | 1531/2000 [00:00<00:00, 3057.64it/s]100%|██████████| 2000/2000 [00:00<00:00, 5352.35it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f63011c4230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2747.79it/s] 80%|███████▉  | 1599/2000 [00:00<00:00, 3531.53it/s]100%|██████████| 2000/2000 [00:00<00:00, 5971.54it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7efb9e26de10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f54ae346cd0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fc2dc2cf4b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fa03139d050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gat --est nce --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2912.54it/s]100%|██████████| 1000/1000 [00:00<00:00, 4394.10it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fa7dbcbd050>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f75984c2280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2916.88it/s] 80%|████████  | 1602/2000 [00:00<00:00, 3726.73it/s]100%|██████████| 2000/2000 [00:00<00:00, 6192.91it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7faff881b280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f0a16505d20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2909.08it/s]100%|██████████| 1500/1500 [00:00<00:00, 5525.03it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f1909b6b050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est jsd --readout sum --sampler dgi --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f1f5a6aae10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gat --est jsd --readout sum --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f8d857e9050>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f78f07e1370>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f5012c824b0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gcn --est nce --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f3253abed70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-rand_walk-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7ff1eb371dc0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f2480716cd0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2942.51it/s]100%|██████████| 1500/1500 [00:00<00:00, 5560.23it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f6b364a44b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc linear --est jsd --readout sum --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f9511c7ed70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2973.16it/s]100%|██████████| 1000/1000 [00:00<00:00, 4471.13it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f661e18b320>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fea94fe8d20>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc none --est jsd --readout mean --sampler node-rand_walk-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f2a39fea320>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2919.67it/s]100%|██████████| 1000/1000 [00:00<00:00, 4407.49it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fe5f17bc050>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est nce --readout mean --sampler dgi --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2853.89it/s]100%|██████████| 1000/1000 [00:00<00:00, 4336.78it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f674e13c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fafe39c30f0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2886.73it/s] 81%|████████  | 1615/2000 [00:00<00:00, 3696.78it/s]100%|██████████| 2000/2000 [00:00<00:00, 6180.20it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7faa81983280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f29f53b95f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gin --est jsd --readout mean --sampler mvgrl --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2917.72it/s] 80%|████████  | 1604/2000 [00:00<00:00, 3728.50it/s]100%|██████████| 2000/2000 [00:00<00:00, 6199.01it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fcadf7ff280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f7b4b00c280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2882.31it/s]100%|██████████| 1000/1000 [00:00<00:00, 4368.27it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f92924616e0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset pubmed --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7fca525cb3c0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2877.33it/s] 81%|████████  | 1615/2000 [00:00<00:00, 3686.17it/s]100%|██████████| 2000/2000 [00:00<00:00, 6163.39it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f67dbb17280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc none --est nce --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2922.31it/s]100%|██████████| 1500/1500 [00:00<00:00, 5571.98it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f6188876050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gcn --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 544/2000 [00:00<00:00, 2837.96it/s] 80%|████████  | 1607/2000 [00:00<00:00, 3637.75it/s]100%|██████████| 2000/2000 [00:00<00:00, 6101.42it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f581bb7c230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fb338510dc0>
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2952.84it/s]100%|██████████| 1000/1000 [00:00<00:00, 4459.46it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7f5c202b9050>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gat --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f3b8d42ed20>
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gat --est nce --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f9eb0878d70>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc none --est nce --readout sum --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2884.59it/s]100%|██████████| 1500/1500 [00:00<00:00, 5494.63it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7fd9bc7b9460>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fc36aac02d0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f16279a6c80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7fb27f984730>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout sum --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f9342c58dc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gat --est jsd --readout mean --sampler dgi --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gat', 'dec': 'mlp', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2897.61it/s]100%|██████████| 1500/1500 [00:00<00:00, 5532.85it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f0291360050>
head 0
head 0
head 0
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est jsd --readout mean --sampler node-neighbor-random --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f5ffdb09280>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc none --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'none', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2936.76it/s] 80%|████████  | 1610/2000 [00:00<00:00, 3752.70it/s]100%|██████████| 2000/2000 [00:00<00:00, 6239.07it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 23, in __init__
    self.layers.append(layer_dict[name](self.dimensions[i - 1], self.dimensions[i], adj, dropout, act=F.relu))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f9bb392deb0>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2944.79it/s] 81%|████████  | 1618/2000 [00:00<00:00, 3764.64it/s]100%|██████████| 2000/2000 [00:00<00:00, 6263.15it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fee07fd3280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2965.44it/s]100%|██████████| 1500/1500 [00:00<00:00, 5619.34it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f31001544b0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2868.89it/s] 80%|████████  | 1604/2000 [00:00<00:00, 3672.53it/s]100%|██████████| 2000/2000 [00:00<00:00, 6139.52it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f1c16a7f280>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'dgi', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2927.24it/s] 80%|████████  | 1610/2000 [00:00<00:00, 3741.59it/s]100%|██████████| 2000/2000 [00:00<00:00, 6231.04it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f5853a6de10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc linear --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f5f6d116690>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2813.45it/s] 80%|████████  | 1607/2000 [00:00<00:00, 3609.97it/s]100%|██████████| 2000/2000 [00:00<00:00, 6074.37it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7f0b4e7ede10>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gat --est jsd --readout sum --sampler node-rand_walk-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gat', 'dec': 'bilinear', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7fa3bd677dc0>
head 0
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc none --est jsd --readout sum --sampler node-neighbor-random --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 544/1000 [00:00<00:00, 2892.50it/s]100%|██████████| 1000/1000 [00:00<00:00, 4373.43it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fb933944370>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2880.86it/s]100%|██████████| 1000/1000 [00:00<00:00, 4364.82it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7fc4ad5fc050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc linear --est nce --readout mean --sampler node-rand_walk-random --dataset citeseer --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'citeseer', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading CiteSeer Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/CiteSeer
This is a medium-sized sparse dataset with 1 graph, 3327 nodes and 9228 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([3327, 3703]) <built-in method type of Tensor object at 0x7f2bd2c5a820>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc linear --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'linear', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f0e52c0a410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gcn --est nce --readout sum --sampler dgi --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'dgi', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2894.86it/s] 81%|████████  | 1617/2000 [00:00<00:00, 3707.20it/s]100%|██████████| 2000/2000 [00:00<00:00, 6206.61it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fe13e291eb0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gcn --est nce --readout sum --sampler node-rand_walk-random --dataset reddit_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'reddit_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-rand_walk-random', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading REDDIT_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/REDDIT_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/2000 [00:00<?, ?it/s] 27%|██▋       | 543/2000 [00:00<00:00, 2920.61it/s] 81%|████████  | 1620/2000 [00:00<00:00, 3737.62it/s]100%|██████████| 2000/2000 [00:00<00:00, 6242.36it/s]This is a large sparse dataset with 2000 graphs, 859254 nodes and 995508 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([859254, 1]) <built-in method type of Tensor object at 0x7fa80083b230>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec bilinear --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'bilinear', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f93b3fc9d70>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2893.32it/s]100%|██████████| 1500/1500 [00:00<00:00, 5513.72it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f4c56e67050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc none --est nce --readout mean --sampler node-neighbor-except_neighbor --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'none', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 221, in forward
    self.build(graph, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 97, in build
    dropout=self.dropout, dec_dims=self.dec_dims, norm=norm)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 43, in __init__
    self.encoder = Encoder(self.encoder_name, self.enc_dims, graphs, self.features, dropout, self.readout)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_encoderg.py", line 24, in __init__
    self.layers.append(layer_dict[name](self.dimensions[-2], self.dimensions[-1], adj, dropout, act=lambda x: x))
KeyError: 'none'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7f311c85d230>
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est jsd --readout sum --sampler node-neighbor-except_neighbor --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▌      | 543/1500 [00:00<00:00, 2886.38it/s]100%|██████████| 1500/1500 [00:00<00:00, 5499.15it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f3e0bfc2050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gcn --est nce --readout mean --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fdf7be67dc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec inner --enc gin --est nce --readout sum --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-except_neighbor', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7fbef064fdc0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est jsd --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'jsd', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f56176df050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 --dec mlp --enc gin --est nce --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-neighbor-random', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 2 required positional arguments: 'positive' and 'negative'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7f269fefc0f0>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec mlp --enc gin --est jsd --readout mean --sampler node-rand_walk-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'node-rand_walk-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fb666624410>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec inner --enc gin --est jsd --readout mean --sampler node-neighbor-random --dataset imdb_multi --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_multi', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_MULTI Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_MULTI
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1500 [00:00<?, ?it/s] 36%|███▋      | 544/1500 [00:00<00:00, 2908.51it/s]100%|██████████| 1500/1500 [00:00<00:00, 5545.74it/s]This is a large dense dataset with 1500 graphs, 19502 nodes and 98903 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19502, 1]) <built-in method type of Tensor object at 0x7f8cdda6bc80>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec bilinear --enc gcn --est nce --readout sum --sampler mvgrl --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'sum', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f71aec2fd20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec inner --enc gcn --est jsd --readout mean --sampler node-neighbor-random --dataset cora --model ss_nodemodel --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_nodemodel', 'dataset': 'cora', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'inner', 'sampler': 'node-neighbor-random', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading Cora Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/Cora
This is a medium-sized sparse dataset with 1 graph, 2708 nodes and 10556 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([2708, 1433]) <built-in method type of Tensor object at 0x7fcfa680a140>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 --dec bilinear --enc gcn --est jsd --readout mean --sampler node-neighbor-except_neighbor --dataset ptc_mr --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'ptc_mr', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64], 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'node-neighbor-except_neighbor', 'est': 'jsd', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PTC_MR Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PTC_MR
Load data.
This is a medium-sized medium-dense dataset with 344 graphs, 4915 nodes and 5054 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 134, in evaluate
    loss = self.model(bx, bpos, bneg)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84, in forward
    loss = self.estimator(                                                                                                                                                                                                           )
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_estimator.py", line 13, in forward
    return self.estimator(*args, **kwargs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
TypeError: forward() missing 5 required positional arguments: 'hxp', 'hxn', 'pos', 'neg', and 'decoder'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([4915, 18]) <built-in method type of Tensor object at 0x7f1f1b7f5d20>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec bilinear --enc gcn --est nce --readout mean --sampler mvgrl --dataset mutag --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'mutag', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gcn', 'dec': 'bilinear', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading MUTAG Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/MUTAG
Load data.
This is a medium-sized medium-dense dataset with 188 graphs, 3371 nodes and 3721 edges.
Executing task GraphClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([3371, 7]) <built-in method type of Tensor object at 0x7feb761b2190>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.8 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --hiddens 64 64 64 --dec inner --enc gin --est nce --readout mean --sampler mvgrl --dataset imdb_binary --model ss_gaeg --task graphclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'graphclassification', 'model': 'ss_gaeg', 'dataset': 'imdb_binary', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.8, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'hiddens': [64, 64, 64], 'patience': 3, 'enc': 'gin', 'dec': 'inner', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading IMDB_BINARY Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/IMDB_BINARY
Load data.
Not self.attributed(): set attribute as 1
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|█████▍    | 543/1000 [00:00<00:00, 2905.83it/s]100%|██████████| 1000/1000 [00:00<00:00, 4400.47it/s]This is a large medium-dense dataset with 1000 graphs, 19773 nodes and 96531 edges.
Executing task GraphClassification.

Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    _, _, _, _, _, _, slices = self.get_sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    self.cache = self.sample()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    idx = np.permutation(self.num_graphs)
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 80.0% nodes as training set...finished
Start training...
torch.Size([19773, 1]) <built-in method type of Tensor object at 0x7ff1ed63c050>
total iter: 500
[OpenNE] This is a welcome message.
python3 -m openne --clf-ratio 0.2 --dim 64 --early-stopping 20 --epochs 500 --lr 0.001 --patience 3 --dec mlp --enc gin --est nce --readout mean --sampler mvgrl --dataset pubmed --model ss_gae --task unsupervisednodeclassification
actual args: {'cpu': False, 'devices': [0], 'task': 'unsupervisednodeclassification', 'model': 'ss_gae', 'dataset': 'pubmed', 'local_dataset': False, 'name': 'SelfDefined', 'weighted': False, 'directed': False, 'clf_ratio': 0.2, '_validate': False, '_no_validate': False, 'dim': 64, 'epochs': 500, 'validation_interval': 5, 'debug_output_interval': 5, 'save': False, 'silent': False, 'sparse': False, 'lr': 0.001, 'early_stopping': 20, 'patience': 3, 'enc': 'gin', 'dec': 'mlp', 'sampler': 'mvgrl', 'est': 'nce', 'readout': 'mean', 'kstep': 4, 'measurement': 'katz', 'table_size': 100000000.0, 'negative_ratio': 5, 'encoder_layer_list': [128], 'nu1': 1e-08, 'nu2': 0.0001, 'decay': False, 'pretrain': False, 'lamb': 0.4, 'path_length': 80, 'num_paths': 10, 'p': 1.0, 'q': 1.0, 'window': 10, 'workers': 8}
Loading PubMed Dataset from root dir: /var/lib/shared_volume/data/private/cgq/openne/OpenNE/data/PubMed
This is a large sparse dataset with 1 graph, 19717 nodes and 88651 edges.
Executing task UnsupervisedNodeClassification.
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 267, in <module>
    main(parse_args())
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 250, in main
    res = task.train(model, graph)  # train
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/tasks.py", line 36, in train
    res = model(graph, **self.train_kwargs())
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/models.py", line 242, in forward
    self.embeddings = self.train_model(graph, step=i, **kwargs)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 107, in train_model
    output, train_loss, __ = self.evaluate()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 132, in evaluate
    batch_num = len(self.model.sampler)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 36, in __len__
    return self.sampler.__len__()
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 371, in __len__
    """
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 304, in get_sample
    @param e_anchor:
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_samplerg.py", line 284, in sample
    self.anchor = self.graphs  # densere aut non densere, illa quaestio
  File "/home/cuiganqu/anaconda3/lib/python3.7/site-packages/numpy/__init__.py", line 220, in __getattr__
    "{!r}".format(__name__, attr))
AttributeError: module 'numpy' has no attribute 'permutation'
Creating test set using 20.0% nodes as training set...finished
Start training...
torch.Size([19717, 500]) <built-in method type of Tensor object at 0x7f391cd432d0>
total iter: 500
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 84
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/home/cuiganqu/anaconda3/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/__main__.py", line 13, in <module>
    from . import tasks, dataloaders, models
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/__init__.py", line 2, in <module>
    from .supervised_node_classification import SupervisedNodeClassification, supervisedmodels
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/tasks/supervised_node_classification.py", line 4, in <module>
    from ..models import GCN
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/__init__.py", line 14, in <module>
    from .ss_gae import SS_GAE
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gae.py", line 9, in <module>
    from .ss_gaeg import SS_GAEg
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_gaeg.py", line 3, in <module>
    from .ss_modelg import SSModel
  File "/var/lib/shared_volume/data/private/cgq/openne/OpenNE/src/openne/models/ss_modelg.py", line 85
    loss = self.estimator(hxp, hxn, hpos, hneg, self.decoder)                                                                                                                                                                                                           )
                                                                                                                                                                                                                                                                        ^
SyntaxError: invalid syntax
slurmstepd: error: Detected 5 oom-kill event(s) in step 2998.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.
